<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1238" onload="init(evt)" viewBox="0 0 1200 1238" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1238" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1221.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1221.00"> </text><svg id="frames" x="10" width="1180" total_samples="689925633209"><g><title>[unknown] (76,083,151 samples, 0.01%)</title><rect x="0.0000%" y="1157" width="0.0110%" height="15" fill="rgb(227,0,7)" fg:x="101006" fg:w="76083151"/><text x="0.2500%" y="1167.50"></text></g><g><title>array::specific (204,939,477 samples, 0.03%)</title><rect x="0.0000%" y="1173" width="0.0297%" height="15" fill="rgb(217,0,24)" fg:x="101006" fg:w="204939477"/><text x="0.2500%" y="1183.50"></text></g><g><title>arrow::array::b (98,041,700 samples, 0.01%)</title><rect x="0.0297%" y="1173" width="0.0142%" height="15" fill="rgb(221,193,54)" fg:x="205040483" fg:w="98041700"/><text x="0.2797%" y="1183.50"></text></g><g><title>__GI___clone3 (70,941,137 samples, 0.01%)</title><rect x="0.0546%" y="1157" width="0.0103%" height="15" fill="rgb(248,212,6)" fg:x="376640747" fg:w="70941137"/><text x="0.3046%" y="1167.50"></text></g><g><title>start_thread (70,941,137 samples, 0.01%)</title><rect x="0.0546%" y="1141" width="0.0103%" height="15" fill="rgb(208,68,35)" fg:x="376640747" fg:w="70941137"/><text x="0.3046%" y="1151.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (69,807,216 samples, 0.01%)</title><rect x="0.0548%" y="1125" width="0.0101%" height="15" fill="rgb(232,128,0)" fg:x="377774668" fg:w="69807216"/><text x="0.3048%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (69,807,216 samples, 0.01%)</title><rect x="0.0548%" y="1109" width="0.0101%" height="15" fill="rgb(207,160,47)" fg:x="377774668" fg:w="69807216"/><text x="0.3048%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (69,807,216 samples, 0.01%)</title><rect x="0.0548%" y="1093" width="0.0101%" height="15" fill="rgb(228,23,34)" fg:x="377774668" fg:w="69807216"/><text x="0.3048%" y="1103.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (69,807,216 samples, 0.01%)</title><rect x="0.0548%" y="1077" width="0.0101%" height="15" fill="rgb(218,30,26)" fg:x="377774668" fg:w="69807216"/><text x="0.3048%" y="1087.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (69,807,216 samples, 0.01%)</title><rect x="0.0548%" y="1061" width="0.0101%" height="15" fill="rgb(220,122,19)" fg:x="377774668" fg:w="69807216"/><text x="0.3048%" y="1071.50"></text></g><g><title>std::panic::catch_unwind (69,807,216 samples, 0.01%)</title><rect x="0.0548%" y="1045" width="0.0101%" height="15" fill="rgb(250,228,42)" fg:x="377774668" fg:w="69807216"/><text x="0.3048%" y="1055.50"></text></g><g><title>std::panicking::try (69,807,216 samples, 0.01%)</title><rect x="0.0548%" y="1029" width="0.0101%" height="15" fill="rgb(240,193,28)" fg:x="377774668" fg:w="69807216"/><text x="0.3048%" y="1039.50"></text></g><g><title>std::panicking::try::do_call (69,807,216 samples, 0.01%)</title><rect x="0.0548%" y="1013" width="0.0101%" height="15" fill="rgb(216,20,37)" fg:x="377774668" fg:w="69807216"/><text x="0.3048%" y="1023.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (69,807,216 samples, 0.01%)</title><rect x="0.0548%" y="997" width="0.0101%" height="15" fill="rgb(206,188,39)" fg:x="377774668" fg:w="69807216"/><text x="0.3048%" y="1007.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (69,807,216 samples, 0.01%)</title><rect x="0.0548%" y="981" width="0.0101%" height="15" fill="rgb(217,207,13)" fg:x="377774668" fg:w="69807216"/><text x="0.3048%" y="991.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (69,807,216 samples, 0.01%)</title><rect x="0.0548%" y="965" width="0.0101%" height="15" fill="rgb(231,73,38)" fg:x="377774668" fg:w="69807216"/><text x="0.3048%" y="975.50"></text></g><g><title>test::run_test::_{{closure}} (69,807,216 samples, 0.01%)</title><rect x="0.0548%" y="949" width="0.0101%" height="15" fill="rgb(225,20,46)" fg:x="377774668" fg:w="69807216"/><text x="0.3048%" y="959.50"></text></g><g><title>test::run_test::_{{closure}} (69,807,216 samples, 0.01%)</title><rect x="0.0548%" y="933" width="0.0101%" height="15" fill="rgb(210,31,41)" fg:x="377774668" fg:w="69807216"/><text x="0.3048%" y="943.50"></text></g><g><title>test::run_test_in_process (69,807,216 samples, 0.01%)</title><rect x="0.0548%" y="917" width="0.0101%" height="15" fill="rgb(221,200,47)" fg:x="377774668" fg:w="69807216"/><text x="0.3048%" y="927.50"></text></g><g><title>std::panic::catch_unwind (69,807,216 samples, 0.01%)</title><rect x="0.0548%" y="901" width="0.0101%" height="15" fill="rgb(226,26,5)" fg:x="377774668" fg:w="69807216"/><text x="0.3048%" y="911.50"></text></g><g><title>std::panicking::try (69,807,216 samples, 0.01%)</title><rect x="0.0548%" y="885" width="0.0101%" height="15" fill="rgb(249,33,26)" fg:x="377774668" fg:w="69807216"/><text x="0.3048%" y="895.50"></text></g><g><title>std::panicking::try::do_call (69,807,216 samples, 0.01%)</title><rect x="0.0548%" y="869" width="0.0101%" height="15" fill="rgb(235,183,28)" fg:x="377774668" fg:w="69807216"/><text x="0.3048%" y="879.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (69,807,216 samples, 0.01%)</title><rect x="0.0548%" y="853" width="0.0101%" height="15" fill="rgb(221,5,38)" fg:x="377774668" fg:w="69807216"/><text x="0.3048%" y="863.50"></text></g><g><title>test::run_test_in_process::_{{closure}} (69,807,216 samples, 0.01%)</title><rect x="0.0548%" y="837" width="0.0101%" height="15" fill="rgb(247,18,42)" fg:x="377774668" fg:w="69807216"/><text x="0.3048%" y="847.50"></text></g><g><title>arrow::array::d (147,741,595 samples, 0.02%)</title><rect x="0.0439%" y="1173" width="0.0214%" height="15" fill="rgb(241,131,45)" fg:x="303082183" fg:w="147741595"/><text x="0.2939%" y="1183.50"></text></g><g><title>_RNvNtNtNtCscvwWOJfxRAb_4core9core_arch3x864avx216__mm256_xor_si256Cs5Bd4Fet8440_11rand_chacha (71,653,518 samples, 0.01%)</title><rect x="0.0994%" y="1141" width="0.0104%" height="15" fill="rgb(249,31,29)" fg:x="685850696" fg:w="71653518"/><text x="0.3494%" y="1151.50"></text></g><g><title>[unknown] (401,535,793 samples, 0.06%)</title><rect x="0.0678%" y="1157" width="0.0582%" height="15" fill="rgb(225,111,53)" fg:x="468082732" fg:w="401535793"/><text x="0.3178%" y="1167.50"></text></g><g><title>_RINvNtCs5Bd4Fet8440_11rand_chacha4guts5roundINtNtCskrBxuUGCkei_10ppv_lite864soft2x2INtNtNtNtBL_6x86_644sse24avx212u32x4x2_avx2NtB1q_4NoNIENtB1o_2G0EEB4_ (266,661,664 samples, 0.04%)</title><rect x="0.1553%" y="1109" width="0.0387%" height="15" fill="rgb(238,160,17)" fg:x="1071475141" fg:w="266661664"/><text x="0.4053%" y="1119.50"></text></g><g><title>_RNvXs_NtCskrBxuUGCkei_10ppv_lite864softINtB4_2x2INtNtNtNtB6_6x86_644sse24avx212u32x4x2_avx2NtBR_4NoNIENtBP_2G0ENtNtB6_5types16RotateEachWord3224rotate_each_word_right25Cs5Bd4Fet8440_11rand_chacha (71,236,214 samples, 0.01%)</title><rect x="0.1836%" y="1093" width="0.0103%" height="15" fill="rgb(214,148,48)" fg:x="1266900591" fg:w="71236214"/><text x="0.4336%" y="1103.50"></text></g><g><title>_RNvXs6_NtNtNtCskrBxuUGCkei_10ppv_lite866x86_644sse24avx2INtB5_12u32x4x2_avx2NtB9_4NoNIENtNtBb_5types16RotateEachWord3224rotate_each_word_right25Cs5Bd4Fet8440_11rand_chacha (71,236,214 samples, 0.01%)</title><rect x="0.1836%" y="1077" width="0.0103%" height="15" fill="rgb(232,36,49)" fg:x="1266900591" fg:w="71236214"/><text x="0.4336%" y="1087.50"></text></g><g><title>_RNvNvNtCs5Bd4Fet8440_11rand_chacha4guts11refill_wide9impl_avx2 (322,243,962 samples, 0.05%)</title><rect x="0.1493%" y="1157" width="0.0467%" height="15" fill="rgb(209,103,24)" fg:x="1030228030" fg:w="322243962"/><text x="0.3993%" y="1167.50"></text></g><g><title>_RINvNvNtCs5Bd4Fet8440_11rand_chacha4guts11refill_wide7fn_implINtNtCskrBxuUGCkei_10ppv_lite866x86_6411Avx2MachineNtB10_4NoNIEEB6_ (322,243,962 samples, 0.05%)</title><rect x="0.1493%" y="1141" width="0.0467%" height="15" fill="rgb(229,88,8)" fg:x="1030228030" fg:w="322243962"/><text x="0.3993%" y="1151.50"></text></g><g><title>_RINvNtCs5Bd4Fet8440_11rand_chacha4guts16refill_wide_implINtNtCskrBxuUGCkei_10ppv_lite866x86_6411Avx2MachineNtBV_4NoNIEEB4_ (322,243,962 samples, 0.05%)</title><rect x="0.1493%" y="1125" width="0.0467%" height="15" fill="rgb(213,181,19)" fg:x="1030228030" fg:w="322243962"/><text x="0.3993%" y="1135.50"></text></g><g><title>arrow::bitmap:: (1,108,502,988 samples, 0.16%)</title><rect x="0.0670%" y="1173" width="0.1607%" height="15" fill="rgb(254,191,54)" fg:x="462379004" fg:w="1108502988"/><text x="0.3170%" y="1183.50"></text></g><g><title>[unknown] (188,625,825 samples, 0.03%)</title><rect x="0.2285%" y="1157" width="0.0273%" height="15" fill="rgb(241,83,37)" fg:x="1576773372" fg:w="188625825"/><text x="0.4785%" y="1167.50"></text></g><g><title>_RINvNtCs5Bd4Fet8440_11rand_chacha4guts5roundINtNtCskrBxuUGCkei_10ppv_lite864soft2x2INtNtNtNtBL_6x86_644sse24avx212u32x4x2_avx2NtB1q_4NoNIENtB1o_2G0EEB4_ (127,651,471 samples, 0.02%)</title><rect x="0.2735%" y="1109" width="0.0185%" height="15" fill="rgb(233,36,39)" fg:x="1887249393" fg:w="127651471"/><text x="0.5235%" y="1119.50"></text></g><g><title>_RINvNvNtCs5Bd4Fet8440_11rand_chacha4guts11refill_wide7fn_implINtNtCskrBxuUGCkei_10ppv_lite866x86_6411Avx2MachineNtB10_4NoNIEEB6_ (152,027,364 samples, 0.02%)</title><rect x="0.2708%" y="1141" width="0.0220%" height="15" fill="rgb(226,3,54)" fg:x="1868034468" fg:w="152027364"/><text x="0.5208%" y="1151.50"></text></g><g><title>_RINvNtCs5Bd4Fet8440_11rand_chacha4guts16refill_wide_implINtNtCskrBxuUGCkei_10ppv_lite866x86_6411Avx2MachineNtBV_4NoNIEEB4_ (152,027,364 samples, 0.02%)</title><rect x="0.2708%" y="1125" width="0.0220%" height="15" fill="rgb(245,192,40)" fg:x="1868034468" fg:w="152027364"/><text x="0.5208%" y="1135.50"></text></g><g><title>_RNvNvNtCs5Bd4Fet8440_11rand_chacha4guts11refill_wide9impl_avx2 (152,891,204 samples, 0.02%)</title><rect x="0.2708%" y="1157" width="0.0222%" height="15" fill="rgb(238,167,29)" fg:x="1868034468" fg:w="152891204"/><text x="0.5208%" y="1167.50"></text></g><g><title>arrow::read::de (517,939,512 samples, 0.08%)</title><rect x="0.2284%" y="1173" width="0.0751%" height="15" fill="rgb(232,182,51)" fg:x="1575650420" fg:w="517939512"/><text x="0.4784%" y="1183.50"></text></g><g><title>[unknown] (275,068,433 samples, 0.04%)</title><rect x="0.3132%" y="1157" width="0.0399%" height="15" fill="rgb(231,60,39)" fg:x="2161034944" fg:w="275068433"/><text x="0.5632%" y="1167.50"></text></g><g><title>_RINvNtNtCscvwWOJfxRAb_4core4sync6atomic23atomic_compare_exchangejECs9wIDdqjH2aO_15crossbeam_utils (139,657,327 samples, 0.02%)</title><rect x="0.4022%" y="1157" width="0.0202%" height="15" fill="rgb(208,69,12)" fg:x="2775124940" fg:w="139657327"/><text x="0.6522%" y="1167.50"></text></g><g><title>_RNvMs6_NtCs9VSOSf8HpMa_15crossbeam_epoch8internalNtB5_5Local3pinCsgfUvSuuZgGt_10rayon_core (109,280,418 samples, 0.02%)</title><rect x="0.5033%" y="1157" width="0.0158%" height="15" fill="rgb(235,93,37)" fg:x="3472419012" fg:w="109280418"/><text x="0.7533%" y="1167.50"></text></g><g><title>_RNvMs8_NtCse0sQRnp5frV_15crossbeam_deque5dequeINtB5_7StealerINtNtNtCscQ55m1iSUUp_13polars_stream14async_executor4task8RunnableNtB11_12TaskMetadataEE30steal_batch_with_limit_and_popB13_ (101,782,205 samples, 0.01%)</title><rect x="0.5336%" y="1157" width="0.0148%" height="15" fill="rgb(213,116,39)" fg:x="3681281140" fg:w="101782205"/><text x="0.7836%" y="1167.50"></text></g><g><title>_RNvMs_NtNtCs1d5gyUoCB3b_16parking_lot_core13thread_parker3impNtB4_12ThreadParker10futex_waitCs74xQ4RIQ1N9_11parking_lot (69,022,611 samples, 0.01%)</title><rect x="0.5768%" y="1157" width="0.0100%" height="15" fill="rgb(222,207,29)" fg:x="3979216169" fg:w="69022611"/><text x="0.8268%" y="1167.50"></text></g><g><title>[polars_lazy-ce5f278b6bf8ee3a] (105,847,938 samples, 0.02%)</title><rect x="0.6721%" y="1125" width="0.0153%" height="15" fill="rgb(206,96,30)" fg:x="4637278864" fg:w="105847938"/><text x="0.9221%" y="1135.50"></text></g><g><title>_RNvMs6_NtCs9VSOSf8HpMa_15crossbeam_epoch8internalNtB5_5Local3pinCsgfUvSuuZgGt_10rayon_core (127,161,767 samples, 0.02%)</title><rect x="0.7290%" y="1109" width="0.0184%" height="15" fill="rgb(218,138,4)" fg:x="5029722964" fg:w="127161767"/><text x="0.9790%" y="1119.50"></text></g><g><title>[unknown] (684,669,851 samples, 0.10%)</title><rect x="0.6876%" y="1125" width="0.0992%" height="15" fill="rgb(250,191,14)" fg:x="4743730198" fg:w="684669851"/><text x="0.9376%" y="1135.50"></text></g><g><title>__GI___clone3 (1,164,170,648 samples, 0.17%)</title><rect x="0.6712%" y="1157" width="0.1687%" height="15" fill="rgb(239,60,40)" fg:x="4630844766" fg:w="1164170648"/><text x="0.9212%" y="1167.50"></text></g><g><title>start_thread (1,164,170,648 samples, 0.17%)</title><rect x="0.6712%" y="1141" width="0.1687%" height="15" fill="rgb(206,27,48)" fg:x="4630844766" fg:w="1164170648"/><text x="0.9212%" y="1151.50"></text></g><g><title>async-executor- (3,799,602,946 samples, 0.55%)</title><rect x="0.3060%" y="1173" width="0.5507%" height="15" fill="rgb(225,35,8)" fg:x="2111210634" fg:w="3799602946"/><text x="0.5560%" y="1183.50"></text></g><g><title>_RNvNtNtNtCs6howblQoKkQ_12polars_arrow6bitmap7bitmask4test17naive_nth_bit_set (122,939,750 samples, 0.02%)</title><rect x="0.8574%" y="1157" width="0.0178%" height="15" fill="rgb(250,213,24)" fg:x="5915225919" fg:w="122939750"/><text x="1.1074%" y="1167.50"></text></g><g><title>_RNvXsB_NtNtCscvwWOJfxRAb_4core4iter5rangemNtB5_4Step17forward_uncheckedCs1d5gyUoCB3b_16parking_lot_core (92,994,900 samples, 0.01%)</title><rect x="0.9044%" y="805" width="0.0135%" height="15" fill="rgb(247,123,22)" fg:x="6239454394" fg:w="92994900"/><text x="1.1544%" y="815.50"></text></g><g><title>core::num::&lt;impl u32&gt;::unchecked_add (85,053,487 samples, 0.01%)</title><rect x="0.9055%" y="789" width="0.0123%" height="15" fill="rgb(231,138,38)" fg:x="6247395807" fg:w="85053487"/><text x="1.1555%" y="799.50"></text></g><g><title>[unknown] (156,927,145 samples, 0.02%)</title><rect x="0.8954%" y="821" width="0.0227%" height="15" fill="rgb(231,145,46)" fg:x="6177815479" fg:w="156927145"/><text x="1.1454%" y="831.50"></text></g><g><title>bitmap::bitmask (433,959,850 samples, 0.06%)</title><rect x="0.8567%" y="1173" width="0.0629%" height="15" fill="rgb(251,118,11)" fg:x="5910813580" fg:w="433959850"/><text x="1.1067%" y="1183.50"></text></g><g><title>__GI___clone3 (166,957,951 samples, 0.02%)</title><rect x="0.8954%" y="1157" width="0.0242%" height="15" fill="rgb(217,147,25)" fg:x="6177815479" fg:w="166957951"/><text x="1.1454%" y="1167.50"></text></g><g><title>start_thread (166,957,951 samples, 0.02%)</title><rect x="0.8954%" y="1141" width="0.0242%" height="15" fill="rgb(247,81,37)" fg:x="6177815479" fg:w="166957951"/><text x="1.1454%" y="1151.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (166,957,951 samples, 0.02%)</title><rect x="0.8954%" y="1125" width="0.0242%" height="15" fill="rgb(209,12,38)" fg:x="6177815479" fg:w="166957951"/><text x="1.1454%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (166,957,951 samples, 0.02%)</title><rect x="0.8954%" y="1109" width="0.0242%" height="15" fill="rgb(227,1,9)" fg:x="6177815479" fg:w="166957951"/><text x="1.1454%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (166,957,951 samples, 0.02%)</title><rect x="0.8954%" y="1093" width="0.0242%" height="15" fill="rgb(248,47,43)" fg:x="6177815479" fg:w="166957951"/><text x="1.1454%" y="1103.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (166,957,951 samples, 0.02%)</title><rect x="0.8954%" y="1077" width="0.0242%" height="15" fill="rgb(221,10,30)" fg:x="6177815479" fg:w="166957951"/><text x="1.1454%" y="1087.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (166,957,951 samples, 0.02%)</title><rect x="0.8954%" y="1061" width="0.0242%" height="15" fill="rgb(210,229,1)" fg:x="6177815479" fg:w="166957951"/><text x="1.1454%" y="1071.50"></text></g><g><title>std::panic::catch_unwind (166,957,951 samples, 0.02%)</title><rect x="0.8954%" y="1045" width="0.0242%" height="15" fill="rgb(222,148,37)" fg:x="6177815479" fg:w="166957951"/><text x="1.1454%" y="1055.50"></text></g><g><title>std::panicking::try (166,957,951 samples, 0.02%)</title><rect x="0.8954%" y="1029" width="0.0242%" height="15" fill="rgb(234,67,33)" fg:x="6177815479" fg:w="166957951"/><text x="1.1454%" y="1039.50"></text></g><g><title>std::panicking::try::do_call (166,957,951 samples, 0.02%)</title><rect x="0.8954%" y="1013" width="0.0242%" height="15" fill="rgb(247,98,35)" fg:x="6177815479" fg:w="166957951"/><text x="1.1454%" y="1023.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (166,957,951 samples, 0.02%)</title><rect x="0.8954%" y="997" width="0.0242%" height="15" fill="rgb(247,138,52)" fg:x="6177815479" fg:w="166957951"/><text x="1.1454%" y="1007.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (166,957,951 samples, 0.02%)</title><rect x="0.8954%" y="981" width="0.0242%" height="15" fill="rgb(213,79,30)" fg:x="6177815479" fg:w="166957951"/><text x="1.1454%" y="991.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (166,957,951 samples, 0.02%)</title><rect x="0.8954%" y="965" width="0.0242%" height="15" fill="rgb(246,177,23)" fg:x="6177815479" fg:w="166957951"/><text x="1.1454%" y="975.50"></text></g><g><title>test::run_test::_{{closure}} (166,957,951 samples, 0.02%)</title><rect x="0.8954%" y="949" width="0.0242%" height="15" fill="rgb(230,62,27)" fg:x="6177815479" fg:w="166957951"/><text x="1.1454%" y="959.50"></text></g><g><title>test::run_test::_{{closure}} (166,957,951 samples, 0.02%)</title><rect x="0.8954%" y="933" width="0.0242%" height="15" fill="rgb(216,154,8)" fg:x="6177815479" fg:w="166957951"/><text x="1.1454%" y="943.50"></text></g><g><title>test::run_test_in_process (166,957,951 samples, 0.02%)</title><rect x="0.8954%" y="917" width="0.0242%" height="15" fill="rgb(244,35,45)" fg:x="6177815479" fg:w="166957951"/><text x="1.1454%" y="927.50"></text></g><g><title>std::panic::catch_unwind (166,957,951 samples, 0.02%)</title><rect x="0.8954%" y="901" width="0.0242%" height="15" fill="rgb(251,115,12)" fg:x="6177815479" fg:w="166957951"/><text x="1.1454%" y="911.50"></text></g><g><title>std::panicking::try (166,957,951 samples, 0.02%)</title><rect x="0.8954%" y="885" width="0.0242%" height="15" fill="rgb(240,54,50)" fg:x="6177815479" fg:w="166957951"/><text x="1.1454%" y="895.50"></text></g><g><title>std::panicking::try::do_call (166,957,951 samples, 0.02%)</title><rect x="0.8954%" y="869" width="0.0242%" height="15" fill="rgb(233,84,52)" fg:x="6177815479" fg:w="166957951"/><text x="1.1454%" y="879.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (166,957,951 samples, 0.02%)</title><rect x="0.8954%" y="853" width="0.0242%" height="15" fill="rgb(207,117,47)" fg:x="6177815479" fg:w="166957951"/><text x="1.1454%" y="863.50"></text></g><g><title>test::run_test_in_process::_{{closure}} (166,957,951 samples, 0.02%)</title><rect x="0.8954%" y="837" width="0.0242%" height="15" fill="rgb(249,43,39)" fg:x="6177815479" fg:w="166957951"/><text x="1.1454%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (96,502,727 samples, 0.01%)</title><rect x="0.9248%" y="1157" width="0.0140%" height="15" fill="rgb(209,38,44)" fg:x="6380681507" fg:w="96502727"/><text x="1.1748%" y="1167.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (177,499,152 samples, 0.03%)</title><rect x="0.9476%" y="1157" width="0.0257%" height="15" fill="rgb(236,212,23)" fg:x="6537480653" fg:w="177499152"/><text x="1.1976%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (80,213,636 samples, 0.01%)</title><rect x="0.9617%" y="1141" width="0.0116%" height="15" fill="rgb(242,79,21)" fg:x="6634766169" fg:w="80213636"/><text x="1.2117%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (80,213,636 samples, 0.01%)</title><rect x="0.9617%" y="1125" width="0.0116%" height="15" fill="rgb(211,96,35)" fg:x="6634766169" fg:w="80213636"/><text x="1.2117%" y="1135.50"></text></g><g><title>alloc::slice::hack::to_vec (80,213,636 samples, 0.01%)</title><rect x="0.9617%" y="1109" width="0.0116%" height="15" fill="rgb(253,215,40)" fg:x="6634766169" fg:w="80213636"/><text x="1.2117%" y="1119.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (80,213,636 samples, 0.01%)</title><rect x="0.9617%" y="1093" width="0.0116%" height="15" fill="rgb(211,81,21)" fg:x="6634766169" fg:w="80213636"/><text x="1.2117%" y="1103.50"></text></g><g><title>&lt;cargo_tarpaulin::statemachine::instrumented::LlvmInstrumentedData as cargo_tarpaulin::statemachine::StateData&gt;::wait (84,161,337 samples, 0.01%)</title><rect x="0.9948%" y="1157" width="0.0122%" height="15" fill="rgb(208,190,38)" fg:x="6863408263" fg:w="84161337"/><text x="1.2448%" y="1167.50"></text></g><g><title>&lt;llvm_profparser::instrumentation_profile::raw_profile::RawInstrProf&lt;T&gt; as llvm_profparser::instrumentation_profile::InstrProfReader&gt;::parse_bytes (1,607,825,901 samples, 0.23%)</title><rect x="1.0143%" y="1157" width="0.2330%" height="15" fill="rgb(235,213,38)" fg:x="6998005543" fg:w="1607825901"/><text x="1.2643%" y="1167.50"></text></g><g><title>&lt;std::path::Component as core::cmp::PartialEq&gt;::eq (240,243,100 samples, 0.03%)</title><rect x="1.2760%" y="1157" width="0.0348%" height="15" fill="rgb(237,122,38)" fg:x="8803253636" fg:w="240243100"/><text x="1.5260%" y="1167.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (102,089,934 samples, 0.01%)</title><rect x="1.6790%" y="1141" width="0.0148%" height="15" fill="rgb(244,218,35)" fg:x="11584143235" fg:w="102089934"/><text x="1.9290%" y="1151.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (102,089,934 samples, 0.01%)</title><rect x="1.6790%" y="1125" width="0.0148%" height="15" fill="rgb(240,68,47)" fg:x="11584143235" fg:w="102089934"/><text x="1.9290%" y="1135.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (144,223,903 samples, 0.02%)</title><rect x="1.7288%" y="1109" width="0.0209%" height="15" fill="rgb(210,16,53)" fg:x="11927266116" fg:w="144223903"/><text x="1.9788%" y="1119.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (144,223,903 samples, 0.02%)</title><rect x="1.7288%" y="1093" width="0.0209%" height="15" fill="rgb(235,124,12)" fg:x="11927266116" fg:w="144223903"/><text x="1.9788%" y="1103.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (765,337,286 samples, 0.11%)</title><rect x="1.7016%" y="1125" width="0.1109%" height="15" fill="rgb(224,169,11)" fg:x="11739497837" fg:w="765337286"/><text x="1.9516%" y="1135.50"></text></g><g><title>std::path::Components::parse_next_component::_{{closure}} (433,345,104 samples, 0.06%)</title><rect x="1.7497%" y="1109" width="0.0628%" height="15" fill="rgb(250,166,2)" fg:x="12071490019" fg:w="433345104"/><text x="1.9997%" y="1119.50"></text></g><g><title>std::path::Components::is_sep_byte (433,345,104 samples, 0.06%)</title><rect x="1.7497%" y="1093" width="0.0628%" height="15" fill="rgb(242,216,29)" fg:x="12071490019" fg:w="433345104"/><text x="1.9997%" y="1103.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (3,536,405,113 samples, 0.51%)</title><rect x="1.3110%" y="1157" width="0.5126%" height="15" fill="rgb(230,116,27)" fg:x="9044621131" fg:w="3536405113"/><text x="1.5610%" y="1167.50"></text></g><g><title>std::path::Components::parse_next_component (883,066,594 samples, 0.13%)</title><rect x="1.6955%" y="1141" width="0.1280%" height="15" fill="rgb(228,99,48)" fg:x="11697959650" fg:w="883066594"/><text x="1.9455%" y="1151.50"></text></g><g><title>std::path::Components::parse_single_component (76,191,121 samples, 0.01%)</title><rect x="1.8125%" y="1125" width="0.0110%" height="15" fill="rgb(253,11,6)" fg:x="12504835123" fg:w="76191121"/><text x="2.0625%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (117,011,858 samples, 0.02%)</title><rect x="1.8748%" y="1013" width="0.0170%" height="15" fill="rgb(247,143,39)" fg:x="12935025104" fg:w="117011858"/><text x="2.1248%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (117,011,858 samples, 0.02%)</title><rect x="1.8748%" y="997" width="0.0170%" height="15" fill="rgb(236,97,10)" fg:x="12935025104" fg:w="117011858"/><text x="2.1248%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (117,011,858 samples, 0.02%)</title><rect x="1.8748%" y="981" width="0.0170%" height="15" fill="rgb(233,208,19)" fg:x="12935025104" fg:w="117011858"/><text x="2.1248%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (117,011,858 samples, 0.02%)</title><rect x="1.8748%" y="965" width="0.0170%" height="15" fill="rgb(216,164,2)" fg:x="12935025104" fg:w="117011858"/><text x="2.1248%" y="975.50"></text></g><g><title>&lt;std::path::PathBuf as core::clone::Clone&gt;::clone (280,282,126 samples, 0.04%)</title><rect x="1.8712%" y="1125" width="0.0406%" height="15" fill="rgb(220,129,5)" fg:x="12909550374" fg:w="280282126"/><text x="2.1212%" y="1135.50"></text></g><g><title>&lt;std::ffi::os_str::OsString as core::clone::Clone&gt;::clone (280,282,126 samples, 0.04%)</title><rect x="1.8712%" y="1109" width="0.0406%" height="15" fill="rgb(242,17,10)" fg:x="12909550374" fg:w="280282126"/><text x="2.1212%" y="1119.50"></text></g><g><title>&lt;std::sys::os_str::bytes::Buf as core::clone::Clone&gt;::clone (280,282,126 samples, 0.04%)</title><rect x="1.8712%" y="1093" width="0.0406%" height="15" fill="rgb(242,107,0)" fg:x="12909550374" fg:w="280282126"/><text x="2.1212%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (280,282,126 samples, 0.04%)</title><rect x="1.8712%" y="1077" width="0.0406%" height="15" fill="rgb(251,28,31)" fg:x="12909550374" fg:w="280282126"/><text x="2.1212%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (254,807,396 samples, 0.04%)</title><rect x="1.8748%" y="1061" width="0.0369%" height="15" fill="rgb(233,223,10)" fg:x="12935025104" fg:w="254807396"/><text x="2.1248%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (254,807,396 samples, 0.04%)</title><rect x="1.8748%" y="1045" width="0.0369%" height="15" fill="rgb(215,21,27)" fg:x="12935025104" fg:w="254807396"/><text x="2.1248%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (254,807,396 samples, 0.04%)</title><rect x="1.8748%" y="1029" width="0.0369%" height="15" fill="rgb(232,23,21)" fg:x="12935025104" fg:w="254807396"/><text x="2.1248%" y="1039.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (137,795,538 samples, 0.02%)</title><rect x="1.8918%" y="1013" width="0.0200%" height="15" fill="rgb(244,5,23)" fg:x="13052036962" fg:w="137795538"/><text x="2.1418%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (137,795,538 samples, 0.02%)</title><rect x="1.8918%" y="997" width="0.0200%" height="15" fill="rgb(226,81,46)" fg:x="13052036962" fg:w="137795538"/><text x="2.1418%" y="1007.50"></text></g><g><title>llvm_profparser::coverage::CoverageMappingInfo::get_files_from_id (410,044,389 samples, 0.06%)</title><rect x="1.8621%" y="1141" width="0.0594%" height="15" fill="rgb(247,70,30)" fg:x="12847285913" fg:w="410044389"/><text x="2.1121%" y="1151.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::read_object_file (84,276,443 samples, 0.01%)</title><rect x="1.9293%" y="1141" width="0.0122%" height="15" fill="rgb(212,68,19)" fg:x="13311075341" fg:w="84276443"/><text x="2.1793%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (84,276,443 samples, 0.01%)</title><rect x="1.9293%" y="1125" width="0.0122%" height="15" fill="rgb(240,187,13)" fg:x="13311075341" fg:w="84276443"/><text x="2.1793%" y="1135.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::read_object_file::_{{closure}} (84,276,443 samples, 0.01%)</title><rect x="1.9293%" y="1109" width="0.0122%" height="15" fill="rgb(223,113,26)" fg:x="13311075341" fg:w="84276443"/><text x="2.1793%" y="1119.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::parse_coverage_functions (84,276,443 samples, 0.01%)</title><rect x="1.9293%" y="1093" width="0.0122%" height="15" fill="rgb(206,192,2)" fg:x="13311075341" fg:w="84276443"/><text x="2.1793%" y="1103.50"></text></g><g><title>md5::transform (70,417,876 samples, 0.01%)</title><rect x="1.9488%" y="1141" width="0.0102%" height="15" fill="rgb(241,108,4)" fg:x="13445609140" fg:w="70417876"/><text x="2.1988%" y="1151.50"></text></g><g><title>[cargo-tarpaulin] (898,722,579 samples, 0.13%)</title><rect x="1.8345%" y="1157" width="0.1303%" height="15" fill="rgb(247,173,49)" fg:x="12656463503" fg:w="898722579"/><text x="2.0845%" y="1167.50"></text></g><g><title>[libc.so.6] (92,853,126 samples, 0.01%)</title><rect x="1.9647%" y="1157" width="0.0135%" height="15" fill="rgb(224,114,35)" fg:x="13555186082" fg:w="92853126"/><text x="2.2147%" y="1167.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (76,308,518 samples, 0.01%)</title><rect x="1.9817%" y="1141" width="0.0111%" height="15" fill="rgb(245,159,27)" fg:x="13672284808" fg:w="76308518"/><text x="2.2317%" y="1151.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::read_object_file (76,308,518 samples, 0.01%)</title><rect x="1.9817%" y="1125" width="0.0111%" height="15" fill="rgb(245,172,44)" fg:x="13672284808" fg:w="76308518"/><text x="2.2317%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (76,308,518 samples, 0.01%)</title><rect x="1.9817%" y="1109" width="0.0111%" height="15" fill="rgb(236,23,11)" fg:x="13672284808" fg:w="76308518"/><text x="2.2317%" y="1119.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::read_object_file::_{{closure}} (76,308,518 samples, 0.01%)</title><rect x="1.9817%" y="1093" width="0.0111%" height="15" fill="rgb(205,117,38)" fg:x="13672284808" fg:w="76308518"/><text x="2.2317%" y="1103.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::parse_coverage_functions (76,308,518 samples, 0.01%)</title><rect x="1.9817%" y="1077" width="0.0111%" height="15" fill="rgb(237,72,25)" fg:x="13672284808" fg:w="76308518"/><text x="2.2317%" y="1087.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,166,352,129 samples, 0.17%)</title><rect x="1.9950%" y="1141" width="0.1691%" height="15" fill="rgb(244,70,9)" fg:x="13764250982" fg:w="1166352129"/><text x="2.2450%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (94,671,248 samples, 0.01%)</title><rect x="2.1504%" y="1125" width="0.0137%" height="15" fill="rgb(217,125,39)" fg:x="14835931863" fg:w="94671248"/><text x="2.4004%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (94,671,248 samples, 0.01%)</title><rect x="2.1504%" y="1109" width="0.0137%" height="15" fill="rgb(235,36,10)" fg:x="14835931863" fg:w="94671248"/><text x="2.4004%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (94,671,248 samples, 0.01%)</title><rect x="2.1504%" y="1093" width="0.0137%" height="15" fill="rgb(251,123,47)" fg:x="14835931863" fg:w="94671248"/><text x="2.4004%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (94,671,248 samples, 0.01%)</title><rect x="2.1504%" y="1077" width="0.0137%" height="15" fill="rgb(221,13,13)" fg:x="14835931863" fg:w="94671248"/><text x="2.4004%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (72,092,687 samples, 0.01%)</title><rect x="2.1937%" y="981" width="0.0104%" height="15" fill="rgb(238,131,9)" fg:x="15135126918" fg:w="72092687"/><text x="2.4437%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (72,092,687 samples, 0.01%)</title><rect x="2.1937%" y="965" width="0.0104%" height="15" fill="rgb(211,50,8)" fg:x="15135126918" fg:w="72092687"/><text x="2.4437%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (72,092,687 samples, 0.01%)</title><rect x="2.1937%" y="949" width="0.0104%" height="15" fill="rgb(245,182,24)" fg:x="15135126918" fg:w="72092687"/><text x="2.4437%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (72,092,687 samples, 0.01%)</title><rect x="2.1937%" y="933" width="0.0104%" height="15" fill="rgb(242,14,37)" fg:x="15135126918" fg:w="72092687"/><text x="2.4437%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (144,597,207 samples, 0.02%)</title><rect x="2.1937%" y="1061" width="0.0210%" height="15" fill="rgb(246,228,12)" fg:x="15135126918" fg:w="144597207"/><text x="2.4437%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (144,597,207 samples, 0.02%)</title><rect x="2.1937%" y="1045" width="0.0210%" height="15" fill="rgb(213,55,15)" fg:x="15135126918" fg:w="144597207"/><text x="2.4437%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (144,597,207 samples, 0.02%)</title><rect x="2.1937%" y="1029" width="0.0210%" height="15" fill="rgb(209,9,3)" fg:x="15135126918" fg:w="144597207"/><text x="2.4437%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (144,597,207 samples, 0.02%)</title><rect x="2.1937%" y="1013" width="0.0210%" height="15" fill="rgb(230,59,30)" fg:x="15135126918" fg:w="144597207"/><text x="2.4437%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (144,597,207 samples, 0.02%)</title><rect x="2.1937%" y="997" width="0.0210%" height="15" fill="rgb(209,121,21)" fg:x="15135126918" fg:w="144597207"/><text x="2.4437%" y="1007.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (72,504,520 samples, 0.01%)</title><rect x="2.2042%" y="981" width="0.0105%" height="15" fill="rgb(220,109,13)" fg:x="15207219605" fg:w="72504520"/><text x="2.4542%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (72,504,520 samples, 0.01%)</title><rect x="2.2042%" y="965" width="0.0105%" height="15" fill="rgb(232,18,1)" fg:x="15207219605" fg:w="72504520"/><text x="2.4542%" y="975.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (171,864,515 samples, 0.02%)</title><rect x="2.1937%" y="1125" width="0.0249%" height="15" fill="rgb(215,41,42)" fg:x="15135126918" fg:w="171864515"/><text x="2.4437%" y="1135.50"></text></g><g><title>&lt;str as alloc::string::SpecToString&gt;::spec_to_string (171,864,515 samples, 0.02%)</title><rect x="2.1937%" y="1109" width="0.0249%" height="15" fill="rgb(224,123,36)" fg:x="15135126918" fg:w="171864515"/><text x="2.4437%" y="1119.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (171,864,515 samples, 0.02%)</title><rect x="2.1937%" y="1093" width="0.0249%" height="15" fill="rgb(240,125,3)" fg:x="15135126918" fg:w="171864515"/><text x="2.4437%" y="1103.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (171,864,515 samples, 0.02%)</title><rect x="2.1937%" y="1077" width="0.0249%" height="15" fill="rgb(205,98,50)" fg:x="15135126918" fg:w="171864515"/><text x="2.4437%" y="1087.50"></text></g><g><title>&lt;llvm_profparser::instrumentation_profile::raw_profile::RawInstrProf&lt;T&gt; as llvm_profparser::instrumentation_profile::InstrProfReader&gt;::parse_bytes (280,948,277 samples, 0.04%)</title><rect x="2.1845%" y="1141" width="0.0407%" height="15" fill="rgb(205,185,37)" fg:x="15071587426" fg:w="280948277"/><text x="2.4345%" y="1151.50"></text></g><g><title>&lt;std::path::Component as core::cmp::PartialEq&gt;::eq (203,311,664 samples, 0.03%)</title><rect x="2.2415%" y="1141" width="0.0295%" height="15" fill="rgb(238,207,15)" fg:x="15464490347" fg:w="203311664"/><text x="2.4915%" y="1151.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (824,562,456 samples, 0.12%)</title><rect x="2.2711%" y="1141" width="0.1195%" height="15" fill="rgb(213,199,42)" fg:x="15668939400" fg:w="824562456"/><text x="2.5211%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (86,477,616 samples, 0.01%)</title><rect x="2.3964%" y="1125" width="0.0125%" height="15" fill="rgb(235,201,11)" fg:x="16533204145" fg:w="86477616"/><text x="2.6464%" y="1135.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (83,235,649 samples, 0.01%)</title><rect x="2.3968%" y="1109" width="0.0121%" height="15" fill="rgb(207,46,11)" fg:x="16536446112" fg:w="83235649"/><text x="2.6468%" y="1119.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (80,991,760 samples, 0.01%)</title><rect x="2.3972%" y="1093" width="0.0117%" height="15" fill="rgb(241,35,35)" fg:x="16538690001" fg:w="80991760"/><text x="2.6472%" y="1103.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (80,991,760 samples, 0.01%)</title><rect x="2.3972%" y="1077" width="0.0117%" height="15" fill="rgb(243,32,47)" fg:x="16538690001" fg:w="80991760"/><text x="2.6472%" y="1087.50"></text></g><g><title>[libc.so.6] (87,514,933 samples, 0.01%)</title><rect x="2.3964%" y="1141" width="0.0127%" height="15" fill="rgb(247,202,23)" fg:x="16533204145" fg:w="87514933"/><text x="2.6464%" y="1151.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1,023,869,858 samples, 0.15%)</title><rect x="2.4233%" y="1125" width="0.1484%" height="15" fill="rgb(219,102,11)" fg:x="16718762337" fg:w="1023869858"/><text x="2.6733%" y="1135.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (129,730,728 samples, 0.02%)</title><rect x="2.5993%" y="1109" width="0.0188%" height="15" fill="rgb(243,110,44)" fg:x="17933204297" fg:w="129730728"/><text x="2.8493%" y="1119.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (188,849,797 samples, 0.03%)</title><rect x="2.5915%" y="1125" width="0.0274%" height="15" fill="rgb(222,74,54)" fg:x="17879636773" fg:w="188849797"/><text x="2.8415%" y="1135.50"></text></g><g><title>llvm_profparser::instrumentation_profile::types::InstrumentationProfile::push_record (105,027,299 samples, 0.02%)</title><rect x="2.6223%" y="1125" width="0.0152%" height="15" fill="rgb(216,99,12)" fg:x="18091611683" fg:w="105027299"/><text x="2.8723%" y="1135.50"></text></g><g><title>llvm_profparser::instrumentation_profile::types::Symtab::contains (219,076,506 samples, 0.03%)</title><rect x="2.6396%" y="1125" width="0.0318%" height="15" fill="rgb(226,22,26)" fg:x="18211566150" fg:w="219076506"/><text x="2.8896%" y="1135.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (176,997,796 samples, 0.03%)</title><rect x="2.6457%" y="1109" width="0.0257%" height="15" fill="rgb(217,163,10)" fg:x="18253644860" fg:w="176997796"/><text x="2.8957%" y="1119.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (176,997,796 samples, 0.03%)</title><rect x="2.6457%" y="1093" width="0.0257%" height="15" fill="rgb(213,25,53)" fg:x="18253644860" fg:w="176997796"/><text x="2.8957%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (176,997,796 samples, 0.03%)</title><rect x="2.6457%" y="1077" width="0.0257%" height="15" fill="rgb(252,105,26)" fg:x="18253644860" fg:w="176997796"/><text x="2.8957%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (130,394,806 samples, 0.02%)</title><rect x="2.6525%" y="1061" width="0.0189%" height="15" fill="rgb(220,39,43)" fg:x="18300247850" fg:w="130394806"/><text x="2.9025%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (130,394,806 samples, 0.02%)</title><rect x="2.6525%" y="1045" width="0.0189%" height="15" fill="rgb(229,68,48)" fg:x="18300247850" fg:w="130394806"/><text x="2.9025%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (130,394,806 samples, 0.02%)</title><rect x="2.6525%" y="1029" width="0.0189%" height="15" fill="rgb(252,8,32)" fg:x="18300247850" fg:w="130394806"/><text x="2.9025%" y="1039.50"></text></g><g><title>[unknown] (1,939,983,425 samples, 0.28%)</title><rect x="2.4091%" y="1141" width="0.2812%" height="15" fill="rgb(223,20,43)" fg:x="16620719078" fg:w="1939983425"/><text x="2.6591%" y="1151.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h4813e28088395dc8E.llvm.6412023112901746188 (209,711,531 samples, 0.03%)</title><rect x="2.7175%" y="1141" width="0.0304%" height="15" fill="rgb(229,81,49)" fg:x="18748388921" fg:w="209711531"/><text x="2.9675%" y="1151.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h72fe1e565e64b81dE.llvm.12888435030010135765 (142,089,581 samples, 0.02%)</title><rect x="2.7505%" y="1141" width="0.0206%" height="15" fill="rgb(236,28,36)" fg:x="18976270431" fg:w="142089581"/><text x="3.0005%" y="1151.50"></text></g><g><title>__memcmp_evex_movbe (478,529,503 samples, 0.07%)</title><rect x="2.7728%" y="1141" width="0.0694%" height="15" fill="rgb(249,185,26)" fg:x="19130599160" fg:w="478529503"/><text x="3.0228%" y="1151.50"></text></g><g><title>__memmove_avx512_unaligned_erms (569,917,132 samples, 0.08%)</title><rect x="2.8422%" y="1141" width="0.0826%" height="15" fill="rgb(249,174,33)" fg:x="19609128663" fg:w="569917132"/><text x="3.0922%" y="1151.50"></text></g><g><title>__rdl_alloc (107,612,079 samples, 0.02%)</title><rect x="2.9305%" y="1141" width="0.0156%" height="15" fill="rgb(233,201,37)" fg:x="20218356825" fg:w="107612079"/><text x="3.1805%" y="1151.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (95,774,915 samples, 0.01%)</title><rect x="2.9322%" y="1125" width="0.0139%" height="15" fill="rgb(221,78,26)" fg:x="20230193989" fg:w="95774915"/><text x="3.1822%" y="1135.50"></text></g><g><title>__rdl_dealloc (105,014,828 samples, 0.02%)</title><rect x="2.9464%" y="1141" width="0.0152%" height="15" fill="rgb(250,127,30)" fg:x="20328158589" fg:w="105014828"/><text x="3.1964%" y="1151.50"></text></g><g><title>_int_free (241,539,466 samples, 0.04%)</title><rect x="2.9686%" y="1141" width="0.0350%" height="15" fill="rgb(230,49,44)" fg:x="20481002468" fg:w="241539466"/><text x="3.2186%" y="1151.50"></text></g><g><title>_int_free_create_chunk (189,975,918 samples, 0.03%)</title><rect x="3.0036%" y="1141" width="0.0275%" height="15" fill="rgb(229,67,23)" fg:x="20722541934" fg:w="189975918"/><text x="3.2536%" y="1151.50"></text></g><g><title>_int_free_merge_chunk (112,572,292 samples, 0.02%)</title><rect x="3.0339%" y="1141" width="0.0163%" height="15" fill="rgb(249,83,47)" fg:x="20931413237" fg:w="112572292"/><text x="3.2839%" y="1151.50"></text></g><g><title>_int_malloc (1,299,792,478 samples, 0.19%)</title><rect x="3.0502%" y="1141" width="0.1884%" height="15" fill="rgb(215,43,3)" fg:x="21043985529" fg:w="1299792478"/><text x="3.3002%" y="1151.50"></text></g><g><title>&lt;std::path::PathBuf as core::cmp::Ord&gt;::cmp (990,317,150 samples, 0.14%)</title><rect x="3.2880%" y="1077" width="0.1435%" height="15" fill="rgb(238,154,13)" fg:x="22685075422" fg:w="990317150"/><text x="3.5380%" y="1087.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,243,807,336 samples, 0.18%)</title><rect x="3.2574%" y="1125" width="0.1803%" height="15" fill="rgb(219,56,2)" fg:x="22473622652" fg:w="1243807336"/><text x="3.5074%" y="1135.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,218,814,064 samples, 0.18%)</title><rect x="3.2610%" y="1109" width="0.1767%" height="15" fill="rgb(233,0,4)" fg:x="22498615924" fg:w="1218814064"/><text x="3.5110%" y="1119.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,218,814,064 samples, 0.18%)</title><rect x="3.2610%" y="1093" width="0.1767%" height="15" fill="rgb(235,30,7)" fg:x="22498615924" fg:w="1218814064"/><text x="3.5110%" y="1103.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (1,341,191,836 samples, 0.19%)</title><rect x="3.2469%" y="1141" width="0.1944%" height="15" fill="rgb(250,79,13)" fg:x="22400998194" fg:w="1341191836"/><text x="3.4969%" y="1151.50"></text></g><g><title>&lt;llvm_profparser::coverage::SourceLocation as core::cmp::Ord&gt;::cmp (188,678,896 samples, 0.03%)</title><rect x="3.4955%" y="1093" width="0.0273%" height="15" fill="rgb(211,146,34)" fg:x="24116255394" fg:w="188678896"/><text x="3.7455%" y="1103.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (170,176,909 samples, 0.02%)</title><rect x="3.4982%" y="1077" width="0.0247%" height="15" fill="rgb(228,22,38)" fg:x="24134757381" fg:w="170176909"/><text x="3.7482%" y="1087.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (465,816,638 samples, 0.07%)</title><rect x="3.4558%" y="1141" width="0.0675%" height="15" fill="rgb(235,168,5)" fg:x="23842523411" fg:w="465816638"/><text x="3.7058%" y="1151.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (396,101,739 samples, 0.06%)</title><rect x="3.4659%" y="1125" width="0.0574%" height="15" fill="rgb(221,155,16)" fg:x="23912238310" fg:w="396101739"/><text x="3.7159%" y="1135.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (396,101,739 samples, 0.06%)</title><rect x="3.4659%" y="1109" width="0.0574%" height="15" fill="rgb(215,215,53)" fg:x="23912238310" fg:w="396101739"/><text x="3.7159%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (281,051,054 samples, 0.04%)</title><rect x="3.5233%" y="1141" width="0.0407%" height="15" fill="rgb(223,4,10)" fg:x="24308340049" fg:w="281051054"/><text x="3.7733%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (133,448,270 samples, 0.02%)</title><rect x="3.5447%" y="1125" width="0.0193%" height="15" fill="rgb(234,103,6)" fg:x="24455942833" fg:w="133448270"/><text x="3.7947%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (129,044,379 samples, 0.02%)</title><rect x="3.5454%" y="1109" width="0.0187%" height="15" fill="rgb(227,97,0)" fg:x="24460346724" fg:w="129044379"/><text x="3.7954%" y="1119.50"></text></g><g><title>cargo_tarpaulin::source_analysis::LineAnalysis::should_ignore (83,842,848 samples, 0.01%)</title><rect x="3.5873%" y="1141" width="0.0122%" height="15" fill="rgb(234,150,53)" fg:x="24749378228" fg:w="83842848"/><text x="3.8373%" y="1151.50"></text></g><g><title>&lt;std::path::Path as core::cmp::Ord&gt;::cmp (154,554,200 samples, 0.02%)</title><rect x="3.6133%" y="1045" width="0.0224%" height="15" fill="rgb(228,201,54)" fg:x="24929239884" fg:w="154554200"/><text x="3.8633%" y="1055.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (222,222,330 samples, 0.03%)</title><rect x="3.6045%" y="1093" width="0.0322%" height="15" fill="rgb(222,22,37)" fg:x="24868229763" fg:w="222222330"/><text x="3.8545%" y="1103.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (210,224,447 samples, 0.03%)</title><rect x="3.6062%" y="1077" width="0.0305%" height="15" fill="rgb(237,53,32)" fg:x="24880227646" fg:w="210224447"/><text x="3.8562%" y="1087.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (210,224,447 samples, 0.03%)</title><rect x="3.6062%" y="1061" width="0.0305%" height="15" fill="rgb(233,25,53)" fg:x="24880227646" fg:w="210224447"/><text x="3.8562%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (227,778,079 samples, 0.03%)</title><rect x="3.6043%" y="1125" width="0.0330%" height="15" fill="rgb(210,40,34)" fg:x="24867095014" fg:w="227778079"/><text x="3.8543%" y="1135.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (227,778,079 samples, 0.03%)</title><rect x="3.6043%" y="1109" width="0.0330%" height="15" fill="rgb(241,220,44)" fg:x="24867095014" fg:w="227778079"/><text x="3.8543%" y="1119.50"></text></g><g><title>&lt;std::path::Path as core::cmp::Ord&gt;::cmp (169,707,514 samples, 0.02%)</title><rect x="3.6476%" y="1061" width="0.0246%" height="15" fill="rgb(235,28,35)" fg:x="25165936464" fg:w="169707514"/><text x="3.8976%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (242,977,926 samples, 0.04%)</title><rect x="3.6373%" y="1125" width="0.0352%" height="15" fill="rgb(210,56,17)" fg:x="25094873093" fg:w="242977926"/><text x="3.8873%" y="1135.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (242,977,926 samples, 0.04%)</title><rect x="3.6373%" y="1109" width="0.0352%" height="15" fill="rgb(224,130,29)" fg:x="25094873093" fg:w="242977926"/><text x="3.8873%" y="1119.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (235,287,435 samples, 0.03%)</title><rect x="3.6384%" y="1093" width="0.0341%" height="15" fill="rgb(235,212,8)" fg:x="25102563584" fg:w="235287435"/><text x="3.8884%" y="1103.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (235,287,435 samples, 0.03%)</title><rect x="3.6384%" y="1077" width="0.0341%" height="15" fill="rgb(223,33,50)" fg:x="25102563584" fg:w="235287435"/><text x="3.8884%" y="1087.50"></text></g><g><title>cargo_tarpaulin::traces::TraceMap::add_trace (484,123,853 samples, 0.07%)</title><rect x="3.6042%" y="1141" width="0.0702%" height="15" fill="rgb(219,149,13)" fg:x="24865971554" fg:w="484123853"/><text x="3.8542%" y="1151.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (119,947,167 samples, 0.02%)</title><rect x="3.6750%" y="1125" width="0.0174%" height="15" fill="rgb(250,156,29)" fg:x="25354531444" fg:w="119947167"/><text x="3.9250%" y="1135.50"></text></g><g><title>cargo_tarpaulin::traces::TraceMap::contains_location (201,830,866 samples, 0.03%)</title><rect x="3.6743%" y="1141" width="0.0293%" height="15" fill="rgb(216,193,19)" fg:x="25350095407" fg:w="201830866"/><text x="3.9243%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (77,447,662 samples, 0.01%)</title><rect x="3.6924%" y="1125" width="0.0112%" height="15" fill="rgb(216,135,14)" fg:x="25474478611" fg:w="77447662"/><text x="3.9424%" y="1135.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (76,393,737 samples, 0.01%)</title><rect x="3.6925%" y="1109" width="0.0111%" height="15" fill="rgb(241,47,5)" fg:x="25475532536" fg:w="76393737"/><text x="3.9425%" y="1119.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (73,113,422 samples, 0.01%)</title><rect x="3.6930%" y="1093" width="0.0106%" height="15" fill="rgb(233,42,35)" fg:x="25478812851" fg:w="73113422"/><text x="3.9430%" y="1103.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (73,113,422 samples, 0.01%)</title><rect x="3.6930%" y="1077" width="0.0106%" height="15" fill="rgb(231,13,6)" fg:x="25478812851" fg:w="73113422"/><text x="3.9430%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (70,816,980 samples, 0.01%)</title><rect x="3.7039%" y="981" width="0.0103%" height="15" fill="rgb(207,181,40)" fg:x="25554171150" fg:w="70816980"/><text x="3.9539%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (105,340,247 samples, 0.02%)</title><rect x="3.7037%" y="1077" width="0.0153%" height="15" fill="rgb(254,173,49)" fg:x="25553043199" fg:w="105340247"/><text x="3.9537%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (105,340,247 samples, 0.02%)</title><rect x="3.7037%" y="1061" width="0.0153%" height="15" fill="rgb(221,1,38)" fg:x="25553043199" fg:w="105340247"/><text x="3.9537%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (105,340,247 samples, 0.02%)</title><rect x="3.7037%" y="1045" width="0.0153%" height="15" fill="rgb(206,124,46)" fg:x="25553043199" fg:w="105340247"/><text x="3.9537%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (105,340,247 samples, 0.02%)</title><rect x="3.7037%" y="1029" width="0.0153%" height="15" fill="rgb(249,21,11)" fg:x="25553043199" fg:w="105340247"/><text x="3.9537%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (105,340,247 samples, 0.02%)</title><rect x="3.7037%" y="1013" width="0.0153%" height="15" fill="rgb(222,201,40)" fg:x="25553043199" fg:w="105340247"/><text x="3.9537%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (105,340,247 samples, 0.02%)</title><rect x="3.7037%" y="997" width="0.0153%" height="15" fill="rgb(235,61,29)" fg:x="25553043199" fg:w="105340247"/><text x="3.9537%" y="1007.50"></text></g><g><title>cargo_tarpaulin::traces::TraceMap::coverable_in_path (108,686,711 samples, 0.02%)</title><rect x="3.7036%" y="1141" width="0.0158%" height="15" fill="rgb(219,207,3)" fg:x="25551926273" fg:w="108686711"/><text x="3.9536%" y="1151.50"></text></g><g><title>cargo_tarpaulin::traces::amount_coverable (108,686,711 samples, 0.02%)</title><rect x="3.7036%" y="1125" width="0.0158%" height="15" fill="rgb(222,56,46)" fg:x="25551926273" fg:w="108686711"/><text x="3.9536%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (107,569,785 samples, 0.02%)</title><rect x="3.7037%" y="1109" width="0.0156%" height="15" fill="rgb(239,76,54)" fg:x="25553043199" fg:w="107569785"/><text x="3.9537%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (107,569,785 samples, 0.02%)</title><rect x="3.7037%" y="1093" width="0.0156%" height="15" fill="rgb(231,124,27)" fg:x="25553043199" fg:w="107569785"/><text x="3.9537%" y="1103.50"></text></g><g><title>cfree@GLIBC_2.2.5 (251,830,726 samples, 0.04%)</title><rect x="3.7253%" y="1141" width="0.0365%" height="15" fill="rgb(249,195,6)" fg:x="25701653869" fg:w="251830726"/><text x="3.9753%" y="1151.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (127,987,125 samples, 0.02%)</title><rect x="3.7952%" y="1077" width="0.0186%" height="15" fill="rgb(237,174,47)" fg:x="26183718430" fg:w="127987125"/><text x="4.0452%" y="1087.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (235,661,876 samples, 0.03%)</title><rect x="3.7799%" y="1125" width="0.0342%" height="15" fill="rgb(206,201,31)" fg:x="26078286630" fg:w="235661876"/><text x="4.0299%" y="1135.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (235,661,876 samples, 0.03%)</title><rect x="3.7799%" y="1109" width="0.0342%" height="15" fill="rgb(231,57,52)" fg:x="26078286630" fg:w="235661876"/><text x="4.0299%" y="1119.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (235,661,876 samples, 0.03%)</title><rect x="3.7799%" y="1093" width="0.0342%" height="15" fill="rgb(248,177,22)" fg:x="26078286630" fg:w="235661876"/><text x="4.0299%" y="1103.50"></text></g><g><title>core::hash::BuildHasher::hash_one (471,091,659 samples, 0.07%)</title><rect x="3.7619%" y="1141" width="0.0683%" height="15" fill="rgb(215,211,37)" fg:x="25954593287" fg:w="471091659"/><text x="4.0119%" y="1151.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (71,928,100 samples, 0.01%)</title><rect x="3.8198%" y="1125" width="0.0104%" height="15" fill="rgb(241,128,51)" fg:x="26353756846" fg:w="71928100"/><text x="4.0698%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;llvm_profparser::instrumentation_profile::types::InstrumentationProfile&gt; (89,897,456 samples, 0.01%)</title><rect x="3.8305%" y="1141" width="0.0130%" height="15" fill="rgb(227,165,31)" fg:x="26427852579" fg:w="89897456"/><text x="4.0805%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,usize,core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;&gt; (73,012,683 samples, 0.01%)</title><rect x="3.8330%" y="1125" width="0.0106%" height="15" fill="rgb(228,167,24)" fg:x="26444737352" fg:w="73012683"/><text x="4.0830%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,usize,core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;&gt; (73,012,683 samples, 0.01%)</title><rect x="3.8330%" y="1109" width="0.0106%" height="15" fill="rgb(228,143,12)" fg:x="26444737352" fg:w="73012683"/><text x="4.0830%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,usize)&gt;&gt; (73,012,683 samples, 0.01%)</title><rect x="3.8330%" y="1093" width="0.0106%" height="15" fill="rgb(249,149,8)" fg:x="26444737352" fg:w="73012683"/><text x="4.0830%" y="1103.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (73,012,683 samples, 0.01%)</title><rect x="3.8330%" y="1077" width="0.0106%" height="15" fill="rgb(243,35,44)" fg:x="26444737352" fg:w="73012683"/><text x="4.0830%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (73,012,683 samples, 0.01%)</title><rect x="3.8330%" y="1061" width="0.0106%" height="15" fill="rgb(246,89,9)" fg:x="26444737352" fg:w="73012683"/><text x="4.0830%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (73,012,683 samples, 0.01%)</title><rect x="3.8330%" y="1045" width="0.0106%" height="15" fill="rgb(233,213,13)" fg:x="26444737352" fg:w="73012683"/><text x="4.0830%" y="1055.50"></text></g><g><title>core::slice::sort::unstable::ipnsort (200,827,868 samples, 0.03%)</title><rect x="3.8477%" y="1141" width="0.0291%" height="15" fill="rgb(233,141,41)" fg:x="26546509779" fg:w="200827868"/><text x="4.0977%" y="1151.50"></text></g><g><title>core::slice::sort::shared::find_existing_run (192,030,627 samples, 0.03%)</title><rect x="3.8490%" y="1125" width="0.0278%" height="15" fill="rgb(239,167,4)" fg:x="26555307020" fg:w="192030627"/><text x="4.0990%" y="1135.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (69,136,266 samples, 0.01%)</title><rect x="3.8858%" y="1141" width="0.0100%" height="15" fill="rgb(209,217,16)" fg:x="26809220326" fg:w="69136266"/><text x="4.1358%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (69,896,083 samples, 0.01%)</title><rect x="3.9592%" y="1077" width="0.0101%" height="15" fill="rgb(219,88,35)" fg:x="27315812493" fg:w="69896083"/><text x="4.2092%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (291,798,192 samples, 0.04%)</title><rect x="3.9277%" y="1125" width="0.0423%" height="15" fill="rgb(220,193,23)" fg:x="27098267158" fg:w="291798192"/><text x="4.1777%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (291,798,192 samples, 0.04%)</title><rect x="3.9277%" y="1109" width="0.0423%" height="15" fill="rgb(230,90,52)" fg:x="27098267158" fg:w="291798192"/><text x="4.1777%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (283,940,191 samples, 0.04%)</title><rect x="3.9288%" y="1093" width="0.0412%" height="15" fill="rgb(252,106,19)" fg:x="27106125159" fg:w="283940191"/><text x="4.1788%" y="1103.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (74,030,160 samples, 0.01%)</title><rect x="3.9722%" y="1093" width="0.0107%" height="15" fill="rgb(206,74,20)" fg:x="27405430805" fg:w="74030160"/><text x="4.2222%" y="1103.50"></text></g><g><title>core::ptr::write (74,030,160 samples, 0.01%)</title><rect x="3.9722%" y="1077" width="0.0107%" height="15" fill="rgb(230,138,44)" fg:x="27405430805" fg:w="74030160"/><text x="4.2222%" y="1087.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (75,119,505 samples, 0.01%)</title><rect x="3.9722%" y="1109" width="0.0109%" height="15" fill="rgb(235,182,43)" fg:x="27405430805" fg:w="75119505"/><text x="4.2222%" y="1119.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (680,885,783 samples, 0.10%)</title><rect x="3.8976%" y="1141" width="0.0987%" height="15" fill="rgb(242,16,51)" fg:x="26890226777" fg:w="680885783"/><text x="4.1476%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (165,681,755 samples, 0.02%)</title><rect x="3.9722%" y="1125" width="0.0240%" height="15" fill="rgb(248,9,4)" fg:x="27405430805" fg:w="165681755"/><text x="4.2222%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (75,985,212 samples, 0.01%)</title><rect x="4.0675%" y="997" width="0.0110%" height="15" fill="rgb(210,31,22)" fg:x="28062698866" fg:w="75985212"/><text x="4.3175%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (75,985,212 samples, 0.01%)</title><rect x="4.0675%" y="981" width="0.0110%" height="15" fill="rgb(239,54,39)" fg:x="28062698866" fg:w="75985212"/><text x="4.3175%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (75,985,212 samples, 0.01%)</title><rect x="4.0675%" y="965" width="0.0110%" height="15" fill="rgb(230,99,41)" fg:x="28062698866" fg:w="75985212"/><text x="4.3175%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (75,985,212 samples, 0.01%)</title><rect x="4.0675%" y="949" width="0.0110%" height="15" fill="rgb(253,106,12)" fg:x="28062698866" fg:w="75985212"/><text x="4.3175%" y="959.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (107,779,693 samples, 0.02%)</title><rect x="4.0658%" y="1125" width="0.0156%" height="15" fill="rgb(213,46,41)" fg:x="28051018759" fg:w="107779693"/><text x="4.3158%" y="1135.50"></text></g><g><title>&lt;std::path::PathBuf as core::clone::Clone&gt;::clone (96,099,586 samples, 0.01%)</title><rect x="4.0675%" y="1109" width="0.0139%" height="15" fill="rgb(215,133,35)" fg:x="28062698866" fg:w="96099586"/><text x="4.3175%" y="1119.50"></text></g><g><title>&lt;std::ffi::os_str::OsString as core::clone::Clone&gt;::clone (96,099,586 samples, 0.01%)</title><rect x="4.0675%" y="1093" width="0.0139%" height="15" fill="rgb(213,28,5)" fg:x="28062698866" fg:w="96099586"/><text x="4.3175%" y="1103.50"></text></g><g><title>&lt;std::sys::os_str::bytes::Buf as core::clone::Clone&gt;::clone (96,099,586 samples, 0.01%)</title><rect x="4.0675%" y="1077" width="0.0139%" height="15" fill="rgb(215,77,49)" fg:x="28062698866" fg:w="96099586"/><text x="4.3175%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (96,099,586 samples, 0.01%)</title><rect x="4.0675%" y="1061" width="0.0139%" height="15" fill="rgb(248,100,22)" fg:x="28062698866" fg:w="96099586"/><text x="4.3175%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (96,099,586 samples, 0.01%)</title><rect x="4.0675%" y="1045" width="0.0139%" height="15" fill="rgb(208,67,9)" fg:x="28062698866" fg:w="96099586"/><text x="4.3175%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (96,099,586 samples, 0.01%)</title><rect x="4.0675%" y="1029" width="0.0139%" height="15" fill="rgb(219,133,21)" fg:x="28062698866" fg:w="96099586"/><text x="4.3175%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (96,099,586 samples, 0.01%)</title><rect x="4.0675%" y="1013" width="0.0139%" height="15" fill="rgb(246,46,29)" fg:x="28062698866" fg:w="96099586"/><text x="4.3175%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (371,593,108 samples, 0.05%)</title><rect x="4.1361%" y="949" width="0.0539%" height="15" fill="rgb(246,185,52)" fg:x="28536222656" fg:w="371593108"/><text x="4.3861%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (371,593,108 samples, 0.05%)</title><rect x="4.1361%" y="933" width="0.0539%" height="15" fill="rgb(252,136,11)" fg:x="28536222656" fg:w="371593108"/><text x="4.3861%" y="943.50"></text></g><g><title>alloc::alloc::alloc (371,593,108 samples, 0.05%)</title><rect x="4.1361%" y="917" width="0.0539%" height="15" fill="rgb(219,138,53)" fg:x="28536222656" fg:w="371593108"/><text x="4.3861%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (746,897,524 samples, 0.11%)</title><rect x="4.1010%" y="1013" width="0.1083%" height="15" fill="rgb(211,51,23)" fg:x="28294048664" fg:w="746897524"/><text x="4.3510%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (746,897,524 samples, 0.11%)</title><rect x="4.1010%" y="997" width="0.1083%" height="15" fill="rgb(247,221,28)" fg:x="28294048664" fg:w="746897524"/><text x="4.3510%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (746,897,524 samples, 0.11%)</title><rect x="4.1010%" y="981" width="0.1083%" height="15" fill="rgb(251,222,45)" fg:x="28294048664" fg:w="746897524"/><text x="4.3510%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (746,897,524 samples, 0.11%)</title><rect x="4.1010%" y="965" width="0.1083%" height="15" fill="rgb(217,162,53)" fg:x="28294048664" fg:w="746897524"/><text x="4.3510%" y="975.50"></text></g><g><title>alloc::raw_vec::layout_array (133,130,424 samples, 0.02%)</title><rect x="4.1900%" y="949" width="0.0193%" height="15" fill="rgb(229,93,14)" fg:x="28907815764" fg:w="133130424"/><text x="4.4400%" y="959.50"></text></g><g><title>core::alloc::layout::Layout::repeat (133,130,424 samples, 0.02%)</title><rect x="4.1900%" y="933" width="0.0193%" height="15" fill="rgb(209,67,49)" fg:x="28907815764" fg:w="133130424"/><text x="4.4400%" y="943.50"></text></g><g><title>core::alloc::layout::Layout::repeat_packed (82,601,268 samples, 0.01%)</title><rect x="4.1973%" y="917" width="0.0120%" height="15" fill="rgb(213,87,29)" fg:x="28958344920" fg:w="82601268"/><text x="4.4473%" y="927.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (82,601,268 samples, 0.01%)</title><rect x="4.1973%" y="901" width="0.0120%" height="15" fill="rgb(205,151,52)" fg:x="28958344920" fg:w="82601268"/><text x="4.4473%" y="911.50"></text></g><g><title>core::intrinsics::unlikely (82,601,268 samples, 0.01%)</title><rect x="4.1973%" y="885" width="0.0120%" height="15" fill="rgb(253,215,39)" fg:x="28958344920" fg:w="82601268"/><text x="4.4473%" y="895.50"></text></g><g><title>&lt;std::path::PathBuf as core::clone::Clone&gt;::clone (1,132,182,892 samples, 0.16%)</title><rect x="4.0894%" y="1125" width="0.1641%" height="15" fill="rgb(221,220,41)" fg:x="28214150192" fg:w="1132182892"/><text x="4.3394%" y="1135.50"></text></g><g><title>&lt;std::ffi::os_str::OsString as core::clone::Clone&gt;::clone (1,132,182,892 samples, 0.16%)</title><rect x="4.0894%" y="1109" width="0.1641%" height="15" fill="rgb(218,133,21)" fg:x="28214150192" fg:w="1132182892"/><text x="4.3394%" y="1119.50"></text></g><g><title>&lt;std::sys::os_str::bytes::Buf as core::clone::Clone&gt;::clone (1,132,182,892 samples, 0.16%)</title><rect x="4.0894%" y="1093" width="0.1641%" height="15" fill="rgb(221,193,43)" fg:x="28214150192" fg:w="1132182892"/><text x="4.3394%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,132,182,892 samples, 0.16%)</title><rect x="4.0894%" y="1077" width="0.1641%" height="15" fill="rgb(240,128,52)" fg:x="28214150192" fg:w="1132182892"/><text x="4.3394%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,052,284,420 samples, 0.15%)</title><rect x="4.1010%" y="1061" width="0.1525%" height="15" fill="rgb(253,114,12)" fg:x="28294048664" fg:w="1052284420"/><text x="4.3510%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (1,052,284,420 samples, 0.15%)</title><rect x="4.1010%" y="1045" width="0.1525%" height="15" fill="rgb(215,223,47)" fg:x="28294048664" fg:w="1052284420"/><text x="4.3510%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,052,284,420 samples, 0.15%)</title><rect x="4.1010%" y="1029" width="0.1525%" height="15" fill="rgb(248,225,23)" fg:x="28294048664" fg:w="1052284420"/><text x="4.3510%" y="1039.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (305,386,896 samples, 0.04%)</title><rect x="4.2093%" y="1013" width="0.0443%" height="15" fill="rgb(250,108,0)" fg:x="29040946188" fg:w="305386896"/><text x="4.4593%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (305,386,896 samples, 0.04%)</title><rect x="4.2093%" y="997" width="0.0443%" height="15" fill="rgb(228,208,7)" fg:x="29040946188" fg:w="305386896"/><text x="4.4593%" y="1007.50"></text></g><g><title>&lt;std::path::PathBuf as core::ops::deref::Deref&gt;::deref (74,061,270 samples, 0.01%)</title><rect x="4.2536%" y="1125" width="0.0107%" height="15" fill="rgb(244,45,10)" fg:x="29346333084" fg:w="74061270"/><text x="4.5036%" y="1135.50"></text></g><g><title>std::path::Path::new (74,061,270 samples, 0.01%)</title><rect x="4.2536%" y="1109" width="0.0107%" height="15" fill="rgb(207,125,25)" fg:x="29346333084" fg:w="74061270"/><text x="4.5036%" y="1119.50"></text></g><g><title>&lt;std::ffi::os_str::OsString as core::convert::AsRef&lt;std::ffi::os_str::OsStr&gt;&gt;::as_ref (74,061,270 samples, 0.01%)</title><rect x="4.2536%" y="1093" width="0.0107%" height="15" fill="rgb(210,195,18)" fg:x="29346333084" fg:w="74061270"/><text x="4.5036%" y="1103.50"></text></g><g><title>&lt;std::ffi::os_str::OsString as core::ops::deref::Deref&gt;::deref (74,061,270 samples, 0.01%)</title><rect x="4.2536%" y="1077" width="0.0107%" height="15" fill="rgb(249,80,12)" fg:x="29346333084" fg:w="74061270"/><text x="4.5036%" y="1087.50"></text></g><g><title>&lt;std::ffi::os_str::OsString as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (74,061,270 samples, 0.01%)</title><rect x="4.2536%" y="1061" width="0.0107%" height="15" fill="rgb(221,65,9)" fg:x="29346333084" fg:w="74061270"/><text x="4.5036%" y="1071.50"></text></g><g><title>std::sys::os_str::bytes::Buf::as_slice (74,061,270 samples, 0.01%)</title><rect x="4.2536%" y="1045" width="0.0107%" height="15" fill="rgb(235,49,36)" fg:x="29346333084" fg:w="74061270"/><text x="4.5036%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (74,061,270 samples, 0.01%)</title><rect x="4.2536%" y="1029" width="0.0107%" height="15" fill="rgb(225,32,20)" fg:x="29346333084" fg:w="74061270"/><text x="4.5036%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (74,061,270 samples, 0.01%)</title><rect x="4.2536%" y="1013" width="0.0107%" height="15" fill="rgb(215,141,46)" fg:x="29346333084" fg:w="74061270"/><text x="4.5036%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (201,076,811 samples, 0.03%)</title><rect x="4.2643%" y="1125" width="0.0291%" height="15" fill="rgb(250,160,47)" fg:x="29420394354" fg:w="201076811"/><text x="4.5143%" y="1135.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (178,874,071 samples, 0.03%)</title><rect x="4.3042%" y="1125" width="0.0259%" height="15" fill="rgb(216,222,40)" fg:x="29695911593" fg:w="178874071"/><text x="4.5542%" y="1135.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (178,874,071 samples, 0.03%)</title><rect x="4.3042%" y="1109" width="0.0259%" height="15" fill="rgb(234,217,39)" fg:x="29695911593" fg:w="178874071"/><text x="4.5542%" y="1119.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (178,874,071 samples, 0.03%)</title><rect x="4.3042%" y="1093" width="0.0259%" height="15" fill="rgb(207,178,40)" fg:x="29695911593" fg:w="178874071"/><text x="4.5542%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (156,450,282 samples, 0.02%)</title><rect x="4.3075%" y="1077" width="0.0227%" height="15" fill="rgb(221,136,13)" fg:x="29718335382" fg:w="156450282"/><text x="4.5575%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (156,450,282 samples, 0.02%)</title><rect x="4.3075%" y="1061" width="0.0227%" height="15" fill="rgb(249,199,10)" fg:x="29718335382" fg:w="156450282"/><text x="4.5575%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (143,509,066 samples, 0.02%)</title><rect x="4.3093%" y="1045" width="0.0208%" height="15" fill="rgb(249,222,13)" fg:x="29731276598" fg:w="143509066"/><text x="4.5593%" y="1055.50"></text></g><g><title>llvm_profparser::coverage::CoverageMappingInfo::get_files_from_id (2,305,077,558 samples, 0.33%)</title><rect x="4.0019%" y="1141" width="0.3341%" height="15" fill="rgb(244,185,38)" fg:x="27609975594" fg:w="2305077558"/><text x="4.2519%" y="1151.50"></text></g><g><title>&lt;cargo_tarpaulin::statemachine::instrumented::LlvmInstrumentedData as cargo_tarpaulin::statemachine::StateData&gt;::wait::_{{closure}}::_{{closure}} (169,856,235 samples, 0.02%)</title><rect x="4.3702%" y="1093" width="0.0246%" height="15" fill="rgb(236,202,9)" fg:x="30150821781" fg:w="169856235"/><text x="4.6202%" y="1103.50"></text></g><g><title>std::path::Path::starts_with (169,856,235 samples, 0.02%)</title><rect x="4.3702%" y="1077" width="0.0246%" height="15" fill="rgb(250,229,37)" fg:x="30150821781" fg:w="169856235"/><text x="4.6202%" y="1087.50"></text></g><g><title>&lt;cargo_tarpaulin::statemachine::instrumented::LlvmInstrumentedData as cargo_tarpaulin::statemachine::StateData&gt;::wait::_{{closure}} (255,784,576 samples, 0.04%)</title><rect x="4.3625%" y="1125" width="0.0371%" height="15" fill="rgb(206,174,23)" fg:x="30097988969" fg:w="255784576"/><text x="4.6125%" y="1135.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (255,784,576 samples, 0.04%)</title><rect x="4.3625%" y="1109" width="0.0371%" height="15" fill="rgb(211,33,43)" fg:x="30097988969" fg:w="255784576"/><text x="4.6125%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;std::path::PathBuf&gt;&gt; (73,700,408 samples, 0.01%)</title><rect x="4.4127%" y="1125" width="0.0107%" height="15" fill="rgb(245,58,50)" fg:x="30444028693" fg:w="73700408"/><text x="4.6627%" y="1135.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::CoverageMapping::generate_subreport (714,165,849 samples, 0.10%)</title><rect x="4.3360%" y="1141" width="0.1035%" height="15" fill="rgb(244,68,36)" fg:x="29915053152" fg:w="714165849"/><text x="4.5860%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (76,691,854 samples, 0.01%)</title><rect x="4.4682%" y="1125" width="0.0111%" height="15" fill="rgb(232,229,15)" fg:x="30826986388" fg:w="76691854"/><text x="4.7182%" y="1135.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::CoverageMapping::get_simple_counters (345,610,554 samples, 0.05%)</title><rect x="4.4395%" y="1141" width="0.0501%" height="15" fill="rgb(254,30,23)" fg:x="30629219001" fg:w="345610554"/><text x="4.6895%" y="1151.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::parse_counter (251,285,269 samples, 0.04%)</title><rect x="4.4896%" y="1141" width="0.0364%" height="15" fill="rgb(235,160,14)" fg:x="30974829555" fg:w="251285269"/><text x="4.7396%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (74,167,408 samples, 0.01%)</title><rect x="4.5595%" y="1061" width="0.0108%" height="15" fill="rgb(212,155,44)" fg:x="31457111299" fg:w="74167408"/><text x="4.8095%" y="1071.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::parse_mapping_regions (231,262,868 samples, 0.03%)</title><rect x="4.5520%" y="1077" width="0.0335%" height="15" fill="rgb(226,2,50)" fg:x="31405178544" fg:w="231262868"/><text x="4.8020%" y="1087.50"></text></g><g><title>llvm_profparser::util::parse_leb128 (93,151,374 samples, 0.01%)</title><rect x="4.5720%" y="1061" width="0.0135%" height="15" fill="rgb(234,177,6)" fg:x="31543290038" fg:w="93151374"/><text x="4.8220%" y="1071.50"></text></g><g><title>leb128::read::unsigned (93,151,374 samples, 0.01%)</title><rect x="4.5720%" y="1045" width="0.0135%" height="15" fill="rgb(217,24,9)" fg:x="31543290038" fg:w="93151374"/><text x="4.8220%" y="1055.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::parse_coverage_functions (480,410,977 samples, 0.07%)</title><rect x="4.5260%" y="1093" width="0.0696%" height="15" fill="rgb(220,13,46)" fg:x="31226114824" fg:w="480410977"/><text x="4.7760%" y="1103.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::read_object_file (481,436,592 samples, 0.07%)</title><rect x="4.5260%" y="1141" width="0.0698%" height="15" fill="rgb(239,221,27)" fg:x="31226114824" fg:w="481436592"/><text x="4.7760%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (481,436,592 samples, 0.07%)</title><rect x="4.5260%" y="1125" width="0.0698%" height="15" fill="rgb(222,198,25)" fg:x="31226114824" fg:w="481436592"/><text x="4.7760%" y="1135.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::read_object_file::_{{closure}} (481,436,592 samples, 0.07%)</title><rect x="4.5260%" y="1109" width="0.0698%" height="15" fill="rgb(211,99,13)" fg:x="31226114824" fg:w="481436592"/><text x="4.7760%" y="1119.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (92,444,039 samples, 0.01%)</title><rect x="4.6178%" y="1013" width="0.0134%" height="15" fill="rgb(232,111,31)" fg:x="31859112173" fg:w="92444039"/><text x="4.8678%" y="1023.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (92,444,039 samples, 0.01%)</title><rect x="4.6178%" y="997" width="0.0134%" height="15" fill="rgb(245,82,37)" fg:x="31859112173" fg:w="92444039"/><text x="4.8678%" y="1007.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (72,482,284 samples, 0.01%)</title><rect x="4.6207%" y="981" width="0.0105%" height="15" fill="rgb(227,149,46)" fg:x="31879073928" fg:w="72482284"/><text x="4.8707%" y="991.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (72,482,284 samples, 0.01%)</title><rect x="4.6207%" y="965" width="0.0105%" height="15" fill="rgb(218,36,50)" fg:x="31879073928" fg:w="72482284"/><text x="4.8707%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (72,482,284 samples, 0.01%)</title><rect x="4.6207%" y="949" width="0.0105%" height="15" fill="rgb(226,80,48)" fg:x="31879073928" fg:w="72482284"/><text x="4.8707%" y="959.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (72,482,284 samples, 0.01%)</title><rect x="4.6207%" y="933" width="0.0105%" height="15" fill="rgb(238,224,15)" fg:x="31879073928" fg:w="72482284"/><text x="4.8707%" y="943.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (72,482,284 samples, 0.01%)</title><rect x="4.6207%" y="917" width="0.0105%" height="15" fill="rgb(241,136,10)" fg:x="31879073928" fg:w="72482284"/><text x="4.8707%" y="927.50"></text></g><g><title>llvm_profparser::instrumentation_profile::types::InstrumentationProfile::find_record_by_name (218,854,978 samples, 0.03%)</title><rect x="4.6011%" y="1141" width="0.0317%" height="15" fill="rgb(208,32,45)" fg:x="31743997889" fg:w="218854978"/><text x="4.8511%" y="1151.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (174,056,973 samples, 0.03%)</title><rect x="4.6076%" y="1125" width="0.0252%" height="15" fill="rgb(207,135,9)" fg:x="31788795894" fg:w="174056973"/><text x="4.8576%" y="1135.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (174,056,973 samples, 0.03%)</title><rect x="4.6076%" y="1109" width="0.0252%" height="15" fill="rgb(206,86,44)" fg:x="31788795894" fg:w="174056973"/><text x="4.8576%" y="1119.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (174,056,973 samples, 0.03%)</title><rect x="4.6076%" y="1093" width="0.0252%" height="15" fill="rgb(245,177,15)" fg:x="31788795894" fg:w="174056973"/><text x="4.8576%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (149,080,580 samples, 0.02%)</title><rect x="4.6112%" y="1077" width="0.0216%" height="15" fill="rgb(206,64,50)" fg:x="31813772287" fg:w="149080580"/><text x="4.8612%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (149,080,580 samples, 0.02%)</title><rect x="4.6112%" y="1061" width="0.0216%" height="15" fill="rgb(234,36,40)" fg:x="31813772287" fg:w="149080580"/><text x="4.8612%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (141,603,170 samples, 0.02%)</title><rect x="4.6123%" y="1045" width="0.0205%" height="15" fill="rgb(213,64,8)" fg:x="31821249697" fg:w="141603170"/><text x="4.8623%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (103,740,694 samples, 0.02%)</title><rect x="4.6178%" y="1029" width="0.0150%" height="15" fill="rgb(210,75,36)" fg:x="31859112173" fg:w="103740694"/><text x="4.8678%" y="1039.50"></text></g><g><title>md5::Context::consume (720,758,911 samples, 0.10%)</title><rect x="4.6891%" y="1093" width="0.1045%" height="15" fill="rgb(229,88,21)" fg:x="32351287234" fg:w="720758911"/><text x="4.9391%" y="1103.50"></text></g><g><title>llvm_profparser::instrumentation_profile::types::compute_hash (862,849,753 samples, 0.13%)</title><rect x="4.6795%" y="1125" width="0.1251%" height="15" fill="rgb(252,204,47)" fg:x="32285377841" fg:w="862849753"/><text x="4.9295%" y="1135.50"></text></g><g><title>md5::compute (857,125,384 samples, 0.12%)</title><rect x="4.6804%" y="1109" width="0.1242%" height="15" fill="rgb(208,77,27)" fg:x="32291102210" fg:w="857125384"/><text x="4.9304%" y="1119.50"></text></g><g><title>md5::Context::new (76,181,449 samples, 0.01%)</title><rect x="4.7936%" y="1093" width="0.0110%" height="15" fill="rgb(221,76,26)" fg:x="33072046145" fg:w="76181449"/><text x="5.0436%" y="1103.50"></text></g><g><title>llvm_profparser::instrumentation_profile::types::Symtab::add_func_name (1,190,151,206 samples, 0.17%)</title><rect x="4.6331%" y="1141" width="0.1725%" height="15" fill="rgb(225,139,18)" fg:x="31964944441" fg:w="1190151206"/><text x="4.8831%" y="1151.50"></text></g><g><title>malloc (558,248,651 samples, 0.08%)</title><rect x="4.8082%" y="1141" width="0.0809%" height="15" fill="rgb(230,137,11)" fg:x="33172919633" fg:w="558248651"/><text x="5.0582%" y="1151.50"></text></g><g><title>md5::Context::compute (158,579,027 samples, 0.02%)</title><rect x="4.8891%" y="1141" width="0.0230%" height="15" fill="rgb(212,28,1)" fg:x="33731168284" fg:w="158579027"/><text x="5.1391%" y="1151.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,096,778,863 samples, 0.30%)</title><rect x="5.8522%" y="1125" width="0.3039%" height="15" fill="rgb(248,164,17)" fg:x="40375601188" fg:w="2096778863"/><text x="6.1022%" y="1135.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2,096,778,863 samples, 0.30%)</title><rect x="5.8522%" y="1109" width="0.3039%" height="15" fill="rgb(222,171,42)" fg:x="40375601188" fg:w="2096778863"/><text x="6.1022%" y="1119.50"></text></g><g><title>md5::consume (8,585,775,610 samples, 1.24%)</title><rect x="4.9121%" y="1141" width="1.2444%" height="15" fill="rgb(243,84,45)" fg:x="33889747311" fg:w="8585775610"/><text x="5.1621%" y="1151.50"></text></g><g><title>md5::transform (8,247,559,645 samples, 1.20%)</title><rect x="6.1565%" y="1141" width="1.1954%" height="15" fill="rgb(252,49,23)" fg:x="42475522921" fg:w="8247559645"/><text x="6.4065%" y="1151.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (3,562,548,319 samples, 0.52%)</title><rect x="6.8356%" y="1125" width="0.5164%" height="15" fill="rgb(215,19,7)" fg:x="47160534247" fg:w="3562548319"/><text x="7.0856%" y="1135.50"></text></g><g><title>miniz_oxide::inflate::core::apply_match (98,285,890 samples, 0.01%)</title><rect x="7.3528%" y="1141" width="0.0142%" height="15" fill="rgb(238,81,41)" fg:x="50728857000" fg:w="98285890"/><text x="7.6028%" y="1151.50"></text></g><g><title>miniz_oxide::inflate::core::decompress_fast (173,499,527 samples, 0.03%)</title><rect x="7.3731%" y="1125" width="0.0251%" height="15" fill="rgb(210,199,37)" fg:x="50868589011" fg:w="173499527"/><text x="7.6231%" y="1135.50"></text></g><g><title>miniz_oxide::inflate::core::decompress (229,117,391 samples, 0.03%)</title><rect x="7.3670%" y="1141" width="0.0332%" height="15" fill="rgb(244,192,49)" fg:x="50827142890" fg:w="229117391"/><text x="7.6170%" y="1151.50"></text></g><g><title>nom::number::streaming::le_u16 (130,070,374 samples, 0.02%)</title><rect x="7.4160%" y="1141" width="0.0189%" height="15" fill="rgb(226,211,11)" fg:x="51164896816" fg:w="130070374"/><text x="7.6660%" y="1151.50"></text></g><g><title>nom::number::streaming::le_u32 (143,713,057 samples, 0.02%)</title><rect x="7.4349%" y="1141" width="0.0208%" height="15" fill="rgb(236,162,54)" fg:x="51294967190" fg:w="143713057"/><text x="7.6849%" y="1151.50"></text></g><g><title>nom::number::streaming::le_u64 (160,181,379 samples, 0.02%)</title><rect x="7.4557%" y="1141" width="0.0232%" height="15" fill="rgb(220,229,9)" fg:x="51438680247" fg:w="160181379"/><text x="7.7057%" y="1151.50"></text></g><g><title>std::path::Path::components (755,017,055 samples, 0.11%)</title><rect x="7.5270%" y="1141" width="0.1094%" height="15" fill="rgb(250,87,22)" fg:x="51930772970" fg:w="755017055"/><text x="7.7770%" y="1151.50"></text></g><g><title>std::path::compare_components (271,607,131 samples, 0.04%)</title><rect x="7.6462%" y="1141" width="0.0394%" height="15" fill="rgb(239,43,17)" fg:x="52752784950" fg:w="271607131"/><text x="7.8962%" y="1151.50"></text></g><g><title>unlink_chunk.isra.0 (211,678,582 samples, 0.03%)</title><rect x="7.7620%" y="1141" width="0.0307%" height="15" fill="rgb(231,177,25)" fg:x="53552066441" fg:w="211678582"/><text x="8.0120%" y="1151.50"></text></g><g><title>[unknown] (40,117,951,108 samples, 5.81%)</title><rect x="1.9782%" y="1157" width="5.8148%" height="15" fill="rgb(219,179,1)" fg:x="13648039208" fg:w="40117951108"/><text x="2.2282%" y="1167.50">[unknow..</text></g><g><title>read_block_for_search (117,448,422 samples, 0.02%)</title><rect x="7.8436%" y="645" width="0.0170%" height="15" fill="rgb(238,219,53)" fg:x="54115017443" fg:w="117448422"/><text x="8.0936%" y="655.50"></text></g><g><title>btrfs_search_slot (219,380,211 samples, 0.03%)</title><rect x="7.8306%" y="661" width="0.0318%" height="15" fill="rgb(232,167,36)" fg:x="54025304161" fg:w="219380211"/><text x="8.0806%" y="671.50"></text></g><g><title>btrfs_real_readdir (441,127,916 samples, 0.06%)</title><rect x="7.8049%" y="677" width="0.0639%" height="15" fill="rgb(244,19,51)" fg:x="53848282347" fg:w="441127916"/><text x="8.0549%" y="687.50"></text></g><g><title>iterate_dir (460,923,907 samples, 0.07%)</title><rect x="7.8043%" y="693" width="0.0668%" height="15" fill="rgb(224,6,22)" fg:x="53843796787" fg:w="460923907"/><text x="8.0543%" y="703.50"></text></g><g><title>__x64_sys_getdents64 (471,986,134 samples, 0.07%)</title><rect x="7.8030%" y="709" width="0.0684%" height="15" fill="rgb(224,145,5)" fg:x="53834858427" fg:w="471986134"/><text x="8.0530%" y="719.50"></text></g><g><title>__GI___readdir64 (486,041,909 samples, 0.07%)</title><rect x="7.8011%" y="773" width="0.0704%" height="15" fill="rgb(234,130,49)" fg:x="53821872183" fg:w="486041909"/><text x="8.0511%" y="783.50"></text></g><g><title>__GI___getdents64 (477,290,766 samples, 0.07%)</title><rect x="7.8024%" y="757" width="0.0692%" height="15" fill="rgb(254,6,2)" fg:x="53830623326" fg:w="477290766"/><text x="8.0524%" y="767.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (473,055,665 samples, 0.07%)</title><rect x="7.8030%" y="741" width="0.0686%" height="15" fill="rgb(208,96,46)" fg:x="53834858427" fg:w="473055665"/><text x="8.0530%" y="751.50"></text></g><g><title>do_syscall_64 (473,055,665 samples, 0.07%)</title><rect x="7.8030%" y="725" width="0.0686%" height="15" fill="rgb(239,3,39)" fg:x="53834858427" fg:w="473055665"/><text x="8.0530%" y="735.50"></text></g><g><title>&lt;std::sys::pal::unix::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (506,274,410 samples, 0.07%)</title><rect x="7.7996%" y="789" width="0.0734%" height="15" fill="rgb(233,210,1)" fg:x="53811689136" fg:w="506274410"/><text x="8.0496%" y="799.50"></text></g><g><title>&lt;std::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (510,790,770 samples, 0.07%)</title><rect x="7.7991%" y="805" width="0.0740%" height="15" fill="rgb(244,137,37)" fg:x="53808293646" fg:w="510790770"/><text x="8.0491%" y="815.50"></text></g><g><title>&lt;walkdir::DirList as core::iter::traits::iterator::Iterator&gt;::next (528,564,396 samples, 0.08%)</title><rect x="7.7991%" y="821" width="0.0766%" height="15" fill="rgb(240,136,2)" fg:x="53808293646" fg:w="528564396"/><text x="8.0491%" y="831.50"></text></g><g><title>&lt;std::sys::pal::unix::fs::Dir as core::ops::drop::Drop&gt;::drop (70,845,695 samples, 0.01%)</title><rect x="7.8767%" y="661" width="0.0103%" height="15" fill="rgb(239,18,37)" fg:x="54343618911" fg:w="70845695"/><text x="8.1267%" y="671.50"></text></g><g><title>__close_nocancel (69,722,896 samples, 0.01%)</title><rect x="7.8769%" y="645" width="0.0101%" height="15" fill="rgb(218,185,22)" fg:x="54344741710" fg:w="69722896"/><text x="8.1269%" y="655.50"></text></g><g><title>&lt;walkdir::IntoIter as core::iter::traits::iterator::Iterator&gt;::next (607,289,823 samples, 0.09%)</title><rect x="7.7991%" y="837" width="0.0880%" height="15" fill="rgb(225,218,4)" fg:x="53808293646" fg:w="607289823"/><text x="8.0491%" y="847.50"></text></g><g><title>walkdir::IntoIter::pop (78,725,427 samples, 0.01%)</title><rect x="7.8758%" y="821" width="0.0114%" height="15" fill="rgb(230,182,32)" fg:x="54336858042" fg:w="78725427"/><text x="8.1258%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;walkdir::DirList&gt; (78,725,427 samples, 0.01%)</title><rect x="7.8758%" y="805" width="0.0114%" height="15" fill="rgb(242,56,43)" fg:x="54336858042" fg:w="78725427"/><text x="8.1258%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;std::fs::ReadDir,core::option::Option&lt;walkdir::error::Error&gt;&gt;&gt; (78,725,427 samples, 0.01%)</title><rect x="7.8758%" y="789" width="0.0114%" height="15" fill="rgb(233,99,24)" fg:x="54336858042" fg:w="78725427"/><text x="8.1258%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::fs::ReadDir&gt; (78,725,427 samples, 0.01%)</title><rect x="7.8758%" y="773" width="0.0114%" height="15" fill="rgb(234,209,42)" fg:x="54336858042" fg:w="78725427"/><text x="8.1258%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::pal::unix::fs::ReadDir&gt; (78,725,427 samples, 0.01%)</title><rect x="7.8758%" y="757" width="0.0114%" height="15" fill="rgb(227,7,12)" fg:x="54336858042" fg:w="78725427"/><text x="8.1258%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sys::pal::unix::fs::InnerReadDir&gt;&gt; (78,725,427 samples, 0.01%)</title><rect x="7.8758%" y="741" width="0.0114%" height="15" fill="rgb(245,203,43)" fg:x="54336858042" fg:w="78725427"/><text x="8.1258%" y="751.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (78,725,427 samples, 0.01%)</title><rect x="7.8758%" y="725" width="0.0114%" height="15" fill="rgb(238,205,33)" fg:x="54336858042" fg:w="78725427"/><text x="8.1258%" y="735.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (77,600,924 samples, 0.01%)</title><rect x="7.8759%" y="709" width="0.0112%" height="15" fill="rgb(231,56,7)" fg:x="54337982545" fg:w="77600924"/><text x="8.1259%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::pal::unix::fs::InnerReadDir&gt; (77,600,924 samples, 0.01%)</title><rect x="7.8759%" y="693" width="0.0112%" height="15" fill="rgb(244,186,29)" fg:x="54337982545" fg:w="77600924"/><text x="8.1259%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::pal::unix::fs::Dir&gt; (73,101,780 samples, 0.01%)</title><rect x="7.8766%" y="677" width="0.0106%" height="15" fill="rgb(234,111,31)" fg:x="54342481689" fg:w="73101780"/><text x="8.1266%" y="687.50"></text></g><g><title>cargo_tarpaulin::path_utils::is_target_folder (71,103,874 samples, 0.01%)</title><rect x="7.8954%" y="805" width="0.0103%" height="15" fill="rgb(241,149,10)" fg:x="54472327225" fg:w="71103874"/><text x="8.1454%" y="815.50"></text></g><g><title>std::path::Path::starts_with (71,103,874 samples, 0.01%)</title><rect x="7.8954%" y="789" width="0.0103%" height="15" fill="rgb(249,206,44)" fg:x="54472327225" fg:w="71103874"/><text x="8.1454%" y="799.50"></text></g><g><title>std::path::Path::_starts_with (69,961,272 samples, 0.01%)</title><rect x="7.8956%" y="773" width="0.0101%" height="15" fill="rgb(251,153,30)" fg:x="54473469827" fg:w="69961272"/><text x="8.1456%" y="783.50"></text></g><g><title>std::path::iter_after (69,961,272 samples, 0.01%)</title><rect x="7.8956%" y="757" width="0.0101%" height="15" fill="rgb(239,152,38)" fg:x="54473469827" fg:w="69961272"/><text x="8.1456%" y="767.50"></text></g><g><title>&lt;walkdir::FilterEntry&lt;walkdir::IntoIter,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (800,380,462 samples, 0.12%)</title><rect x="7.7991%" y="853" width="0.1160%" height="15" fill="rgb(249,139,47)" fg:x="53808293646" fg:w="800380462"/><text x="8.0491%" y="863.50"></text></g><g><title>cargo_tarpaulin::path_utils::get_source_walker::_{{closure}} (193,090,639 samples, 0.03%)</title><rect x="7.8872%" y="837" width="0.0280%" height="15" fill="rgb(244,64,35)" fg:x="54415583469" fg:w="193090639"/><text x="8.1372%" y="847.50"></text></g><g><title>cargo_tarpaulin::path_utils::is_coverable_file_path (193,090,639 samples, 0.03%)</title><rect x="7.8872%" y="821" width="0.0280%" height="15" fill="rgb(216,46,15)" fg:x="54415583469" fg:w="193090639"/><text x="8.1372%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (882,464,731 samples, 0.13%)</title><rect x="7.7991%" y="949" width="0.1279%" height="15" fill="rgb(250,74,19)" fg:x="53808293646" fg:w="882464731"/><text x="8.0491%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (882,464,731 samples, 0.13%)</title><rect x="7.7991%" y="933" width="0.1279%" height="15" fill="rgb(249,42,33)" fg:x="53808293646" fg:w="882464731"/><text x="8.0491%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (882,464,731 samples, 0.13%)</title><rect x="7.7991%" y="917" width="0.1279%" height="15" fill="rgb(242,149,17)" fg:x="53808293646" fg:w="882464731"/><text x="8.0491%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (882,464,731 samples, 0.13%)</title><rect x="7.7991%" y="901" width="0.1279%" height="15" fill="rgb(244,29,21)" fg:x="53808293646" fg:w="882464731"/><text x="8.0491%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (882,464,731 samples, 0.13%)</title><rect x="7.7991%" y="885" width="0.1279%" height="15" fill="rgb(220,130,37)" fg:x="53808293646" fg:w="882464731"/><text x="8.0491%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (882,464,731 samples, 0.13%)</title><rect x="7.7991%" y="869" width="0.1279%" height="15" fill="rgb(211,67,2)" fg:x="53808293646" fg:w="882464731"/><text x="8.0491%" y="879.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_try_fold::_{{closure}} (82,084,269 samples, 0.01%)</title><rect x="7.9152%" y="853" width="0.0119%" height="15" fill="rgb(235,68,52)" fg:x="54608674108" fg:w="82084269"/><text x="8.1652%" y="863.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (82,084,269 samples, 0.01%)</title><rect x="7.9152%" y="837" width="0.0119%" height="15" fill="rgb(246,142,3)" fg:x="54608674108" fg:w="82084269"/><text x="8.1652%" y="847.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (105,973,820 samples, 0.02%)</title><rect x="7.9271%" y="933" width="0.0154%" height="15" fill="rgb(241,25,7)" fg:x="54690758377" fg:w="105973820"/><text x="8.1771%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (105,973,820 samples, 0.02%)</title><rect x="7.9271%" y="917" width="0.0154%" height="15" fill="rgb(242,119,39)" fg:x="54690758377" fg:w="105973820"/><text x="8.1771%" y="927.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (105,973,820 samples, 0.02%)</title><rect x="7.9271%" y="901" width="0.0154%" height="15" fill="rgb(241,98,45)" fg:x="54690758377" fg:w="105973820"/><text x="8.1771%" y="911.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (105,973,820 samples, 0.02%)</title><rect x="7.9271%" y="885" width="0.0154%" height="15" fill="rgb(254,28,30)" fg:x="54690758377" fg:w="105973820"/><text x="8.1771%" y="895.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (105,973,820 samples, 0.02%)</title><rect x="7.9271%" y="869" width="0.0154%" height="15" fill="rgb(241,142,54)" fg:x="54690758377" fg:w="105973820"/><text x="8.1771%" y="879.50"></text></g><g><title>&lt;std::path::PathBuf as core::cmp::Ord&gt;::cmp (105,973,820 samples, 0.02%)</title><rect x="7.9271%" y="853" width="0.0154%" height="15" fill="rgb(222,85,15)" fg:x="54690758377" fg:w="105973820"/><text x="8.1771%" y="863.50"></text></g><g><title>cargo_tarpaulin::traces::TraceMap::add_trace (118,250,945 samples, 0.02%)</title><rect x="7.9271%" y="949" width="0.0171%" height="15" fill="rgb(210,85,47)" fg:x="54690758377" fg:w="118250945"/><text x="8.1771%" y="959.50"></text></g><g><title>&lt;T as core::slice::sort::shared::smallsort::UnstableSmallSortTypeImpl&gt;::small_sort (103,317,927 samples, 0.01%)</title><rect x="7.9442%" y="853" width="0.0150%" height="15" fill="rgb(224,206,25)" fg:x="54809009322" fg:w="103317927"/><text x="8.1942%" y="863.50"></text></g><g><title>&lt;T as core::slice::sort::shared::smallsort::UnstableSmallSortFreezeTypeImpl&gt;::small_sort (103,317,927 samples, 0.01%)</title><rect x="7.9442%" y="837" width="0.0150%" height="15" fill="rgb(243,201,19)" fg:x="54809009322" fg:w="103317927"/><text x="8.1942%" y="847.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_fallback (103,317,927 samples, 0.01%)</title><rect x="7.9442%" y="821" width="0.0150%" height="15" fill="rgb(236,59,4)" fg:x="54809009322" fg:w="103317927"/><text x="8.1942%" y="831.50"></text></g><g><title>core::slice::sort::shared::smallsort::insertion_sort_shift_left (103,317,927 samples, 0.01%)</title><rect x="7.9442%" y="805" width="0.0150%" height="15" fill="rgb(254,179,45)" fg:x="54809009322" fg:w="103317927"/><text x="8.1942%" y="815.50"></text></g><g><title>core::slice::sort::shared::smallsort::insert_tail (96,677,678 samples, 0.01%)</title><rect x="7.9452%" y="789" width="0.0140%" height="15" fill="rgb(226,14,10)" fg:x="54815649571" fg:w="96677678"/><text x="8.1952%" y="799.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (164,629,308 samples, 0.02%)</title><rect x="7.9442%" y="949" width="0.0239%" height="15" fill="rgb(244,27,41)" fg:x="54809009322" fg:w="164629308"/><text x="8.1942%" y="959.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (164,629,308 samples, 0.02%)</title><rect x="7.9442%" y="933" width="0.0239%" height="15" fill="rgb(235,35,32)" fg:x="54809009322" fg:w="164629308"/><text x="8.1942%" y="943.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (164,629,308 samples, 0.02%)</title><rect x="7.9442%" y="917" width="0.0239%" height="15" fill="rgb(218,68,31)" fg:x="54809009322" fg:w="164629308"/><text x="8.1942%" y="927.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (164,629,308 samples, 0.02%)</title><rect x="7.9442%" y="901" width="0.0239%" height="15" fill="rgb(207,120,37)" fg:x="54809009322" fg:w="164629308"/><text x="8.1942%" y="911.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (164,629,308 samples, 0.02%)</title><rect x="7.9442%" y="885" width="0.0239%" height="15" fill="rgb(227,98,0)" fg:x="54809009322" fg:w="164629308"/><text x="8.1942%" y="895.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (164,629,308 samples, 0.02%)</title><rect x="7.9442%" y="869" width="0.0239%" height="15" fill="rgb(207,7,3)" fg:x="54809009322" fg:w="164629308"/><text x="8.1942%" y="879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (86,572,443 samples, 0.01%)</title><rect x="7.9883%" y="821" width="0.0125%" height="15" fill="rgb(206,98,19)" fg:x="55113530354" fg:w="86572443"/><text x="8.2383%" y="831.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (232,845,696 samples, 0.03%)</title><rect x="7.9682%" y="853" width="0.0337%" height="15" fill="rgb(217,5,26)" fg:x="54974664397" fg:w="232845696"/><text x="8.2182%" y="863.50"></text></g><g><title>std::path::Components::parse_next_component (102,947,650 samples, 0.01%)</title><rect x="7.9870%" y="837" width="0.0149%" height="15" fill="rgb(235,190,38)" fg:x="55104562443" fg:w="102947650"/><text x="8.2370%" y="847.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (452,862,684 samples, 0.07%)</title><rect x="7.9682%" y="917" width="0.0656%" height="15" fill="rgb(247,86,24)" fg:x="54974664397" fg:w="452862684"/><text x="8.2182%" y="927.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (452,862,684 samples, 0.07%)</title><rect x="7.9682%" y="901" width="0.0656%" height="15" fill="rgb(205,101,16)" fg:x="54974664397" fg:w="452862684"/><text x="8.2182%" y="911.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (452,862,684 samples, 0.07%)</title><rect x="7.9682%" y="885" width="0.0656%" height="15" fill="rgb(246,168,33)" fg:x="54974664397" fg:w="452862684"/><text x="8.2182%" y="895.50"></text></g><g><title>&lt;std::path::PathBuf as core::cmp::Ord&gt;::cmp (452,862,684 samples, 0.07%)</title><rect x="7.9682%" y="869" width="0.0656%" height="15" fill="rgb(231,114,1)" fg:x="54974664397" fg:w="452862684"/><text x="8.2182%" y="879.50"></text></g><g><title>std::path::compare_components (174,512,138 samples, 0.03%)</title><rect x="8.0085%" y="853" width="0.0253%" height="15" fill="rgb(207,184,53)" fg:x="55253014943" fg:w="174512138"/><text x="8.2585%" y="863.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (116,677,536 samples, 0.02%)</title><rect x="8.0393%" y="757" width="0.0169%" height="15" fill="rgb(224,95,51)" fg:x="55465505128" fg:w="116677536"/><text x="8.2893%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (75,717,629 samples, 0.01%)</title><rect x="8.0644%" y="741" width="0.0110%" height="15" fill="rgb(212,188,45)" fg:x="55638178343" fg:w="75717629"/><text x="8.3144%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (75,717,629 samples, 0.01%)</title><rect x="8.0644%" y="725" width="0.0110%" height="15" fill="rgb(223,154,38)" fg:x="55638178343" fg:w="75717629"/><text x="8.3144%" y="735.50"></text></g><g><title>cfree@GLIBC_2.2.5 (254,731,856 samples, 0.04%)</title><rect x="8.0392%" y="773" width="0.0369%" height="15" fill="rgb(251,22,52)" fg:x="55464439509" fg:w="254731856"/><text x="8.2892%" y="783.50"></text></g><g><title>std::path::compare_components (117,654,230 samples, 0.02%)</title><rect x="8.0591%" y="757" width="0.0171%" height="15" fill="rgb(229,209,22)" fg:x="55601517135" fg:w="117654230"/><text x="8.3091%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (790,919,845 samples, 0.11%)</title><rect x="7.9682%" y="933" width="0.1146%" height="15" fill="rgb(234,138,34)" fg:x="54974664397" fg:w="790919845"/><text x="8.2182%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::path::PathBuf&gt; (338,057,161 samples, 0.05%)</title><rect x="8.0338%" y="917" width="0.0490%" height="15" fill="rgb(212,95,11)" fg:x="55427527081" fg:w="338057161"/><text x="8.2838%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::ffi::os_str::OsString&gt; (338,057,161 samples, 0.05%)</title><rect x="8.0338%" y="901" width="0.0490%" height="15" fill="rgb(240,179,47)" fg:x="55427527081" fg:w="338057161"/><text x="8.2838%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::os_str::bytes::Buf&gt; (338,057,161 samples, 0.05%)</title><rect x="8.0338%" y="885" width="0.0490%" height="15" fill="rgb(240,163,11)" fg:x="55427527081" fg:w="338057161"/><text x="8.2838%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (338,057,161 samples, 0.05%)</title><rect x="8.0338%" y="869" width="0.0490%" height="15" fill="rgb(236,37,12)" fg:x="55427527081" fg:w="338057161"/><text x="8.2838%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (338,057,161 samples, 0.05%)</title><rect x="8.0338%" y="853" width="0.0490%" height="15" fill="rgb(232,164,16)" fg:x="55427527081" fg:w="338057161"/><text x="8.2838%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (338,057,161 samples, 0.05%)</title><rect x="8.0338%" y="837" width="0.0490%" height="15" fill="rgb(244,205,15)" fg:x="55427527081" fg:w="338057161"/><text x="8.2838%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (338,057,161 samples, 0.05%)</title><rect x="8.0338%" y="821" width="0.0490%" height="15" fill="rgb(223,117,47)" fg:x="55427527081" fg:w="338057161"/><text x="8.2838%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (338,057,161 samples, 0.05%)</title><rect x="8.0338%" y="805" width="0.0490%" height="15" fill="rgb(244,107,35)" fg:x="55427527081" fg:w="338057161"/><text x="8.2838%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (338,057,161 samples, 0.05%)</title><rect x="8.0338%" y="789" width="0.0490%" height="15" fill="rgb(205,140,8)" fg:x="55427527081" fg:w="338057161"/><text x="8.2838%" y="799.50"></text></g><g><title>malloc_consolidate (285,189,810 samples, 0.04%)</title><rect x="8.1222%" y="789" width="0.0413%" height="15" fill="rgb(228,84,46)" fg:x="56037477349" fg:w="285189810"/><text x="8.3722%" y="799.50"></text></g><g><title>malloc_consolidate (614,427,214 samples, 0.09%)</title><rect x="8.0965%" y="805" width="0.0891%" height="15" fill="rgb(254,188,9)" fg:x="55859663480" fg:w="614427214"/><text x="8.3465%" y="815.50"></text></g><g><title>unlink_chunk.isra.0 (151,423,535 samples, 0.02%)</title><rect x="8.1636%" y="789" width="0.0219%" height="15" fill="rgb(206,112,54)" fg:x="56322667159" fg:w="151423535"/><text x="8.4136%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;std::path::PathBuf&gt;&gt; (747,382,328 samples, 0.11%)</title><rect x="8.0844%" y="933" width="0.1083%" height="15" fill="rgb(216,84,49)" fg:x="55776419683" fg:w="747382328"/><text x="8.3344%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;std::path::PathBuf&gt;&gt; (736,444,434 samples, 0.11%)</title><rect x="8.0860%" y="917" width="0.1067%" height="15" fill="rgb(214,194,35)" fg:x="55787357577" fg:w="736444434"/><text x="8.3360%" y="927.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (736,444,434 samples, 0.11%)</title><rect x="8.0860%" y="901" width="0.1067%" height="15" fill="rgb(249,28,3)" fg:x="55787357577" fg:w="736444434"/><text x="8.3360%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (736,444,434 samples, 0.11%)</title><rect x="8.0860%" y="885" width="0.1067%" height="15" fill="rgb(222,56,52)" fg:x="55787357577" fg:w="736444434"/><text x="8.3360%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (736,444,434 samples, 0.11%)</title><rect x="8.0860%" y="869" width="0.1067%" height="15" fill="rgb(245,217,50)" fg:x="55787357577" fg:w="736444434"/><text x="8.3360%" y="879.50"></text></g><g><title>alloc::alloc::dealloc (736,444,434 samples, 0.11%)</title><rect x="8.0860%" y="853" width="0.1067%" height="15" fill="rgb(213,201,24)" fg:x="55787357577" fg:w="736444434"/><text x="8.3360%" y="863.50"></text></g><g><title>cfree@GLIBC_2.2.5 (736,444,434 samples, 0.11%)</title><rect x="8.0860%" y="837" width="0.1067%" height="15" fill="rgb(248,116,28)" fg:x="55787357577" fg:w="736444434"/><text x="8.3360%" y="847.50"></text></g><g><title>_int_free_maybe_consolidate.part.0 (736,444,434 samples, 0.11%)</title><rect x="8.0860%" y="821" width="0.1067%" height="15" fill="rgb(219,72,43)" fg:x="55787357577" fg:w="736444434"/><text x="8.3360%" y="831.50"></text></g><g><title>_int_malloc (237,409,051 samples, 0.03%)</title><rect x="8.2956%" y="661" width="0.0344%" height="15" fill="rgb(209,138,14)" fg:x="57233367817" fg:w="237409051"/><text x="8.5456%" y="671.50"></text></g><g><title>_int_malloc (990,167,141 samples, 0.14%)</title><rect x="8.1991%" y="677" width="0.1435%" height="15" fill="rgb(222,18,33)" fg:x="56567899751" fg:w="990167141"/><text x="8.4491%" y="687.50"></text></g><g><title>malloc (181,450,818 samples, 0.03%)</title><rect x="8.3441%" y="677" width="0.0263%" height="15" fill="rgb(213,199,7)" fg:x="57567959947" fg:w="181450818"/><text x="8.5941%" y="687.50"></text></g><g><title>&lt;std::path::PathBuf as core::clone::Clone&gt;::clone (1,277,159,518 samples, 0.19%)</title><rect x="8.1927%" y="917" width="0.1851%" height="15" fill="rgb(250,110,10)" fg:x="56523802011" fg:w="1277159518"/><text x="8.4427%" y="927.50"></text></g><g><title>&lt;std::ffi::os_str::OsString as core::clone::Clone&gt;::clone (1,277,159,518 samples, 0.19%)</title><rect x="8.1927%" y="901" width="0.1851%" height="15" fill="rgb(248,123,6)" fg:x="56523802011" fg:w="1277159518"/><text x="8.4427%" y="911.50"></text></g><g><title>&lt;std::sys::os_str::bytes::Buf as core::clone::Clone&gt;::clone (1,277,159,518 samples, 0.19%)</title><rect x="8.1927%" y="885" width="0.1851%" height="15" fill="rgb(206,91,31)" fg:x="56523802011" fg:w="1277159518"/><text x="8.4427%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,277,159,518 samples, 0.19%)</title><rect x="8.1927%" y="869" width="0.1851%" height="15" fill="rgb(211,154,13)" fg:x="56523802011" fg:w="1277159518"/><text x="8.4427%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,277,159,518 samples, 0.19%)</title><rect x="8.1927%" y="853" width="0.1851%" height="15" fill="rgb(225,148,7)" fg:x="56523802011" fg:w="1277159518"/><text x="8.4427%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (1,277,159,518 samples, 0.19%)</title><rect x="8.1927%" y="837" width="0.1851%" height="15" fill="rgb(220,160,43)" fg:x="56523802011" fg:w="1277159518"/><text x="8.4427%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,277,159,518 samples, 0.19%)</title><rect x="8.1927%" y="821" width="0.1851%" height="15" fill="rgb(213,52,39)" fg:x="56523802011" fg:w="1277159518"/><text x="8.4427%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,277,159,518 samples, 0.19%)</title><rect x="8.1927%" y="805" width="0.1851%" height="15" fill="rgb(243,137,7)" fg:x="56523802011" fg:w="1277159518"/><text x="8.4427%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,277,159,518 samples, 0.19%)</title><rect x="8.1927%" y="789" width="0.1851%" height="15" fill="rgb(230,79,13)" fg:x="56523802011" fg:w="1277159518"/><text x="8.4427%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,277,159,518 samples, 0.19%)</title><rect x="8.1927%" y="773" width="0.1851%" height="15" fill="rgb(247,105,23)" fg:x="56523802011" fg:w="1277159518"/><text x="8.4427%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,277,159,518 samples, 0.19%)</title><rect x="8.1927%" y="757" width="0.1851%" height="15" fill="rgb(223,179,41)" fg:x="56523802011" fg:w="1277159518"/><text x="8.4427%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,277,159,518 samples, 0.19%)</title><rect x="8.1927%" y="741" width="0.1851%" height="15" fill="rgb(218,9,34)" fg:x="56523802011" fg:w="1277159518"/><text x="8.4427%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,277,159,518 samples, 0.19%)</title><rect x="8.1927%" y="725" width="0.1851%" height="15" fill="rgb(222,106,8)" fg:x="56523802011" fg:w="1277159518"/><text x="8.4427%" y="735.50"></text></g><g><title>alloc::alloc::alloc (1,277,159,518 samples, 0.19%)</title><rect x="8.1927%" y="709" width="0.1851%" height="15" fill="rgb(211,220,0)" fg:x="56523802011" fg:w="1277159518"/><text x="8.4427%" y="719.50"></text></g><g><title>malloc (1,277,159,518 samples, 0.19%)</title><rect x="8.1927%" y="693" width="0.1851%" height="15" fill="rgb(229,52,16)" fg:x="56523802011" fg:w="1277159518"/><text x="8.4427%" y="703.50"></text></g><g><title>malloc (82,992,326 samples, 0.01%)</title><rect x="8.3902%" y="837" width="0.0120%" height="15" fill="rgb(212,155,18)" fg:x="57885828933" fg:w="82992326"/><text x="8.6402%" y="847.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h4813e28088395dc8E.llvm.6412023112901746188 (188,396,841 samples, 0.03%)</title><rect x="8.3779%" y="853" width="0.0273%" height="15" fill="rgb(242,21,14)" fg:x="57800961529" fg:w="188396841"/><text x="8.6279%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (246,131,566 samples, 0.04%)</title><rect x="8.3779%" y="901" width="0.0357%" height="15" fill="rgb(222,19,48)" fg:x="57800961529" fg:w="246131566"/><text x="8.6279%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (246,131,566 samples, 0.04%)</title><rect x="8.3779%" y="885" width="0.0357%" height="15" fill="rgb(232,45,27)" fg:x="57800961529" fg:w="246131566"/><text x="8.6279%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (246,131,566 samples, 0.04%)</title><rect x="8.3779%" y="869" width="0.0357%" height="15" fill="rgb(249,103,42)" fg:x="57800961529" fg:w="246131566"/><text x="8.6279%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (247,139,270 samples, 0.04%)</title><rect x="8.3779%" y="917" width="0.0358%" height="15" fill="rgb(246,81,33)" fg:x="57800961529" fg:w="247139270"/><text x="8.6279%" y="927.50"></text></g><g><title>malloc (254,613,970 samples, 0.04%)</title><rect x="8.4164%" y="741" width="0.0369%" height="15" fill="rgb(252,33,42)" fg:x="58067103400" fg:w="254613970"/><text x="8.6664%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;std::path::PathBuf&gt;&gt; (297,115,386 samples, 0.04%)</title><rect x="8.4137%" y="917" width="0.0431%" height="15" fill="rgb(209,212,41)" fg:x="58048100799" fg:w="297115386"/><text x="8.6637%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::path::PathBuf&gt; (297,115,386 samples, 0.04%)</title><rect x="8.4137%" y="901" width="0.0431%" height="15" fill="rgb(207,154,6)" fg:x="58048100799" fg:w="297115386"/><text x="8.6637%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::ffi::os_str::OsString&gt; (297,115,386 samples, 0.04%)</title><rect x="8.4137%" y="885" width="0.0431%" height="15" fill="rgb(223,64,47)" fg:x="58048100799" fg:w="297115386"/><text x="8.6637%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::os_str::bytes::Buf&gt; (297,115,386 samples, 0.04%)</title><rect x="8.4137%" y="869" width="0.0431%" height="15" fill="rgb(211,161,38)" fg:x="58048100799" fg:w="297115386"/><text x="8.6637%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (297,115,386 samples, 0.04%)</title><rect x="8.4137%" y="853" width="0.0431%" height="15" fill="rgb(219,138,40)" fg:x="58048100799" fg:w="297115386"/><text x="8.6637%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (297,115,386 samples, 0.04%)</title><rect x="8.4137%" y="837" width="0.0431%" height="15" fill="rgb(241,228,46)" fg:x="58048100799" fg:w="297115386"/><text x="8.6637%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (297,115,386 samples, 0.04%)</title><rect x="8.4137%" y="821" width="0.0431%" height="15" fill="rgb(223,209,38)" fg:x="58048100799" fg:w="297115386"/><text x="8.6637%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (297,115,386 samples, 0.04%)</title><rect x="8.4137%" y="805" width="0.0431%" height="15" fill="rgb(236,164,45)" fg:x="58048100799" fg:w="297115386"/><text x="8.6637%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (297,115,386 samples, 0.04%)</title><rect x="8.4137%" y="789" width="0.0431%" height="15" fill="rgb(231,15,5)" fg:x="58048100799" fg:w="297115386"/><text x="8.6637%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (297,115,386 samples, 0.04%)</title><rect x="8.4137%" y="773" width="0.0431%" height="15" fill="rgb(252,35,15)" fg:x="58048100799" fg:w="297115386"/><text x="8.6637%" y="783.50"></text></g><g><title>cfree@GLIBC_2.2.5 (297,115,386 samples, 0.04%)</title><rect x="8.4137%" y="757" width="0.0431%" height="15" fill="rgb(248,181,18)" fg:x="58048100799" fg:w="297115386"/><text x="8.6637%" y="767.50"></text></g><g><title>std::path::Path::to_path_buf (171,957,351 samples, 0.02%)</title><rect x="8.4602%" y="885" width="0.0249%" height="15" fill="rgb(233,39,42)" fg:x="58368806445" fg:w="171957351"/><text x="8.7102%" y="895.50"></text></g><g><title>std::ffi::os_str::OsStr::to_os_string (171,957,351 samples, 0.02%)</title><rect x="8.4602%" y="869" width="0.0249%" height="15" fill="rgb(238,110,33)" fg:x="58368806445" fg:w="171957351"/><text x="8.7102%" y="879.50"></text></g><g><title>std::sys::os_str::bytes::Slice::to_owned (171,957,351 samples, 0.02%)</title><rect x="8.4602%" y="853" width="0.0249%" height="15" fill="rgb(233,195,10)" fg:x="58368806445" fg:w="171957351"/><text x="8.7102%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (171,957,351 samples, 0.02%)</title><rect x="8.4602%" y="837" width="0.0249%" height="15" fill="rgb(254,105,3)" fg:x="58368806445" fg:w="171957351"/><text x="8.7102%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (171,957,351 samples, 0.02%)</title><rect x="8.4602%" y="821" width="0.0249%" height="15" fill="rgb(221,225,9)" fg:x="58368806445" fg:w="171957351"/><text x="8.7102%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (171,957,351 samples, 0.02%)</title><rect x="8.4602%" y="805" width="0.0249%" height="15" fill="rgb(224,227,45)" fg:x="58368806445" fg:w="171957351"/><text x="8.7102%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (171,957,351 samples, 0.02%)</title><rect x="8.4602%" y="789" width="0.0249%" height="15" fill="rgb(229,198,43)" fg:x="58368806445" fg:w="171957351"/><text x="8.7102%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (171,957,351 samples, 0.02%)</title><rect x="8.4602%" y="773" width="0.0249%" height="15" fill="rgb(206,209,35)" fg:x="58368806445" fg:w="171957351"/><text x="8.7102%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (171,957,351 samples, 0.02%)</title><rect x="8.4602%" y="757" width="0.0249%" height="15" fill="rgb(245,195,53)" fg:x="58368806445" fg:w="171957351"/><text x="8.7102%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (171,957,351 samples, 0.02%)</title><rect x="8.4602%" y="741" width="0.0249%" height="15" fill="rgb(240,92,26)" fg:x="58368806445" fg:w="171957351"/><text x="8.7102%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (171,957,351 samples, 0.02%)</title><rect x="8.4602%" y="725" width="0.0249%" height="15" fill="rgb(207,40,23)" fg:x="58368806445" fg:w="171957351"/><text x="8.7102%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (171,957,351 samples, 0.02%)</title><rect x="8.4602%" y="709" width="0.0249%" height="15" fill="rgb(223,111,35)" fg:x="58368806445" fg:w="171957351"/><text x="8.7102%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (171,957,351 samples, 0.02%)</title><rect x="8.4602%" y="693" width="0.0249%" height="15" fill="rgb(229,147,28)" fg:x="58368806445" fg:w="171957351"/><text x="8.7102%" y="703.50"></text></g><g><title>alloc::alloc::alloc (171,957,351 samples, 0.02%)</title><rect x="8.4602%" y="677" width="0.0249%" height="15" fill="rgb(211,29,28)" fg:x="58368806445" fg:w="171957351"/><text x="8.7102%" y="687.50"></text></g><g><title>alloc::raw_vec::layout_array (69,560,163 samples, 0.01%)</title><rect x="8.5331%" y="661" width="0.0101%" height="15" fill="rgb(228,72,33)" fg:x="58871874481" fg:w="69560163"/><text x="8.7831%" y="671.50"></text></g><g><title>core::alloc::layout::Layout::repeat (69,560,163 samples, 0.01%)</title><rect x="8.5331%" y="645" width="0.0101%" height="15" fill="rgb(205,214,31)" fg:x="58871874481" fg:w="69560163"/><text x="8.7831%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (214,777,960 samples, 0.03%)</title><rect x="8.5200%" y="693" width="0.0311%" height="15" fill="rgb(224,111,15)" fg:x="58781406845" fg:w="214777960"/><text x="8.7700%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (205,894,526 samples, 0.03%)</title><rect x="8.5213%" y="677" width="0.0298%" height="15" fill="rgb(253,21,26)" fg:x="58790290279" fg:w="205894526"/><text x="8.7713%" y="687.50"></text></g><g><title>std::path::Path::_join (185,767,028 samples, 0.03%)</title><rect x="8.5724%" y="693" width="0.0269%" height="15" fill="rgb(245,139,43)" fg:x="59143014597" fg:w="185767028"/><text x="8.8224%" y="703.50"></text></g><g><title>std::path::PathBuf::push (130,314,024 samples, 0.02%)</title><rect x="8.5804%" y="677" width="0.0189%" height="15" fill="rgb(252,170,7)" fg:x="59198467601" fg:w="130314024"/><text x="8.8304%" y="687.50"></text></g><g><title>std::path::PathBuf::_push (130,314,024 samples, 0.02%)</title><rect x="8.5804%" y="661" width="0.0189%" height="15" fill="rgb(231,118,14)" fg:x="59198467601" fg:w="130314024"/><text x="8.8304%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (695,400,698 samples, 0.10%)</title><rect x="8.4990%" y="725" width="0.1008%" height="15" fill="rgb(238,83,0)" fg:x="58636669457" fg:w="695400698"/><text x="8.7490%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (694,258,036 samples, 0.10%)</title><rect x="8.4991%" y="709" width="0.1006%" height="15" fill="rgb(221,39,39)" fg:x="58637812119" fg:w="694258036"/><text x="8.7491%" y="719.50"></text></g><g><title>llvm_profparser::coverage::CoverageMappingInfo::get_files_from_id (2,968,357,311 samples, 0.43%)</title><rect x="8.1927%" y="933" width="0.4302%" height="15" fill="rgb(222,119,46)" fg:x="56523802011" fg:w="2968357311"/><text x="8.4427%" y="943.50"></text></g><g><title>std::path::Path::join (1,123,352,877 samples, 0.16%)</title><rect x="8.4602%" y="917" width="0.1628%" height="15" fill="rgb(222,165,49)" fg:x="58368806445" fg:w="1123352877"/><text x="8.7102%" y="927.50"></text></g><g><title>std::path::Path::_join (1,123,352,877 samples, 0.16%)</title><rect x="8.4602%" y="901" width="0.1628%" height="15" fill="rgb(219,113,52)" fg:x="58368806445" fg:w="1123352877"/><text x="8.7102%" y="911.50"></text></g><g><title>std::path::PathBuf::push (951,395,526 samples, 0.14%)</title><rect x="8.4851%" y="885" width="0.1379%" height="15" fill="rgb(214,7,15)" fg:x="58540763796" fg:w="951395526"/><text x="8.7351%" y="895.50"></text></g><g><title>std::path::PathBuf::_push (951,395,526 samples, 0.14%)</title><rect x="8.4851%" y="869" width="0.1379%" height="15" fill="rgb(235,32,4)" fg:x="58540763796" fg:w="951395526"/><text x="8.7351%" y="879.50"></text></g><g><title>std::ffi::os_str::OsString::push (951,395,526 samples, 0.14%)</title><rect x="8.4851%" y="853" width="0.1379%" height="15" fill="rgb(238,90,54)" fg:x="58540763796" fg:w="951395526"/><text x="8.7351%" y="863.50"></text></g><g><title>std::sys::os_str::bytes::Buf::push_slice (951,395,526 samples, 0.14%)</title><rect x="8.4851%" y="837" width="0.1379%" height="15" fill="rgb(213,208,19)" fg:x="58540763796" fg:w="951395526"/><text x="8.7351%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (951,395,526 samples, 0.14%)</title><rect x="8.4851%" y="821" width="0.1379%" height="15" fill="rgb(233,156,4)" fg:x="58540763796" fg:w="951395526"/><text x="8.7351%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (951,395,526 samples, 0.14%)</title><rect x="8.4851%" y="805" width="0.1379%" height="15" fill="rgb(207,194,5)" fg:x="58540763796" fg:w="951395526"/><text x="8.7351%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (951,395,526 samples, 0.14%)</title><rect x="8.4851%" y="789" width="0.1379%" height="15" fill="rgb(206,111,30)" fg:x="58540763796" fg:w="951395526"/><text x="8.7351%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (951,395,526 samples, 0.14%)</title><rect x="8.4851%" y="773" width="0.1379%" height="15" fill="rgb(243,70,54)" fg:x="58540763796" fg:w="951395526"/><text x="8.7351%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (951,395,526 samples, 0.14%)</title><rect x="8.4851%" y="757" width="0.1379%" height="15" fill="rgb(242,28,8)" fg:x="58540763796" fg:w="951395526"/><text x="8.7351%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (951,395,526 samples, 0.14%)</title><rect x="8.4851%" y="741" width="0.1379%" height="15" fill="rgb(219,106,18)" fg:x="58540763796" fg:w="951395526"/><text x="8.7351%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (92,025,903 samples, 0.01%)</title><rect x="8.6260%" y="821" width="0.0133%" height="15" fill="rgb(244,222,10)" fg:x="59512875469" fg:w="92025903"/><text x="8.8760%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (92,025,903 samples, 0.01%)</title><rect x="8.6260%" y="805" width="0.0133%" height="15" fill="rgb(236,179,52)" fg:x="59512875469" fg:w="92025903"/><text x="8.8760%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (314,460,518 samples, 0.05%)</title><rect x="8.6230%" y="837" width="0.0456%" height="15" fill="rgb(213,23,39)" fg:x="59492159322" fg:w="314460518"/><text x="8.8730%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (145,345,662 samples, 0.02%)</title><rect x="8.6475%" y="821" width="0.0211%" height="15" fill="rgb(238,48,10)" fg:x="59661274178" fg:w="145345662"/><text x="8.8975%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner::record_item_insert_at (95,258,440 samples, 0.01%)</title><rect x="8.6548%" y="805" width="0.0138%" height="15" fill="rgb(251,196,23)" fg:x="59711361400" fg:w="95258440"/><text x="8.9048%" y="815.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::CoverageMapping::get_simple_counters (606,173,813 samples, 0.09%)</title><rect x="8.6230%" y="933" width="0.0879%" height="15" fill="rgb(250,152,24)" fg:x="59492159322" fg:w="606173813"/><text x="8.8730%" y="943.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (606,173,813 samples, 0.09%)</title><rect x="8.6230%" y="917" width="0.0879%" height="15" fill="rgb(209,150,17)" fg:x="59492159322" fg:w="606173813"/><text x="8.8730%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (606,173,813 samples, 0.09%)</title><rect x="8.6230%" y="901" width="0.0879%" height="15" fill="rgb(234,202,34)" fg:x="59492159322" fg:w="606173813"/><text x="8.8730%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (606,173,813 samples, 0.09%)</title><rect x="8.6230%" y="885" width="0.0879%" height="15" fill="rgb(253,148,53)" fg:x="59492159322" fg:w="606173813"/><text x="8.8730%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (606,173,813 samples, 0.09%)</title><rect x="8.6230%" y="869" width="0.0879%" height="15" fill="rgb(218,129,16)" fg:x="59492159322" fg:w="606173813"/><text x="8.8730%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (606,173,813 samples, 0.09%)</title><rect x="8.6230%" y="853" width="0.0879%" height="15" fill="rgb(216,85,19)" fg:x="59492159322" fg:w="606173813"/><text x="8.8730%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (291,713,295 samples, 0.04%)</title><rect x="8.6686%" y="837" width="0.0423%" height="15" fill="rgb(235,228,7)" fg:x="59806619840" fg:w="291713295"/><text x="8.9186%" y="847.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::CoverageMapping::generate_subreport (5,138,934,702 samples, 0.74%)</title><rect x="7.9681%" y="949" width="0.7449%" height="15" fill="rgb(245,175,0)" fg:x="54973638630" fg:w="5138934702"/><text x="8.2181%" y="959.50"></text></g><g><title>cargo_tarpaulin::process_handling::collect_coverage (6,305,403,369 samples, 0.91%)</title><rect x="7.7991%" y="1013" width="0.9139%" height="15" fill="rgb(208,168,36)" fg:x="53808293646" fg:w="6305403369"/><text x="8.0491%" y="1023.50"></text></g><g><title>cargo_tarpaulin::statemachine::TestState::step (6,305,403,369 samples, 0.91%)</title><rect x="7.7991%" y="997" width="0.9139%" height="15" fill="rgb(246,171,24)" fg:x="53808293646" fg:w="6305403369"/><text x="8.0491%" y="1007.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn cargo_tarpaulin::statemachine::StateData&gt; as cargo_tarpaulin::statemachine::StateData&gt;::wait (6,305,403,369 samples, 0.91%)</title><rect x="7.7991%" y="981" width="0.9139%" height="15" fill="rgb(215,142,24)" fg:x="53808293646" fg:w="6305403369"/><text x="8.0491%" y="991.50"></text></g><g><title>&lt;cargo_tarpaulin::statemachine::instrumented::LlvmInstrumentedData as cargo_tarpaulin::statemachine::StateData&gt;::wait (6,305,403,369 samples, 0.91%)</title><rect x="7.7991%" y="965" width="0.9139%" height="15" fill="rgb(250,187,7)" fg:x="53808293646" fg:w="6305403369"/><text x="8.0491%" y="975.50"></text></g><g><title>cargo_tarpaulin::process_handling::get_test_coverage (6,306,300,423 samples, 0.91%)</title><rect x="7.7991%" y="1029" width="0.9141%" height="15" fill="rgb(228,66,33)" fg:x="53808293646" fg:w="6306300423"/><text x="8.0491%" y="1039.50"></text></g><g><title>cargo_tarpaulin::collect_tracemap (6,388,410,256 samples, 0.93%)</title><rect x="7.7991%" y="1077" width="0.9260%" height="15" fill="rgb(234,215,21)" fg:x="53808293646" fg:w="6388410256"/><text x="8.0491%" y="1087.50"></text></g><g><title>cargo_tarpaulin::trace (6,388,410,256 samples, 0.93%)</title><rect x="7.7991%" y="1061" width="0.9260%" height="15" fill="rgb(222,191,20)" fg:x="53808293646" fg:w="6388410256"/><text x="8.0491%" y="1071.50"></text></g><g><title>cargo_tarpaulin::launch_tarpaulin (6,388,410,256 samples, 0.93%)</title><rect x="7.7991%" y="1045" width="0.9260%" height="15" fill="rgb(245,79,54)" fg:x="53808293646" fg:w="6388410256"/><text x="8.0491%" y="1055.50"></text></g><g><title>cargo_tarpaulin::source_analysis::SourceAnalysis::get_analysis (82,109,833 samples, 0.01%)</title><rect x="8.7132%" y="1029" width="0.0119%" height="15" fill="rgb(240,10,37)" fg:x="60114594069" fg:w="82109833"/><text x="8.9632%" y="1039.50"></text></g><g><title>cargo_tarpaulin::source_analysis::SourceAnalysis::analyse_package (82,109,833 samples, 0.01%)</title><rect x="8.7132%" y="1013" width="0.0119%" height="15" fill="rgb(214,192,32)" fg:x="60114594069" fg:w="82109833"/><text x="8.9632%" y="1023.50"></text></g><g><title>_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h05240483b460bc9eE.llvm.17468850352284423155 (6,390,553,217 samples, 0.93%)</title><rect x="7.7991%" y="1157" width="0.9263%" height="15" fill="rgb(209,36,54)" fg:x="53808293646" fg:w="6390553217"/><text x="8.0491%" y="1167.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (6,390,553,217 samples, 0.93%)</title><rect x="7.7991%" y="1141" width="0.9263%" height="15" fill="rgb(220,10,11)" fg:x="53808293646" fg:w="6390553217"/><text x="8.0491%" y="1151.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6,390,553,217 samples, 0.93%)</title><rect x="7.7991%" y="1125" width="0.9263%" height="15" fill="rgb(221,106,17)" fg:x="53808293646" fg:w="6390553217"/><text x="8.0491%" y="1135.50"></text></g><g><title>cargo_tarpaulin::main (6,390,553,217 samples, 0.93%)</title><rect x="7.7991%" y="1109" width="0.9263%" height="15" fill="rgb(251,142,44)" fg:x="53808293646" fg:w="6390553217"/><text x="8.0491%" y="1119.50"></text></g><g><title>cargo_tarpaulin::run (6,390,553,217 samples, 0.93%)</title><rect x="7.7991%" y="1093" width="0.9263%" height="15" fill="rgb(238,13,15)" fg:x="53808293646" fg:w="6390553217"/><text x="8.0491%" y="1103.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h4813e28088395dc8E.llvm.6412023112901746188 (159,894,891 samples, 0.02%)</title><rect x="8.7692%" y="1157" width="0.0232%" height="15" fill="rgb(208,107,27)" fg:x="60500951535" fg:w="159894891"/><text x="9.0192%" y="1167.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (100,338,107 samples, 0.01%)</title><rect x="8.8557%" y="1125" width="0.0145%" height="15" fill="rgb(205,136,37)" fg:x="61097490659" fg:w="100338107"/><text x="9.1057%" y="1135.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (229,030,506 samples, 0.03%)</title><rect x="8.8439%" y="1141" width="0.0332%" height="15" fill="rgb(250,205,27)" fg:x="61016289265" fg:w="229030506"/><text x="9.0939%" y="1151.50"></text></g><g><title>core::hash::sip::u8to64_le (126,123,899 samples, 0.02%)</title><rect x="8.8771%" y="1141" width="0.0183%" height="15" fill="rgb(210,80,43)" fg:x="61245319771" fg:w="126123899"/><text x="9.1271%" y="1151.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h72fe1e565e64b81dE.llvm.12888435030010135765 (679,905,495 samples, 0.10%)</title><rect x="8.7980%" y="1157" width="0.0985%" height="15" fill="rgb(247,160,36)" fg:x="60699412241" fg:w="679905495"/><text x="9.0480%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;llvm_profparser::coverage::FunctionRecordV3&gt;&gt; (89,638,435 samples, 0.01%)</title><rect x="8.9152%" y="693" width="0.0130%" height="15" fill="rgb(234,13,49)" fg:x="61508104504" fg:w="89638435"/><text x="9.1652%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (89,638,435 samples, 0.01%)</title><rect x="8.9152%" y="677" width="0.0130%" height="15" fill="rgb(234,122,0)" fg:x="61508104504" fg:w="89638435"/><text x="9.1652%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[llvm_profparser::coverage::FunctionRecordV3]&gt; (89,638,435 samples, 0.01%)</title><rect x="8.9152%" y="661" width="0.0130%" height="15" fill="rgb(207,146,38)" fg:x="61508104504" fg:w="89638435"/><text x="9.1652%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;llvm_profparser::coverage::FunctionRecordV3&gt; (89,638,435 samples, 0.01%)</title><rect x="8.9152%" y="645" width="0.0130%" height="15" fill="rgb(207,177,25)" fg:x="61508104504" fg:w="89638435"/><text x="9.1652%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;llvm_profparser::coverage::coverage_mapping::CoverageMapping&gt; (110,112,574 samples, 0.02%)</title><rect x="8.9152%" y="773" width="0.0160%" height="15" fill="rgb(211,178,42)" fg:x="61508104504" fg:w="110112574"/><text x="9.1652%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;llvm_profparser::coverage::CoverageMappingInfo&gt;&gt; (110,112,574 samples, 0.02%)</title><rect x="8.9152%" y="757" width="0.0160%" height="15" fill="rgb(230,69,54)" fg:x="61508104504" fg:w="110112574"/><text x="9.1652%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (110,112,574 samples, 0.02%)</title><rect x="8.9152%" y="741" width="0.0160%" height="15" fill="rgb(214,135,41)" fg:x="61508104504" fg:w="110112574"/><text x="9.1652%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[llvm_profparser::coverage::CoverageMappingInfo]&gt; (110,112,574 samples, 0.02%)</title><rect x="8.9152%" y="725" width="0.0160%" height="15" fill="rgb(237,67,25)" fg:x="61508104504" fg:w="110112574"/><text x="9.1652%" y="735.50"></text></g><g><title>_ZN4core3ptr67drop_in_place$LT$llvm_profparser..coverage..CoverageMappingInfo$GT$17h54504ed87c29848dE.llvm.10117868062062457895 (110,112,574 samples, 0.02%)</title><rect x="8.9152%" y="709" width="0.0160%" height="15" fill="rgb(222,189,50)" fg:x="61508104504" fg:w="110112574"/><text x="9.1652%" y="719.50"></text></g><g><title>malloc_consolidate (101,666,445 samples, 0.01%)</title><rect x="8.9383%" y="533" width="0.0147%" height="15" fill="rgb(245,148,34)" fg:x="61667674962" fg:w="101666445"/><text x="9.1883%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (110,965,270 samples, 0.02%)</title><rect x="8.9383%" y="693" width="0.0161%" height="15" fill="rgb(222,29,6)" fg:x="61667674962" fg:w="110965270"/><text x="9.1883%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (110,965,270 samples, 0.02%)</title><rect x="8.9383%" y="677" width="0.0161%" height="15" fill="rgb(221,189,43)" fg:x="61667674962" fg:w="110965270"/><text x="9.1883%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (110,965,270 samples, 0.02%)</title><rect x="8.9383%" y="661" width="0.0161%" height="15" fill="rgb(207,36,27)" fg:x="61667674962" fg:w="110965270"/><text x="9.1883%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (110,965,270 samples, 0.02%)</title><rect x="8.9383%" y="645" width="0.0161%" height="15" fill="rgb(217,90,24)" fg:x="61667674962" fg:w="110965270"/><text x="9.1883%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (110,965,270 samples, 0.02%)</title><rect x="8.9383%" y="629" width="0.0161%" height="15" fill="rgb(224,66,35)" fg:x="61667674962" fg:w="110965270"/><text x="9.1883%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (110,965,270 samples, 0.02%)</title><rect x="8.9383%" y="613" width="0.0161%" height="15" fill="rgb(221,13,50)" fg:x="61667674962" fg:w="110965270"/><text x="9.1883%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (110,965,270 samples, 0.02%)</title><rect x="8.9383%" y="597" width="0.0161%" height="15" fill="rgb(236,68,49)" fg:x="61667674962" fg:w="110965270"/><text x="9.1883%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (110,965,270 samples, 0.02%)</title><rect x="8.9383%" y="581" width="0.0161%" height="15" fill="rgb(229,146,28)" fg:x="61667674962" fg:w="110965270"/><text x="9.1883%" y="591.50"></text></g><g><title>cfree@GLIBC_2.2.5 (110,965,270 samples, 0.02%)</title><rect x="8.9383%" y="565" width="0.0161%" height="15" fill="rgb(225,31,38)" fg:x="61667674962" fg:w="110965270"/><text x="9.1883%" y="575.50"></text></g><g><title>_int_free_maybe_consolidate.part.0 (110,965,270 samples, 0.02%)</title><rect x="8.9383%" y="549" width="0.0161%" height="15" fill="rgb(250,208,3)" fg:x="61667674962" fg:w="110965270"/><text x="9.1883%" y="559.50"></text></g><g><title>malloc_consolidate (151,348,687 samples, 0.02%)</title><rect x="8.9544%" y="549" width="0.0219%" height="15" fill="rgb(246,54,23)" fg:x="61778640232" fg:w="151348687"/><text x="9.2044%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (280,245,714 samples, 0.04%)</title><rect x="8.9383%" y="741" width="0.0406%" height="15" fill="rgb(243,76,11)" fg:x="61667674962" fg:w="280245714"/><text x="9.1883%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[llvm_profparser::instrumentation_profile::types::NamedInstrProfRecord]&gt; (280,245,714 samples, 0.04%)</title><rect x="8.9383%" y="725" width="0.0406%" height="15" fill="rgb(245,21,50)" fg:x="61667674962" fg:w="280245714"/><text x="9.1883%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;llvm_profparser::instrumentation_profile::types::NamedInstrProfRecord&gt; (280,245,714 samples, 0.04%)</title><rect x="8.9383%" y="709" width="0.0406%" height="15" fill="rgb(228,9,43)" fg:x="61667674962" fg:w="280245714"/><text x="9.1883%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;llvm_profparser::instrumentation_profile::types::InstrProfRecord&gt; (169,280,444 samples, 0.02%)</title><rect x="8.9544%" y="693" width="0.0245%" height="15" fill="rgb(208,100,47)" fg:x="61778640232" fg:w="169280444"/><text x="9.2044%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u64&gt;&gt; (169,280,444 samples, 0.02%)</title><rect x="8.9544%" y="677" width="0.0245%" height="15" fill="rgb(232,26,8)" fg:x="61778640232" fg:w="169280444"/><text x="9.2044%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u64&gt;&gt; (169,280,444 samples, 0.02%)</title><rect x="8.9544%" y="661" width="0.0245%" height="15" fill="rgb(216,166,38)" fg:x="61778640232" fg:w="169280444"/><text x="9.2044%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (169,280,444 samples, 0.02%)</title><rect x="8.9544%" y="645" width="0.0245%" height="15" fill="rgb(251,202,51)" fg:x="61778640232" fg:w="169280444"/><text x="9.2044%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (169,280,444 samples, 0.02%)</title><rect x="8.9544%" y="629" width="0.0245%" height="15" fill="rgb(254,216,34)" fg:x="61778640232" fg:w="169280444"/><text x="9.2044%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (169,280,444 samples, 0.02%)</title><rect x="8.9544%" y="613" width="0.0245%" height="15" fill="rgb(251,32,27)" fg:x="61778640232" fg:w="169280444"/><text x="9.2044%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (169,280,444 samples, 0.02%)</title><rect x="8.9544%" y="597" width="0.0245%" height="15" fill="rgb(208,127,28)" fg:x="61778640232" fg:w="169280444"/><text x="9.2044%" y="607.50"></text></g><g><title>cfree@GLIBC_2.2.5 (169,280,444 samples, 0.02%)</title><rect x="8.9544%" y="581" width="0.0245%" height="15" fill="rgb(224,137,22)" fg:x="61778640232" fg:w="169280444"/><text x="9.2044%" y="591.50"></text></g><g><title>_int_free_maybe_consolidate.part.0 (169,280,444 samples, 0.02%)</title><rect x="8.9544%" y="565" width="0.0245%" height="15" fill="rgb(254,70,32)" fg:x="61778640232" fg:w="169280444"/><text x="9.2044%" y="575.50"></text></g><g><title>malloc_consolidate (278,262,801 samples, 0.04%)</title><rect x="8.9789%" y="629" width="0.0403%" height="15" fill="rgb(229,75,37)" fg:x="61947920676" fg:w="278262801"/><text x="9.2289%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;llvm_profparser::instrumentation_profile::types::NamedInstrProfRecord&gt;&gt; (565,928,789 samples, 0.08%)</title><rect x="8.9383%" y="757" width="0.0820%" height="15" fill="rgb(252,64,23)" fg:x="61667674962" fg:w="565928789"/><text x="9.1883%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;llvm_profparser::instrumentation_profile::types::NamedInstrProfRecord&gt;&gt; (285,683,075 samples, 0.04%)</title><rect x="8.9789%" y="741" width="0.0414%" height="15" fill="rgb(232,162,48)" fg:x="61947920676" fg:w="285683075"/><text x="9.2289%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (285,683,075 samples, 0.04%)</title><rect x="8.9789%" y="725" width="0.0414%" height="15" fill="rgb(246,160,12)" fg:x="61947920676" fg:w="285683075"/><text x="9.2289%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (285,683,075 samples, 0.04%)</title><rect x="8.9789%" y="709" width="0.0414%" height="15" fill="rgb(247,166,0)" fg:x="61947920676" fg:w="285683075"/><text x="9.2289%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (285,683,075 samples, 0.04%)</title><rect x="8.9789%" y="693" width="0.0414%" height="15" fill="rgb(249,219,21)" fg:x="61947920676" fg:w="285683075"/><text x="9.2289%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (285,683,075 samples, 0.04%)</title><rect x="8.9789%" y="677" width="0.0414%" height="15" fill="rgb(205,209,3)" fg:x="61947920676" fg:w="285683075"/><text x="9.2289%" y="687.50"></text></g><g><title>cfree@GLIBC_2.2.5 (285,683,075 samples, 0.04%)</title><rect x="8.9789%" y="661" width="0.0414%" height="15" fill="rgb(243,44,1)" fg:x="61947920676" fg:w="285683075"/><text x="9.2289%" y="671.50"></text></g><g><title>_int_free_maybe_consolidate.part.0 (285,683,075 samples, 0.04%)</title><rect x="8.9789%" y="645" width="0.0414%" height="15" fill="rgb(206,159,16)" fg:x="61947920676" fg:w="285683075"/><text x="9.2289%" y="655.50"></text></g><g><title>malloc_consolidate (138,763,820 samples, 0.02%)</title><rect x="9.0459%" y="437" width="0.0201%" height="15" fill="rgb(244,77,30)" fg:x="62410171687" fg:w="138763820"/><text x="9.2959%" y="447.50"></text></g><g><title>malloc_consolidate (329,815,366 samples, 0.05%)</title><rect x="9.0224%" y="453" width="0.0478%" height="15" fill="rgb(218,69,12)" fg:x="62247708351" fg:w="329815366"/><text x="9.2724%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;llvm_profparser::instrumentation_profile::types::Symtab&gt; (370,199,607 samples, 0.05%)</title><rect x="9.0203%" y="757" width="0.0537%" height="15" fill="rgb(212,87,7)" fg:x="62233603751" fg:w="370199607"/><text x="9.2703%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u64,alloc::string::String,core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;&gt; (370,199,607 samples, 0.05%)</title><rect x="9.0203%" y="741" width="0.0537%" height="15" fill="rgb(245,114,25)" fg:x="62233603751" fg:w="370199607"/><text x="9.2703%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u64,alloc::string::String,core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;&gt; (370,199,607 samples, 0.05%)</title><rect x="9.0203%" y="725" width="0.0537%" height="15" fill="rgb(210,61,42)" fg:x="62233603751" fg:w="370199607"/><text x="9.2703%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u64,alloc::string::String)&gt;&gt; (370,199,607 samples, 0.05%)</title><rect x="9.0203%" y="709" width="0.0537%" height="15" fill="rgb(211,52,33)" fg:x="62233603751" fg:w="370199607"/><text x="9.2703%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (370,199,607 samples, 0.05%)</title><rect x="9.0203%" y="693" width="0.0537%" height="15" fill="rgb(234,58,33)" fg:x="62233603751" fg:w="370199607"/><text x="9.2703%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (370,199,607 samples, 0.05%)</title><rect x="9.0203%" y="677" width="0.0537%" height="15" fill="rgb(220,115,36)" fg:x="62233603751" fg:w="370199607"/><text x="9.2703%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (370,199,607 samples, 0.05%)</title><rect x="9.0203%" y="661" width="0.0537%" height="15" fill="rgb(243,153,54)" fg:x="62233603751" fg:w="370199607"/><text x="9.2703%" y="671.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (370,199,607 samples, 0.05%)</title><rect x="9.0203%" y="645" width="0.0537%" height="15" fill="rgb(251,47,18)" fg:x="62233603751" fg:w="370199607"/><text x="9.2703%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (370,199,607 samples, 0.05%)</title><rect x="9.0203%" y="629" width="0.0537%" height="15" fill="rgb(242,102,42)" fg:x="62233603751" fg:w="370199607"/><text x="9.2703%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u64,alloc::string::String)&gt; (370,199,607 samples, 0.05%)</title><rect x="9.0203%" y="613" width="0.0537%" height="15" fill="rgb(234,31,38)" fg:x="62233603751" fg:w="370199607"/><text x="9.2703%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (370,199,607 samples, 0.05%)</title><rect x="9.0203%" y="597" width="0.0537%" height="15" fill="rgb(221,117,51)" fg:x="62233603751" fg:w="370199607"/><text x="9.2703%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (370,199,607 samples, 0.05%)</title><rect x="9.0203%" y="581" width="0.0537%" height="15" fill="rgb(212,20,18)" fg:x="62233603751" fg:w="370199607"/><text x="9.2703%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (370,199,607 samples, 0.05%)</title><rect x="9.0203%" y="565" width="0.0537%" height="15" fill="rgb(245,133,36)" fg:x="62233603751" fg:w="370199607"/><text x="9.2703%" y="575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (370,199,607 samples, 0.05%)</title><rect x="9.0203%" y="549" width="0.0537%" height="15" fill="rgb(212,6,19)" fg:x="62233603751" fg:w="370199607"/><text x="9.2703%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (370,199,607 samples, 0.05%)</title><rect x="9.0203%" y="533" width="0.0537%" height="15" fill="rgb(218,1,36)" fg:x="62233603751" fg:w="370199607"/><text x="9.2703%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (370,199,607 samples, 0.05%)</title><rect x="9.0203%" y="517" width="0.0537%" height="15" fill="rgb(246,84,54)" fg:x="62233603751" fg:w="370199607"/><text x="9.2703%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (370,199,607 samples, 0.05%)</title><rect x="9.0203%" y="501" width="0.0537%" height="15" fill="rgb(242,110,6)" fg:x="62233603751" fg:w="370199607"/><text x="9.2703%" y="511.50"></text></g><g><title>cfree@GLIBC_2.2.5 (370,199,607 samples, 0.05%)</title><rect x="9.0203%" y="485" width="0.0537%" height="15" fill="rgb(214,47,5)" fg:x="62233603751" fg:w="370199607"/><text x="9.2703%" y="495.50"></text></g><g><title>_int_free_maybe_consolidate.part.0 (370,199,607 samples, 0.05%)</title><rect x="9.0203%" y="469" width="0.0537%" height="15" fill="rgb(218,159,25)" fg:x="62233603751" fg:w="370199607"/><text x="9.2703%" y="479.50"></text></g><g><title>malloc_consolidate (205,918,688 samples, 0.03%)</title><rect x="9.0939%" y="453" width="0.0298%" height="15" fill="rgb(215,211,28)" fg:x="62741473414" fg:w="205918688"/><text x="9.3439%" y="463.50"></text></g><g><title>malloc_consolidate (385,454,399 samples, 0.06%)</title><rect x="9.0761%" y="469" width="0.0559%" height="15" fill="rgb(238,59,32)" fg:x="62618254140" fg:w="385454399"/><text x="9.3261%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;llvm_profparser::instrumentation_profile::types::InstrumentationProfile&gt; (1,378,199,091 samples, 0.20%)</title><rect x="8.9383%" y="773" width="0.1998%" height="15" fill="rgb(226,82,3)" fg:x="61667674962" fg:w="1378199091"/><text x="9.1883%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,usize,core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;&gt; (442,070,695 samples, 0.06%)</title><rect x="9.0740%" y="757" width="0.0641%" height="15" fill="rgb(240,164,32)" fg:x="62603803358" fg:w="442070695"/><text x="9.3240%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,usize,core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;&gt; (442,070,695 samples, 0.06%)</title><rect x="9.0740%" y="741" width="0.0641%" height="15" fill="rgb(232,46,7)" fg:x="62603803358" fg:w="442070695"/><text x="9.3240%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,usize)&gt;&gt; (442,070,695 samples, 0.06%)</title><rect x="9.0740%" y="725" width="0.0641%" height="15" fill="rgb(229,129,53)" fg:x="62603803358" fg:w="442070695"/><text x="9.3240%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (442,070,695 samples, 0.06%)</title><rect x="9.0740%" y="709" width="0.0641%" height="15" fill="rgb(234,188,29)" fg:x="62603803358" fg:w="442070695"/><text x="9.3240%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (442,070,695 samples, 0.06%)</title><rect x="9.0740%" y="693" width="0.0641%" height="15" fill="rgb(246,141,4)" fg:x="62603803358" fg:w="442070695"/><text x="9.3240%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (442,070,695 samples, 0.06%)</title><rect x="9.0740%" y="677" width="0.0641%" height="15" fill="rgb(229,23,39)" fg:x="62603803358" fg:w="442070695"/><text x="9.3240%" y="687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (442,070,695 samples, 0.06%)</title><rect x="9.0740%" y="661" width="0.0641%" height="15" fill="rgb(206,12,3)" fg:x="62603803358" fg:w="442070695"/><text x="9.3240%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (442,070,695 samples, 0.06%)</title><rect x="9.0740%" y="645" width="0.0641%" height="15" fill="rgb(252,226,20)" fg:x="62603803358" fg:w="442070695"/><text x="9.3240%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,usize)&gt; (442,070,695 samples, 0.06%)</title><rect x="9.0740%" y="629" width="0.0641%" height="15" fill="rgb(216,123,35)" fg:x="62603803358" fg:w="442070695"/><text x="9.3240%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (442,070,695 samples, 0.06%)</title><rect x="9.0740%" y="613" width="0.0641%" height="15" fill="rgb(212,68,40)" fg:x="62603803358" fg:w="442070695"/><text x="9.3240%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (442,070,695 samples, 0.06%)</title><rect x="9.0740%" y="597" width="0.0641%" height="15" fill="rgb(254,125,32)" fg:x="62603803358" fg:w="442070695"/><text x="9.3240%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (442,070,695 samples, 0.06%)</title><rect x="9.0740%" y="581" width="0.0641%" height="15" fill="rgb(253,97,22)" fg:x="62603803358" fg:w="442070695"/><text x="9.3240%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (442,070,695 samples, 0.06%)</title><rect x="9.0740%" y="565" width="0.0641%" height="15" fill="rgb(241,101,14)" fg:x="62603803358" fg:w="442070695"/><text x="9.3240%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (442,070,695 samples, 0.06%)</title><rect x="9.0740%" y="549" width="0.0641%" height="15" fill="rgb(238,103,29)" fg:x="62603803358" fg:w="442070695"/><text x="9.3240%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (442,070,695 samples, 0.06%)</title><rect x="9.0740%" y="533" width="0.0641%" height="15" fill="rgb(233,195,47)" fg:x="62603803358" fg:w="442070695"/><text x="9.3240%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (442,070,695 samples, 0.06%)</title><rect x="9.0740%" y="517" width="0.0641%" height="15" fill="rgb(246,218,30)" fg:x="62603803358" fg:w="442070695"/><text x="9.3240%" y="527.50"></text></g><g><title>cfree@GLIBC_2.2.5 (442,070,695 samples, 0.06%)</title><rect x="9.0740%" y="501" width="0.0641%" height="15" fill="rgb(219,145,47)" fg:x="62603803358" fg:w="442070695"/><text x="9.3240%" y="511.50"></text></g><g><title>_int_free_maybe_consolidate.part.0 (442,070,695 samples, 0.06%)</title><rect x="9.0740%" y="485" width="0.0641%" height="15" fill="rgb(243,12,26)" fg:x="62603803358" fg:w="442070695"/><text x="9.3240%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (205,183,881 samples, 0.03%)</title><rect x="9.1490%" y="645" width="0.0297%" height="15" fill="rgb(214,87,16)" fg:x="63121564845" fg:w="205183881"/><text x="9.3990%" y="655.50"></text></g><g><title>&lt;T as core::slice::sort::shared::smallsort::UnstableSmallSortTypeImpl&gt;::small_sort (346,089,250 samples, 0.05%)</title><rect x="9.1398%" y="725" width="0.0502%" height="15" fill="rgb(208,99,42)" fg:x="63057987845" fg:w="346089250"/><text x="9.3898%" y="735.50"></text></g><g><title>&lt;T as core::slice::sort::shared::smallsort::UnstableSmallSortFreezeTypeImpl&gt;::small_sort (346,089,250 samples, 0.05%)</title><rect x="9.1398%" y="709" width="0.0502%" height="15" fill="rgb(253,99,2)" fg:x="63057987845" fg:w="346089250"/><text x="9.3898%" y="719.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_fallback (346,089,250 samples, 0.05%)</title><rect x="9.1398%" y="693" width="0.0502%" height="15" fill="rgb(220,168,23)" fg:x="63057987845" fg:w="346089250"/><text x="9.3898%" y="703.50"></text></g><g><title>core::slice::sort::shared::smallsort::insertion_sort_shift_left (346,089,250 samples, 0.05%)</title><rect x="9.1398%" y="677" width="0.0502%" height="15" fill="rgb(242,38,24)" fg:x="63057987845" fg:w="346089250"/><text x="9.3898%" y="687.50"></text></g><g><title>core::slice::sort::shared::smallsort::insert_tail (321,659,733 samples, 0.05%)</title><rect x="9.1434%" y="661" width="0.0466%" height="15" fill="rgb(225,182,9)" fg:x="63082417362" fg:w="321659733"/><text x="9.3934%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap_unchecked (79,792,010 samples, 0.01%)</title><rect x="9.1929%" y="709" width="0.0116%" height="15" fill="rgb(243,178,37)" fg:x="63424013646" fg:w="79792010"/><text x="9.4429%" y="719.50"></text></g><g><title>core::ptr::swap (78,657,208 samples, 0.01%)</title><rect x="9.1930%" y="693" width="0.0114%" height="15" fill="rgb(232,139,19)" fg:x="63425148448" fg:w="78657208"/><text x="9.4430%" y="703.50"></text></g><g><title>core::intrinsics::copy (473,898,461 samples, 0.07%)</title><rect x="9.2175%" y="677" width="0.0687%" height="15" fill="rgb(225,201,24)" fg:x="63593843975" fg:w="473898461"/><text x="9.4675%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (427,320,258 samples, 0.06%)</title><rect x="9.2862%" y="677" width="0.0619%" height="15" fill="rgb(221,47,46)" fg:x="64067742436" fg:w="427320258"/><text x="9.5362%" y="687.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (1,487,729,662 samples, 0.22%)</title><rect x="9.1381%" y="773" width="0.2156%" height="15" fill="rgb(249,23,13)" fg:x="63045874053" fg:w="1487729662"/><text x="9.3881%" y="783.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (1,486,615,478 samples, 0.22%)</title><rect x="9.1382%" y="757" width="0.2155%" height="15" fill="rgb(219,9,5)" fg:x="63046988237" fg:w="1486615478"/><text x="9.3882%" y="767.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (1,484,411,685 samples, 0.22%)</title><rect x="9.1385%" y="741" width="0.2152%" height="15" fill="rgb(254,171,16)" fg:x="63049192030" fg:w="1484411685"/><text x="9.3885%" y="751.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition (1,111,791,419 samples, 0.16%)</title><rect x="9.1926%" y="725" width="0.1611%" height="15" fill="rgb(230,171,20)" fg:x="63421812296" fg:w="1111791419"/><text x="9.4426%" y="735.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic (1,029,798,059 samples, 0.15%)</title><rect x="9.2044%" y="709" width="0.1493%" height="15" fill="rgb(210,71,41)" fg:x="63503805656" fg:w="1029798059"/><text x="9.4544%" y="719.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic::_{{closure}} (961,828,348 samples, 0.14%)</title><rect x="9.2143%" y="693" width="0.1394%" height="15" fill="rgb(206,173,20)" fg:x="63571775367" fg:w="961828348"/><text x="9.4643%" y="703.50"></text></g><g><title>_copy_to_iter (378,287,577 samples, 0.05%)</title><rect x="9.3685%" y="533" width="0.0548%" height="15" fill="rgb(233,88,34)" fg:x="64636024221" fg:w="378287577"/><text x="9.6185%" y="543.50"></text></g><g><title>copy_page_to_iter (410,467,503 samples, 0.06%)</title><rect x="9.3642%" y="549" width="0.0595%" height="15" fill="rgb(223,209,46)" fg:x="64605864573" fg:w="410467503"/><text x="9.6142%" y="559.50"></text></g><g><title>cargo_tarpaulin::process_handling::collect_coverage (3,646,355,270 samples, 0.53%)</title><rect x="8.9054%" y="837" width="0.5285%" height="15" fill="rgb(250,43,18)" fg:x="61440463629" fg:w="3646355270"/><text x="9.1554%" y="847.50"></text></g><g><title>cargo_tarpaulin::statemachine::TestState::step (3,646,355,270 samples, 0.53%)</title><rect x="8.9054%" y="821" width="0.5285%" height="15" fill="rgb(208,13,10)" fg:x="61440463629" fg:w="3646355270"/><text x="9.1554%" y="831.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn cargo_tarpaulin::statemachine::StateData&gt; as cargo_tarpaulin::statemachine::StateData&gt;::wait (3,646,355,270 samples, 0.53%)</title><rect x="8.9054%" y="805" width="0.5285%" height="15" fill="rgb(212,200,36)" fg:x="61440463629" fg:w="3646355270"/><text x="9.1554%" y="815.50"></text></g><g><title>&lt;cargo_tarpaulin::statemachine::instrumented::LlvmInstrumentedData as cargo_tarpaulin::statemachine::StateData&gt;::wait (3,646,355,270 samples, 0.53%)</title><rect x="8.9054%" y="789" width="0.5285%" height="15" fill="rgb(225,90,30)" fg:x="61440463629" fg:w="3646355270"/><text x="9.1554%" y="799.50"></text></g><g><title>llvm_profparser::merge_profiles (553,215,184 samples, 0.08%)</title><rect x="9.3537%" y="773" width="0.0802%" height="15" fill="rgb(236,182,39)" fg:x="64533603715" fg:w="553215184"/><text x="9.6037%" y="783.50"></text></g><g><title>llvm_profparser::instrumentation_profile::parse (553,215,184 samples, 0.08%)</title><rect x="9.3537%" y="757" width="0.0802%" height="15" fill="rgb(212,144,35)" fg:x="64533603715" fg:w="553215184"/><text x="9.6037%" y="767.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_to_end (553,215,184 samples, 0.08%)</title><rect x="9.3537%" y="741" width="0.0802%" height="15" fill="rgb(228,63,44)" fg:x="64533603715" fg:w="553215184"/><text x="9.6037%" y="751.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read_to_end (553,215,184 samples, 0.08%)</title><rect x="9.3537%" y="725" width="0.0802%" height="15" fill="rgb(228,109,6)" fg:x="64533603715" fg:w="553215184"/><text x="9.6037%" y="735.50"></text></g><g><title>std::io::default_read_to_end (549,055,091 samples, 0.08%)</title><rect x="9.3543%" y="709" width="0.0796%" height="15" fill="rgb(238,117,24)" fg:x="64537763808" fg:w="549055091"/><text x="9.6043%" y="719.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read_buf (549,055,091 samples, 0.08%)</title><rect x="9.3543%" y="693" width="0.0796%" height="15" fill="rgb(242,26,26)" fg:x="64537763808" fg:w="549055091"/><text x="9.6043%" y="703.50"></text></g><g><title>std::sys::pal::unix::fs::File::read_buf (549,055,091 samples, 0.08%)</title><rect x="9.3543%" y="677" width="0.0796%" height="15" fill="rgb(221,92,48)" fg:x="64537763808" fg:w="549055091"/><text x="9.6043%" y="687.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::read_buf (549,055,091 samples, 0.08%)</title><rect x="9.3543%" y="661" width="0.0796%" height="15" fill="rgb(209,209,32)" fg:x="64537763808" fg:w="549055091"/><text x="9.6043%" y="671.50"></text></g><g><title>read (549,055,091 samples, 0.08%)</title><rect x="9.3543%" y="645" width="0.0796%" height="15" fill="rgb(221,70,22)" fg:x="64537763808" fg:w="549055091"/><text x="9.6043%" y="655.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (549,055,091 samples, 0.08%)</title><rect x="9.3543%" y="629" width="0.0796%" height="15" fill="rgb(248,145,5)" fg:x="64537763808" fg:w="549055091"/><text x="9.6043%" y="639.50"></text></g><g><title>do_syscall_64 (549,055,091 samples, 0.08%)</title><rect x="9.3543%" y="613" width="0.0796%" height="15" fill="rgb(226,116,26)" fg:x="64537763808" fg:w="549055091"/><text x="9.6043%" y="623.50"></text></g><g><title>ksys_read (549,055,091 samples, 0.08%)</title><rect x="9.3543%" y="597" width="0.0796%" height="15" fill="rgb(244,5,17)" fg:x="64537763808" fg:w="549055091"/><text x="9.6043%" y="607.50"></text></g><g><title>vfs_read (549,055,091 samples, 0.08%)</title><rect x="9.3543%" y="581" width="0.0796%" height="15" fill="rgb(252,159,33)" fg:x="64537763808" fg:w="549055091"/><text x="9.6043%" y="591.50"></text></g><g><title>filemap_read (549,055,091 samples, 0.08%)</title><rect x="9.3543%" y="565" width="0.0796%" height="15" fill="rgb(206,71,0)" fg:x="64537763808" fg:w="549055091"/><text x="9.6043%" y="575.50"></text></g><g><title>cargo_tarpaulin::process_handling::get_test_coverage (3,648,528,405 samples, 0.53%)</title><rect x="8.9054%" y="853" width="0.5288%" height="15" fill="rgb(233,118,54)" fg:x="61440463629" fg:w="3648528405"/><text x="9.1554%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (73,613,908 samples, 0.01%)</title><rect x="9.4342%" y="837" width="0.0107%" height="15" fill="rgb(234,83,48)" fg:x="65088992034" fg:w="73613908"/><text x="9.6842%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (73,613,908 samples, 0.01%)</title><rect x="9.4342%" y="821" width="0.0107%" height="15" fill="rgb(228,3,54)" fg:x="65088992034" fg:w="73613908"/><text x="9.6842%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (73,613,908 samples, 0.01%)</title><rect x="9.4342%" y="805" width="0.0107%" height="15" fill="rgb(226,155,13)" fg:x="65088992034" fg:w="73613908"/><text x="9.6842%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (73,613,908 samples, 0.01%)</title><rect x="9.4342%" y="789" width="0.0107%" height="15" fill="rgb(241,28,37)" fg:x="65088992034" fg:w="73613908"/><text x="9.6842%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (73,613,908 samples, 0.01%)</title><rect x="9.4342%" y="773" width="0.0107%" height="15" fill="rgb(233,93,10)" fg:x="65088992034" fg:w="73613908"/><text x="9.6842%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (73,613,908 samples, 0.01%)</title><rect x="9.4342%" y="757" width="0.0107%" height="15" fill="rgb(225,113,19)" fg:x="65088992034" fg:w="73613908"/><text x="9.6842%" y="767.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_try_fold::_{{closure}} (71,525,749 samples, 0.01%)</title><rect x="9.4345%" y="741" width="0.0104%" height="15" fill="rgb(241,2,18)" fg:x="65091080193" fg:w="71525749"/><text x="9.6845%" y="751.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (71,525,749 samples, 0.01%)</title><rect x="9.4345%" y="725" width="0.0104%" height="15" fill="rgb(228,207,21)" fg:x="65091080193" fg:w="71525749"/><text x="9.6845%" y="735.50"></text></g><g><title>__libc_start_call_main (3,774,677,270 samples, 0.55%)</title><rect x="8.9054%" y="1157" width="0.5471%" height="15" fill="rgb(213,211,35)" fg:x="61440463629" fg:w="3774677270"/><text x="9.1554%" y="1167.50"></text></g><g><title>main (3,774,677,270 samples, 0.55%)</title><rect x="8.9054%" y="1141" width="0.5471%" height="15" fill="rgb(209,83,10)" fg:x="61440463629" fg:w="3774677270"/><text x="9.1554%" y="1151.50"></text></g><g><title>std::rt::lang_start_internal (3,774,677,270 samples, 0.55%)</title><rect x="8.9054%" y="1125" width="0.5471%" height="15" fill="rgb(209,164,1)" fg:x="61440463629" fg:w="3774677270"/><text x="9.1554%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (3,774,677,270 samples, 0.55%)</title><rect x="8.9054%" y="1109" width="0.5471%" height="15" fill="rgb(213,184,43)" fg:x="61440463629" fg:w="3774677270"/><text x="9.1554%" y="1119.50"></text></g><g><title>std::panicking::try (3,774,677,270 samples, 0.55%)</title><rect x="8.9054%" y="1093" width="0.5471%" height="15" fill="rgb(231,61,34)" fg:x="61440463629" fg:w="3774677270"/><text x="9.1554%" y="1103.50"></text></g><g><title>std::panicking::try::do_call (3,774,677,270 samples, 0.55%)</title><rect x="8.9054%" y="1077" width="0.5471%" height="15" fill="rgb(235,75,3)" fg:x="61440463629" fg:w="3774677270"/><text x="9.1554%" y="1087.50"></text></g><g><title>std::rt::lang_start_internal::_{{closure}} (3,774,677,270 samples, 0.55%)</title><rect x="8.9054%" y="1061" width="0.5471%" height="15" fill="rgb(220,106,47)" fg:x="61440463629" fg:w="3774677270"/><text x="9.1554%" y="1071.50"></text></g><g><title>std::panic::catch_unwind (3,774,677,270 samples, 0.55%)</title><rect x="8.9054%" y="1045" width="0.5471%" height="15" fill="rgb(210,196,33)" fg:x="61440463629" fg:w="3774677270"/><text x="9.1554%" y="1055.50"></text></g><g><title>std::panicking::try (3,774,677,270 samples, 0.55%)</title><rect x="8.9054%" y="1029" width="0.5471%" height="15" fill="rgb(229,154,42)" fg:x="61440463629" fg:w="3774677270"/><text x="9.1554%" y="1039.50"></text></g><g><title>std::panicking::try::do_call (3,774,677,270 samples, 0.55%)</title><rect x="8.9054%" y="1013" width="0.5471%" height="15" fill="rgb(228,114,26)" fg:x="61440463629" fg:w="3774677270"/><text x="9.1554%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (3,774,677,270 samples, 0.55%)</title><rect x="8.9054%" y="997" width="0.5471%" height="15" fill="rgb(208,144,1)" fg:x="61440463629" fg:w="3774677270"/><text x="9.1554%" y="1007.50"></text></g><g><title>_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h05240483b460bc9eE.llvm.17468850352284423155 (3,774,677,270 samples, 0.55%)</title><rect x="8.9054%" y="981" width="0.5471%" height="15" fill="rgb(239,112,37)" fg:x="61440463629" fg:w="3774677270"/><text x="9.1554%" y="991.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (3,774,677,270 samples, 0.55%)</title><rect x="8.9054%" y="965" width="0.5471%" height="15" fill="rgb(210,96,50)" fg:x="61440463629" fg:w="3774677270"/><text x="9.1554%" y="975.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3,774,677,270 samples, 0.55%)</title><rect x="8.9054%" y="949" width="0.5471%" height="15" fill="rgb(222,178,2)" fg:x="61440463629" fg:w="3774677270"/><text x="9.1554%" y="959.50"></text></g><g><title>cargo_tarpaulin::main (3,774,677,270 samples, 0.55%)</title><rect x="8.9054%" y="933" width="0.5471%" height="15" fill="rgb(226,74,18)" fg:x="61440463629" fg:w="3774677270"/><text x="9.1554%" y="943.50"></text></g><g><title>cargo_tarpaulin::run (3,774,677,270 samples, 0.55%)</title><rect x="8.9054%" y="917" width="0.5471%" height="15" fill="rgb(225,67,54)" fg:x="61440463629" fg:w="3774677270"/><text x="9.1554%" y="927.50"></text></g><g><title>cargo_tarpaulin::collect_tracemap (3,774,677,270 samples, 0.55%)</title><rect x="8.9054%" y="901" width="0.5471%" height="15" fill="rgb(251,92,32)" fg:x="61440463629" fg:w="3774677270"/><text x="9.1554%" y="911.50"></text></g><g><title>cargo_tarpaulin::trace (3,774,677,270 samples, 0.55%)</title><rect x="8.9054%" y="885" width="0.5471%" height="15" fill="rgb(228,149,22)" fg:x="61440463629" fg:w="3774677270"/><text x="9.1554%" y="895.50"></text></g><g><title>cargo_tarpaulin::launch_tarpaulin (3,774,677,270 samples, 0.55%)</title><rect x="8.9054%" y="869" width="0.5471%" height="15" fill="rgb(243,54,13)" fg:x="61440463629" fg:w="3774677270"/><text x="9.1554%" y="879.50"></text></g><g><title>cargo_tarpaulin::source_analysis::SourceAnalysis::get_analysis (126,148,865 samples, 0.02%)</title><rect x="9.4342%" y="853" width="0.0183%" height="15" fill="rgb(243,180,28)" fg:x="65088992034" fg:w="126148865"/><text x="9.6842%" y="863.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (85,863,088 samples, 0.01%)</title><rect x="9.4615%" y="741" width="0.0124%" height="15" fill="rgb(208,167,24)" fg:x="65277052937" fg:w="85863088"/><text x="9.7115%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (85,863,088 samples, 0.01%)</title><rect x="9.4615%" y="725" width="0.0124%" height="15" fill="rgb(245,73,45)" fg:x="65277052937" fg:w="85863088"/><text x="9.7115%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (85,863,088 samples, 0.01%)</title><rect x="9.4615%" y="709" width="0.0124%" height="15" fill="rgb(237,203,48)" fg:x="65277052937" fg:w="85863088"/><text x="9.7115%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (85,863,088 samples, 0.01%)</title><rect x="9.4615%" y="693" width="0.0124%" height="15" fill="rgb(211,197,16)" fg:x="65277052937" fg:w="85863088"/><text x="9.7115%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (85,863,088 samples, 0.01%)</title><rect x="9.4615%" y="677" width="0.0124%" height="15" fill="rgb(243,99,51)" fg:x="65277052937" fg:w="85863088"/><text x="9.7115%" y="687.50"></text></g><g><title>&lt;std::path::Path as core::cmp::Ord&gt;::cmp (85,863,088 samples, 0.01%)</title><rect x="9.4615%" y="661" width="0.0124%" height="15" fill="rgb(215,123,29)" fg:x="65277052937" fg:w="85863088"/><text x="9.7115%" y="671.50"></text></g><g><title>&lt;std::path::Path as core::cmp::Ord&gt;::cmp (84,046,969 samples, 0.01%)</title><rect x="9.4741%" y="677" width="0.0122%" height="15" fill="rgb(239,186,37)" fg:x="65363989988" fg:w="84046969"/><text x="9.7241%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (86,260,015 samples, 0.01%)</title><rect x="9.4739%" y="741" width="0.0125%" height="15" fill="rgb(252,136,39)" fg:x="65362916025" fg:w="86260015"/><text x="9.7239%" y="751.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (86,260,015 samples, 0.01%)</title><rect x="9.4739%" y="725" width="0.0125%" height="15" fill="rgb(223,213,32)" fg:x="65362916025" fg:w="86260015"/><text x="9.7239%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (86,260,015 samples, 0.01%)</title><rect x="9.4739%" y="709" width="0.0125%" height="15" fill="rgb(233,115,5)" fg:x="65362916025" fg:w="86260015"/><text x="9.7239%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (86,260,015 samples, 0.01%)</title><rect x="9.4739%" y="693" width="0.0125%" height="15" fill="rgb(207,226,44)" fg:x="65362916025" fg:w="86260015"/><text x="9.7239%" y="703.50"></text></g><g><title>cargo_tarpaulin::traces::TraceMap::add_trace (231,190,265 samples, 0.03%)</title><rect x="9.4615%" y="757" width="0.0335%" height="15" fill="rgb(208,126,0)" fg:x="65277052937" fg:w="231190265"/><text x="9.7115%" y="767.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (77,968,943 samples, 0.01%)</title><rect x="9.5080%" y="709" width="0.0113%" height="15" fill="rgb(244,66,21)" fg:x="65598424174" fg:w="77968943"/><text x="9.7580%" y="719.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (133,495,522 samples, 0.02%)</title><rect x="9.5035%" y="725" width="0.0193%" height="15" fill="rgb(222,97,12)" fg:x="65567415642" fg:w="133495522"/><text x="9.7535%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (254,135,455 samples, 0.04%)</title><rect x="9.4950%" y="741" width="0.0368%" height="15" fill="rgb(219,213,19)" fg:x="65508243202" fg:w="254135455"/><text x="9.7450%" y="751.50"></text></g><g><title>cargo_tarpaulin::traces::TraceMap::contains_location (319,308,282 samples, 0.05%)</title><rect x="9.4950%" y="757" width="0.0463%" height="15" fill="rgb(252,169,30)" fg:x="65508243202" fg:w="319308282"/><text x="9.7450%" y="767.50"></text></g><g><title>_int_free_merge_chunk (185,007,499 samples, 0.03%)</title><rect x="9.5648%" y="485" width="0.0268%" height="15" fill="rgb(206,32,51)" fg:x="65990313311" fg:w="185007499"/><text x="9.8148%" y="495.50"></text></g><g><title>cfree@GLIBC_2.2.5 (124,252,290 samples, 0.02%)</title><rect x="9.5917%" y="485" width="0.0180%" height="15" fill="rgb(250,172,42)" fg:x="66175320810" fg:w="124252290"/><text x="9.8417%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;llvm_profparser::coverage::CounterMappingRegion&gt;&gt; (494,055,505 samples, 0.07%)</title><rect x="9.5413%" y="613" width="0.0716%" height="15" fill="rgb(209,34,43)" fg:x="65827551484" fg:w="494055505"/><text x="9.7913%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;llvm_profparser::coverage::CounterMappingRegion&gt;&gt; (494,055,505 samples, 0.07%)</title><rect x="9.5413%" y="597" width="0.0716%" height="15" fill="rgb(223,11,35)" fg:x="65827551484" fg:w="494055505"/><text x="9.7913%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (494,055,505 samples, 0.07%)</title><rect x="9.5413%" y="581" width="0.0716%" height="15" fill="rgb(251,219,26)" fg:x="65827551484" fg:w="494055505"/><text x="9.7913%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (494,055,505 samples, 0.07%)</title><rect x="9.5413%" y="565" width="0.0716%" height="15" fill="rgb(231,119,3)" fg:x="65827551484" fg:w="494055505"/><text x="9.7913%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (494,055,505 samples, 0.07%)</title><rect x="9.5413%" y="549" width="0.0716%" height="15" fill="rgb(216,97,11)" fg:x="65827551484" fg:w="494055505"/><text x="9.7913%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (494,055,505 samples, 0.07%)</title><rect x="9.5413%" y="533" width="0.0716%" height="15" fill="rgb(223,59,9)" fg:x="65827551484" fg:w="494055505"/><text x="9.7913%" y="543.50"></text></g><g><title>cfree@GLIBC_2.2.5 (494,055,505 samples, 0.07%)</title><rect x="9.5413%" y="517" width="0.0716%" height="15" fill="rgb(233,93,31)" fg:x="65827551484" fg:w="494055505"/><text x="9.7913%" y="527.50"></text></g><g><title>_int_free_merge_chunk (464,071,379 samples, 0.07%)</title><rect x="9.5456%" y="501" width="0.0673%" height="15" fill="rgb(239,81,33)" fg:x="65857535610" fg:w="464071379"/><text x="9.7956%" y="511.50"></text></g><g><title>_int_free_create_chunk (72,218,665 samples, 0.01%)</title><rect x="9.6130%" y="485" width="0.0105%" height="15" fill="rgb(213,120,34)" fg:x="66322634929" fg:w="72218665"/><text x="9.8630%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;llvm_profparser::coverage::FunctionRecordV3&gt;&gt; (576,768,489 samples, 0.08%)</title><rect x="9.5413%" y="677" width="0.0836%" height="15" fill="rgb(243,49,53)" fg:x="65827551484" fg:w="576768489"/><text x="9.7913%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (576,768,489 samples, 0.08%)</title><rect x="9.5413%" y="661" width="0.0836%" height="15" fill="rgb(247,216,33)" fg:x="65827551484" fg:w="576768489"/><text x="9.7913%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;[llvm_profparser::coverage::FunctionRecordV3]&gt; (576,768,489 samples, 0.08%)</title><rect x="9.5413%" y="645" width="0.0836%" height="15" fill="rgb(226,26,14)" fg:x="65827551484" fg:w="576768489"/><text x="9.7913%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;llvm_profparser::coverage::FunctionRecordV3&gt; (576,768,489 samples, 0.08%)</title><rect x="9.5413%" y="629" width="0.0836%" height="15" fill="rgb(215,49,53)" fg:x="65827551484" fg:w="576768489"/><text x="9.7913%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;llvm_profparser::coverage::Expression&gt;&gt; (82,712,984 samples, 0.01%)</title><rect x="9.6129%" y="613" width="0.0120%" height="15" fill="rgb(245,162,40)" fg:x="66321606989" fg:w="82712984"/><text x="9.8629%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;llvm_profparser::coverage::Expression&gt;&gt; (82,712,984 samples, 0.01%)</title><rect x="9.6129%" y="597" width="0.0120%" height="15" fill="rgb(229,68,17)" fg:x="66321606989" fg:w="82712984"/><text x="9.8629%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (82,712,984 samples, 0.01%)</title><rect x="9.6129%" y="581" width="0.0120%" height="15" fill="rgb(213,182,10)" fg:x="66321606989" fg:w="82712984"/><text x="9.8629%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (82,712,984 samples, 0.01%)</title><rect x="9.6129%" y="565" width="0.0120%" height="15" fill="rgb(245,125,30)" fg:x="66321606989" fg:w="82712984"/><text x="9.8629%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (82,712,984 samples, 0.01%)</title><rect x="9.6129%" y="549" width="0.0120%" height="15" fill="rgb(232,202,2)" fg:x="66321606989" fg:w="82712984"/><text x="9.8629%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (82,712,984 samples, 0.01%)</title><rect x="9.6129%" y="533" width="0.0120%" height="15" fill="rgb(237,140,51)" fg:x="66321606989" fg:w="82712984"/><text x="9.8629%" y="543.50"></text></g><g><title>cfree@GLIBC_2.2.5 (82,712,984 samples, 0.01%)</title><rect x="9.6129%" y="517" width="0.0120%" height="15" fill="rgb(236,157,25)" fg:x="66321606989" fg:w="82712984"/><text x="9.8629%" y="527.50"></text></g><g><title>_int_free_merge_chunk (82,712,984 samples, 0.01%)</title><rect x="9.6129%" y="501" width="0.0120%" height="15" fill="rgb(219,209,0)" fg:x="66321606989" fg:w="82712984"/><text x="9.8629%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;llvm_profparser::coverage::coverage_mapping::CoverageMapping&gt; (646,352,385 samples, 0.09%)</title><rect x="9.5413%" y="757" width="0.0937%" height="15" fill="rgb(240,116,54)" fg:x="65827551484" fg:w="646352385"/><text x="9.7913%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;llvm_profparser::coverage::CoverageMappingInfo&gt;&gt; (646,352,385 samples, 0.09%)</title><rect x="9.5413%" y="741" width="0.0937%" height="15" fill="rgb(216,10,36)" fg:x="65827551484" fg:w="646352385"/><text x="9.7913%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (646,352,385 samples, 0.09%)</title><rect x="9.5413%" y="725" width="0.0937%" height="15" fill="rgb(222,72,44)" fg:x="65827551484" fg:w="646352385"/><text x="9.7913%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[llvm_profparser::coverage::CoverageMappingInfo]&gt; (646,352,385 samples, 0.09%)</title><rect x="9.5413%" y="709" width="0.0937%" height="15" fill="rgb(232,159,9)" fg:x="65827551484" fg:w="646352385"/><text x="9.7913%" y="719.50"></text></g><g><title>_ZN4core3ptr67drop_in_place$LT$llvm_profparser..coverage..CoverageMappingInfo$GT$17h54504ed87c29848dE.llvm.10117868062062457895 (646,352,385 samples, 0.09%)</title><rect x="9.5413%" y="693" width="0.0937%" height="15" fill="rgb(210,39,32)" fg:x="65827551484" fg:w="646352385"/><text x="9.7913%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u64,alloc::vec::Vec&lt;std::path::PathBuf&gt;,core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;&gt; (69,583,896 samples, 0.01%)</title><rect x="9.6249%" y="677" width="0.0101%" height="15" fill="rgb(216,194,45)" fg:x="66404319973" fg:w="69583896"/><text x="9.8749%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u64,alloc::vec::Vec&lt;std::path::PathBuf&gt;,core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;&gt; (69,583,896 samples, 0.01%)</title><rect x="9.6249%" y="661" width="0.0101%" height="15" fill="rgb(218,18,35)" fg:x="66404319973" fg:w="69583896"/><text x="9.8749%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u64,alloc::vec::Vec&lt;std::path::PathBuf&gt;)&gt;&gt; (69,583,896 samples, 0.01%)</title><rect x="9.6249%" y="645" width="0.0101%" height="15" fill="rgb(207,83,51)" fg:x="66404319973" fg:w="69583896"/><text x="9.8749%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (69,583,896 samples, 0.01%)</title><rect x="9.6249%" y="629" width="0.0101%" height="15" fill="rgb(225,63,43)" fg:x="66404319973" fg:w="69583896"/><text x="9.8749%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (69,583,896 samples, 0.01%)</title><rect x="9.6249%" y="613" width="0.0101%" height="15" fill="rgb(207,57,36)" fg:x="66404319973" fg:w="69583896"/><text x="9.8749%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (69,583,896 samples, 0.01%)</title><rect x="9.6249%" y="597" width="0.0101%" height="15" fill="rgb(216,99,33)" fg:x="66404319973" fg:w="69583896"/><text x="9.8749%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (69,583,896 samples, 0.01%)</title><rect x="9.6249%" y="581" width="0.0101%" height="15" fill="rgb(225,42,16)" fg:x="66404319973" fg:w="69583896"/><text x="9.8749%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (69,583,896 samples, 0.01%)</title><rect x="9.6249%" y="565" width="0.0101%" height="15" fill="rgb(220,201,45)" fg:x="66404319973" fg:w="69583896"/><text x="9.8749%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u64,alloc::vec::Vec&lt;std::path::PathBuf&gt;)&gt; (69,583,896 samples, 0.01%)</title><rect x="9.6249%" y="549" width="0.0101%" height="15" fill="rgb(225,33,4)" fg:x="66404319973" fg:w="69583896"/><text x="9.8749%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;std::path::PathBuf&gt;&gt; (69,583,896 samples, 0.01%)</title><rect x="9.6249%" y="533" width="0.0101%" height="15" fill="rgb(224,33,50)" fg:x="66404319973" fg:w="69583896"/><text x="9.8749%" y="543.50"></text></g><g><title>_int_free (80,646,668 samples, 0.01%)</title><rect x="9.6413%" y="517" width="0.0117%" height="15" fill="rgb(246,198,51)" fg:x="66517552398" fg:w="80646668"/><text x="9.8913%" y="527.50"></text></g><g><title>_int_free_create_chunk (586,408,321 samples, 0.08%)</title><rect x="9.6530%" y="517" width="0.0850%" height="15" fill="rgb(205,22,4)" fg:x="66598199066" fg:w="586408321"/><text x="9.9030%" y="527.50"></text></g><g><title>cfree@GLIBC_2.2.5 (306,179,295 samples, 0.04%)</title><rect x="9.7445%" y="517" width="0.0444%" height="15" fill="rgb(206,3,8)" fg:x="67229494004" fg:w="306179295"/><text x="9.9945%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1,039,423,116 samples, 0.15%)</title><rect x="9.6383%" y="677" width="0.1507%" height="15" fill="rgb(251,23,15)" fg:x="66497357817" fg:w="1039423116"/><text x="9.8883%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,039,423,116 samples, 0.15%)</title><rect x="9.6383%" y="661" width="0.1507%" height="15" fill="rgb(252,88,28)" fg:x="66497357817" fg:w="1039423116"/><text x="9.8883%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,039,423,116 samples, 0.15%)</title><rect x="9.6383%" y="645" width="0.1507%" height="15" fill="rgb(212,127,14)" fg:x="66497357817" fg:w="1039423116"/><text x="9.8883%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,039,423,116 samples, 0.15%)</title><rect x="9.6383%" y="629" width="0.1507%" height="15" fill="rgb(247,145,37)" fg:x="66497357817" fg:w="1039423116"/><text x="9.8883%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,039,423,116 samples, 0.15%)</title><rect x="9.6383%" y="613" width="0.1507%" height="15" fill="rgb(209,117,53)" fg:x="66497357817" fg:w="1039423116"/><text x="9.8883%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,039,423,116 samples, 0.15%)</title><rect x="9.6383%" y="597" width="0.1507%" height="15" fill="rgb(212,90,42)" fg:x="66497357817" fg:w="1039423116"/><text x="9.8883%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,039,423,116 samples, 0.15%)</title><rect x="9.6383%" y="581" width="0.1507%" height="15" fill="rgb(218,164,37)" fg:x="66497357817" fg:w="1039423116"/><text x="9.8883%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (1,039,423,116 samples, 0.15%)</title><rect x="9.6383%" y="565" width="0.1507%" height="15" fill="rgb(246,65,34)" fg:x="66497357817" fg:w="1039423116"/><text x="9.8883%" y="575.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1,039,423,116 samples, 0.15%)</title><rect x="9.6383%" y="549" width="0.1507%" height="15" fill="rgb(231,100,33)" fg:x="66497357817" fg:w="1039423116"/><text x="9.8883%" y="559.50"></text></g><g><title>_int_free_merge_chunk (1,038,336,101 samples, 0.15%)</title><rect x="9.6385%" y="533" width="0.1505%" height="15" fill="rgb(228,126,14)" fg:x="66498444832" fg:w="1038336101"/><text x="9.8885%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;llvm_profparser::instrumentation_profile::types::NamedInstrProfRecord&gt;&gt; (1,041,646,787 samples, 0.15%)</title><rect x="9.6383%" y="741" width="0.1510%" height="15" fill="rgb(215,173,21)" fg:x="66497357817" fg:w="1041646787"/><text x="9.8883%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,041,646,787 samples, 0.15%)</title><rect x="9.6383%" y="725" width="0.1510%" height="15" fill="rgb(210,6,40)" fg:x="66497357817" fg:w="1041646787"/><text x="9.8883%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[llvm_profparser::instrumentation_profile::types::NamedInstrProfRecord]&gt; (1,041,646,787 samples, 0.15%)</title><rect x="9.6383%" y="709" width="0.1510%" height="15" fill="rgb(212,48,18)" fg:x="66497357817" fg:w="1041646787"/><text x="9.8883%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;llvm_profparser::instrumentation_profile::types::NamedInstrProfRecord&gt; (1,041,646,787 samples, 0.15%)</title><rect x="9.6383%" y="693" width="0.1510%" height="15" fill="rgb(230,214,11)" fg:x="66497357817" fg:w="1041646787"/><text x="9.8883%" y="703.50"></text></g><g><title>_int_free (249,284,865 samples, 0.04%)</title><rect x="9.7920%" y="437" width="0.0361%" height="15" fill="rgb(254,105,39)" fg:x="67557818425" fg:w="249284865"/><text x="10.0420%" y="447.50"></text></g><g><title>_int_free_create_chunk (197,449,950 samples, 0.03%)</title><rect x="9.8524%" y="421" width="0.0286%" height="15" fill="rgb(245,158,5)" fg:x="67974459578" fg:w="197449950"/><text x="10.1024%" y="431.50"></text></g><g><title>_int_free_merge_chunk (69,145,518 samples, 0.01%)</title><rect x="9.8811%" y="421" width="0.0100%" height="15" fill="rgb(249,208,11)" fg:x="68171909528" fg:w="69145518"/><text x="10.1311%" y="431.50"></text></g><g><title>_int_free_create_chunk (473,275,605 samples, 0.07%)</title><rect x="9.8282%" y="437" width="0.0686%" height="15" fill="rgb(210,39,28)" fg:x="67807103290" fg:w="473275605"/><text x="10.0782%" y="447.50"></text></g><g><title>_int_free_merge_chunk (214,355,738 samples, 0.03%)</title><rect x="9.8968%" y="437" width="0.0311%" height="15" fill="rgb(211,56,53)" fg:x="68280378895" fg:w="214355738"/><text x="10.1468%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;llvm_profparser::instrumentation_profile::types::Symtab&gt; (1,093,922,505 samples, 0.16%)</title><rect x="9.7893%" y="741" width="0.1586%" height="15" fill="rgb(226,201,30)" fg:x="67539004604" fg:w="1093922505"/><text x="10.0393%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u64,alloc::string::String,core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;&gt; (1,093,922,505 samples, 0.16%)</title><rect x="9.7893%" y="725" width="0.1586%" height="15" fill="rgb(239,101,34)" fg:x="67539004604" fg:w="1093922505"/><text x="10.0393%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u64,alloc::string::String,core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;&gt; (1,093,922,505 samples, 0.16%)</title><rect x="9.7893%" y="709" width="0.1586%" height="15" fill="rgb(226,209,5)" fg:x="67539004604" fg:w="1093922505"/><text x="10.0393%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u64,alloc::string::String)&gt;&gt; (1,093,922,505 samples, 0.16%)</title><rect x="9.7893%" y="693" width="0.1586%" height="15" fill="rgb(250,105,47)" fg:x="67539004604" fg:w="1093922505"/><text x="10.0393%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,093,922,505 samples, 0.16%)</title><rect x="9.7893%" y="677" width="0.1586%" height="15" fill="rgb(230,72,3)" fg:x="67539004604" fg:w="1093922505"/><text x="10.0393%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,093,922,505 samples, 0.16%)</title><rect x="9.7893%" y="661" width="0.1586%" height="15" fill="rgb(232,218,39)" fg:x="67539004604" fg:w="1093922505"/><text x="10.0393%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,093,922,505 samples, 0.16%)</title><rect x="9.7893%" y="645" width="0.1586%" height="15" fill="rgb(248,166,6)" fg:x="67539004604" fg:w="1093922505"/><text x="10.0393%" y="655.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,093,922,505 samples, 0.16%)</title><rect x="9.7893%" y="629" width="0.1586%" height="15" fill="rgb(247,89,20)" fg:x="67539004604" fg:w="1093922505"/><text x="10.0393%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,093,922,505 samples, 0.16%)</title><rect x="9.7893%" y="613" width="0.1586%" height="15" fill="rgb(248,130,54)" fg:x="67539004604" fg:w="1093922505"/><text x="10.0393%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u64,alloc::string::String)&gt; (1,093,922,505 samples, 0.16%)</title><rect x="9.7893%" y="597" width="0.1586%" height="15" fill="rgb(234,196,4)" fg:x="67539004604" fg:w="1093922505"/><text x="10.0393%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,093,922,505 samples, 0.16%)</title><rect x="9.7893%" y="581" width="0.1586%" height="15" fill="rgb(250,143,31)" fg:x="67539004604" fg:w="1093922505"/><text x="10.0393%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,093,922,505 samples, 0.16%)</title><rect x="9.7893%" y="565" width="0.1586%" height="15" fill="rgb(211,110,34)" fg:x="67539004604" fg:w="1093922505"/><text x="10.0393%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,093,922,505 samples, 0.16%)</title><rect x="9.7893%" y="549" width="0.1586%" height="15" fill="rgb(215,124,48)" fg:x="67539004604" fg:w="1093922505"/><text x="10.0393%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,093,922,505 samples, 0.16%)</title><rect x="9.7893%" y="533" width="0.1586%" height="15" fill="rgb(216,46,13)" fg:x="67539004604" fg:w="1093922505"/><text x="10.0393%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,093,922,505 samples, 0.16%)</title><rect x="9.7893%" y="517" width="0.1586%" height="15" fill="rgb(205,184,25)" fg:x="67539004604" fg:w="1093922505"/><text x="10.0393%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,093,922,505 samples, 0.16%)</title><rect x="9.7893%" y="501" width="0.1586%" height="15" fill="rgb(228,1,10)" fg:x="67539004604" fg:w="1093922505"/><text x="10.0393%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (1,093,922,505 samples, 0.16%)</title><rect x="9.7893%" y="485" width="0.1586%" height="15" fill="rgb(213,116,27)" fg:x="67539004604" fg:w="1093922505"/><text x="10.0393%" y="495.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1,093,922,505 samples, 0.16%)</title><rect x="9.7893%" y="469" width="0.1586%" height="15" fill="rgb(241,95,50)" fg:x="67539004604" fg:w="1093922505"/><text x="10.0393%" y="479.50"></text></g><g><title>_int_free_merge_chunk (1,077,178,099 samples, 0.16%)</title><rect x="9.7917%" y="453" width="0.1561%" height="15" fill="rgb(238,48,32)" fg:x="67555749010" fg:w="1077178099"/><text x="10.0417%" y="463.50"></text></g><g><title>_int_free_create_chunk (69,996,314 samples, 0.01%)</title><rect x="9.9677%" y="437" width="0.0101%" height="15" fill="rgb(235,113,49)" fg:x="68769391785" fg:w="69996314"/><text x="10.2177%" y="447.50"></text></g><g><title>_int_free_create_chunk (310,548,585 samples, 0.05%)</title><rect x="9.9549%" y="453" width="0.0450%" height="15" fill="rgb(205,127,43)" fg:x="68681516559" fg:w="310548585"/><text x="10.2049%" y="463.50"></text></g><g><title>unlink_chunk.isra.0 (73,134,140 samples, 0.01%)</title><rect x="9.9893%" y="437" width="0.0106%" height="15" fill="rgb(250,162,2)" fg:x="68918931004" fg:w="73134140"/><text x="10.2393%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;llvm_profparser::instrumentation_profile::types::InstrumentationProfile&gt; (2,658,139,964 samples, 0.39%)</title><rect x="9.6383%" y="757" width="0.3853%" height="15" fill="rgb(220,13,41)" fg:x="66497357817" fg:w="2658139964"/><text x="9.8883%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,usize,core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;&gt; (522,570,672 samples, 0.08%)</title><rect x="9.9479%" y="741" width="0.0757%" height="15" fill="rgb(249,221,25)" fg:x="68632927109" fg:w="522570672"/><text x="10.1979%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,usize,core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;&gt; (522,570,672 samples, 0.08%)</title><rect x="9.9479%" y="725" width="0.0757%" height="15" fill="rgb(215,208,19)" fg:x="68632927109" fg:w="522570672"/><text x="10.1979%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,usize)&gt;&gt; (522,570,672 samples, 0.08%)</title><rect x="9.9479%" y="709" width="0.0757%" height="15" fill="rgb(236,175,2)" fg:x="68632927109" fg:w="522570672"/><text x="10.1979%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (522,570,672 samples, 0.08%)</title><rect x="9.9479%" y="693" width="0.0757%" height="15" fill="rgb(241,52,2)" fg:x="68632927109" fg:w="522570672"/><text x="10.1979%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (522,570,672 samples, 0.08%)</title><rect x="9.9479%" y="677" width="0.0757%" height="15" fill="rgb(248,140,14)" fg:x="68632927109" fg:w="522570672"/><text x="10.1979%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (522,570,672 samples, 0.08%)</title><rect x="9.9479%" y="661" width="0.0757%" height="15" fill="rgb(253,22,42)" fg:x="68632927109" fg:w="522570672"/><text x="10.1979%" y="671.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (522,570,672 samples, 0.08%)</title><rect x="9.9479%" y="645" width="0.0757%" height="15" fill="rgb(234,61,47)" fg:x="68632927109" fg:w="522570672"/><text x="10.1979%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (522,570,672 samples, 0.08%)</title><rect x="9.9479%" y="629" width="0.0757%" height="15" fill="rgb(208,226,15)" fg:x="68632927109" fg:w="522570672"/><text x="10.1979%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,usize)&gt; (522,570,672 samples, 0.08%)</title><rect x="9.9479%" y="613" width="0.0757%" height="15" fill="rgb(217,221,4)" fg:x="68632927109" fg:w="522570672"/><text x="10.1979%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (522,570,672 samples, 0.08%)</title><rect x="9.9479%" y="597" width="0.0757%" height="15" fill="rgb(212,174,34)" fg:x="68632927109" fg:w="522570672"/><text x="10.1979%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (522,570,672 samples, 0.08%)</title><rect x="9.9479%" y="581" width="0.0757%" height="15" fill="rgb(253,83,4)" fg:x="68632927109" fg:w="522570672"/><text x="10.1979%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (522,570,672 samples, 0.08%)</title><rect x="9.9479%" y="565" width="0.0757%" height="15" fill="rgb(250,195,49)" fg:x="68632927109" fg:w="522570672"/><text x="10.1979%" y="575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (522,570,672 samples, 0.08%)</title><rect x="9.9479%" y="549" width="0.0757%" height="15" fill="rgb(241,192,25)" fg:x="68632927109" fg:w="522570672"/><text x="10.1979%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (522,570,672 samples, 0.08%)</title><rect x="9.9479%" y="533" width="0.0757%" height="15" fill="rgb(208,124,10)" fg:x="68632927109" fg:w="522570672"/><text x="10.1979%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (522,570,672 samples, 0.08%)</title><rect x="9.9479%" y="517" width="0.0757%" height="15" fill="rgb(222,33,0)" fg:x="68632927109" fg:w="522570672"/><text x="10.1979%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (522,570,672 samples, 0.08%)</title><rect x="9.9479%" y="501" width="0.0757%" height="15" fill="rgb(234,209,28)" fg:x="68632927109" fg:w="522570672"/><text x="10.1979%" y="511.50"></text></g><g><title>cfree@GLIBC_2.2.5 (522,570,672 samples, 0.08%)</title><rect x="9.9479%" y="485" width="0.0757%" height="15" fill="rgb(224,11,23)" fg:x="68632927109" fg:w="522570672"/><text x="10.1979%" y="495.50"></text></g><g><title>_int_free_merge_chunk (513,193,661 samples, 0.07%)</title><rect x="9.9492%" y="469" width="0.0744%" height="15" fill="rgb(232,99,1)" fg:x="68642304120" fg:w="513193661"/><text x="10.1992%" y="479.50"></text></g><g><title>unlink_chunk.isra.0 (70,634,810 samples, 0.01%)</title><rect x="10.0134%" y="453" width="0.0102%" height="15" fill="rgb(237,95,45)" fg:x="69084862971" fg:w="70634810"/><text x="10.2634%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (137,469,990 samples, 0.02%)</title><rect x="10.0325%" y="645" width="0.0199%" height="15" fill="rgb(208,109,11)" fg:x="69217070684" fg:w="137469990"/><text x="10.2825%" y="655.50"></text></g><g><title>&lt;T as core::slice::sort::shared::smallsort::UnstableSmallSortTypeImpl&gt;::small_sort (244,226,260 samples, 0.04%)</title><rect x="10.0248%" y="725" width="0.0354%" height="15" fill="rgb(216,190,48)" fg:x="69163370320" fg:w="244226260"/><text x="10.2748%" y="735.50"></text></g><g><title>&lt;T as core::slice::sort::shared::smallsort::UnstableSmallSortFreezeTypeImpl&gt;::small_sort (244,226,260 samples, 0.04%)</title><rect x="10.0248%" y="709" width="0.0354%" height="15" fill="rgb(251,171,36)" fg:x="69163370320" fg:w="244226260"/><text x="10.2748%" y="719.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_fallback (244,226,260 samples, 0.04%)</title><rect x="10.0248%" y="693" width="0.0354%" height="15" fill="rgb(230,62,22)" fg:x="69163370320" fg:w="244226260"/><text x="10.2748%" y="703.50"></text></g><g><title>core::slice::sort::shared::smallsort::insertion_sort_shift_left (244,226,260 samples, 0.04%)</title><rect x="10.0248%" y="677" width="0.0354%" height="15" fill="rgb(225,114,35)" fg:x="69163370320" fg:w="244226260"/><text x="10.2748%" y="687.50"></text></g><g><title>core::slice::sort::shared::smallsort::insert_tail (217,436,993 samples, 0.03%)</title><rect x="10.0286%" y="661" width="0.0315%" height="15" fill="rgb(215,118,42)" fg:x="69190159587" fg:w="217436993"/><text x="10.2786%" y="671.50"></text></g><g><title>core::intrinsics::copy (752,364,372 samples, 0.11%)</title><rect x="10.0867%" y="677" width="0.1091%" height="15" fill="rgb(243,119,21)" fg:x="69590733064" fg:w="752364372"/><text x="10.3367%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (645,828,470 samples, 0.09%)</title><rect x="10.1958%" y="677" width="0.0936%" height="15" fill="rgb(252,177,53)" fg:x="70343097436" fg:w="645828470"/><text x="10.4458%" y="687.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (1,909,638,182 samples, 0.28%)</title><rect x="10.0236%" y="757" width="0.2768%" height="15" fill="rgb(237,209,29)" fg:x="69155497781" fg:w="1909638182"/><text x="10.2736%" y="767.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (1,909,638,182 samples, 0.28%)</title><rect x="10.0236%" y="741" width="0.2768%" height="15" fill="rgb(212,65,23)" fg:x="69155497781" fg:w="1909638182"/><text x="10.2736%" y="751.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition (1,629,609,738 samples, 0.24%)</title><rect x="10.0642%" y="725" width="0.2362%" height="15" fill="rgb(230,222,46)" fg:x="69435526225" fg:w="1629609738"/><text x="10.3142%" y="735.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic (1,586,088,444 samples, 0.23%)</title><rect x="10.0705%" y="709" width="0.2299%" height="15" fill="rgb(215,135,32)" fg:x="69479047519" fg:w="1586088444"/><text x="10.3205%" y="719.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic::_{{closure}} (1,503,445,988 samples, 0.22%)</title><rect x="10.0825%" y="693" width="0.2179%" height="15" fill="rgb(246,101,22)" fg:x="69561689975" fg:w="1503445988"/><text x="10.3325%" y="703.50"></text></g><g><title>cargo_tarpaulin::process_handling::get_test_coverage (5,854,066,332 samples, 0.85%)</title><rect x="9.4525%" y="837" width="0.8485%" height="15" fill="rgb(206,107,13)" fg:x="65215140899" fg:w="5854066332"/><text x="9.7025%" y="847.50"></text></g><g><title>cargo_tarpaulin::process_handling::collect_coverage (5,854,066,332 samples, 0.85%)</title><rect x="9.4525%" y="821" width="0.8485%" height="15" fill="rgb(250,100,44)" fg:x="65215140899" fg:w="5854066332"/><text x="9.7025%" y="831.50"></text></g><g><title>cargo_tarpaulin::statemachine::TestState::step (5,854,066,332 samples, 0.85%)</title><rect x="9.4525%" y="805" width="0.8485%" height="15" fill="rgb(231,147,38)" fg:x="65215140899" fg:w="5854066332"/><text x="9.7025%" y="815.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn cargo_tarpaulin::statemachine::StateData&gt; as cargo_tarpaulin::statemachine::StateData&gt;::wait (5,854,066,332 samples, 0.85%)</title><rect x="9.4525%" y="789" width="0.8485%" height="15" fill="rgb(229,8,40)" fg:x="65215140899" fg:w="5854066332"/><text x="9.7025%" y="799.50"></text></g><g><title>&lt;cargo_tarpaulin::statemachine::instrumented::LlvmInstrumentedData as cargo_tarpaulin::statemachine::StateData&gt;::wait (5,854,066,332 samples, 0.85%)</title><rect x="9.4525%" y="773" width="0.8485%" height="15" fill="rgb(221,135,30)" fg:x="65215140899" fg:w="5854066332"/><text x="9.7025%" y="783.50"></text></g><g><title>__libc_start_main@@GLIBC_2.34 (5,920,840,078 samples, 0.86%)</title><rect x="9.4525%" y="1157" width="0.8582%" height="15" fill="rgb(249,193,18)" fg:x="65215140899" fg:w="5920840078"/><text x="9.7025%" y="1167.50"></text></g><g><title>__libc_start_call_main (5,920,840,078 samples, 0.86%)</title><rect x="9.4525%" y="1141" width="0.8582%" height="15" fill="rgb(209,133,39)" fg:x="65215140899" fg:w="5920840078"/><text x="9.7025%" y="1151.50"></text></g><g><title>main (5,920,840,078 samples, 0.86%)</title><rect x="9.4525%" y="1125" width="0.8582%" height="15" fill="rgb(232,100,14)" fg:x="65215140899" fg:w="5920840078"/><text x="9.7025%" y="1135.50"></text></g><g><title>std::rt::lang_start_internal (5,920,840,078 samples, 0.86%)</title><rect x="9.4525%" y="1109" width="0.8582%" height="15" fill="rgb(224,185,1)" fg:x="65215140899" fg:w="5920840078"/><text x="9.7025%" y="1119.50"></text></g><g><title>std::panic::catch_unwind (5,920,840,078 samples, 0.86%)</title><rect x="9.4525%" y="1093" width="0.8582%" height="15" fill="rgb(223,139,8)" fg:x="65215140899" fg:w="5920840078"/><text x="9.7025%" y="1103.50"></text></g><g><title>std::panicking::try (5,920,840,078 samples, 0.86%)</title><rect x="9.4525%" y="1077" width="0.8582%" height="15" fill="rgb(232,213,38)" fg:x="65215140899" fg:w="5920840078"/><text x="9.7025%" y="1087.50"></text></g><g><title>std::panicking::try::do_call (5,920,840,078 samples, 0.86%)</title><rect x="9.4525%" y="1061" width="0.8582%" height="15" fill="rgb(207,94,22)" fg:x="65215140899" fg:w="5920840078"/><text x="9.7025%" y="1071.50"></text></g><g><title>std::rt::lang_start_internal::_{{closure}} (5,920,840,078 samples, 0.86%)</title><rect x="9.4525%" y="1045" width="0.8582%" height="15" fill="rgb(219,183,54)" fg:x="65215140899" fg:w="5920840078"/><text x="9.7025%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (5,920,840,078 samples, 0.86%)</title><rect x="9.4525%" y="1029" width="0.8582%" height="15" fill="rgb(216,185,54)" fg:x="65215140899" fg:w="5920840078"/><text x="9.7025%" y="1039.50"></text></g><g><title>std::panicking::try (5,920,840,078 samples, 0.86%)</title><rect x="9.4525%" y="1013" width="0.8582%" height="15" fill="rgb(254,217,39)" fg:x="65215140899" fg:w="5920840078"/><text x="9.7025%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (5,920,840,078 samples, 0.86%)</title><rect x="9.4525%" y="997" width="0.8582%" height="15" fill="rgb(240,178,23)" fg:x="65215140899" fg:w="5920840078"/><text x="9.7025%" y="1007.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (5,920,840,078 samples, 0.86%)</title><rect x="9.4525%" y="981" width="0.8582%" height="15" fill="rgb(218,11,47)" fg:x="65215140899" fg:w="5920840078"/><text x="9.7025%" y="991.50"></text></g><g><title>_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h05240483b460bc9eE.llvm.17468850352284423155 (5,920,840,078 samples, 0.86%)</title><rect x="9.4525%" y="965" width="0.8582%" height="15" fill="rgb(218,51,51)" fg:x="65215140899" fg:w="5920840078"/><text x="9.7025%" y="975.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (5,920,840,078 samples, 0.86%)</title><rect x="9.4525%" y="949" width="0.8582%" height="15" fill="rgb(238,126,27)" fg:x="65215140899" fg:w="5920840078"/><text x="9.7025%" y="959.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5,920,840,078 samples, 0.86%)</title><rect x="9.4525%" y="933" width="0.8582%" height="15" fill="rgb(249,202,22)" fg:x="65215140899" fg:w="5920840078"/><text x="9.7025%" y="943.50"></text></g><g><title>cargo_tarpaulin::main (5,920,840,078 samples, 0.86%)</title><rect x="9.4525%" y="917" width="0.8582%" height="15" fill="rgb(254,195,49)" fg:x="65215140899" fg:w="5920840078"/><text x="9.7025%" y="927.50"></text></g><g><title>cargo_tarpaulin::run (5,920,840,078 samples, 0.86%)</title><rect x="9.4525%" y="901" width="0.8582%" height="15" fill="rgb(208,123,14)" fg:x="65215140899" fg:w="5920840078"/><text x="9.7025%" y="911.50"></text></g><g><title>cargo_tarpaulin::collect_tracemap (5,920,840,078 samples, 0.86%)</title><rect x="9.4525%" y="885" width="0.8582%" height="15" fill="rgb(224,200,8)" fg:x="65215140899" fg:w="5920840078"/><text x="9.7025%" y="895.50"></text></g><g><title>cargo_tarpaulin::trace (5,920,840,078 samples, 0.86%)</title><rect x="9.4525%" y="869" width="0.8582%" height="15" fill="rgb(217,61,36)" fg:x="65215140899" fg:w="5920840078"/><text x="9.7025%" y="879.50"></text></g><g><title>cargo_tarpaulin::launch_tarpaulin (5,920,840,078 samples, 0.86%)</title><rect x="9.4525%" y="853" width="0.8582%" height="15" fill="rgb(206,35,45)" fg:x="65215140899" fg:w="5920840078"/><text x="9.7025%" y="863.50"></text></g><g><title>__memcmp_evex_movbe (2,094,125,763 samples, 0.30%)</title><rect x="10.3107%" y="1157" width="0.3035%" height="15" fill="rgb(217,65,33)" fg:x="71135980977" fg:w="2094125763"/><text x="10.5607%" y="1167.50"></text></g><g><title>__memmove_avx512_unaligned_erms (2,059,293,662 samples, 0.30%)</title><rect x="10.6142%" y="1157" width="0.2985%" height="15" fill="rgb(222,158,48)" fg:x="73230106740" fg:w="2059293662"/><text x="10.8642%" y="1167.50"></text></g><g><title>__rdl_alloc (884,638,598 samples, 0.13%)</title><rect x="10.9240%" y="1157" width="0.1282%" height="15" fill="rgb(254,2,54)" fg:x="75367394024" fg:w="884638598"/><text x="11.1740%" y="1167.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (776,078,510 samples, 0.11%)</title><rect x="10.9397%" y="1141" width="0.1125%" height="15" fill="rgb(250,143,38)" fg:x="75475954112" fg:w="776078510"/><text x="11.1897%" y="1151.50"></text></g><g><title>__rdl_dealloc (231,299,596 samples, 0.03%)</title><rect x="11.0524%" y="1157" width="0.0335%" height="15" fill="rgb(248,25,0)" fg:x="76253163079" fg:w="231299596"/><text x="11.3024%" y="1167.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (143,963,866 samples, 0.02%)</title><rect x="11.0650%" y="1141" width="0.0209%" height="15" fill="rgb(206,152,27)" fg:x="76340498809" fg:w="143963866"/><text x="11.3150%" y="1151.50"></text></g><g><title>__rdl_realloc (73,783,094 samples, 0.01%)</title><rect x="11.0859%" y="1157" width="0.0107%" height="15" fill="rgb(240,77,30)" fg:x="76484462675" fg:w="73783094"/><text x="11.3359%" y="1167.50"></text></g><g><title>__rust_alloc (107,939,870 samples, 0.02%)</title><rect x="11.0966%" y="1157" width="0.0156%" height="15" fill="rgb(231,5,3)" fg:x="76558245769" fg:w="107939870"/><text x="11.3466%" y="1167.50"></text></g><g><title>__rust_dealloc (72,391,394 samples, 0.01%)</title><rect x="11.1127%" y="1157" width="0.0105%" height="15" fill="rgb(207,226,32)" fg:x="76669483859" fg:w="72391394"/><text x="11.3627%" y="1167.50"></text></g><g><title>cargo_tarpaulin::traces::TraceMap::contains_location (127,539,696 samples, 0.02%)</title><rect x="11.1307%" y="1141" width="0.0185%" height="15" fill="rgb(222,207,47)" fg:x="76793248711" fg:w="127539696"/><text x="11.3807%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (127,539,696 samples, 0.02%)</title><rect x="11.1307%" y="1125" width="0.0185%" height="15" fill="rgb(229,115,45)" fg:x="76793248711" fg:w="127539696"/><text x="11.3807%" y="1135.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (127,539,696 samples, 0.02%)</title><rect x="11.1307%" y="1109" width="0.0185%" height="15" fill="rgb(224,191,6)" fg:x="76793248711" fg:w="127539696"/><text x="11.3807%" y="1119.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (121,987,743 samples, 0.02%)</title><rect x="11.1315%" y="1093" width="0.0177%" height="15" fill="rgb(230,227,24)" fg:x="76798800664" fg:w="121987743"/><text x="11.3815%" y="1103.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (121,987,743 samples, 0.02%)</title><rect x="11.1315%" y="1077" width="0.0177%" height="15" fill="rgb(228,80,19)" fg:x="76798800664" fg:w="121987743"/><text x="11.3815%" y="1087.50"></text></g><g><title>_fini (187,007,316 samples, 0.03%)</title><rect x="11.1251%" y="1157" width="0.0271%" height="15" fill="rgb(247,229,0)" fg:x="76754640784" fg:w="187007316"/><text x="11.3751%" y="1167.50"></text></g><g><title>_int_free (1,494,680,580 samples, 0.22%)</title><rect x="11.1522%" y="1157" width="0.2166%" height="15" fill="rgb(237,194,15)" fg:x="76941648100" fg:w="1494680580"/><text x="11.4022%" y="1167.50"></text></g><g><title>_int_free_create_chunk (274,978,482 samples, 0.04%)</title><rect x="11.3688%" y="1157" width="0.0399%" height="15" fill="rgb(219,203,20)" fg:x="78436328680" fg:w="274978482"/><text x="11.6188%" y="1167.50"></text></g><g><title>_int_free_merge_chunk (286,684,085 samples, 0.04%)</title><rect x="11.4124%" y="1157" width="0.0416%" height="15" fill="rgb(234,128,8)" fg:x="78736787665" fg:w="286684085"/><text x="11.6624%" y="1167.50"></text></g><g><title>_int_malloc (3,172,142,019 samples, 0.46%)</title><rect x="11.4539%" y="1157" width="0.4598%" height="15" fill="rgb(248,202,8)" fg:x="79023471750" fg:w="3172142019"/><text x="11.7039%" y="1167.50"></text></g><g><title>_int_realloc (288,984,770 samples, 0.04%)</title><rect x="11.9137%" y="1157" width="0.0419%" height="15" fill="rgb(206,104,37)" fg:x="82195613769" fg:w="288984770"/><text x="12.1637%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (89,204,067 samples, 0.01%)</title><rect x="11.9557%" y="853" width="0.0129%" height="15" fill="rgb(223,8,27)" fg:x="82485469182" fg:w="89204067"/><text x="12.2057%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (89,204,067 samples, 0.01%)</title><rect x="11.9557%" y="837" width="0.0129%" height="15" fill="rgb(216,217,28)" fg:x="82485469182" fg:w="89204067"/><text x="12.2057%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (89,204,067 samples, 0.01%)</title><rect x="11.9557%" y="821" width="0.0129%" height="15" fill="rgb(249,199,1)" fg:x="82485469182" fg:w="89204067"/><text x="12.2057%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (89,204,067 samples, 0.01%)</title><rect x="11.9557%" y="805" width="0.0129%" height="15" fill="rgb(240,85,17)" fg:x="82485469182" fg:w="89204067"/><text x="12.2057%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (89,204,067 samples, 0.01%)</title><rect x="11.9557%" y="789" width="0.0129%" height="15" fill="rgb(206,108,45)" fg:x="82485469182" fg:w="89204067"/><text x="12.2057%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (89,204,067 samples, 0.01%)</title><rect x="11.9557%" y="773" width="0.0129%" height="15" fill="rgb(245,210,41)" fg:x="82485469182" fg:w="89204067"/><text x="12.2057%" y="783.50"></text></g><g><title>cargo_tarpaulin::source_analysis::LineAnalysis::should_ignore (110,716,888 samples, 0.02%)</title><rect x="11.9866%" y="741" width="0.0160%" height="15" fill="rgb(206,13,37)" fg:x="82698434687" fg:w="110716888"/><text x="12.2366%" y="751.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (98,640,290 samples, 0.01%)</title><rect x="11.9883%" y="725" width="0.0143%" height="15" fill="rgb(250,61,18)" fg:x="82710511285" fg:w="98640290"/><text x="12.2383%" y="735.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (98,640,290 samples, 0.01%)</title><rect x="11.9883%" y="709" width="0.0143%" height="15" fill="rgb(235,172,48)" fg:x="82710511285" fg:w="98640290"/><text x="12.2383%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (98,640,290 samples, 0.01%)</title><rect x="11.9883%" y="693" width="0.0143%" height="15" fill="rgb(249,201,17)" fg:x="82710511285" fg:w="98640290"/><text x="12.2383%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (98,640,290 samples, 0.01%)</title><rect x="11.9883%" y="677" width="0.0143%" height="15" fill="rgb(219,208,6)" fg:x="82710511285" fg:w="98640290"/><text x="12.2383%" y="687.50"></text></g><g><title>_int_free (80,718,668 samples, 0.01%)</title><rect x="12.0330%" y="485" width="0.0117%" height="15" fill="rgb(248,31,23)" fg:x="83018487817" fg:w="80718668"/><text x="12.2830%" y="495.50"></text></g><g><title>_int_free_create_chunk (125,177,177 samples, 0.02%)</title><rect x="12.0447%" y="485" width="0.0181%" height="15" fill="rgb(245,15,42)" fg:x="83099206485" fg:w="125177177"/><text x="12.2947%" y="495.50"></text></g><g><title>_int_free_merge_chunk (291,649,686 samples, 0.04%)</title><rect x="12.0657%" y="485" width="0.0423%" height="15" fill="rgb(222,217,39)" fg:x="83244403499" fg:w="291649686"/><text x="12.3157%" y="495.50"></text></g><g><title>cfree@GLIBC_2.2.5 (232,313,708 samples, 0.03%)</title><rect x="12.1080%" y="485" width="0.0337%" height="15" fill="rgb(210,219,27)" fg:x="83536053185" fg:w="232313708"/><text x="12.3580%" y="495.50"></text></g><g><title>cfree@GLIBC_2.2.5 (857,837,494 samples, 0.12%)</title><rect x="12.0217%" y="501" width="0.1243%" height="15" fill="rgb(252,166,36)" fg:x="82940682605" fg:w="857837494"/><text x="12.2717%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;llvm_profparser::coverage::CounterMappingRegion&gt;&gt; (987,835,246 samples, 0.14%)</title><rect x="12.0042%" y="597" width="0.1432%" height="15" fill="rgb(245,132,34)" fg:x="82819885883" fg:w="987835246"/><text x="12.2542%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;llvm_profparser::coverage::CounterMappingRegion&gt;&gt; (987,835,246 samples, 0.14%)</title><rect x="12.0042%" y="581" width="0.1432%" height="15" fill="rgb(236,54,3)" fg:x="82819885883" fg:w="987835246"/><text x="12.2542%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (987,835,246 samples, 0.14%)</title><rect x="12.0042%" y="565" width="0.1432%" height="15" fill="rgb(241,173,43)" fg:x="82819885883" fg:w="987835246"/><text x="12.2542%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (986,890,835 samples, 0.14%)</title><rect x="12.0043%" y="549" width="0.1430%" height="15" fill="rgb(215,190,9)" fg:x="82820830294" fg:w="986890835"/><text x="12.2543%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (986,890,835 samples, 0.14%)</title><rect x="12.0043%" y="533" width="0.1430%" height="15" fill="rgb(242,101,16)" fg:x="82820830294" fg:w="986890835"/><text x="12.2543%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (986,890,835 samples, 0.14%)</title><rect x="12.0043%" y="517" width="0.1430%" height="15" fill="rgb(223,190,21)" fg:x="82820830294" fg:w="986890835"/><text x="12.2543%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,118,441,605 samples, 0.16%)</title><rect x="12.0042%" y="645" width="0.1621%" height="15" fill="rgb(215,228,25)" fg:x="82819885883" fg:w="1118441605"/><text x="12.2542%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[llvm_profparser::coverage::FunctionRecordV3]&gt; (1,118,441,605 samples, 0.16%)</title><rect x="12.0042%" y="629" width="0.1621%" height="15" fill="rgb(225,36,22)" fg:x="82819885883" fg:w="1118441605"/><text x="12.2542%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;llvm_profparser::coverage::FunctionRecordV3&gt; (1,118,441,605 samples, 0.16%)</title><rect x="12.0042%" y="613" width="0.1621%" height="15" fill="rgb(251,106,46)" fg:x="82819885883" fg:w="1118441605"/><text x="12.2542%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;llvm_profparser::coverage::Expression&gt;&gt; (130,606,359 samples, 0.02%)</title><rect x="12.1474%" y="597" width="0.0189%" height="15" fill="rgb(208,90,1)" fg:x="83807721129" fg:w="130606359"/><text x="12.3974%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;llvm_profparser::coverage::Expression&gt;&gt; (130,606,359 samples, 0.02%)</title><rect x="12.1474%" y="581" width="0.0189%" height="15" fill="rgb(243,10,4)" fg:x="83807721129" fg:w="130606359"/><text x="12.3974%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (130,606,359 samples, 0.02%)</title><rect x="12.1474%" y="565" width="0.0189%" height="15" fill="rgb(212,137,27)" fg:x="83807721129" fg:w="130606359"/><text x="12.3974%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (130,606,359 samples, 0.02%)</title><rect x="12.1474%" y="549" width="0.0189%" height="15" fill="rgb(231,220,49)" fg:x="83807721129" fg:w="130606359"/><text x="12.3974%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (130,606,359 samples, 0.02%)</title><rect x="12.1474%" y="533" width="0.0189%" height="15" fill="rgb(237,96,20)" fg:x="83807721129" fg:w="130606359"/><text x="12.3974%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (130,606,359 samples, 0.02%)</title><rect x="12.1474%" y="517" width="0.0189%" height="15" fill="rgb(239,229,30)" fg:x="83807721129" fg:w="130606359"/><text x="12.3974%" y="527.50"></text></g><g><title>cfree@GLIBC_2.2.5 (120,350,299 samples, 0.02%)</title><rect x="12.1488%" y="501" width="0.0174%" height="15" fill="rgb(219,65,33)" fg:x="83817977189" fg:w="120350299"/><text x="12.3988%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;llvm_profparser::coverage::FunctionRecordV3&gt;&gt; (1,164,713,158 samples, 0.17%)</title><rect x="12.0042%" y="661" width="0.1688%" height="15" fill="rgb(243,134,7)" fg:x="82819885883" fg:w="1164713158"/><text x="12.2542%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;llvm_profparser::coverage::coverage_mapping::CoverageMapping&gt; (1,189,632,808 samples, 0.17%)</title><rect x="12.0042%" y="741" width="0.1724%" height="15" fill="rgb(216,177,54)" fg:x="82819885883" fg:w="1189632808"/><text x="12.2542%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;llvm_profparser::coverage::CoverageMappingInfo&gt;&gt; (1,189,632,808 samples, 0.17%)</title><rect x="12.0042%" y="725" width="0.1724%" height="15" fill="rgb(211,160,20)" fg:x="82819885883" fg:w="1189632808"/><text x="12.2542%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,189,632,808 samples, 0.17%)</title><rect x="12.0042%" y="709" width="0.1724%" height="15" fill="rgb(239,85,39)" fg:x="82819885883" fg:w="1189632808"/><text x="12.2542%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[llvm_profparser::coverage::CoverageMappingInfo]&gt; (1,189,632,808 samples, 0.17%)</title><rect x="12.0042%" y="693" width="0.1724%" height="15" fill="rgb(232,125,22)" fg:x="82819885883" fg:w="1189632808"/><text x="12.2542%" y="703.50"></text></g><g><title>_ZN4core3ptr67drop_in_place$LT$llvm_profparser..coverage..CoverageMappingInfo$GT$17h54504ed87c29848dE.llvm.10117868062062457895 (1,189,632,808 samples, 0.17%)</title><rect x="12.0042%" y="677" width="0.1724%" height="15" fill="rgb(244,57,34)" fg:x="82819885883" fg:w="1189632808"/><text x="12.2542%" y="687.50"></text></g><g><title>_int_free (77,858,218 samples, 0.01%)</title><rect x="12.2064%" y="517" width="0.0113%" height="15" fill="rgb(214,203,32)" fg:x="84214747119" fg:w="77858218"/><text x="12.4564%" y="527.50"></text></g><g><title>_int_free_create_chunk (594,707,127 samples, 0.09%)</title><rect x="12.2176%" y="517" width="0.0862%" height="15" fill="rgb(207,58,43)" fg:x="84292605337" fg:w="594707127"/><text x="12.4676%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1,063,236,136 samples, 0.15%)</title><rect x="12.1824%" y="661" width="0.1541%" height="15" fill="rgb(215,193,15)" fg:x="84049741358" fg:w="1063236136"/><text x="12.4324%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,062,102,336 samples, 0.15%)</title><rect x="12.1826%" y="645" width="0.1539%" height="15" fill="rgb(232,15,44)" fg:x="84050875158" fg:w="1062102336"/><text x="12.4326%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,062,102,336 samples, 0.15%)</title><rect x="12.1826%" y="629" width="0.1539%" height="15" fill="rgb(212,3,48)" fg:x="84050875158" fg:w="1062102336"/><text x="12.4326%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,062,102,336 samples, 0.15%)</title><rect x="12.1826%" y="613" width="0.1539%" height="15" fill="rgb(218,128,7)" fg:x="84050875158" fg:w="1062102336"/><text x="12.4326%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,062,102,336 samples, 0.15%)</title><rect x="12.1826%" y="597" width="0.1539%" height="15" fill="rgb(226,216,39)" fg:x="84050875158" fg:w="1062102336"/><text x="12.4326%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,060,918,518 samples, 0.15%)</title><rect x="12.1828%" y="581" width="0.1538%" height="15" fill="rgb(243,47,51)" fg:x="84052058976" fg:w="1060918518"/><text x="12.4328%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,060,918,518 samples, 0.15%)</title><rect x="12.1828%" y="565" width="0.1538%" height="15" fill="rgb(241,183,40)" fg:x="84052058976" fg:w="1060918518"/><text x="12.4328%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (1,060,918,518 samples, 0.15%)</title><rect x="12.1828%" y="549" width="0.1538%" height="15" fill="rgb(231,217,32)" fg:x="84052058976" fg:w="1060918518"/><text x="12.4328%" y="559.50"></text></g><g><title>cfree@GLIBC_2.2.5 (949,401,968 samples, 0.14%)</title><rect x="12.1989%" y="533" width="0.1376%" height="15" fill="rgb(229,61,38)" fg:x="84163575526" fg:w="949401968"/><text x="12.4489%" y="543.50"></text></g><g><title>cfree@GLIBC_2.2.5 (169,072,139 samples, 0.02%)</title><rect x="12.3120%" y="517" width="0.0245%" height="15" fill="rgb(225,210,5)" fg:x="84943905355" fg:w="169072139"/><text x="12.5620%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,469,346,263 samples, 0.21%)</title><rect x="12.1823%" y="709" width="0.2130%" height="15" fill="rgb(231,79,45)" fg:x="84048609756" fg:w="1469346263"/><text x="12.4323%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[llvm_profparser::instrumentation_profile::types::NamedInstrProfRecord]&gt; (1,469,346,263 samples, 0.21%)</title><rect x="12.1823%" y="693" width="0.2130%" height="15" fill="rgb(224,100,7)" fg:x="84048609756" fg:w="1469346263"/><text x="12.4323%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;llvm_profparser::instrumentation_profile::types::NamedInstrProfRecord&gt; (1,468,214,661 samples, 0.21%)</title><rect x="12.1824%" y="677" width="0.2128%" height="15" fill="rgb(241,198,18)" fg:x="84049741358" fg:w="1468214661"/><text x="12.4324%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;llvm_profparser::instrumentation_profile::types::InstrProfRecord&gt; (404,978,525 samples, 0.06%)</title><rect x="12.3365%" y="661" width="0.0587%" height="15" fill="rgb(252,97,53)" fg:x="85112977494" fg:w="404978525"/><text x="12.5865%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u64&gt;&gt; (404,978,525 samples, 0.06%)</title><rect x="12.3365%" y="645" width="0.0587%" height="15" fill="rgb(220,88,7)" fg:x="85112977494" fg:w="404978525"/><text x="12.5865%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u64&gt;&gt; (404,978,525 samples, 0.06%)</title><rect x="12.3365%" y="629" width="0.0587%" height="15" fill="rgb(213,176,14)" fg:x="85112977494" fg:w="404978525"/><text x="12.5865%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (404,978,525 samples, 0.06%)</title><rect x="12.3365%" y="613" width="0.0587%" height="15" fill="rgb(246,73,7)" fg:x="85112977494" fg:w="404978525"/><text x="12.5865%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (404,978,525 samples, 0.06%)</title><rect x="12.3365%" y="597" width="0.0587%" height="15" fill="rgb(245,64,36)" fg:x="85112977494" fg:w="404978525"/><text x="12.5865%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (404,978,525 samples, 0.06%)</title><rect x="12.3365%" y="581" width="0.0587%" height="15" fill="rgb(245,80,10)" fg:x="85112977494" fg:w="404978525"/><text x="12.5865%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (404,978,525 samples, 0.06%)</title><rect x="12.3365%" y="565" width="0.0587%" height="15" fill="rgb(232,107,50)" fg:x="85112977494" fg:w="404978525"/><text x="12.5865%" y="575.50"></text></g><g><title>cfree@GLIBC_2.2.5 (354,513,871 samples, 0.05%)</title><rect x="12.3439%" y="549" width="0.0514%" height="15" fill="rgb(253,3,0)" fg:x="85163442148" fg:w="354513871"/><text x="12.5939%" y="559.50"></text></g><g><title>cfree@GLIBC_2.2.5 (130,147,236 samples, 0.02%)</title><rect x="12.3764%" y="533" width="0.0189%" height="15" fill="rgb(212,99,53)" fg:x="85387808783" fg:w="130147236"/><text x="12.6264%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;llvm_profparser::instrumentation_profile::types::NamedInstrProfRecord&gt;&gt; (1,477,613,372 samples, 0.21%)</title><rect x="12.1823%" y="725" width="0.2142%" height="15" fill="rgb(249,111,54)" fg:x="84048609756" fg:w="1477613372"/><text x="12.4323%" y="735.50"></text></g><g><title>_int_free (187,807,110 samples, 0.03%)</title><rect x="12.3985%" y="453" width="0.0272%" height="15" fill="rgb(249,55,30)" fg:x="85540599265" fg:w="187807110"/><text x="12.6485%" y="463.50"></text></g><g><title>_int_free_create_chunk (246,523,939 samples, 0.04%)</title><rect x="12.4257%" y="453" width="0.0357%" height="15" fill="rgb(237,47,42)" fg:x="85728406375" fg:w="246523939"/><text x="12.6757%" y="463.50"></text></g><g><title>_int_free_merge_chunk (123,285,499 samples, 0.02%)</title><rect x="12.4615%" y="453" width="0.0179%" height="15" fill="rgb(211,20,18)" fg:x="85974930314" fg:w="123285499"/><text x="12.7115%" y="463.50"></text></g><g><title>_int_free (352,145,249 samples, 0.05%)</title><rect x="12.4918%" y="437" width="0.0510%" height="15" fill="rgb(231,203,46)" fg:x="86184435814" fg:w="352145249"/><text x="12.7418%" y="447.50"></text></g><g><title>_int_free_create_chunk (358,125,555 samples, 0.05%)</title><rect x="12.5429%" y="437" width="0.0519%" height="15" fill="rgb(237,142,3)" fg:x="86536581063" fg:w="358125555"/><text x="12.7929%" y="447.50"></text></g><g><title>_int_free (91,288,488 samples, 0.01%)</title><rect x="12.6312%" y="421" width="0.0132%" height="15" fill="rgb(241,107,1)" fg:x="87146116155" fg:w="91288488"/><text x="12.8812%" y="431.50"></text></g><g><title>_int_free_create_chunk (82,298,811 samples, 0.01%)</title><rect x="12.6445%" y="421" width="0.0119%" height="15" fill="rgb(229,83,13)" fg:x="87237404643" fg:w="82298811"/><text x="12.8945%" y="431.50"></text></g><g><title>_int_free_merge_chunk (86,218,317 samples, 0.01%)</title><rect x="12.6564%" y="421" width="0.0125%" height="15" fill="rgb(241,91,40)" fg:x="87319703454" fg:w="86218317"/><text x="12.9064%" y="431.50"></text></g><g><title>_int_free_merge_chunk (611,699,027 samples, 0.09%)</title><rect x="12.5948%" y="437" width="0.0887%" height="15" fill="rgb(225,3,45)" fg:x="86894706618" fg:w="611699027"/><text x="12.8448%" y="447.50"></text></g><g><title>cfree@GLIBC_2.2.5 (138,047,128 samples, 0.02%)</title><rect x="12.6856%" y="437" width="0.0200%" height="15" fill="rgb(244,223,14)" fg:x="87521136082" fg:w="138047128"/><text x="12.9356%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;llvm_profparser::instrumentation_profile::types::InstrumentationProfile&gt; (82,687,852 samples, 0.01%)</title><rect x="12.7056%" y="437" width="0.0120%" height="15" fill="rgb(224,124,37)" fg:x="87659183210" fg:w="82687852"/><text x="12.9556%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;llvm_profparser::instrumentation_profile::types::Symtab&gt; (82,687,852 samples, 0.01%)</title><rect x="12.7056%" y="421" width="0.0120%" height="15" fill="rgb(251,171,30)" fg:x="87659183210" fg:w="82687852"/><text x="12.9556%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u64,alloc::string::String,core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;&gt; (82,687,852 samples, 0.01%)</title><rect x="12.7056%" y="405" width="0.0120%" height="15" fill="rgb(236,46,54)" fg:x="87659183210" fg:w="82687852"/><text x="12.9556%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u64,alloc::string::String,core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;&gt; (82,687,852 samples, 0.01%)</title><rect x="12.7056%" y="389" width="0.0120%" height="15" fill="rgb(245,213,5)" fg:x="87659183210" fg:w="82687852"/><text x="12.9556%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u64,alloc::string::String)&gt;&gt; (82,687,852 samples, 0.01%)</title><rect x="12.7056%" y="373" width="0.0120%" height="15" fill="rgb(230,144,27)" fg:x="87659183210" fg:w="82687852"/><text x="12.9556%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (82,687,852 samples, 0.01%)</title><rect x="12.7056%" y="357" width="0.0120%" height="15" fill="rgb(220,86,6)" fg:x="87659183210" fg:w="82687852"/><text x="12.9556%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (82,687,852 samples, 0.01%)</title><rect x="12.7056%" y="341" width="0.0120%" height="15" fill="rgb(240,20,13)" fg:x="87659183210" fg:w="82687852"/><text x="12.9556%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (82,687,852 samples, 0.01%)</title><rect x="12.7056%" y="325" width="0.0120%" height="15" fill="rgb(217,89,34)" fg:x="87659183210" fg:w="82687852"/><text x="12.9556%" y="335.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1,723,559,432 samples, 0.25%)</title><rect x="12.4793%" y="453" width="0.2498%" height="15" fill="rgb(229,13,5)" fg:x="86098215813" fg:w="1723559432"/><text x="12.7293%" y="463.50"></text></g><g><title>unlink_chunk.isra.0 (78,367,839 samples, 0.01%)</title><rect x="12.7178%" y="437" width="0.0114%" height="15" fill="rgb(244,67,35)" fg:x="87743407406" fg:w="78367839"/><text x="12.9678%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;llvm_profparser::instrumentation_profile::types::Symtab&gt; (2,386,662,008 samples, 0.35%)</title><rect x="12.3964%" y="725" width="0.3459%" height="15" fill="rgb(221,40,2)" fg:x="85526223128" fg:w="2386662008"/><text x="12.6464%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u64,alloc::string::String,core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;&gt; (2,386,662,008 samples, 0.35%)</title><rect x="12.3964%" y="709" width="0.3459%" height="15" fill="rgb(237,157,21)" fg:x="85526223128" fg:w="2386662008"/><text x="12.6464%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u64,alloc::string::String,core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;&gt; (2,386,662,008 samples, 0.35%)</title><rect x="12.3964%" y="693" width="0.3459%" height="15" fill="rgb(222,94,11)" fg:x="85526223128" fg:w="2386662008"/><text x="12.6464%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u64,alloc::string::String)&gt;&gt; (2,386,662,008 samples, 0.35%)</title><rect x="12.3964%" y="677" width="0.3459%" height="15" fill="rgb(249,113,6)" fg:x="85526223128" fg:w="2386662008"/><text x="12.6464%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,386,662,008 samples, 0.35%)</title><rect x="12.3964%" y="661" width="0.3459%" height="15" fill="rgb(238,137,36)" fg:x="85526223128" fg:w="2386662008"/><text x="12.6464%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2,386,662,008 samples, 0.35%)</title><rect x="12.3964%" y="645" width="0.3459%" height="15" fill="rgb(210,102,26)" fg:x="85526223128" fg:w="2386662008"/><text x="12.6464%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2,386,662,008 samples, 0.35%)</title><rect x="12.3964%" y="629" width="0.3459%" height="15" fill="rgb(218,30,30)" fg:x="85526223128" fg:w="2386662008"/><text x="12.6464%" y="639.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2,384,965,282 samples, 0.35%)</title><rect x="12.3967%" y="613" width="0.3457%" height="15" fill="rgb(214,67,26)" fg:x="85527919854" fg:w="2384965282"/><text x="12.6467%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2,384,965,282 samples, 0.35%)</title><rect x="12.3967%" y="597" width="0.3457%" height="15" fill="rgb(251,9,53)" fg:x="85527919854" fg:w="2384965282"/><text x="12.6467%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u64,alloc::string::String)&gt; (2,384,965,282 samples, 0.35%)</title><rect x="12.3967%" y="581" width="0.3457%" height="15" fill="rgb(228,204,25)" fg:x="85527919854" fg:w="2384965282"/><text x="12.6467%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,384,965,282 samples, 0.35%)</title><rect x="12.3967%" y="565" width="0.3457%" height="15" fill="rgb(207,153,8)" fg:x="85527919854" fg:w="2384965282"/><text x="12.6467%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,384,965,282 samples, 0.35%)</title><rect x="12.3967%" y="549" width="0.3457%" height="15" fill="rgb(242,9,16)" fg:x="85527919854" fg:w="2384965282"/><text x="12.6467%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,384,965,282 samples, 0.35%)</title><rect x="12.3967%" y="533" width="0.3457%" height="15" fill="rgb(217,211,10)" fg:x="85527919854" fg:w="2384965282"/><text x="12.6467%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,384,965,282 samples, 0.35%)</title><rect x="12.3967%" y="517" width="0.3457%" height="15" fill="rgb(219,228,52)" fg:x="85527919854" fg:w="2384965282"/><text x="12.6467%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,384,965,282 samples, 0.35%)</title><rect x="12.3967%" y="501" width="0.3457%" height="15" fill="rgb(231,92,29)" fg:x="85527919854" fg:w="2384965282"/><text x="12.6467%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,384,965,282 samples, 0.35%)</title><rect x="12.3967%" y="485" width="0.3457%" height="15" fill="rgb(232,8,23)" fg:x="85527919854" fg:w="2384965282"/><text x="12.6467%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (2,384,965,282 samples, 0.35%)</title><rect x="12.3967%" y="469" width="0.3457%" height="15" fill="rgb(216,211,34)" fg:x="85527919854" fg:w="2384965282"/><text x="12.6467%" y="479.50"></text></g><g><title>_int_free_create_chunk (212,270,512 samples, 0.03%)</title><rect x="12.7535%" y="469" width="0.0308%" height="15" fill="rgb(236,151,0)" fg:x="87989589780" fg:w="212270512"/><text x="13.0035%" y="479.50"></text></g><g><title>_int_free (208,880,337 samples, 0.03%)</title><rect x="12.8047%" y="453" width="0.0303%" height="15" fill="rgb(209,168,3)" fg:x="88343128444" fg:w="208880337"/><text x="13.0547%" y="463.50"></text></g><g><title>_int_free_create_chunk (282,568,834 samples, 0.04%)</title><rect x="12.8350%" y="453" width="0.0410%" height="15" fill="rgb(208,129,28)" fg:x="88552008781" fg:w="282568834"/><text x="13.0850%" y="463.50"></text></g><g><title>_int_free (128,863,198 samples, 0.02%)</title><rect x="12.8906%" y="437" width="0.0187%" height="15" fill="rgb(229,78,22)" fg:x="88935286438" fg:w="128863198"/><text x="13.1406%" y="447.50"></text></g><g><title>_int_free_create_chunk (218,324,885 samples, 0.03%)</title><rect x="12.9092%" y="437" width="0.0316%" height="15" fill="rgb(228,187,13)" fg:x="89064149636" fg:w="218324885"/><text x="13.1592%" y="447.50"></text></g><g><title>_int_free_merge_chunk (125,193,213 samples, 0.02%)</title><rect x="12.9412%" y="437" width="0.0181%" height="15" fill="rgb(240,119,24)" fg:x="89284515389" fg:w="125193213"/><text x="13.1912%" y="447.50"></text></g><g><title>cfree@GLIBC_2.2.5 (110,599,916 samples, 0.02%)</title><rect x="12.9621%" y="437" width="0.0160%" height="15" fill="rgb(209,194,42)" fg:x="89429122115" fg:w="110599916"/><text x="13.2121%" y="447.50"></text></g><g><title>_int_free_merge_chunk (900,509,923 samples, 0.13%)</title><rect x="12.8761%" y="453" width="0.1305%" height="15" fill="rgb(247,200,46)" fg:x="88835341752" fg:w="900509923"/><text x="13.1261%" y="463.50"></text></g><g><title>unlink_chunk.isra.0 (196,129,644 samples, 0.03%)</title><rect x="12.9782%" y="437" width="0.0284%" height="15" fill="rgb(218,76,16)" fg:x="89539722031" fg:w="196129644"/><text x="13.2282%" y="447.50"></text></g><g><title>cfree@GLIBC_2.2.5 (208,366,606 samples, 0.03%)</title><rect x="13.0080%" y="453" width="0.0302%" height="15" fill="rgb(225,21,48)" fg:x="89745651058" fg:w="208366606"/><text x="13.2580%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;llvm_profparser::instrumentation_profile::types::InstrumentationProfile&gt; (146,463,629 samples, 0.02%)</title><rect x="13.0382%" y="453" width="0.0212%" height="15" fill="rgb(239,223,50)" fg:x="89954017664" fg:w="146463629"/><text x="13.2882%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,usize,core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;&gt; (146,463,629 samples, 0.02%)</title><rect x="13.0382%" y="437" width="0.0212%" height="15" fill="rgb(244,45,21)" fg:x="89954017664" fg:w="146463629"/><text x="13.2882%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,usize,core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;&gt; (146,463,629 samples, 0.02%)</title><rect x="13.0382%" y="421" width="0.0212%" height="15" fill="rgb(232,33,43)" fg:x="89954017664" fg:w="146463629"/><text x="13.2882%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,usize)&gt;&gt; (146,463,629 samples, 0.02%)</title><rect x="13.0382%" y="405" width="0.0212%" height="15" fill="rgb(209,8,3)" fg:x="89954017664" fg:w="146463629"/><text x="13.2882%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (146,463,629 samples, 0.02%)</title><rect x="13.0382%" y="389" width="0.0212%" height="15" fill="rgb(214,25,53)" fg:x="89954017664" fg:w="146463629"/><text x="13.2882%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (146,463,629 samples, 0.02%)</title><rect x="13.0382%" y="373" width="0.0212%" height="15" fill="rgb(254,186,54)" fg:x="89954017664" fg:w="146463629"/><text x="13.2882%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (146,463,629 samples, 0.02%)</title><rect x="13.0382%" y="357" width="0.0212%" height="15" fill="rgb(208,174,49)" fg:x="89954017664" fg:w="146463629"/><text x="13.2882%" y="367.50"></text></g><g><title>cfree@GLIBC_2.2.5 (2,116,387,639 samples, 0.31%)</title><rect x="12.7938%" y="469" width="0.3068%" height="15" fill="rgb(233,191,51)" fg:x="88267850240" fg:w="2116387639"/><text x="13.0438%" y="479.50"></text></g><g><title>unlink_chunk.isra.0 (281,183,952 samples, 0.04%)</title><rect x="13.0598%" y="453" width="0.0408%" height="15" fill="rgb(222,134,10)" fg:x="90103053927" fg:w="281183952"/><text x="13.3098%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2,690,161,400 samples, 0.39%)</title><rect x="12.7424%" y="645" width="0.3899%" height="15" fill="rgb(230,226,20)" fg:x="87912885136" fg:w="2690161400"/><text x="12.9924%" y="655.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2,690,161,400 samples, 0.39%)</title><rect x="12.7424%" y="629" width="0.3899%" height="15" fill="rgb(251,111,25)" fg:x="87912885136" fg:w="2690161400"/><text x="12.9924%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2,690,161,400 samples, 0.39%)</title><rect x="12.7424%" y="613" width="0.3899%" height="15" fill="rgb(224,40,46)" fg:x="87912885136" fg:w="2690161400"/><text x="12.9924%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,usize)&gt; (2,690,161,400 samples, 0.39%)</title><rect x="12.7424%" y="597" width="0.3899%" height="15" fill="rgb(236,108,47)" fg:x="87912885136" fg:w="2690161400"/><text x="12.9924%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,690,161,400 samples, 0.39%)</title><rect x="12.7424%" y="581" width="0.3899%" height="15" fill="rgb(234,93,0)" fg:x="87912885136" fg:w="2690161400"/><text x="12.9924%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,690,161,400 samples, 0.39%)</title><rect x="12.7424%" y="565" width="0.3899%" height="15" fill="rgb(224,213,32)" fg:x="87912885136" fg:w="2690161400"/><text x="12.9924%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,690,161,400 samples, 0.39%)</title><rect x="12.7424%" y="549" width="0.3899%" height="15" fill="rgb(251,11,48)" fg:x="87912885136" fg:w="2690161400"/><text x="12.9924%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,690,161,400 samples, 0.39%)</title><rect x="12.7424%" y="533" width="0.3899%" height="15" fill="rgb(236,173,5)" fg:x="87912885136" fg:w="2690161400"/><text x="12.9924%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,689,222,610 samples, 0.39%)</title><rect x="12.7425%" y="517" width="0.3898%" height="15" fill="rgb(230,95,12)" fg:x="87913823926" fg:w="2689222610"/><text x="12.9925%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,689,222,610 samples, 0.39%)</title><rect x="12.7425%" y="501" width="0.3898%" height="15" fill="rgb(232,209,1)" fg:x="87913823926" fg:w="2689222610"/><text x="12.9925%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (2,689,222,610 samples, 0.39%)</title><rect x="12.7425%" y="485" width="0.3898%" height="15" fill="rgb(232,6,1)" fg:x="87913823926" fg:w="2689222610"/><text x="12.9925%" y="495.50"></text></g><g><title>unlink_chunk.isra.0 (186,813,848 samples, 0.03%)</title><rect x="13.1052%" y="469" width="0.0271%" height="15" fill="rgb(210,224,50)" fg:x="90416232688" fg:w="186813848"/><text x="13.3552%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;llvm_profparser::instrumentation_profile::types::InstrumentationProfile&gt; (6,559,076,301 samples, 0.95%)</title><rect x="12.1823%" y="741" width="0.9507%" height="15" fill="rgb(228,127,35)" fg:x="84048609756" fg:w="6559076301"/><text x="12.4323%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,usize,core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;&gt; (2,694,800,921 samples, 0.39%)</title><rect x="12.7424%" y="725" width="0.3906%" height="15" fill="rgb(245,102,45)" fg:x="87912885136" fg:w="2694800921"/><text x="12.9924%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,usize,core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;&gt; (2,694,800,921 samples, 0.39%)</title><rect x="12.7424%" y="709" width="0.3906%" height="15" fill="rgb(214,1,49)" fg:x="87912885136" fg:w="2694800921"/><text x="12.9924%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,usize)&gt;&gt; (2,694,800,921 samples, 0.39%)</title><rect x="12.7424%" y="693" width="0.3906%" height="15" fill="rgb(226,163,40)" fg:x="87912885136" fg:w="2694800921"/><text x="12.9924%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,694,800,921 samples, 0.39%)</title><rect x="12.7424%" y="677" width="0.3906%" height="15" fill="rgb(239,212,28)" fg:x="87912885136" fg:w="2694800921"/><text x="12.9924%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2,694,800,921 samples, 0.39%)</title><rect x="12.7424%" y="661" width="0.3906%" height="15" fill="rgb(220,20,13)" fg:x="87912885136" fg:w="2694800921"/><text x="12.9924%" y="671.50"></text></g><g><title>core::slice::sort::unstable::ipnsort (304,286,659 samples, 0.04%)</title><rect x="13.1344%" y="741" width="0.0441%" height="15" fill="rgb(210,164,35)" fg:x="90617445576" fg:w="304286659"/><text x="13.3844%" y="751.50"></text></g><g><title>core::slice::sort::shared::find_existing_run (303,149,668 samples, 0.04%)</title><rect x="13.1345%" y="725" width="0.0439%" height="15" fill="rgb(248,109,41)" fg:x="90618582567" fg:w="303149668"/><text x="13.3845%" y="735.50"></text></g><g><title>&lt;T as core::slice::sort::shared::smallsort::UnstableSmallSortTypeImpl&gt;::small_sort (117,924,668 samples, 0.02%)</title><rect x="13.1793%" y="725" width="0.0171%" height="15" fill="rgb(238,23,50)" fg:x="90927365381" fg:w="117924668"/><text x="13.4293%" y="735.50"></text></g><g><title>&lt;T as core::slice::sort::shared::smallsort::UnstableSmallSortFreezeTypeImpl&gt;::small_sort (117,924,668 samples, 0.02%)</title><rect x="13.1793%" y="709" width="0.0171%" height="15" fill="rgb(211,48,49)" fg:x="90927365381" fg:w="117924668"/><text x="13.4293%" y="719.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_fallback (117,924,668 samples, 0.02%)</title><rect x="13.1793%" y="693" width="0.0171%" height="15" fill="rgb(223,36,21)" fg:x="90927365381" fg:w="117924668"/><text x="13.4293%" y="703.50"></text></g><g><title>core::slice::sort::shared::smallsort::insertion_sort_shift_left (117,924,668 samples, 0.02%)</title><rect x="13.1793%" y="677" width="0.0171%" height="15" fill="rgb(207,123,46)" fg:x="90927365381" fg:w="117924668"/><text x="13.4293%" y="687.50"></text></g><g><title>core::slice::sort::shared::smallsort::insert_tail (105,714,047 samples, 0.02%)</title><rect x="13.1811%" y="661" width="0.0153%" height="15" fill="rgb(240,218,32)" fg:x="90939576002" fg:w="105714047"/><text x="13.4311%" y="671.50"></text></g><g><title>core::intrinsics::copy (1,016,930,713 samples, 0.15%)</title><rect x="13.2248%" y="677" width="0.1474%" height="15" fill="rgb(252,5,43)" fg:x="91241382140" fg:w="1016930713"/><text x="13.4748%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (863,245,946 samples, 0.13%)</title><rect x="13.3722%" y="677" width="0.1251%" height="15" fill="rgb(252,84,19)" fg:x="92258312853" fg:w="863245946"/><text x="13.6222%" y="687.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (2,276,382,254 samples, 0.33%)</title><rect x="13.1785%" y="741" width="0.3299%" height="15" fill="rgb(243,152,39)" fg:x="90921732235" fg:w="2276382254"/><text x="13.4285%" y="751.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition (2,133,981,457 samples, 0.31%)</title><rect x="13.1991%" y="725" width="0.3093%" height="15" fill="rgb(234,160,15)" fg:x="91064133032" fg:w="2133981457"/><text x="13.4491%" y="735.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic (2,103,808,516 samples, 0.30%)</title><rect x="13.2035%" y="709" width="0.3049%" height="15" fill="rgb(237,34,20)" fg:x="91094305973" fg:w="2103808516"/><text x="13.4535%" y="719.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic::_{{closure}} (1,998,699,752 samples, 0.29%)</title><rect x="13.2187%" y="693" width="0.2897%" height="15" fill="rgb(229,97,13)" fg:x="91199414737" fg:w="1998699752"/><text x="13.4687%" y="703.50"></text></g><g><title>cargo_tarpaulin::process_handling::collect_coverage (10,631,345,143 samples, 1.54%)</title><rect x="11.9717%" y="805" width="1.5409%" height="15" fill="rgb(234,71,50)" fg:x="82595944643" fg:w="10631345143"/><text x="12.2217%" y="815.50"></text></g><g><title>cargo_tarpaulin::statemachine::TestState::step (10,631,345,143 samples, 1.54%)</title><rect x="11.9717%" y="789" width="1.5409%" height="15" fill="rgb(253,155,4)" fg:x="82595944643" fg:w="10631345143"/><text x="12.2217%" y="799.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn cargo_tarpaulin::statemachine::StateData&gt; as cargo_tarpaulin::statemachine::StateData&gt;::wait (10,631,345,143 samples, 1.54%)</title><rect x="11.9717%" y="773" width="1.5409%" height="15" fill="rgb(222,185,37)" fg:x="82595944643" fg:w="10631345143"/><text x="12.2217%" y="783.50"></text></g><g><title>&lt;cargo_tarpaulin::statemachine::instrumented::LlvmInstrumentedData as cargo_tarpaulin::statemachine::StateData&gt;::wait (10,631,345,143 samples, 1.54%)</title><rect x="11.9717%" y="757" width="1.5409%" height="15" fill="rgb(251,177,13)" fg:x="82595944643" fg:w="10631345143"/><text x="12.2217%" y="767.50"></text></g><g><title>cargo_tarpaulin::process_handling::get_test_coverage (10,650,820,798 samples, 1.54%)</title><rect x="11.9717%" y="821" width="1.5438%" height="15" fill="rgb(250,179,40)" fg:x="82595944643" fg:w="10650820798"/><text x="12.2217%" y="831.50"></text></g><g><title>read_pages (90,351,308 samples, 0.01%)</title><rect x="13.5356%" y="517" width="0.0131%" height="15" fill="rgb(242,44,2)" fg:x="93385613130" fg:w="90351308"/><text x="13.7856%" y="527.50"></text></g><g><title>btrfs_readahead (83,032,558 samples, 0.01%)</title><rect x="13.5367%" y="501" width="0.0120%" height="15" fill="rgb(216,177,13)" fg:x="93392931880" fg:w="83032558"/><text x="13.7867%" y="511.50"></text></g><g><title>filemap_get_pages (153,421,200 samples, 0.02%)</title><rect x="13.5266%" y="549" width="0.0222%" height="15" fill="rgb(216,106,43)" fg:x="93323634925" fg:w="153421200"/><text x="13.7766%" y="559.50"></text></g><g><title>page_cache_ra_unbounded (122,331,333 samples, 0.02%)</title><rect x="13.5311%" y="533" width="0.0177%" height="15" fill="rgb(216,183,2)" fg:x="93354724792" fg:w="122331333"/><text x="13.7811%" y="543.50"></text></g><g><title>ksys_read (158,657,748 samples, 0.02%)</title><rect x="13.5259%" y="597" width="0.0230%" height="15" fill="rgb(249,75,3)" fg:x="93318402723" fg:w="158657748"/><text x="13.7759%" y="607.50"></text></g><g><title>vfs_read (158,657,748 samples, 0.02%)</title><rect x="13.5259%" y="581" width="0.0230%" height="15" fill="rgb(219,67,39)" fg:x="93318402723" fg:w="158657748"/><text x="13.7759%" y="591.50"></text></g><g><title>filemap_read (158,657,748 samples, 0.02%)</title><rect x="13.5259%" y="565" width="0.0230%" height="15" fill="rgb(253,228,2)" fg:x="93318402723" fg:w="158657748"/><text x="13.7759%" y="575.50"></text></g><g><title>read (163,016,270 samples, 0.02%)</title><rect x="13.5257%" y="645" width="0.0236%" height="15" fill="rgb(235,138,27)" fg:x="93317274627" fg:w="163016270"/><text x="13.7757%" y="655.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (163,016,270 samples, 0.02%)</title><rect x="13.5257%" y="629" width="0.0236%" height="15" fill="rgb(236,97,51)" fg:x="93317274627" fg:w="163016270"/><text x="13.7757%" y="639.50"></text></g><g><title>do_syscall_64 (161,888,174 samples, 0.02%)</title><rect x="13.5259%" y="613" width="0.0235%" height="15" fill="rgb(240,80,30)" fg:x="93318402723" fg:w="161888174"/><text x="13.7759%" y="623.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read_buf (164,164,006 samples, 0.02%)</title><rect x="13.5257%" y="693" width="0.0238%" height="15" fill="rgb(230,178,19)" fg:x="93317274627" fg:w="164164006"/><text x="13.7757%" y="703.50"></text></g><g><title>std::sys::pal::unix::fs::File::read_buf (164,164,006 samples, 0.02%)</title><rect x="13.5257%" y="677" width="0.0238%" height="15" fill="rgb(210,190,27)" fg:x="93317274627" fg:w="164164006"/><text x="13.7757%" y="687.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::read_buf (164,164,006 samples, 0.02%)</title><rect x="13.5257%" y="661" width="0.0238%" height="15" fill="rgb(222,107,31)" fg:x="93317274627" fg:w="164164006"/><text x="13.7757%" y="671.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_to_string (201,975,984 samples, 0.03%)</title><rect x="13.5209%" y="789" width="0.0293%" height="15" fill="rgb(216,127,34)" fg:x="93283907225" fg:w="201975984"/><text x="13.7709%" y="799.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read_to_string (201,975,984 samples, 0.03%)</title><rect x="13.5209%" y="773" width="0.0293%" height="15" fill="rgb(234,116,52)" fg:x="93283907225" fg:w="201975984"/><text x="13.7709%" y="783.50"></text></g><g><title>std::io::default_read_to_string (169,701,337 samples, 0.02%)</title><rect x="13.5255%" y="757" width="0.0246%" height="15" fill="rgb(222,124,15)" fg:x="93316181872" fg:w="169701337"/><text x="13.7755%" y="767.50"></text></g><g><title>std::io::append_to_string (169,701,337 samples, 0.02%)</title><rect x="13.5255%" y="741" width="0.0246%" height="15" fill="rgb(231,179,28)" fg:x="93316181872" fg:w="169701337"/><text x="13.7755%" y="751.50"></text></g><g><title>std::io::default_read_to_string::_{{closure}} (169,701,337 samples, 0.02%)</title><rect x="13.5255%" y="725" width="0.0246%" height="15" fill="rgb(226,93,45)" fg:x="93316181872" fg:w="169701337"/><text x="13.7755%" y="735.50"></text></g><g><title>std::io::default_read_to_end (168,608,582 samples, 0.02%)</title><rect x="13.5257%" y="709" width="0.0244%" height="15" fill="rgb(215,8,51)" fg:x="93317274627" fg:w="168608582"/><text x="13.7757%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::_{{closure}} (74,729,917 samples, 0.01%)</title><rect x="13.5501%" y="677" width="0.0108%" height="15" fill="rgb(223,106,5)" fg:x="93485883209" fg:w="74729917"/><text x="13.8001%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (74,729,917 samples, 0.01%)</title><rect x="13.5501%" y="661" width="0.0108%" height="15" fill="rgb(250,191,5)" fg:x="93485883209" fg:w="74729917"/><text x="13.8001%" y="671.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (74,729,917 samples, 0.01%)</title><rect x="13.5501%" y="645" width="0.0108%" height="15" fill="rgb(242,132,44)" fg:x="93485883209" fg:w="74729917"/><text x="13.8001%" y="655.50"></text></g><g><title>cargo_tarpaulin::source_analysis::SourceAnalysis::find_ignorable_lines::_{{closure}} (74,729,917 samples, 0.01%)</title><rect x="13.5501%" y="629" width="0.0108%" height="15" fill="rgb(251,152,29)" fg:x="93485883209" fg:w="74729917"/><text x="13.8001%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (79,946,695 samples, 0.01%)</title><rect x="13.5501%" y="757" width="0.0116%" height="15" fill="rgb(218,179,5)" fg:x="93485883209" fg:w="79946695"/><text x="13.8001%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (79,946,695 samples, 0.01%)</title><rect x="13.5501%" y="741" width="0.0116%" height="15" fill="rgb(227,67,19)" fg:x="93485883209" fg:w="79946695"/><text x="13.8001%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (79,946,695 samples, 0.01%)</title><rect x="13.5501%" y="725" width="0.0116%" height="15" fill="rgb(233,119,31)" fg:x="93485883209" fg:w="79946695"/><text x="13.8001%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (79,946,695 samples, 0.01%)</title><rect x="13.5501%" y="709" width="0.0116%" height="15" fill="rgb(241,120,22)" fg:x="93485883209" fg:w="79946695"/><text x="13.8001%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (79,946,695 samples, 0.01%)</title><rect x="13.5501%" y="693" width="0.0116%" height="15" fill="rgb(224,102,30)" fg:x="93485883209" fg:w="79946695"/><text x="13.8001%" y="703.50"></text></g><g><title>cargo_tarpaulin::source_analysis::SourceAnalysis::find_ignorable_lines (85,035,173 samples, 0.01%)</title><rect x="13.5501%" y="789" width="0.0123%" height="15" fill="rgb(210,164,37)" fg:x="93485883209" fg:w="85035173"/><text x="13.8001%" y="799.50"></text></g><g><title>cargo_tarpaulin::source_analysis::LineAnalysis::add_to_ignore (85,035,173 samples, 0.01%)</title><rect x="13.5501%" y="773" width="0.0123%" height="15" fill="rgb(226,191,16)" fg:x="93485883209" fg:w="85035173"/><text x="13.8001%" y="783.50"></text></g><g><title>_ZN4core3ptr36drop_in_place$LT$syn..item..Item$GT$17he82554cfbaa243cfE.llvm.10117868062062457895 (85,113,437 samples, 0.01%)</title><rect x="13.5796%" y="725" width="0.0123%" height="15" fill="rgb(214,40,45)" fg:x="93688820321" fg:w="85113437"/><text x="13.8296%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;syn::file::File&gt; (94,825,267 samples, 0.01%)</title><rect x="13.5794%" y="789" width="0.0137%" height="15" fill="rgb(244,29,26)" fg:x="93687661749" fg:w="94825267"/><text x="13.8294%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;syn::item::Item&gt;&gt; (93,666,695 samples, 0.01%)</title><rect x="13.5796%" y="773" width="0.0136%" height="15" fill="rgb(216,16,5)" fg:x="93688820321" fg:w="93666695"/><text x="13.8296%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (93,666,695 samples, 0.01%)</title><rect x="13.5796%" y="757" width="0.0136%" height="15" fill="rgb(249,76,35)" fg:x="93688820321" fg:w="93666695"/><text x="13.8296%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;[syn::item::Item]&gt; (93,666,695 samples, 0.01%)</title><rect x="13.5796%" y="741" width="0.0136%" height="15" fill="rgb(207,11,44)" fg:x="93688820321" fg:w="93666695"/><text x="13.8296%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;syn::buffer::TokenBuffer&gt; (83,188,728 samples, 0.01%)</title><rect x="13.5977%" y="725" width="0.0121%" height="15" fill="rgb(228,190,49)" fg:x="93813961729" fg:w="83188728"/><text x="13.8477%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[syn::buffer::Entry]&gt;&gt; (83,188,728 samples, 0.01%)</title><rect x="13.5977%" y="709" width="0.0121%" height="15" fill="rgb(214,173,12)" fg:x="93813961729" fg:w="83188728"/><text x="13.8477%" y="719.50"></text></g><g><title>&lt;F as syn::parse::Parser&gt;::parse2 (88,254,794 samples, 0.01%)</title><rect x="13.5977%" y="741" width="0.0128%" height="15" fill="rgb(218,26,35)" fg:x="93813961729" fg:w="88254794"/><text x="13.8477%" y="751.50"></text></g><g><title>cargo_tarpaulin::source_analysis::SourceAnalysis::get_analysis (654,205,319 samples, 0.09%)</title><rect x="13.5158%" y="821" width="0.0948%" height="15" fill="rgb(220,200,19)" fg:x="93249079671" fg:w="654205319"/><text x="13.7658%" y="831.50"></text></g><g><title>cargo_tarpaulin::source_analysis::SourceAnalysis::analyse_package (619,377,765 samples, 0.09%)</title><rect x="13.5209%" y="805" width="0.0898%" height="15" fill="rgb(239,95,49)" fg:x="93283907225" fg:w="619377765"/><text x="13.7709%" y="815.50"></text></g><g><title>syn::parse_file (89,323,261 samples, 0.01%)</title><rect x="13.5977%" y="789" width="0.0129%" height="15" fill="rgb(235,85,53)" fg:x="93813961729" fg:w="89323261"/><text x="13.8477%" y="799.50"></text></g><g><title>syn::parse_str (89,323,261 samples, 0.01%)</title><rect x="13.5977%" y="773" width="0.0129%" height="15" fill="rgb(233,133,31)" fg:x="93813961729" fg:w="89323261"/><text x="13.8477%" y="783.50"></text></g><g><title>syn::parse::Parser::parse_str (89,323,261 samples, 0.01%)</title><rect x="13.5977%" y="757" width="0.0129%" height="15" fill="rgb(218,25,20)" fg:x="93813961729" fg:w="89323261"/><text x="13.8477%" y="767.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (786,885,549 samples, 0.11%)</title><rect x="13.6368%" y="789" width="0.1141%" height="15" fill="rgb(252,210,38)" fg:x="94083943181" fg:w="786885549"/><text x="13.8868%" y="799.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (400,207,697 samples, 0.06%)</title><rect x="13.6929%" y="773" width="0.0580%" height="15" fill="rgb(242,134,21)" fg:x="94470621033" fg:w="400207697"/><text x="13.9429%" y="783.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (1,431,929,418 samples, 0.21%)</title><rect x="13.6358%" y="805" width="0.2075%" height="15" fill="rgb(213,28,48)" fg:x="94076942784" fg:w="1431929418"/><text x="13.8858%" y="815.50"></text></g><g><title>cargo_tarpaulin::traces::TraceMap::merge::_{{closure}} (638,043,472 samples, 0.09%)</title><rect x="13.7509%" y="789" width="0.0925%" height="15" fill="rgb(250,196,2)" fg:x="94870828730" fg:w="638043472"/><text x="14.0009%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp (73,043,477 samples, 0.01%)</title><rect x="13.8508%" y="693" width="0.0106%" height="15" fill="rgb(227,5,17)" fg:x="95560426719" fg:w="73043477"/><text x="14.1008%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp_by (73,043,477 samples, 0.01%)</title><rect x="13.8508%" y="677" width="0.0106%" height="15" fill="rgb(221,226,24)" fg:x="95560426719" fg:w="73043477"/><text x="14.1008%" y="687.50"></text></g><g><title>core::iter::traits::iterator::iter_compare (73,043,477 samples, 0.01%)</title><rect x="13.8508%" y="661" width="0.0106%" height="15" fill="rgb(211,5,48)" fg:x="95560426719" fg:w="73043477"/><text x="14.1008%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (70,848,357 samples, 0.01%)</title><rect x="13.8511%" y="645" width="0.0103%" height="15" fill="rgb(219,150,6)" fg:x="95562621839" fg:w="70848357"/><text x="14.1011%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (70,848,357 samples, 0.01%)</title><rect x="13.8511%" y="629" width="0.0103%" height="15" fill="rgb(251,46,16)" fg:x="95562621839" fg:w="70848357"/><text x="14.1011%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (148,104,353 samples, 0.02%)</title><rect x="13.8434%" y="805" width="0.0215%" height="15" fill="rgb(220,204,40)" fg:x="95508872202" fg:w="148104353"/><text x="14.0934%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (148,104,353 samples, 0.02%)</title><rect x="13.8434%" y="789" width="0.0215%" height="15" fill="rgb(211,85,2)" fg:x="95508872202" fg:w="148104353"/><text x="14.0934%" y="799.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (148,104,353 samples, 0.02%)</title><rect x="13.8434%" y="773" width="0.0215%" height="15" fill="rgb(229,17,7)" fg:x="95508872202" fg:w="148104353"/><text x="14.0934%" y="783.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (148,104,353 samples, 0.02%)</title><rect x="13.8434%" y="757" width="0.0215%" height="15" fill="rgb(239,72,28)" fg:x="95508872202" fg:w="148104353"/><text x="14.0934%" y="767.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (148,104,353 samples, 0.02%)</title><rect x="13.8434%" y="741" width="0.0215%" height="15" fill="rgb(230,47,54)" fg:x="95508872202" fg:w="148104353"/><text x="14.0934%" y="751.50"></text></g><g><title>&lt;std::path::PathBuf as core::cmp::Ord&gt;::cmp (148,104,353 samples, 0.02%)</title><rect x="13.8434%" y="725" width="0.0215%" height="15" fill="rgb(214,50,8)" fg:x="95508872202" fg:w="148104353"/><text x="14.0934%" y="735.50"></text></g><g><title>std::path::compare_components (100,918,363 samples, 0.01%)</title><rect x="13.8502%" y="709" width="0.0146%" height="15" fill="rgb(216,198,43)" fg:x="95556058192" fg:w="100918363"/><text x="14.1002%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (113,656,979 samples, 0.02%)</title><rect x="13.8648%" y="805" width="0.0165%" height="15" fill="rgb(234,20,35)" fg:x="95656976555" fg:w="113656979"/><text x="14.1148%" y="815.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (113,656,979 samples, 0.02%)</title><rect x="13.8648%" y="789" width="0.0165%" height="15" fill="rgb(254,45,19)" fg:x="95656976555" fg:w="113656979"/><text x="14.1148%" y="799.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (113,656,979 samples, 0.02%)</title><rect x="13.8648%" y="773" width="0.0165%" height="15" fill="rgb(219,14,44)" fg:x="95656976555" fg:w="113656979"/><text x="14.1148%" y="783.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (113,656,979 samples, 0.02%)</title><rect x="13.8648%" y="757" width="0.0165%" height="15" fill="rgb(217,220,26)" fg:x="95656976555" fg:w="113656979"/><text x="14.1148%" y="767.50"></text></g><g><title>&lt;std::path::PathBuf as core::cmp::Ord&gt;::cmp (113,656,979 samples, 0.02%)</title><rect x="13.8648%" y="741" width="0.0165%" height="15" fill="rgb(213,158,28)" fg:x="95656976555" fg:w="113656979"/><text x="14.1148%" y="751.50"></text></g><g><title>std::path::compare_components (80,164,645 samples, 0.01%)</title><rect x="13.8697%" y="725" width="0.0116%" height="15" fill="rgb(252,51,52)" fg:x="95690468889" fg:w="80164645"/><text x="14.1197%" y="735.50"></text></g><g><title>cargo_tarpaulin::traces::TraceMap::merge (2,035,193,128 samples, 0.29%)</title><rect x="13.6177%" y="821" width="0.2950%" height="15" fill="rgb(246,89,16)" fg:x="93952065994" fg:w="2035193128"/><text x="13.8677%" y="831.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable (199,332,701 samples, 0.03%)</title><rect x="13.8838%" y="805" width="0.0289%" height="15" fill="rgb(216,158,49)" fg:x="95787926421" fg:w="199332701"/><text x="14.1338%" y="815.50"></text></g><g><title>core::slice::sort::unstable::sort (199,332,701 samples, 0.03%)</title><rect x="13.8838%" y="789" width="0.0289%" height="15" fill="rgb(236,107,19)" fg:x="95787926421" fg:w="199332701"/><text x="14.1338%" y="799.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (197,048,243 samples, 0.03%)</title><rect x="13.8841%" y="773" width="0.0286%" height="15" fill="rgb(228,185,30)" fg:x="95790210879" fg:w="197048243"/><text x="14.1341%" y="783.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (144,267,237 samples, 0.02%)</title><rect x="13.8918%" y="757" width="0.0209%" height="15" fill="rgb(246,134,8)" fg:x="95842991885" fg:w="144267237"/><text x="14.1418%" y="767.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (85,325,275 samples, 0.01%)</title><rect x="13.9003%" y="741" width="0.0124%" height="15" fill="rgb(214,143,50)" fg:x="95901933847" fg:w="85325275"/><text x="14.1503%" y="751.50"></text></g><g><title>_ZN5alloc11collections5btree4node173Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$12drop_key_val17hc43359bfe700daf1E.llvm.8377733769481808246 (92,221,092 samples, 0.01%)</title><rect x="13.9133%" y="709" width="0.0134%" height="15" fill="rgb(228,75,8)" fg:x="95991648296" fg:w="92221092"/><text x="14.1633%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;alloc::vec::Vec&lt;cargo_tarpaulin::traces::Trace&gt;&gt;&gt; (89,878,814 samples, 0.01%)</title><rect x="13.9137%" y="693" width="0.0130%" height="15" fill="rgb(207,175,4)" fg:x="95993990574" fg:w="89878814"/><text x="14.1637%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (89,878,814 samples, 0.01%)</title><rect x="13.9137%" y="677" width="0.0130%" height="15" fill="rgb(205,108,24)" fg:x="95993990574" fg:w="89878814"/><text x="14.1637%" y="687.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (89,878,814 samples, 0.01%)</title><rect x="13.9137%" y="661" width="0.0130%" height="15" fill="rgb(244,120,49)" fg:x="95993990574" fg:w="89878814"/><text x="14.1637%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;cargo_tarpaulin::traces::Trace&gt;&gt; (89,878,814 samples, 0.01%)</title><rect x="13.9137%" y="645" width="0.0130%" height="15" fill="rgb(223,47,38)" fg:x="95993990574" fg:w="89878814"/><text x="14.1637%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (89,878,814 samples, 0.01%)</title><rect x="13.9137%" y="629" width="0.0130%" height="15" fill="rgb(229,179,11)" fg:x="95993990574" fg:w="89878814"/><text x="14.1637%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;[cargo_tarpaulin::traces::Trace]&gt; (89,878,814 samples, 0.01%)</title><rect x="13.9137%" y="613" width="0.0130%" height="15" fill="rgb(231,122,1)" fg:x="95993990574" fg:w="89878814"/><text x="14.1637%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;(cargo_tarpaulin::traces::TraceMap,i32)&gt; (112,005,174 samples, 0.02%)</title><rect x="13.9127%" y="821" width="0.0162%" height="15" fill="rgb(245,119,9)" fg:x="95987259122" fg:w="112005174"/><text x="14.1627%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;cargo_tarpaulin::traces::TraceMap&gt; (112,005,174 samples, 0.02%)</title><rect x="13.9127%" y="805" width="0.0162%" height="15" fill="rgb(241,163,25)" fg:x="95987259122" fg:w="112005174"/><text x="14.1627%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;std::path::PathBuf,alloc::vec::Vec&lt;cargo_tarpaulin::traces::Trace&gt;&gt;&gt; (112,005,174 samples, 0.02%)</title><rect x="13.9127%" y="789" width="0.0162%" height="15" fill="rgb(217,214,3)" fg:x="95987259122" fg:w="112005174"/><text x="14.1627%" y="799.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (112,005,174 samples, 0.02%)</title><rect x="13.9127%" y="773" width="0.0162%" height="15" fill="rgb(240,86,28)" fg:x="95987259122" fg:w="112005174"/><text x="14.1627%" y="783.50"></text></g><g><title>core::mem::drop (112,005,174 samples, 0.02%)</title><rect x="13.9127%" y="757" width="0.0162%" height="15" fill="rgb(215,47,9)" fg:x="95987259122" fg:w="112005174"/><text x="14.1627%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;std::path::PathBuf,alloc::vec::Vec&lt;cargo_tarpaulin::traces::Trace&gt;&gt;&gt; (112,005,174 samples, 0.02%)</title><rect x="13.9127%" y="741" width="0.0162%" height="15" fill="rgb(252,25,45)" fg:x="95987259122" fg:w="112005174"/><text x="14.1627%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (112,005,174 samples, 0.02%)</title><rect x="13.9127%" y="725" width="0.0162%" height="15" fill="rgb(251,164,9)" fg:x="95987259122" fg:w="112005174"/><text x="14.1627%" y="735.50"></text></g><g><title>cargo_tarpaulin::launch_tarpaulin (13,533,802,042 samples, 1.96%)</title><rect x="11.9686%" y="837" width="1.9616%" height="15" fill="rgb(233,194,0)" fg:x="82574673249" fg:w="13533802042"/><text x="12.2186%" y="847.50">c..</text></g><g><title>cargo_tarpaulin::trace (13,592,489,177 samples, 1.97%)</title><rect x="11.9686%" y="853" width="1.9701%" height="15" fill="rgb(249,111,24)" fg:x="82574673249" fg:w="13592489177"/><text x="12.2186%" y="863.50">c..</text></g><g><title>cargo_tarpaulin::collect_tracemap (13,690,813,150 samples, 1.98%)</title><rect x="11.9557%" y="869" width="1.9844%" height="15" fill="rgb(250,223,3)" fg:x="82485469182" fg:w="13690813150"/><text x="12.2057%" y="879.50">c..</text></g><g><title>&lt;cargo_tarpaulin::traces::_::&lt;impl serde::de::Deserialize for cargo_tarpaulin::traces::TraceMap&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (77,809,621 samples, 0.01%)</title><rect x="13.9493%" y="709" width="0.0113%" height="15" fill="rgb(236,178,37)" fg:x="96239812620" fg:w="77809621"/><text x="14.1993%" y="719.50"></text></g><g><title>serde::de::MapAccess::next_value (77,809,621 samples, 0.01%)</title><rect x="13.9493%" y="693" width="0.0113%" height="15" fill="rgb(241,158,50)" fg:x="96239812620" fg:w="77809621"/><text x="14.1993%" y="703.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (77,809,621 samples, 0.01%)</title><rect x="13.9493%" y="677" width="0.0113%" height="15" fill="rgb(213,121,41)" fg:x="96239812620" fg:w="77809621"/><text x="14.1993%" y="687.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (77,809,621 samples, 0.01%)</title><rect x="13.9493%" y="661" width="0.0113%" height="15" fill="rgb(240,92,3)" fg:x="96239812620" fg:w="77809621"/><text x="14.1993%" y="671.50"></text></g><g><title>cargo_tarpaulin::report::get_previous_result (78,828,223 samples, 0.01%)</title><rect x="13.9493%" y="789" width="0.0114%" height="15" fill="rgb(205,123,3)" fg:x="96239812620" fg:w="78828223"/><text x="14.1993%" y="799.50"></text></g><g><title>serde_json::de::from_reader (78,828,223 samples, 0.01%)</title><rect x="13.9493%" y="773" width="0.0114%" height="15" fill="rgb(205,97,47)" fg:x="96239812620" fg:w="78828223"/><text x="14.1993%" y="783.50"></text></g><g><title>serde_json::de::from_trait (78,828,223 samples, 0.01%)</title><rect x="13.9493%" y="757" width="0.0114%" height="15" fill="rgb(247,152,14)" fg:x="96239812620" fg:w="78828223"/><text x="14.1993%" y="767.50"></text></g><g><title>cargo_tarpaulin::traces::_::&lt;impl serde::de::Deserialize for cargo_tarpaulin::traces::TraceMap&gt;::deserialize (78,828,223 samples, 0.01%)</title><rect x="13.9493%" y="741" width="0.0114%" height="15" fill="rgb(248,195,53)" fg:x="96239812620" fg:w="78828223"/><text x="14.1993%" y="751.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (78,828,223 samples, 0.01%)</title><rect x="13.9493%" y="725" width="0.0114%" height="15" fill="rgb(226,201,16)" fg:x="96239812620" fg:w="78828223"/><text x="14.1993%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (253,287,012 samples, 0.04%)</title><rect x="14.0713%" y="533" width="0.0367%" height="15" fill="rgb(205,98,0)" fg:x="97081612917" fg:w="253287012"/><text x="14.3213%" y="543.50"></text></g><g><title>std::path::Components::parse_next_component::_{{closure}} (157,062,691 samples, 0.02%)</title><rect x="14.0853%" y="517" width="0.0228%" height="15" fill="rgb(214,191,48)" fg:x="97177837238" fg:w="157062691"/><text x="14.3353%" y="527.50"></text></g><g><title>std::path::Components::is_sep_byte (157,062,691 samples, 0.02%)</title><rect x="14.0853%" y="501" width="0.0228%" height="15" fill="rgb(237,112,39)" fg:x="97177837238" fg:w="157062691"/><text x="14.3353%" y="511.50"></text></g><g><title>std::path::Components::parse_next_component (276,567,304 samples, 0.04%)</title><rect x="14.0705%" y="549" width="0.0401%" height="15" fill="rgb(247,203,27)" fg:x="97076055673" fg:w="276567304"/><text x="14.3205%" y="559.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (970,773,522 samples, 0.14%)</title><rect x="13.9700%" y="565" width="0.1407%" height="15" fill="rgb(235,124,28)" fg:x="96382923130" fg:w="970773522"/><text x="14.2200%" y="575.50"></text></g><g><title>&lt;std::path::Component as core::cmp::PartialEq&gt;::eq (449,762,246 samples, 0.07%)</title><rect x="14.1856%" y="533" width="0.0652%" height="15" fill="rgb(208,207,46)" fg:x="97869979349" fg:w="449762246"/><text x="14.4356%" y="543.50"></text></g><g><title>&lt;std::path::Components as core::clone::Clone&gt;::clone (645,830,667 samples, 0.09%)</title><rect x="14.2508%" y="533" width="0.0936%" height="15" fill="rgb(234,176,4)" fg:x="98319741595" fg:w="645830667"/><text x="14.5008%" y="543.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (103,586,875 samples, 0.02%)</title><rect x="14.4342%" y="469" width="0.0150%" height="15" fill="rgb(230,133,28)" fg:x="99585539109" fg:w="103586875"/><text x="14.6842%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (108,000,009 samples, 0.02%)</title><rect x="14.4342%" y="485" width="0.0157%" height="15" fill="rgb(211,137,40)" fg:x="99585539109" fg:w="108000009"/><text x="14.6842%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (583,573,005 samples, 0.08%)</title><rect x="14.4202%" y="501" width="0.0846%" height="15" fill="rgb(254,35,13)" fg:x="99488898241" fg:w="583573005"/><text x="14.6702%" y="511.50"></text></g><g><title>std::path::Components::parse_next_component::_{{closure}} (378,932,128 samples, 0.05%)</title><rect x="14.4499%" y="485" width="0.0549%" height="15" fill="rgb(225,49,51)" fg:x="99693539118" fg:w="378932128"/><text x="14.6999%" y="495.50"></text></g><g><title>std::path::Components::is_sep_byte (378,932,128 samples, 0.05%)</title><rect x="14.4499%" y="469" width="0.0549%" height="15" fill="rgb(251,10,15)" fg:x="99693539118" fg:w="378932128"/><text x="14.6999%" y="479.50"></text></g><g><title>std::path::Components::parse_next_component (729,966,379 samples, 0.11%)</title><rect x="14.4183%" y="517" width="0.1058%" height="15" fill="rgb(228,207,15)" fg:x="99475656090" fg:w="729966379"/><text x="14.6683%" y="527.50"></text></g><g><title>std::path::Components::parse_single_component (133,151,223 samples, 0.02%)</title><rect x="14.5048%" y="501" width="0.0193%" height="15" fill="rgb(241,99,19)" fg:x="100072471246" fg:w="133151223"/><text x="14.7548%" y="511.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (1,247,848,267 samples, 0.18%)</title><rect x="14.3444%" y="533" width="0.1809%" height="15" fill="rgb(207,104,49)" fg:x="98965572262" fg:w="1247848267"/><text x="14.5944%" y="543.50"></text></g><g><title>[unknown] (170,812,774 samples, 0.02%)</title><rect x="14.5256%" y="533" width="0.0248%" height="15" fill="rgb(234,99,18)" fg:x="100215663751" fg:w="170812774"/><text x="14.7756%" y="543.50"></text></g><g><title>__memcmp_evex_movbe (155,251,591 samples, 0.02%)</title><rect x="14.5278%" y="517" width="0.0225%" height="15" fill="rgb(213,191,49)" fg:x="100231224934" fg:w="155251591"/><text x="14.7778%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (185,617,900 samples, 0.03%)</title><rect x="14.8074%" y="469" width="0.0269%" height="15" fill="rgb(210,226,19)" fg:x="102159713110" fg:w="185617900"/><text x="15.0574%" y="479.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (185,617,900 samples, 0.03%)</title><rect x="14.8074%" y="453" width="0.0269%" height="15" fill="rgb(229,97,18)" fg:x="102159713110" fg:w="185617900"/><text x="15.0574%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (907,228,698 samples, 0.13%)</title><rect x="14.7813%" y="485" width="0.1315%" height="15" fill="rgb(211,167,15)" fg:x="101979948689" fg:w="907228698"/><text x="15.0313%" y="495.50"></text></g><g><title>std::path::Components::parse_next_component::_{{closure}} (541,846,377 samples, 0.08%)</title><rect x="14.8343%" y="469" width="0.0785%" height="15" fill="rgb(210,169,34)" fg:x="102345331010" fg:w="541846377"/><text x="15.0843%" y="479.50"></text></g><g><title>std::path::Components::is_sep_byte (541,846,377 samples, 0.08%)</title><rect x="14.8343%" y="453" width="0.0785%" height="15" fill="rgb(241,121,31)" fg:x="102345331010" fg:w="541846377"/><text x="15.0843%" y="463.50"></text></g><g><title>std::path::Components::parse_next_component (1,026,655,940 samples, 0.15%)</title><rect x="14.7782%" y="501" width="0.1488%" height="15" fill="rgb(232,40,11)" fg:x="101958780311" fg:w="1026655940"/><text x="15.0282%" y="511.50"></text></g><g><title>std::path::Components::parse_single_component (98,258,864 samples, 0.01%)</title><rect x="14.9128%" y="485" width="0.0142%" height="15" fill="rgb(205,86,26)" fg:x="102887177387" fg:w="98258864"/><text x="15.1628%" y="495.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (2,576,632,753 samples, 0.37%)</title><rect x="14.5550%" y="517" width="0.3735%" height="15" fill="rgb(231,126,28)" fg:x="100418853752" fg:w="2576632753"/><text x="14.8050%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3,239,116,766 samples, 0.47%)</title><rect x="14.5518%" y="533" width="0.4695%" height="15" fill="rgb(219,221,18)" fg:x="100396561973" fg:w="3239116766"/><text x="14.8018%" y="543.50"></text></g><g><title>std::path::Path::_starts_with (639,064,910 samples, 0.09%)</title><rect x="14.9287%" y="517" width="0.0926%" height="15" fill="rgb(211,40,0)" fg:x="102996613829" fg:w="639064910"/><text x="15.1787%" y="527.50"></text></g><g><title>std::path::iter_after (605,646,202 samples, 0.09%)</title><rect x="14.9335%" y="501" width="0.0878%" height="15" fill="rgb(239,85,43)" fg:x="103030032537" fg:w="605646202"/><text x="15.1835%" y="511.50"></text></g><g><title>&lt;std::path::Components as core::clone::Clone&gt;::clone (272,860,183 samples, 0.04%)</title><rect x="14.9817%" y="485" width="0.0395%" height="15" fill="rgb(231,55,21)" fg:x="103362818556" fg:w="272860183"/><text x="15.2317%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,861,524,656 samples, 1.14%)</title><rect x="13.9627%" y="725" width="1.1395%" height="15" fill="rgb(225,184,43)" fg:x="96332066246" fg:w="7861524656"/><text x="14.2127%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (7,861,524,656 samples, 1.14%)</title><rect x="13.9627%" y="709" width="1.1395%" height="15" fill="rgb(251,158,41)" fg:x="96332066246" fg:w="7861524656"/><text x="14.2127%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,861,524,656 samples, 1.14%)</title><rect x="13.9627%" y="693" width="1.1395%" height="15" fill="rgb(234,159,37)" fg:x="96332066246" fg:w="7861524656"/><text x="14.2127%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,861,524,656 samples, 1.14%)</title><rect x="13.9627%" y="677" width="1.1395%" height="15" fill="rgb(216,204,22)" fg:x="96332066246" fg:w="7861524656"/><text x="14.2127%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (7,861,524,656 samples, 1.14%)</title><rect x="13.9627%" y="661" width="1.1395%" height="15" fill="rgb(214,17,3)" fg:x="96332066246" fg:w="7861524656"/><text x="14.2127%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7,861,524,656 samples, 1.14%)</title><rect x="13.9627%" y="645" width="1.1395%" height="15" fill="rgb(212,111,17)" fg:x="96332066246" fg:w="7861524656"/><text x="14.2127%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (7,860,469,884 samples, 1.14%)</title><rect x="13.9628%" y="629" width="1.1393%" height="15" fill="rgb(221,157,24)" fg:x="96333121018" fg:w="7860469884"/><text x="14.2128%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7,860,469,884 samples, 1.14%)</title><rect x="13.9628%" y="613" width="1.1393%" height="15" fill="rgb(252,16,13)" fg:x="96333121018" fg:w="7860469884"/><text x="14.2128%" y="623.50"></text></g><g><title>cargo_tarpaulin::traces::TraceMap::get_child_traces::_{{closure}} (7,860,469,884 samples, 1.14%)</title><rect x="13.9628%" y="597" width="1.1393%" height="15" fill="rgb(221,62,2)" fg:x="96333121018" fg:w="7860469884"/><text x="14.2128%" y="607.50"></text></g><g><title>std::path::Path::starts_with (7,860,469,884 samples, 1.14%)</title><rect x="13.9628%" y="581" width="1.1393%" height="15" fill="rgb(247,87,22)" fg:x="96333121018" fg:w="7860469884"/><text x="14.2128%" y="591.50"></text></g><g><title>std::path::Path::_starts_with (6,839,894,250 samples, 0.99%)</title><rect x="14.1108%" y="565" width="0.9914%" height="15" fill="rgb(215,73,9)" fg:x="97353696652" fg:w="6839894250"/><text x="14.3608%" y="575.50"></text></g><g><title>std::path::iter_after (6,785,422,677 samples, 0.98%)</title><rect x="14.1186%" y="549" width="0.9835%" height="15" fill="rgb(207,175,33)" fg:x="97408168225" fg:w="6785422677"/><text x="14.3686%" y="559.50"></text></g><g><title>std::path::Path::_starts_with (557,912,163 samples, 0.08%)</title><rect x="15.0213%" y="533" width="0.0809%" height="15" fill="rgb(243,129,54)" fg:x="103635678739" fg:w="557912163"/><text x="15.2713%" y="543.50"></text></g><g><title>std::path::iter_after (503,596,379 samples, 0.07%)</title><rect x="15.0292%" y="517" width="0.0730%" height="15" fill="rgb(227,119,45)" fg:x="103689994523" fg:w="503596379"/><text x="15.2792%" y="527.50"></text></g><g><title>cargo_tarpaulin::traces::TraceMap::coverable_in_path (7,871,579,215 samples, 1.14%)</title><rect x="13.9617%" y="789" width="1.1409%" height="15" fill="rgb(205,109,36)" fg:x="96325361576" fg:w="7871579215"/><text x="14.2117%" y="799.50"></text></g><g><title>cargo_tarpaulin::traces::amount_coverable (7,871,579,215 samples, 1.14%)</title><rect x="13.9617%" y="773" width="1.1409%" height="15" fill="rgb(205,6,39)" fg:x="96325361576" fg:w="7871579215"/><text x="14.2117%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,864,874,545 samples, 1.14%)</title><rect x="13.9627%" y="757" width="1.1400%" height="15" fill="rgb(221,32,16)" fg:x="96332066246" fg:w="7864874545"/><text x="14.2127%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,864,874,545 samples, 1.14%)</title><rect x="13.9627%" y="741" width="1.1400%" height="15" fill="rgb(228,144,50)" fg:x="96332066246" fg:w="7864874545"/><text x="14.2127%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (85,417,302 samples, 0.01%)</title><rect x="15.1376%" y="533" width="0.0124%" height="15" fill="rgb(229,201,53)" fg:x="104437847203" fg:w="85417302"/><text x="15.3876%" y="543.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (306,550,788 samples, 0.04%)</title><rect x="15.1058%" y="565" width="0.0444%" height="15" fill="rgb(249,153,27)" fg:x="104218964408" fg:w="306550788"/><text x="15.3558%" y="575.50"></text></g><g><title>std::path::Components::parse_next_component (87,667,993 samples, 0.01%)</title><rect x="15.1376%" y="549" width="0.0127%" height="15" fill="rgb(227,106,25)" fg:x="104437847203" fg:w="87667993"/><text x="15.3876%" y="559.50"></text></g><g><title>&lt;std::path::Component as core::cmp::PartialEq&gt;::eq (147,146,974 samples, 0.02%)</title><rect x="15.1695%" y="533" width="0.0213%" height="15" fill="rgb(230,65,29)" fg:x="104658399747" fg:w="147146974"/><text x="15.4195%" y="543.50"></text></g><g><title>&lt;std::path::Components as core::clone::Clone&gt;::clone (169,804,025 samples, 0.02%)</title><rect x="15.1908%" y="533" width="0.0246%" height="15" fill="rgb(221,57,46)" fg:x="104805546721" fg:w="169804025"/><text x="15.4408%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (190,948,371 samples, 0.03%)</title><rect x="15.2402%" y="501" width="0.0277%" height="15" fill="rgb(229,161,17)" fg:x="105145732601" fg:w="190948371"/><text x="15.4902%" y="511.50"></text></g><g><title>std::path::Components::parse_next_component::_{{closure}} (113,086,688 samples, 0.02%)</title><rect x="15.2514%" y="485" width="0.0164%" height="15" fill="rgb(222,213,11)" fg:x="105223594284" fg:w="113086688"/><text x="15.5014%" y="495.50"></text></g><g><title>std::path::Components::is_sep_byte (113,086,688 samples, 0.02%)</title><rect x="15.2514%" y="469" width="0.0164%" height="15" fill="rgb(235,35,13)" fg:x="105223594284" fg:w="113086688"/><text x="15.5014%" y="479.50"></text></g><g><title>std::path::Components::parse_next_component (232,205,487 samples, 0.03%)</title><rect x="15.2393%" y="517" width="0.0337%" height="15" fill="rgb(233,158,34)" fg:x="105140123824" fg:w="232205487"/><text x="15.4893%" y="527.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (399,214,675 samples, 0.06%)</title><rect x="15.2155%" y="533" width="0.0579%" height="15" fill="rgb(215,151,48)" fg:x="104975350746" fg:w="399214675"/><text x="15.4655%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (261,469,841 samples, 0.04%)</title><rect x="15.3554%" y="485" width="0.0379%" height="15" fill="rgb(229,84,14)" fg:x="105941097127" fg:w="261469841"/><text x="15.6054%" y="495.50"></text></g><g><title>std::path::Components::parse_next_component::_{{closure}} (161,469,820 samples, 0.02%)</title><rect x="15.3699%" y="469" width="0.0234%" height="15" fill="rgb(229,68,14)" fg:x="106041097148" fg:w="161469820"/><text x="15.6199%" y="479.50"></text></g><g><title>std::path::Components::is_sep_byte (161,469,820 samples, 0.02%)</title><rect x="15.3699%" y="453" width="0.0234%" height="15" fill="rgb(243,106,26)" fg:x="106041097148" fg:w="161469820"/><text x="15.6199%" y="463.50"></text></g><g><title>std::path::Components::parse_next_component (312,426,207 samples, 0.05%)</title><rect x="15.3542%" y="501" width="0.0453%" height="15" fill="rgb(206,45,38)" fg:x="105932310157" fg:w="312426207"/><text x="15.6042%" y="511.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (801,435,768 samples, 0.12%)</title><rect x="15.2836%" y="517" width="0.1162%" height="15" fill="rgb(226,6,15)" fg:x="105445532472" fg:w="801435768"/><text x="15.5336%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (967,214,527 samples, 0.14%)</title><rect x="15.2823%" y="533" width="0.1402%" height="15" fill="rgb(232,22,54)" fg:x="105436724863" fg:w="967214527"/><text x="15.5323%" y="543.50"></text></g><g><title>std::path::Path::_starts_with (156,971,150 samples, 0.02%)</title><rect x="15.3998%" y="517" width="0.0228%" height="15" fill="rgb(229,222,32)" fg:x="106246968240" fg:w="156971150"/><text x="15.6498%" y="527.50"></text></g><g><title>std::path::iter_after (143,654,486 samples, 0.02%)</title><rect x="15.4017%" y="501" width="0.0208%" height="15" fill="rgb(228,62,29)" fg:x="106260284904" fg:w="143654486"/><text x="15.6517%" y="511.50"></text></g><g><title>&lt;std::path::Components as core::clone::Clone&gt;::clone (71,227,483 samples, 0.01%)</title><rect x="15.4122%" y="485" width="0.0103%" height="15" fill="rgb(251,103,34)" fg:x="106332711907" fg:w="71227483"/><text x="15.6622%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,365,516,182 samples, 0.34%)</title><rect x="15.1047%" y="757" width="0.3429%" height="15" fill="rgb(233,12,30)" fg:x="104211138250" fg:w="2365516182"/><text x="15.3547%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,365,516,182 samples, 0.34%)</title><rect x="15.1047%" y="741" width="0.3429%" height="15" fill="rgb(238,52,0)" fg:x="104211138250" fg:w="2365516182"/><text x="15.3547%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,365,516,182 samples, 0.34%)</title><rect x="15.1047%" y="725" width="0.3429%" height="15" fill="rgb(223,98,5)" fg:x="104211138250" fg:w="2365516182"/><text x="15.3547%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (2,365,516,182 samples, 0.34%)</title><rect x="15.1047%" y="709" width="0.3429%" height="15" fill="rgb(228,75,37)" fg:x="104211138250" fg:w="2365516182"/><text x="15.3547%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,365,516,182 samples, 0.34%)</title><rect x="15.1047%" y="693" width="0.3429%" height="15" fill="rgb(205,115,49)" fg:x="104211138250" fg:w="2365516182"/><text x="15.3547%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,365,516,182 samples, 0.34%)</title><rect x="15.1047%" y="677" width="0.3429%" height="15" fill="rgb(250,154,43)" fg:x="104211138250" fg:w="2365516182"/><text x="15.3547%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2,365,516,182 samples, 0.34%)</title><rect x="15.1047%" y="661" width="0.3429%" height="15" fill="rgb(226,43,29)" fg:x="104211138250" fg:w="2365516182"/><text x="15.3547%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,365,516,182 samples, 0.34%)</title><rect x="15.1047%" y="645" width="0.3429%" height="15" fill="rgb(249,228,39)" fg:x="104211138250" fg:w="2365516182"/><text x="15.3547%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (2,365,516,182 samples, 0.34%)</title><rect x="15.1047%" y="629" width="0.3429%" height="15" fill="rgb(216,79,43)" fg:x="104211138250" fg:w="2365516182"/><text x="15.3547%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,365,516,182 samples, 0.34%)</title><rect x="15.1047%" y="613" width="0.3429%" height="15" fill="rgb(228,95,12)" fg:x="104211138250" fg:w="2365516182"/><text x="15.3547%" y="623.50"></text></g><g><title>cargo_tarpaulin::traces::TraceMap::get_child_traces::_{{closure}} (2,365,516,182 samples, 0.34%)</title><rect x="15.1047%" y="597" width="0.3429%" height="15" fill="rgb(249,221,15)" fg:x="104211138250" fg:w="2365516182"/><text x="15.3547%" y="607.50"></text></g><g><title>std::path::Path::starts_with (2,365,516,182 samples, 0.34%)</title><rect x="15.1047%" y="581" width="0.3429%" height="15" fill="rgb(233,34,13)" fg:x="104211138250" fg:w="2365516182"/><text x="15.3547%" y="591.50"></text></g><g><title>std::path::Path::_starts_with (2,051,139,236 samples, 0.30%)</title><rect x="15.1503%" y="565" width="0.2973%" height="15" fill="rgb(214,103,39)" fg:x="104525515196" fg:w="2051139236"/><text x="15.4003%" y="575.50"></text></g><g><title>std::path::iter_after (2,042,267,910 samples, 0.30%)</title><rect x="15.1515%" y="549" width="0.2960%" height="15" fill="rgb(251,126,39)" fg:x="104534386522" fg:w="2042267910"/><text x="15.4015%" y="559.50"></text></g><g><title>std::path::Path::_starts_with (172,715,042 samples, 0.03%)</title><rect x="15.4225%" y="533" width="0.0250%" height="15" fill="rgb(214,216,36)" fg:x="106403939390" fg:w="172715042"/><text x="15.6725%" y="543.50"></text></g><g><title>std::path::iter_after (157,052,780 samples, 0.02%)</title><rect x="15.4248%" y="517" width="0.0228%" height="15" fill="rgb(220,221,8)" fg:x="106419601652" fg:w="157052780"/><text x="15.6748%" y="527.50"></text></g><g><title>cargo_tarpaulin::traces::TraceMap::covered_in_path (2,366,641,966 samples, 0.34%)</title><rect x="15.1047%" y="789" width="0.3430%" height="15" fill="rgb(240,216,3)" fg:x="104211138250" fg:w="2366641966"/><text x="15.3547%" y="799.50"></text></g><g><title>cargo_tarpaulin::traces::amount_covered (2,366,641,966 samples, 0.34%)</title><rect x="15.1047%" y="773" width="0.3430%" height="15" fill="rgb(232,218,17)" fg:x="104211138250" fg:w="2366641966"/><text x="15.3547%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (108,072,624 samples, 0.02%)</title><rect x="15.4877%" y="453" width="0.0157%" height="15" fill="rgb(229,163,45)" fg:x="106853328006" fg:w="108072624"/><text x="15.7377%" y="463.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (345,108,390 samples, 0.05%)</title><rect x="15.4536%" y="485" width="0.0500%" height="15" fill="rgb(231,110,42)" fg:x="106618536477" fg:w="345108390"/><text x="15.7036%" y="495.50"></text></g><g><title>std::path::Components::parse_next_component (111,434,625 samples, 0.02%)</title><rect x="15.4875%" y="469" width="0.0162%" height="15" fill="rgb(208,170,48)" fg:x="106852210242" fg:w="111434625"/><text x="15.7375%" y="479.50"></text></g><g><title>&lt;std::path::Component as core::cmp::PartialEq&gt;::eq (137,421,816 samples, 0.02%)</title><rect x="15.5288%" y="453" width="0.0199%" height="15" fill="rgb(239,116,25)" fg:x="107137443427" fg:w="137421816"/><text x="15.7788%" y="463.50"></text></g><g><title>&lt;std::path::Components as core::clone::Clone&gt;::clone (208,152,536 samples, 0.03%)</title><rect x="15.5488%" y="453" width="0.0302%" height="15" fill="rgb(219,200,50)" fg:x="107274865243" fg:w="208152536"/><text x="15.7988%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (173,179,374 samples, 0.03%)</title><rect x="15.6016%" y="421" width="0.0251%" height="15" fill="rgb(245,200,0)" fg:x="107639214767" fg:w="173179374"/><text x="15.8516%" y="431.50"></text></g><g><title>std::path::Components::parse_next_component::_{{closure}} (116,592,757 samples, 0.02%)</title><rect x="15.6098%" y="405" width="0.0169%" height="15" fill="rgb(245,119,33)" fg:x="107695801384" fg:w="116592757"/><text x="15.8598%" y="415.50"></text></g><g><title>std::path::Components::is_sep_byte (116,592,757 samples, 0.02%)</title><rect x="15.6098%" y="389" width="0.0169%" height="15" fill="rgb(231,125,12)" fg:x="107695801384" fg:w="116592757"/><text x="15.8598%" y="399.50"></text></g><g><title>std::path::Components::parse_next_component (214,106,849 samples, 0.03%)</title><rect x="15.6008%" y="437" width="0.0310%" height="15" fill="rgb(216,96,41)" fg:x="107633599375" fg:w="214106849"/><text x="15.8508%" y="447.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (369,096,904 samples, 0.05%)</title><rect x="15.5789%" y="453" width="0.0535%" height="15" fill="rgb(248,43,45)" fg:x="107483017779" fg:w="369096904"/><text x="15.8289%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (254,917,339 samples, 0.04%)</title><rect x="15.7027%" y="405" width="0.0369%" height="15" fill="rgb(217,222,7)" fg:x="108336743486" fg:w="254917339"/><text x="15.9527%" y="415.50"></text></g><g><title>std::path::Components::parse_next_component::_{{closure}} (172,571,268 samples, 0.03%)</title><rect x="15.7146%" y="389" width="0.0250%" height="15" fill="rgb(233,28,6)" fg:x="108419089557" fg:w="172571268"/><text x="15.9646%" y="399.50"></text></g><g><title>std::path::Components::is_sep_byte (172,571,268 samples, 0.03%)</title><rect x="15.7146%" y="373" width="0.0250%" height="15" fill="rgb(231,218,15)" fg:x="108419089557" fg:w="172571268"/><text x="15.9646%" y="383.50"></text></g><g><title>std::path::Components::parse_next_component (288,242,444 samples, 0.04%)</title><rect x="15.7017%" y="421" width="0.0418%" height="15" fill="rgb(226,171,48)" fg:x="108330104792" fg:w="288242444"/><text x="15.9517%" y="431.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (706,556,207 samples, 0.10%)</title><rect x="15.6412%" y="437" width="0.1024%" height="15" fill="rgb(235,201,9)" fg:x="107912911331" fg:w="706556207"/><text x="15.8912%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (914,853,881 samples, 0.13%)</title><rect x="15.6403%" y="453" width="0.1326%" height="15" fill="rgb(217,80,15)" fg:x="107906210961" fg:w="914853881"/><text x="15.8903%" y="463.50"></text></g><g><title>std::path::Path::_starts_with (200,479,802 samples, 0.03%)</title><rect x="15.7438%" y="437" width="0.0291%" height="15" fill="rgb(219,152,8)" fg:x="108620585040" fg:w="200479802"/><text x="15.9938%" y="447.50"></text></g><g><title>std::path::iter_after (198,235,012 samples, 0.03%)</title><rect x="15.7441%" y="421" width="0.0287%" height="15" fill="rgb(243,107,38)" fg:x="108622829830" fg:w="198235012"/><text x="15.9941%" y="431.50"></text></g><g><title>&lt;std::path::Components as core::clone::Clone&gt;::clone (89,404,943 samples, 0.01%)</title><rect x="15.7599%" y="405" width="0.0130%" height="15" fill="rgb(231,17,5)" fg:x="108731659899" fg:w="89404943"/><text x="16.0099%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,393,478,596 samples, 0.35%)</title><rect x="15.4499%" y="645" width="0.3469%" height="15" fill="rgb(209,25,54)" fg:x="106593120824" fg:w="2393478596"/><text x="15.6999%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (2,393,478,596 samples, 0.35%)</title><rect x="15.4499%" y="629" width="0.3469%" height="15" fill="rgb(219,0,2)" fg:x="106593120824" fg:w="2393478596"/><text x="15.6999%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,393,478,596 samples, 0.35%)</title><rect x="15.4499%" y="613" width="0.3469%" height="15" fill="rgb(246,9,5)" fg:x="106593120824" fg:w="2393478596"/><text x="15.6999%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,393,478,596 samples, 0.35%)</title><rect x="15.4499%" y="597" width="0.3469%" height="15" fill="rgb(226,159,4)" fg:x="106593120824" fg:w="2393478596"/><text x="15.6999%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2,393,478,596 samples, 0.35%)</title><rect x="15.4499%" y="581" width="0.3469%" height="15" fill="rgb(219,175,34)" fg:x="106593120824" fg:w="2393478596"/><text x="15.6999%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,393,478,596 samples, 0.35%)</title><rect x="15.4499%" y="565" width="0.3469%" height="15" fill="rgb(236,10,46)" fg:x="106593120824" fg:w="2393478596"/><text x="15.6999%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (2,392,358,987 samples, 0.35%)</title><rect x="15.4501%" y="549" width="0.3468%" height="15" fill="rgb(240,211,16)" fg:x="106594240433" fg:w="2392358987"/><text x="15.7001%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,392,358,987 samples, 0.35%)</title><rect x="15.4501%" y="533" width="0.3468%" height="15" fill="rgb(205,3,43)" fg:x="106594240433" fg:w="2392358987"/><text x="15.7001%" y="543.50"></text></g><g><title>cargo_tarpaulin::traces::TraceMap::get_child_traces::_{{closure}} (2,392,358,987 samples, 0.35%)</title><rect x="15.4501%" y="517" width="0.3468%" height="15" fill="rgb(245,7,22)" fg:x="106594240433" fg:w="2392358987"/><text x="15.7001%" y="527.50"></text></g><g><title>std::path::Path::starts_with (2,392,358,987 samples, 0.35%)</title><rect x="15.4501%" y="501" width="0.3468%" height="15" fill="rgb(239,132,32)" fg:x="106594240433" fg:w="2392358987"/><text x="15.7001%" y="511.50"></text></g><g><title>std::path::Path::_starts_with (2,022,954,553 samples, 0.29%)</title><rect x="15.5036%" y="485" width="0.2932%" height="15" fill="rgb(228,202,34)" fg:x="106963644867" fg:w="2022954553"/><text x="15.7536%" y="495.50"></text></g><g><title>std::path::iter_after (2,000,810,468 samples, 0.29%)</title><rect x="15.5069%" y="469" width="0.2900%" height="15" fill="rgb(254,200,22)" fg:x="106985788952" fg:w="2000810468"/><text x="15.7569%" y="479.50"></text></g><g><title>std::path::Path::_starts_with (165,534,578 samples, 0.02%)</title><rect x="15.7729%" y="453" width="0.0240%" height="15" fill="rgb(219,10,39)" fg:x="108821064842" fg:w="165534578"/><text x="16.0229%" y="463.50"></text></g><g><title>std::path::iter_after (161,059,397 samples, 0.02%)</title><rect x="15.7735%" y="437" width="0.0233%" height="15" fill="rgb(226,210,39)" fg:x="108825540023" fg:w="161059397"/><text x="16.0235%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,394,593,268 samples, 0.35%)</title><rect x="15.4499%" y="677" width="0.3471%" height="15" fill="rgb(208,219,16)" fg:x="106593120824" fg:w="2394593268"/><text x="15.6999%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,394,593,268 samples, 0.35%)</title><rect x="15.4499%" y="661" width="0.3471%" height="15" fill="rgb(216,158,51)" fg:x="106593120824" fg:w="2394593268"/><text x="15.6999%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,397,970,578 samples, 0.35%)</title><rect x="15.4496%" y="709" width="0.3476%" height="15" fill="rgb(233,14,44)" fg:x="106590877033" fg:w="2397970578"/><text x="15.6996%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2,397,970,578 samples, 0.35%)</title><rect x="15.4496%" y="693" width="0.3476%" height="15" fill="rgb(237,97,39)" fg:x="106590877033" fg:w="2397970578"/><text x="15.6996%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (101,904,194 samples, 0.01%)</title><rect x="15.8388%" y="485" width="0.0148%" height="15" fill="rgb(218,198,43)" fg:x="109276071377" fg:w="101904194"/><text x="16.0888%" y="495.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (362,571,638 samples, 0.05%)</title><rect x="15.8015%" y="517" width="0.0526%" height="15" fill="rgb(231,104,20)" fg:x="109018749741" fg:w="362571638"/><text x="16.0515%" y="527.50"></text></g><g><title>std::path::Components::parse_next_component (107,420,009 samples, 0.02%)</title><rect x="15.8385%" y="501" width="0.0156%" height="15" fill="rgb(254,36,13)" fg:x="109273901370" fg:w="107420009"/><text x="16.0885%" y="511.50"></text></g><g><title>&lt;std::path::Component as core::cmp::PartialEq&gt;::eq (144,084,054 samples, 0.02%)</title><rect x="15.8773%" y="485" width="0.0209%" height="15" fill="rgb(248,14,50)" fg:x="109541889998" fg:w="144084054"/><text x="16.1273%" y="495.50"></text></g><g><title>&lt;std::path::Components as core::clone::Clone&gt;::clone (210,280,868 samples, 0.03%)</title><rect x="15.8982%" y="485" width="0.0305%" height="15" fill="rgb(217,107,29)" fg:x="109685974052" fg:w="210280868"/><text x="16.1482%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (175,752,488 samples, 0.03%)</title><rect x="15.9562%" y="453" width="0.0255%" height="15" fill="rgb(251,169,33)" fg:x="110086092563" fg:w="175752488"/><text x="16.2062%" y="463.50"></text></g><g><title>std::path::Components::parse_next_component::_{{closure}} (112,769,958 samples, 0.02%)</title><rect x="15.9654%" y="437" width="0.0163%" height="15" fill="rgb(217,108,32)" fg:x="110149075093" fg:w="112769958"/><text x="16.2154%" y="447.50"></text></g><g><title>std::path::Components::is_sep_byte (112,769,958 samples, 0.02%)</title><rect x="15.9654%" y="421" width="0.0163%" height="15" fill="rgb(219,66,42)" fg:x="110149075093" fg:w="112769958"/><text x="16.2154%" y="431.50"></text></g><g><title>std::path::Components::parse_next_component (220,213,567 samples, 0.03%)</title><rect x="15.9554%" y="469" width="0.0319%" height="15" fill="rgb(206,180,7)" fg:x="110080557849" fg:w="220213567"/><text x="16.2054%" y="479.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (408,965,080 samples, 0.06%)</title><rect x="15.9287%" y="485" width="0.0593%" height="15" fill="rgb(208,226,31)" fg:x="109896254920" fg:w="408965080"/><text x="16.1787%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (260,567,915 samples, 0.04%)</title><rect x="16.0582%" y="437" width="0.0378%" height="15" fill="rgb(218,26,49)" fg:x="110789525928" fg:w="260567915"/><text x="16.3082%" y="447.50"></text></g><g><title>std::path::Components::parse_next_component::_{{closure}} (155,237,198 samples, 0.02%)</title><rect x="16.0735%" y="421" width="0.0225%" height="15" fill="rgb(233,197,48)" fg:x="110894856645" fg:w="155237198"/><text x="16.3235%" y="431.50"></text></g><g><title>std::path::Components::is_sep_byte (155,237,198 samples, 0.02%)</title><rect x="16.0735%" y="405" width="0.0225%" height="15" fill="rgb(252,181,51)" fg:x="110894856645" fg:w="155237198"/><text x="16.3235%" y="415.50"></text></g><g><title>std::path::Components::parse_next_component (290,603,846 samples, 0.04%)</title><rect x="16.0574%" y="453" width="0.0421%" height="15" fill="rgb(253,90,19)" fg:x="110784017053" fg:w="290603846"/><text x="16.3074%" y="463.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (717,487,693 samples, 0.10%)</title><rect x="15.9958%" y="469" width="0.1040%" height="15" fill="rgb(215,171,30)" fg:x="110359359823" fg:w="717487693"/><text x="16.2458%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (905,847,647 samples, 0.13%)</title><rect x="15.9947%" y="485" width="0.1313%" height="15" fill="rgb(214,222,9)" fg:x="110351736603" fg:w="905847647"/><text x="16.2447%" y="495.50"></text></g><g><title>std::path::Path::_starts_with (179,613,275 samples, 0.03%)</title><rect x="16.1000%" y="469" width="0.0260%" height="15" fill="rgb(223,3,22)" fg:x="111077970975" fg:w="179613275"/><text x="16.3500%" y="479.50"></text></g><g><title>std::path::iter_after (176,405,781 samples, 0.03%)</title><rect x="16.1005%" y="453" width="0.0256%" height="15" fill="rgb(225,196,46)" fg:x="111081178469" fg:w="176405781"/><text x="16.3505%" y="463.50"></text></g><g><title>&lt;std::path::Components as core::clone::Clone&gt;::clone (83,354,164 samples, 0.01%)</title><rect x="16.1139%" y="437" width="0.0121%" height="15" fill="rgb(209,110,37)" fg:x="111174230086" fg:w="83354164"/><text x="16.3639%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4,868,113,938 samples, 0.71%)</title><rect x="15.4496%" y="773" width="0.7056%" height="15" fill="rgb(249,89,12)" fg:x="106590877033" fg:w="4868113938"/><text x="15.6996%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4,868,113,938 samples, 0.71%)</title><rect x="15.4496%" y="757" width="0.7056%" height="15" fill="rgb(226,27,33)" fg:x="106590877033" fg:w="4868113938"/><text x="15.6996%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,868,113,938 samples, 0.71%)</title><rect x="15.4496%" y="741" width="0.7056%" height="15" fill="rgb(213,82,22)" fg:x="106590877033" fg:w="4868113938"/><text x="15.6996%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4,868,113,938 samples, 0.71%)</title><rect x="15.4496%" y="725" width="0.7056%" height="15" fill="rgb(248,140,0)" fg:x="106590877033" fg:w="4868113938"/><text x="15.6996%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,470,143,360 samples, 0.36%)</title><rect x="15.7972%" y="709" width="0.3580%" height="15" fill="rgb(228,106,3)" fg:x="108988847611" fg:w="2470143360"/><text x="16.0472%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,470,143,360 samples, 0.36%)</title><rect x="15.7972%" y="693" width="0.3580%" height="15" fill="rgb(209,23,37)" fg:x="108988847611" fg:w="2470143360"/><text x="16.0472%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,470,143,360 samples, 0.36%)</title><rect x="15.7972%" y="677" width="0.3580%" height="15" fill="rgb(241,93,50)" fg:x="108988847611" fg:w="2470143360"/><text x="16.0472%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (2,470,143,360 samples, 0.36%)</title><rect x="15.7972%" y="661" width="0.3580%" height="15" fill="rgb(253,46,43)" fg:x="108988847611" fg:w="2470143360"/><text x="16.0472%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,470,143,360 samples, 0.36%)</title><rect x="15.7972%" y="645" width="0.3580%" height="15" fill="rgb(226,206,43)" fg:x="108988847611" fg:w="2470143360"/><text x="16.0472%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,470,143,360 samples, 0.36%)</title><rect x="15.7972%" y="629" width="0.3580%" height="15" fill="rgb(217,54,7)" fg:x="108988847611" fg:w="2470143360"/><text x="16.0472%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2,470,143,360 samples, 0.36%)</title><rect x="15.7972%" y="613" width="0.3580%" height="15" fill="rgb(223,5,52)" fg:x="108988847611" fg:w="2470143360"/><text x="16.0472%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,470,143,360 samples, 0.36%)</title><rect x="15.7972%" y="597" width="0.3580%" height="15" fill="rgb(206,52,46)" fg:x="108988847611" fg:w="2470143360"/><text x="16.0472%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (2,469,023,994 samples, 0.36%)</title><rect x="15.7973%" y="581" width="0.3579%" height="15" fill="rgb(253,136,11)" fg:x="108989966977" fg:w="2469023994"/><text x="16.0473%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,469,023,994 samples, 0.36%)</title><rect x="15.7973%" y="565" width="0.3579%" height="15" fill="rgb(208,106,33)" fg:x="108989966977" fg:w="2469023994"/><text x="16.0473%" y="575.50"></text></g><g><title>cargo_tarpaulin::traces::TraceMap::get_child_traces::_{{closure}} (2,469,023,994 samples, 0.36%)</title><rect x="15.7973%" y="549" width="0.3579%" height="15" fill="rgb(206,54,4)" fg:x="108989966977" fg:w="2469023994"/><text x="16.0473%" y="559.50"></text></g><g><title>std::path::Path::starts_with (2,469,023,994 samples, 0.36%)</title><rect x="15.7973%" y="533" width="0.3579%" height="15" fill="rgb(213,3,15)" fg:x="108989966977" fg:w="2469023994"/><text x="16.0473%" y="543.50"></text></g><g><title>std::path::Path::_starts_with (2,076,577,319 samples, 0.30%)</title><rect x="15.8542%" y="517" width="0.3010%" height="15" fill="rgb(252,211,39)" fg:x="109382413652" fg:w="2076577319"/><text x="16.1042%" y="527.50"></text></g><g><title>std::path::iter_after (2,055,445,041 samples, 0.30%)</title><rect x="15.8573%" y="501" width="0.2979%" height="15" fill="rgb(223,6,36)" fg:x="109403545930" fg:w="2055445041"/><text x="16.1073%" y="511.50"></text></g><g><title>std::path::Path::_starts_with (201,406,721 samples, 0.03%)</title><rect x="16.1260%" y="485" width="0.0292%" height="15" fill="rgb(252,169,45)" fg:x="111257584250" fg:w="201406721"/><text x="16.3760%" y="495.50"></text></g><g><title>std::path::iter_after (185,925,105 samples, 0.03%)</title><rect x="16.1283%" y="469" width="0.0269%" height="15" fill="rgb(212,48,26)" fg:x="111273065866" fg:w="185925105"/><text x="16.3783%" y="479.50"></text></g><g><title>cargo_tarpaulin::traces::coverage_percentage (4,873,685,187 samples, 0.71%)</title><rect x="15.4490%" y="789" width="0.7064%" height="15" fill="rgb(251,102,48)" fg:x="106586429561" fg:w="4873685187"/><text x="15.6990%" y="799.50"></text></g><g><title>cargo_tarpaulin::report::generate_requested_reports (15,283,979,596 samples, 2.22%)</title><rect x="13.9437%" y="821" width="2.2153%" height="15" fill="rgb(243,208,16)" fg:x="96201448026" fg:w="15283979596"/><text x="14.1937%" y="831.50">c..</text></g><g><title>cargo_tarpaulin::report::print_summary (15,257,775,526 samples, 2.21%)</title><rect x="13.9475%" y="805" width="2.2115%" height="15" fill="rgb(219,96,24)" fg:x="96227652096" fg:w="15257775526"/><text x="14.1975%" y="815.50">c..</text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (77,459,161 samples, 0.01%)</title><rect x="16.1592%" y="613" width="0.0112%" height="15" fill="rgb(219,33,29)" fg:x="111486580005" fg:w="77459161"/><text x="16.4092%" y="623.50"></text></g><g><title>__clear_extent_bit (100,177,290 samples, 0.01%)</title><rect x="16.1891%" y="213" width="0.0145%" height="15" fill="rgb(223,176,5)" fg:x="111692780602" fg:w="100177290"/><text x="16.4391%" y="223.50"></text></g><g><title>btrfs_reserve_metadata_bytes (103,061,876 samples, 0.01%)</title><rect x="16.2312%" y="197" width="0.0149%" height="15" fill="rgb(228,140,14)" fg:x="111983414617" fg:w="103061876"/><text x="16.4812%" y="207.50"></text></g><g><title>__reserve_bytes (100,751,540 samples, 0.01%)</title><rect x="16.2316%" y="181" width="0.0146%" height="15" fill="rgb(217,179,31)" fg:x="111985724953" fg:w="100751540"/><text x="16.4816%" y="191.50"></text></g><g><title>btrfs_delalloc_reserve_metadata (194,209,421 samples, 0.03%)</title><rect x="16.2183%" y="213" width="0.0281%" height="15" fill="rgb(230,9,30)" fg:x="111894552751" fg:w="194209421"/><text x="16.4683%" y="223.50"></text></g><g><title>btrfs_clear_delalloc_extent (117,594,909 samples, 0.02%)</title><rect x="16.2552%" y="165" width="0.0170%" height="15" fill="rgb(230,136,20)" fg:x="112149135931" fg:w="117594909"/><text x="16.5052%" y="175.50"></text></g><g><title>clear_state_bit (127,678,962 samples, 0.02%)</title><rect x="16.2540%" y="181" width="0.0185%" height="15" fill="rgb(215,210,22)" fg:x="112140199295" fg:w="127678962"/><text x="16.5040%" y="191.50"></text></g><g><title>__clear_extent_bit (198,448,409 samples, 0.03%)</title><rect x="16.2472%" y="197" width="0.0288%" height="15" fill="rgb(218,43,5)" fg:x="112093319817" fg:w="198448409"/><text x="16.4972%" y="207.50"></text></g><g><title>btrfs_set_extent_delalloc (107,947,588 samples, 0.02%)</title><rect x="16.2766%" y="197" width="0.0156%" height="15" fill="rgb(216,11,5)" fg:x="112296249485" fg:w="107947588"/><text x="16.5266%" y="207.50"></text></g><g><title>set_extent_bit (70,040,480 samples, 0.01%)</title><rect x="16.2821%" y="181" width="0.0102%" height="15" fill="rgb(209,82,29)" fg:x="112334156593" fg:w="70040480"/><text x="16.5321%" y="191.50"></text></g><g><title>__set_extent_bit (70,040,480 samples, 0.01%)</title><rect x="16.2821%" y="165" width="0.0102%" height="15" fill="rgb(244,115,12)" fg:x="112334156593" fg:w="70040480"/><text x="16.5321%" y="175.50"></text></g><g><title>btrfs_dirty_folio (419,199,746 samples, 0.06%)</title><rect x="16.2465%" y="213" width="0.0608%" height="15" fill="rgb(222,82,18)" fg:x="112088762172" fg:w="419199746"/><text x="16.4965%" y="223.50"></text></g><g><title>set_extent_bit (84,361,370 samples, 0.01%)</title><rect x="16.2950%" y="197" width="0.0122%" height="15" fill="rgb(249,227,8)" fg:x="112423600548" fg:w="84361370"/><text x="16.5450%" y="207.50"></text></g><g><title>__set_extent_bit (84,361,370 samples, 0.01%)</title><rect x="16.2950%" y="181" width="0.0122%" height="15" fill="rgb(253,141,45)" fg:x="112423600548" fg:w="84361370"/><text x="16.5450%" y="191.50"></text></g><g><title>btrfs_write_check (91,532,173 samples, 0.01%)</title><rect x="16.3183%" y="213" width="0.0133%" height="15" fill="rgb(234,184,4)" fg:x="112584127785" fg:w="91532173"/><text x="16.5683%" y="223.50"></text></g><g><title>__lock_extent (75,832,381 samples, 0.01%)</title><rect x="16.3384%" y="197" width="0.0110%" height="15" fill="rgb(218,194,23)" fg:x="112722531488" fg:w="75832381"/><text x="16.5884%" y="207.50"></text></g><g><title>lock_and_cleanup_extent_if_need (110,204,134 samples, 0.02%)</title><rect x="16.3375%" y="213" width="0.0160%" height="15" fill="rgb(235,66,41)" fg:x="112716827140" fg:w="110204134"/><text x="16.5875%" y="223.50"></text></g><g><title>btrfs_do_write_iter (1,256,120,244 samples, 0.18%)</title><rect x="16.1812%" y="245" width="0.1821%" height="15" fill="rgb(245,217,1)" fg:x="111637916410" fg:w="1256120244"/><text x="16.4312%" y="255.50"></text></g><g><title>btrfs_buffered_write (1,235,504,437 samples, 0.18%)</title><rect x="16.1841%" y="229" width="0.1791%" height="15" fill="rgb(229,91,1)" fg:x="111658532217" fg:w="1235504437"/><text x="16.4341%" y="239.50"></text></g><g><title>ksys_write (1,300,357,473 samples, 0.19%)</title><rect x="16.1777%" y="277" width="0.1885%" height="15" fill="rgb(207,101,30)" fg:x="111614198611" fg:w="1300357473"/><text x="16.4277%" y="287.50"></text></g><g><title>vfs_write (1,295,896,692 samples, 0.19%)</title><rect x="16.1784%" y="261" width="0.1878%" height="15" fill="rgb(223,82,49)" fg:x="111618659392" fg:w="1295896692"/><text x="16.4284%" y="271.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,310,568,444 samples, 0.19%)</title><rect x="16.1767%" y="309" width="0.1900%" height="15" fill="rgb(218,167,17)" fg:x="111607366686" fg:w="1310568444"/><text x="16.4267%" y="319.50"></text></g><g><title>do_syscall_64 (1,308,283,651 samples, 0.19%)</title><rect x="16.1771%" y="293" width="0.1896%" height="15" fill="rgb(208,103,14)" fg:x="111609651479" fg:w="1308283651"/><text x="16.4271%" y="303.50"></text></g><g><title>__GI___libc_write (1,327,772,195 samples, 0.19%)</title><rect x="16.1747%" y="325" width="0.1925%" height="15" fill="rgb(238,20,8)" fg:x="111593612446" fg:w="1327772195"/><text x="16.4247%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_struct (1,341,433,260 samples, 0.19%)</title><rect x="16.1734%" y="437" width="0.1944%" height="15" fill="rgb(218,80,54)" fg:x="111584516572" fg:w="1341433260"/><text x="16.4234%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_map (1,341,433,260 samples, 0.19%)</title><rect x="16.1734%" y="421" width="0.1944%" height="15" fill="rgb(240,144,17)" fg:x="111584516572" fg:w="1341433260"/><text x="16.4234%" y="431.50"></text></g><g><title>serde_json::ser::Formatter::begin_object (1,341,433,260 samples, 0.19%)</title><rect x="16.1734%" y="405" width="0.1944%" height="15" fill="rgb(245,27,50)" fg:x="111584516572" fg:w="1341433260"/><text x="16.4234%" y="415.50"></text></g><g><title>std::io::Write::write_all (1,341,433,260 samples, 0.19%)</title><rect x="16.1734%" y="389" width="0.1944%" height="15" fill="rgb(251,51,7)" fg:x="111584516572" fg:w="1341433260"/><text x="16.4234%" y="399.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1,339,129,434 samples, 0.19%)</title><rect x="16.1737%" y="373" width="0.1941%" height="15" fill="rgb(245,217,29)" fg:x="111586820398" fg:w="1339129434"/><text x="16.4237%" y="383.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (1,332,337,386 samples, 0.19%)</title><rect x="16.1747%" y="357" width="0.1931%" height="15" fill="rgb(221,176,29)" fg:x="111593612446" fg:w="1332337386"/><text x="16.4247%" y="367.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (1,332,337,386 samples, 0.19%)</title><rect x="16.1747%" y="341" width="0.1931%" height="15" fill="rgb(212,180,24)" fg:x="111593612446" fg:w="1332337386"/><text x="16.4247%" y="351.50"></text></g><g><title>merge_prev_state (81,978,877 samples, 0.01%)</title><rect x="16.4867%" y="101" width="0.0119%" height="15" fill="rgb(254,24,2)" fg:x="113745859244" fg:w="81978877"/><text x="16.7367%" y="111.50"></text></g><g><title>clear_state_bit (249,944,169 samples, 0.04%)</title><rect x="16.4627%" y="117" width="0.0362%" height="15" fill="rgb(230,100,2)" fg:x="113580204794" fg:w="249944169"/><text x="16.7127%" y="127.50"></text></g><g><title>__clear_extent_bit (450,332,480 samples, 0.07%)</title><rect x="16.4411%" y="133" width="0.0653%" height="15" fill="rgb(219,142,25)" fg:x="113431330386" fg:w="450332480"/><text x="16.6911%" y="143.50"></text></g><g><title>balance_dirty_pages_ratelimited_flags (197,699,536 samples, 0.03%)</title><rect x="16.5070%" y="133" width="0.0287%" height="15" fill="rgb(240,73,43)" fg:x="113886254818" fg:w="197699536"/><text x="16.7570%" y="143.50"></text></g><g><title>btrfs_check_data_free_space (119,145,332 samples, 0.02%)</title><rect x="16.5357%" y="133" width="0.0173%" height="15" fill="rgb(214,114,15)" fg:x="114083954354" fg:w="119145332"/><text x="16.7857%" y="143.50"></text></g><g><title>btrfs_delalloc_release_extents (79,887,653 samples, 0.01%)</title><rect x="16.5530%" y="133" width="0.0116%" height="15" fill="rgb(207,130,4)" fg:x="114203099686" fg:w="79887653"/><text x="16.8030%" y="143.50"></text></g><g><title>btrfs_calculate_inode_block_rsv_size (76,814,673 samples, 0.01%)</title><rect x="16.6023%" y="117" width="0.0111%" height="15" fill="rgb(221,25,40)" fg:x="114543279324" fg:w="76814673"/><text x="16.8523%" y="127.50"></text></g><g><title>btrfs_reduce_alloc_profile (84,591,131 samples, 0.01%)</title><rect x="16.6482%" y="53" width="0.0123%" height="15" fill="rgb(241,184,7)" fg:x="114860283303" fg:w="84591131"/><text x="16.8982%" y="63.50"></text></g><g><title>need_preemptive_reclaim (166,894,204 samples, 0.02%)</title><rect x="16.6370%" y="85" width="0.0242%" height="15" fill="rgb(235,159,4)" fg:x="114782593630" fg:w="166894204"/><text x="16.8870%" y="95.50"></text></g><g><title>calc_available_free_space.isra.0 (129,184,958 samples, 0.02%)</title><rect x="16.6424%" y="69" width="0.0187%" height="15" fill="rgb(214,87,48)" fg:x="114820302876" fg:w="129184958"/><text x="16.8924%" y="79.50"></text></g><g><title>btrfs_reserve_metadata_bytes (450,584,253 samples, 0.07%)</title><rect x="16.6134%" y="117" width="0.0653%" height="15" fill="rgb(246,198,24)" fg:x="114620093997" fg:w="450584253"/><text x="16.8634%" y="127.50"></text></g><g><title>__reserve_bytes (436,997,038 samples, 0.06%)</title><rect x="16.6154%" y="101" width="0.0633%" height="15" fill="rgb(209,66,40)" fg:x="114633681212" fg:w="436997038"/><text x="16.8654%" y="111.50"></text></g><g><title>work_busy (115,479,603 samples, 0.02%)</title><rect x="16.6620%" y="85" width="0.0167%" height="15" fill="rgb(233,147,39)" fg:x="114955198647" fg:w="115479603"/><text x="16.9120%" y="95.50"></text></g><g><title>btrfs_delalloc_reserve_metadata (801,402,840 samples, 0.12%)</title><rect x="16.5645%" y="133" width="0.1162%" height="15" fill="rgb(231,145,52)" fg:x="114282987339" fg:w="801402840"/><text x="16.8145%" y="143.50"></text></g><g><title>alloc_extent_state (79,190,598 samples, 0.01%)</title><rect x="16.6944%" y="101" width="0.0115%" height="15" fill="rgb(206,20,26)" fg:x="115178952736" fg:w="79190598"/><text x="16.9444%" y="111.50"></text></g><g><title>btrfs_delalloc_release_metadata (95,025,200 samples, 0.01%)</title><rect x="16.7316%" y="69" width="0.0138%" height="15" fill="rgb(238,220,4)" fg:x="115435733121" fg:w="95025200"/><text x="16.9816%" y="79.50"></text></g><g><title>btrfs_inode_rsv_release (118,998,621 samples, 0.02%)</title><rect x="16.7454%" y="69" width="0.0172%" height="15" fill="rgb(252,195,42)" fg:x="115530758321" fg:w="118998621"/><text x="16.9954%" y="79.50"></text></g><g><title>btrfs_block_rsv_release (104,037,692 samples, 0.02%)</title><rect x="16.7476%" y="53" width="0.0151%" height="15" fill="rgb(209,10,6)" fg:x="115545719250" fg:w="104037692"/><text x="16.9976%" y="63.50"></text></g><g><title>btrfs_clear_delalloc_extent (447,761,138 samples, 0.06%)</title><rect x="16.7102%" y="85" width="0.0649%" height="15" fill="rgb(229,3,52)" fg:x="115287635601" fg:w="447761138"/><text x="16.9602%" y="95.50"></text></g><g><title>clear_state_bit (479,524,066 samples, 0.07%)</title><rect x="16.7059%" y="101" width="0.0695%" height="15" fill="rgb(253,49,37)" fg:x="115258143334" fg:w="479524066"/><text x="16.9559%" y="111.50"></text></g><g><title>__clear_extent_bit (731,411,749 samples, 0.11%)</title><rect x="16.6832%" y="117" width="0.1060%" height="15" fill="rgb(240,103,49)" fg:x="115101362884" fg:w="731411749"/><text x="16.9332%" y="127.50"></text></g><g><title>btrfs_get_extent (132,912,554 samples, 0.02%)</title><rect x="16.7964%" y="101" width="0.0193%" height="15" fill="rgb(250,182,30)" fg:x="115882624033" fg:w="132912554"/><text x="17.0464%" y="111.50"></text></g><g><title>btrfs_set_extent_delalloc (417,298,703 samples, 0.06%)</title><rect x="16.7921%" y="117" width="0.0605%" height="15" fill="rgb(248,8,30)" fg:x="115853128105" fg:w="417298703"/><text x="17.0421%" y="127.50"></text></g><g><title>set_extent_bit (242,362,214 samples, 0.04%)</title><rect x="16.8175%" y="101" width="0.0351%" height="15" fill="rgb(237,120,30)" fg:x="116028064594" fg:w="242362214"/><text x="17.0675%" y="111.50"></text></g><g><title>__set_extent_bit (237,706,673 samples, 0.03%)</title><rect x="16.8181%" y="85" width="0.0345%" height="15" fill="rgb(221,146,34)" fg:x="116032720135" fg:w="237706673"/><text x="17.0681%" y="95.50"></text></g><g><title>set_state_bits.isra.0 (127,046,664 samples, 0.02%)</title><rect x="16.8930%" y="85" width="0.0184%" height="15" fill="rgb(242,55,13)" fg:x="116549036803" fg:w="127046664"/><text x="17.1430%" y="95.50"></text></g><g><title>btrfs_set_delalloc_extent (122,460,869 samples, 0.02%)</title><rect x="16.8937%" y="69" width="0.0177%" height="15" fill="rgb(242,112,31)" fg:x="116553622598" fg:w="122460869"/><text x="17.1437%" y="79.50"></text></g><g><title>btrfs_dirty_folio (1,595,168,474 samples, 0.23%)</title><rect x="16.6807%" y="133" width="0.2312%" height="15" fill="rgb(249,192,27)" fg:x="115084390179" fg:w="1595168474"/><text x="16.9307%" y="143.50"></text></g><g><title>set_extent_bit (353,226,987 samples, 0.05%)</title><rect x="16.8607%" y="117" width="0.0512%" height="15" fill="rgb(208,204,44)" fg:x="116326331666" fg:w="353226987"/><text x="17.1107%" y="127.50"></text></g><g><title>__set_extent_bit (352,087,768 samples, 0.05%)</title><rect x="16.8609%" y="101" width="0.0510%" height="15" fill="rgb(208,93,54)" fg:x="116327470885" fg:w="352087768"/><text x="17.1109%" y="111.50"></text></g><g><title>btrfs_drop_folio (76,704,062 samples, 0.01%)</title><rect x="16.9119%" y="133" width="0.0111%" height="15" fill="rgb(242,1,31)" fg:x="116679558653" fg:w="76704062"/><text x="17.1619%" y="143.50"></text></g><g><title>btrfs_inode_lock (70,857,743 samples, 0.01%)</title><rect x="16.9230%" y="133" width="0.0103%" height="15" fill="rgb(241,83,25)" fg:x="116756262715" fg:w="70857743"/><text x="17.1730%" y="143.50"></text></g><g><title>btrfs_inode_rsv_release (94,334,526 samples, 0.01%)</title><rect x="16.9333%" y="133" width="0.0137%" height="15" fill="rgb(205,169,50)" fg:x="116827120458" fg:w="94334526"/><text x="17.1833%" y="143.50"></text></g><g><title>btrfs_xattr_handler_get_security (88,997,603 samples, 0.01%)</title><rect x="16.9667%" y="53" width="0.0129%" height="15" fill="rgb(239,186,37)" fg:x="117057350499" fg:w="88997603"/><text x="17.2167%" y="63.50"></text></g><g><title>cap_inode_need_killpriv (160,919,677 samples, 0.02%)</title><rect x="16.9586%" y="85" width="0.0233%" height="15" fill="rgb(205,221,10)" fg:x="117001478716" fg:w="160919677"/><text x="17.2086%" y="95.50"></text></g><g><title>__vfs_getxattr (140,327,801 samples, 0.02%)</title><rect x="16.9615%" y="69" width="0.0203%" height="15" fill="rgb(218,196,15)" fg:x="117022070592" fg:w="140327801"/><text x="17.2115%" y="79.50"></text></g><g><title>security_inode_need_killpriv (188,135,666 samples, 0.03%)</title><rect x="16.9553%" y="101" width="0.0273%" height="15" fill="rgb(218,196,35)" fg:x="116978867235" fg:w="188135666"/><text x="17.2053%" y="111.50"></text></g><g><title>file_remove_privs_flags (206,519,590 samples, 0.03%)</title><rect x="16.9531%" y="117" width="0.0299%" height="15" fill="rgb(233,63,24)" fg:x="116963924693" fg:w="206519590"/><text x="17.2031%" y="127.50"></text></g><g><title>inode_set_ctime_current (74,321,547 samples, 0.01%)</title><rect x="16.9884%" y="117" width="0.0108%" height="15" fill="rgb(225,8,4)" fg:x="117207137748" fg:w="74321547"/><text x="17.2384%" y="127.50"></text></g><g><title>btrfs_write_check (374,976,222 samples, 0.05%)</title><rect x="16.9471%" y="133" width="0.0544%" height="15" fill="rgb(234,105,35)" fg:x="116922587974" fg:w="374976222"/><text x="17.1971%" y="143.50"></text></g><g><title>copy_page_from_iter_atomic (70,027,049 samples, 0.01%)</title><rect x="17.0015%" y="133" width="0.0101%" height="15" fill="rgb(236,21,32)" fg:x="117297564196" fg:w="70027049"/><text x="17.2515%" y="143.50"></text></g><g><title>fault_in_iov_iter_readable (81,006,873 samples, 0.01%)</title><rect x="17.0116%" y="133" width="0.0117%" height="15" fill="rgb(228,109,6)" fg:x="117367591245" fg:w="81006873"/><text x="17.2616%" y="143.50"></text></g><g><title>alloc_extent_state (120,365,944 samples, 0.02%)</title><rect x="17.0460%" y="85" width="0.0174%" height="15" fill="rgb(229,215,31)" fg:x="117604554534" fg:w="120365944"/><text x="17.2960%" y="95.50"></text></g><g><title>split_state (81,006,944 samples, 0.01%)</title><rect x="17.0681%" y="85" width="0.0117%" height="15" fill="rgb(221,52,54)" fg:x="117757057537" fg:w="81006944"/><text x="17.3181%" y="95.50"></text></g><g><title>__lock_extent (344,037,778 samples, 0.05%)</title><rect x="17.0304%" y="117" width="0.0499%" height="15" fill="rgb(252,129,43)" fg:x="117497383946" fg:w="344037778"/><text x="17.2804%" y="127.50"></text></g><g><title>__set_extent_bit (326,929,828 samples, 0.05%)</title><rect x="17.0329%" y="101" width="0.0474%" height="15" fill="rgb(248,183,27)" fg:x="117514491896" fg:w="326929828"/><text x="17.2829%" y="111.50"></text></g><g><title>lock_and_cleanup_extent_if_need (473,138,352 samples, 0.07%)</title><rect x="17.0273%" y="133" width="0.0686%" height="15" fill="rgb(250,0,22)" fg:x="117476013763" fg:w="473138352"/><text x="17.2773%" y="143.50"></text></g><g><title>btrfs_lookup_ordered_range (107,730,391 samples, 0.02%)</title><rect x="17.0803%" y="117" width="0.0156%" height="15" fill="rgb(213,166,10)" fg:x="117841421724" fg:w="107730391"/><text x="17.3303%" y="127.50"></text></g><g><title>filemap_get_entry (90,379,208 samples, 0.01%)</title><rect x="17.1092%" y="101" width="0.0131%" height="15" fill="rgb(207,163,36)" fg:x="118040474341" fg:w="90379208"/><text x="17.3592%" y="111.50"></text></g><g><title>__filemap_get_folio (148,722,727 samples, 0.02%)</title><rect x="17.1019%" y="117" width="0.0216%" height="15" fill="rgb(208,122,22)" fg:x="117990078892" fg:w="148722727"/><text x="17.3519%" y="127.50"></text></g><g><title>prepare_one_folio.constprop.0 (194,263,763 samples, 0.03%)</title><rect x="17.0971%" y="133" width="0.0282%" height="15" fill="rgb(207,104,49)" fg:x="117957129028" fg:w="194263763"/><text x="17.3471%" y="143.50"></text></g><g><title>btrfs_buffered_write (4,894,652,192 samples, 0.71%)</title><rect x="16.4184%" y="149" width="0.7094%" height="15" fill="rgb(248,211,50)" fg:x="113275041214" fg:w="4894652192"/><text x="16.6684%" y="159.50"></text></g><g><title>btrfs_do_write_iter (4,965,175,150 samples, 0.72%)</title><rect x="16.4087%" y="165" width="0.7197%" height="15" fill="rgb(217,13,45)" fg:x="113207969885" fg:w="4965175150"/><text x="16.6587%" y="175.50"></text></g><g><title>ksys_write (5,156,192,255 samples, 0.75%)</title><rect x="16.3904%" y="197" width="0.7474%" height="15" fill="rgb(211,216,49)" fg:x="113081654396" fg:w="5156192255"/><text x="16.6404%" y="207.50"></text></g><g><title>vfs_write (5,125,533,596 samples, 0.74%)</title><rect x="16.3949%" y="181" width="0.7429%" height="15" fill="rgb(221,58,53)" fg:x="113112313055" fg:w="5125533596"/><text x="16.6449%" y="191.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5,221,504,978 samples, 0.76%)</title><rect x="16.3854%" y="229" width="0.7568%" height="15" fill="rgb(220,112,41)" fg:x="113047309455" fg:w="5221504978"/><text x="16.6354%" y="239.50"></text></g><g><title>do_syscall_64 (5,212,351,639 samples, 0.76%)</title><rect x="16.3868%" y="213" width="0.7555%" height="15" fill="rgb(236,38,28)" fg:x="113056462794" fg:w="5212351639"/><text x="16.6368%" y="223.50"></text></g><g><title>__GI___libc_write (5,324,990,265 samples, 0.77%)</title><rect x="16.3736%" y="245" width="0.7718%" height="15" fill="rgb(227,195,22)" fg:x="112965625066" fg:w="5324990265"/><text x="16.6236%" y="255.50"></text></g><g><title>serde_json::ser::Formatter::begin_string (5,370,763,576 samples, 0.78%)</title><rect x="16.3706%" y="325" width="0.7785%" height="15" fill="rgb(214,55,33)" fg:x="112945111823" fg:w="5370763576"/><text x="16.6206%" y="335.50"></text></g><g><title>std::io::Write::write_all (5,370,763,576 samples, 0.78%)</title><rect x="16.3706%" y="309" width="0.7785%" height="15" fill="rgb(248,80,13)" fg:x="112945111823" fg:w="5370763576"/><text x="16.6206%" y="319.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (5,359,396,543 samples, 0.78%)</title><rect x="16.3723%" y="293" width="0.7768%" height="15" fill="rgb(238,52,6)" fg:x="112956478856" fg:w="5359396543"/><text x="16.6223%" y="303.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (5,350,250,333 samples, 0.78%)</title><rect x="16.3736%" y="277" width="0.7755%" height="15" fill="rgb(224,198,47)" fg:x="112965625066" fg:w="5350250333"/><text x="16.6236%" y="287.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (5,350,250,333 samples, 0.78%)</title><rect x="16.3736%" y="261" width="0.7755%" height="15" fill="rgb(233,171,20)" fg:x="112965625066" fg:w="5350250333"/><text x="16.6236%" y="271.50"></text></g><g><title>merge_prev_state (84,586,256 samples, 0.01%)</title><rect x="17.2662%" y="101" width="0.0123%" height="15" fill="rgb(241,30,25)" fg:x="119123851683" fg:w="84586256"/><text x="17.5162%" y="111.50"></text></g><g><title>clear_state_bit (241,244,524 samples, 0.03%)</title><rect x="17.2445%" y="117" width="0.0350%" height="15" fill="rgb(207,171,38)" fg:x="118974006463" fg:w="241244524"/><text x="17.4945%" y="127.50"></text></g><g><title>__clear_extent_bit (496,246,585 samples, 0.07%)</title><rect x="17.2198%" y="133" width="0.0719%" height="15" fill="rgb(234,70,1)" fg:x="118803886642" fg:w="496246585"/><text x="17.4698%" y="143.50"></text></g><g><title>balance_dirty_pages_ratelimited_flags (188,697,000 samples, 0.03%)</title><rect x="17.2921%" y="133" width="0.0274%" height="15" fill="rgb(232,178,18)" fg:x="119302424161" fg:w="188697000"/><text x="17.5421%" y="143.50"></text></g><g><title>btrfs_check_data_free_space (125,739,572 samples, 0.02%)</title><rect x="17.3194%" y="133" width="0.0182%" height="15" fill="rgb(241,78,40)" fg:x="119491121161" fg:w="125739572"/><text x="17.5694%" y="143.50"></text></g><g><title>btrfs_delalloc_release_extents (77,691,576 samples, 0.01%)</title><rect x="17.3376%" y="133" width="0.0113%" height="15" fill="rgb(222,35,25)" fg:x="119616860733" fg:w="77691576"/><text x="17.5876%" y="143.50"></text></g><g><title>calc_available_free_space.isra.0 (97,742,140 samples, 0.01%)</title><rect x="17.4245%" y="69" width="0.0142%" height="15" fill="rgb(207,92,16)" fg:x="120216310176" fg:w="97742140"/><text x="17.6745%" y="79.50"></text></g><g><title>need_preemptive_reclaim (135,593,146 samples, 0.02%)</title><rect x="17.4192%" y="85" width="0.0197%" height="15" fill="rgb(216,59,51)" fg:x="120179595039" fg:w="135593146"/><text x="17.6692%" y="95.50"></text></g><g><title>__reserve_bytes (421,039,820 samples, 0.06%)</title><rect x="17.3945%" y="101" width="0.0610%" height="15" fill="rgb(213,80,28)" fg:x="120009089004" fg:w="421039820"/><text x="17.6445%" y="111.50"></text></g><g><title>work_busy (111,487,064 samples, 0.02%)</title><rect x="17.4394%" y="85" width="0.0162%" height="15" fill="rgb(220,93,7)" fg:x="120318641760" fg:w="111487064"/><text x="17.6894%" y="95.50"></text></g><g><title>btrfs_reserve_metadata_bytes (431,324,736 samples, 0.06%)</title><rect x="17.3932%" y="117" width="0.0625%" height="15" fill="rgb(225,24,44)" fg:x="119999955707" fg:w="431324736"/><text x="17.6432%" y="127.50"></text></g><g><title>btrfs_delalloc_reserve_metadata (742,438,713 samples, 0.11%)</title><rect x="17.3489%" y="133" width="0.1076%" height="15" fill="rgb(243,74,40)" fg:x="119694552309" fg:w="742438713"/><text x="17.5989%" y="143.50"></text></g><g><title>alloc_extent_state (101,508,182 samples, 0.01%)</title><rect x="17.4723%" y="101" width="0.0147%" height="15" fill="rgb(228,39,7)" fg:x="120545727601" fg:w="101508182"/><text x="17.7223%" y="111.50"></text></g><g><title>_raw_spin_lock (74,409,591 samples, 0.01%)</title><rect x="17.5001%" y="69" width="0.0108%" height="15" fill="rgb(227,79,8)" fg:x="120737712703" fg:w="74409591"/><text x="17.7501%" y="79.50"></text></g><g><title>btrfs_delalloc_release_metadata (88,041,322 samples, 0.01%)</title><rect x="17.5121%" y="69" width="0.0128%" height="15" fill="rgb(236,58,11)" fg:x="120820236239" fg:w="88041322"/><text x="17.7621%" y="79.50"></text></g><g><title>btrfs_inode_rsv_release (113,016,670 samples, 0.02%)</title><rect x="17.5250%" y="69" width="0.0164%" height="15" fill="rgb(249,63,35)" fg:x="120909418705" fg:w="113016670"/><text x="17.7750%" y="79.50"></text></g><g><title>btrfs_block_rsv_release (95,035,715 samples, 0.01%)</title><rect x="17.5276%" y="53" width="0.0138%" height="15" fill="rgb(252,114,16)" fg:x="120927399660" fg:w="95035715"/><text x="17.7776%" y="63.50"></text></g><g><title>btrfs_clear_delalloc_extent (411,746,354 samples, 0.06%)</title><rect x="17.4906%" y="85" width="0.0597%" height="15" fill="rgb(254,151,24)" fg:x="120672469628" fg:w="411746354"/><text x="17.7406%" y="95.50"></text></g><g><title>clear_state_bit (440,397,034 samples, 0.06%)</title><rect x="17.4870%" y="101" width="0.0638%" height="15" fill="rgb(253,54,39)" fg:x="120647235783" fg:w="440397034"/><text x="17.7370%" y="111.50"></text></g><g><title>__clear_extent_bit (712,677,968 samples, 0.10%)</title><rect x="17.4590%" y="117" width="0.1033%" height="15" fill="rgb(243,25,45)" fg:x="120454017280" fg:w="712677968"/><text x="17.7090%" y="127.50"></text></g><g><title>btrfs_get_extent (127,851,834 samples, 0.02%)</title><rect x="17.5697%" y="101" width="0.0185%" height="15" fill="rgb(234,134,9)" fg:x="121217741836" fg:w="127851834"/><text x="17.8197%" y="111.50"></text></g><g><title>btrfs_set_extent_delalloc (387,004,673 samples, 0.06%)</title><rect x="17.5662%" y="117" width="0.0561%" height="15" fill="rgb(227,166,31)" fg:x="121193929547" fg:w="387004673"/><text x="17.8162%" y="127.50"></text></g><g><title>set_extent_bit (222,935,893 samples, 0.03%)</title><rect x="17.5900%" y="101" width="0.0323%" height="15" fill="rgb(245,143,41)" fg:x="121357998327" fg:w="222935893"/><text x="17.8400%" y="111.50"></text></g><g><title>__set_extent_bit (219,511,410 samples, 0.03%)</title><rect x="17.5905%" y="85" width="0.0318%" height="15" fill="rgb(238,181,32)" fg:x="121361422810" fg:w="219511410"/><text x="17.8405%" y="95.50"></text></g><g><title>set_state_bits.isra.0 (146,492,762 samples, 0.02%)</title><rect x="17.6619%" y="85" width="0.0212%" height="15" fill="rgb(224,113,18)" fg:x="121854254265" fg:w="146492762"/><text x="17.9119%" y="95.50"></text></g><g><title>btrfs_set_delalloc_extent (139,621,824 samples, 0.02%)</title><rect x="17.6629%" y="69" width="0.0202%" height="15" fill="rgb(240,229,28)" fg:x="121861125203" fg:w="139621824"/><text x="17.9129%" y="79.50"></text></g><g><title>__set_extent_bit (348,638,379 samples, 0.05%)</title><rect x="17.6340%" y="101" width="0.0505%" height="15" fill="rgb(250,185,3)" fg:x="121661216454" fg:w="348638379"/><text x="17.8840%" y="111.50"></text></g><g><title>btrfs_dirty_folio (1,574,027,649 samples, 0.23%)</title><rect x="17.4565%" y="133" width="0.2281%" height="15" fill="rgb(212,59,25)" fg:x="120436991022" fg:w="1574027649"/><text x="17.7065%" y="143.50"></text></g><g><title>set_extent_bit (350,948,016 samples, 0.05%)</title><rect x="17.6338%" y="117" width="0.0509%" height="15" fill="rgb(221,87,20)" fg:x="121660070655" fg:w="350948016"/><text x="17.8838%" y="127.50"></text></g><g><title>btrfs_drop_folio (88,003,692 samples, 0.01%)</title><rect x="17.6847%" y="133" width="0.0128%" height="15" fill="rgb(213,74,28)" fg:x="122011018671" fg:w="88003692"/><text x="17.9347%" y="143.50"></text></g><g><title>btrfs_block_rsv_release (70,938,694 samples, 0.01%)</title><rect x="17.7087%" y="117" width="0.0103%" height="15" fill="rgb(224,132,34)" fg:x="122176590953" fg:w="70938694"/><text x="17.9587%" y="127.50"></text></g><g><title>btrfs_inode_rsv_release (93,777,769 samples, 0.01%)</title><rect x="17.7055%" y="133" width="0.0136%" height="15" fill="rgb(222,101,24)" fg:x="122154891615" fg:w="93777769"/><text x="17.9555%" y="143.50"></text></g><g><title>cap_inode_need_killpriv (155,350,646 samples, 0.02%)</title><rect x="17.7286%" y="85" width="0.0225%" height="15" fill="rgb(254,142,4)" fg:x="122314062543" fg:w="155350646"/><text x="17.9786%" y="95.50"></text></g><g><title>__vfs_getxattr (134,704,109 samples, 0.02%)</title><rect x="17.7316%" y="69" width="0.0195%" height="15" fill="rgb(230,229,49)" fg:x="122334709080" fg:w="134704109"/><text x="17.9816%" y="79.50"></text></g><g><title>security_inode_need_killpriv (172,540,459 samples, 0.03%)</title><rect x="17.7266%" y="101" width="0.0250%" height="15" fill="rgb(238,70,47)" fg:x="122300283010" fg:w="172540459"/><text x="17.9766%" y="111.50"></text></g><g><title>file_remove_privs_flags (190,783,207 samples, 0.03%)</title><rect x="17.7241%" y="117" width="0.0277%" height="15" fill="rgb(231,160,17)" fg:x="122283199995" fg:w="190783207"/><text x="17.9741%" y="127.50"></text></g><g><title>inode_set_ctime_current (88,182,776 samples, 0.01%)</title><rect x="17.7574%" y="117" width="0.0128%" height="15" fill="rgb(218,68,53)" fg:x="122512907026" fg:w="88182776"/><text x="18.0074%" y="127.50"></text></g><g><title>btrfs_write_check (355,862,319 samples, 0.05%)</title><rect x="17.7191%" y="133" width="0.0516%" height="15" fill="rgb(236,111,10)" fg:x="122248669384" fg:w="355862319"/><text x="17.9691%" y="143.50"></text></g><g><title>copy_page_from_iter_atomic (73,268,983 samples, 0.01%)</title><rect x="17.7707%" y="133" width="0.0106%" height="15" fill="rgb(224,34,41)" fg:x="122604531703" fg:w="73268983"/><text x="18.0207%" y="143.50"></text></g><g><title>fault_in_iov_iter_readable (78,937,830 samples, 0.01%)</title><rect x="17.7813%" y="133" width="0.0114%" height="15" fill="rgb(241,118,19)" fg:x="122677800686" fg:w="78937830"/><text x="18.0313%" y="143.50"></text></g><g><title>fault_in_readable (70,960,864 samples, 0.01%)</title><rect x="17.7825%" y="117" width="0.0103%" height="15" fill="rgb(238,129,25)" fg:x="122685777652" fg:w="70960864"/><text x="18.0325%" y="127.50"></text></g><g><title>alloc_extent_state (108,476,261 samples, 0.02%)</title><rect x="17.8145%" y="85" width="0.0157%" height="15" fill="rgb(238,22,31)" fg:x="122906574928" fg:w="108476261"/><text x="18.0645%" y="95.50"></text></g><g><title>split_state (100,636,398 samples, 0.01%)</title><rect x="17.8363%" y="85" width="0.0146%" height="15" fill="rgb(222,174,48)" fg:x="123057257245" fg:w="100636398"/><text x="18.0863%" y="95.50"></text></g><g><title>__set_extent_bit (328,371,523 samples, 0.05%)</title><rect x="17.8040%" y="101" width="0.0476%" height="15" fill="rgb(206,152,40)" fg:x="122834026722" fg:w="328371523"/><text x="18.0540%" y="111.50"></text></g><g><title>__lock_extent (351,155,480 samples, 0.05%)</title><rect x="17.8010%" y="117" width="0.0509%" height="15" fill="rgb(218,99,54)" fg:x="122813557104" fg:w="351155480"/><text x="18.0510%" y="127.50"></text></g><g><title>lock_and_cleanup_extent_if_need (468,631,961 samples, 0.07%)</title><rect x="17.7971%" y="133" width="0.0679%" height="15" fill="rgb(220,174,26)" fg:x="122786414975" fg:w="468631961"/><text x="18.0471%" y="143.50"></text></g><g><title>btrfs_lookup_ordered_range (90,334,352 samples, 0.01%)</title><rect x="17.8519%" y="117" width="0.0131%" height="15" fill="rgb(245,116,9)" fg:x="123164712584" fg:w="90334352"/><text x="18.1019%" y="127.50"></text></g><g><title>filemap_get_entry (95,693,633 samples, 0.01%)</title><rect x="17.8779%" y="101" width="0.0139%" height="15" fill="rgb(209,72,35)" fg:x="123344405764" fg:w="95693633"/><text x="18.1279%" y="111.50"></text></g><g><title>__filemap_get_folio (162,229,239 samples, 0.02%)</title><rect x="17.8694%" y="117" width="0.0235%" height="15" fill="rgb(226,126,21)" fg:x="123285823890" fg:w="162229239"/><text x="18.1194%" y="127.50"></text></g><g><title>prepare_one_folio.constprop.0 (206,814,286 samples, 0.03%)</title><rect x="17.8661%" y="133" width="0.0300%" height="15" fill="rgb(227,192,1)" fg:x="123262993239" fg:w="206814286"/><text x="18.1161%" y="143.50"></text></g><g><title>btrfs_buffered_write (4,833,649,467 samples, 0.70%)</title><rect x="17.1978%" y="149" width="0.7006%" height="15" fill="rgb(237,180,29)" fg:x="118652308251" fg:w="4833649467"/><text x="17.4478%" y="159.50"></text></g><g><title>btrfs_do_write_iter (4,901,967,390 samples, 0.71%)</title><rect x="17.1881%" y="165" width="0.7105%" height="15" fill="rgb(230,197,35)" fg:x="118585120412" fg:w="4901967390"/><text x="17.4381%" y="175.50"></text></g><g><title>ksys_write (5,085,262,973 samples, 0.74%)</title><rect x="17.1733%" y="197" width="0.7371%" height="15" fill="rgb(246,193,31)" fg:x="118482714720" fg:w="5085262973"/><text x="17.4233%" y="207.50"></text></g><g><title>vfs_write (5,051,179,646 samples, 0.73%)</title><rect x="17.1782%" y="181" width="0.7321%" height="15" fill="rgb(241,36,4)" fg:x="118516798047" fg:w="5051179646"/><text x="17.4282%" y="191.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5,133,261,682 samples, 0.74%)</title><rect x="17.1699%" y="229" width="0.7440%" height="15" fill="rgb(241,130,17)" fg:x="118459854704" fg:w="5133261682"/><text x="17.4199%" y="239.50"></text></g><g><title>do_syscall_64 (5,121,806,818 samples, 0.74%)</title><rect x="17.1716%" y="213" width="0.7424%" height="15" fill="rgb(206,137,32)" fg:x="118471309568" fg:w="5121806818"/><text x="17.4216%" y="223.50"></text></g><g><title>__GI___libc_write (5,265,224,273 samples, 0.76%)</title><rect x="17.1531%" y="245" width="0.7632%" height="15" fill="rgb(237,228,51)" fg:x="118343879177" fg:w="5265224273"/><text x="17.4031%" y="255.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (5,301,922,336 samples, 0.77%)</title><rect x="17.1523%" y="293" width="0.7685%" height="15" fill="rgb(243,6,42)" fg:x="118338187729" fg:w="5301922336"/><text x="17.4023%" y="303.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (5,296,230,888 samples, 0.77%)</title><rect x="17.1531%" y="277" width="0.7677%" height="15" fill="rgb(251,74,28)" fg:x="118343879177" fg:w="5296230888"/><text x="17.4031%" y="287.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (5,296,230,888 samples, 0.77%)</title><rect x="17.1531%" y="261" width="0.7677%" height="15" fill="rgb(218,20,49)" fg:x="118343879177" fg:w="5296230888"/><text x="17.4031%" y="271.50"></text></g><g><title>serde_json::ser::Formatter::end_string (5,327,716,625 samples, 0.77%)</title><rect x="17.1491%" y="325" width="0.7722%" height="15" fill="rgb(238,28,14)" fg:x="118315875399" fg:w="5327716625"/><text x="17.3991%" y="335.50"></text></g><g><title>std::io::Write::write_all (5,327,716,625 samples, 0.77%)</title><rect x="17.1491%" y="309" width="0.7722%" height="15" fill="rgb(229,40,46)" fg:x="118315875399" fg:w="5327716625"/><text x="17.3991%" y="319.50"></text></g><g><title>merge_prev_state (73,237,529 samples, 0.01%)</title><rect x="18.0322%" y="85" width="0.0106%" height="15" fill="rgb(244,195,20)" fg:x="124408855026" fg:w="73237529"/><text x="18.2822%" y="95.50"></text></g><g><title>clear_state_bit (248,690,645 samples, 0.04%)</title><rect x="18.0078%" y="101" width="0.0360%" height="15" fill="rgb(253,56,35)" fg:x="124240258503" fg:w="248690645"/><text x="18.2578%" y="111.50"></text></g><g><title>__clear_extent_bit (461,226,024 samples, 0.07%)</title><rect x="17.9864%" y="117" width="0.0669%" height="15" fill="rgb(210,149,44)" fg:x="124092988136" fg:w="461226024"/><text x="18.2364%" y="127.50"></text></g><g><title>balance_dirty_pages_ratelimited_flags (150,572,850 samples, 0.02%)</title><rect x="18.0538%" y="117" width="0.0218%" height="15" fill="rgb(240,135,12)" fg:x="124557639711" fg:w="150572850"/><text x="18.3038%" y="127.50"></text></g><g><title>btrfs_reserve_data_bytes (74,153,264 samples, 0.01%)</title><rect x="18.0845%" y="101" width="0.0107%" height="15" fill="rgb(251,24,50)" fg:x="124769749152" fg:w="74153264"/><text x="18.3345%" y="111.50"></text></g><g><title>btrfs_check_data_free_space (136,846,106 samples, 0.02%)</title><rect x="18.0756%" y="117" width="0.0198%" height="15" fill="rgb(243,200,47)" fg:x="124708212561" fg:w="136846106"/><text x="18.3256%" y="127.50"></text></g><g><title>btrfs_delalloc_release_extents (69,622,024 samples, 0.01%)</title><rect x="18.0954%" y="117" width="0.0101%" height="15" fill="rgb(224,166,26)" fg:x="124845058667" fg:w="69622024"/><text x="18.3454%" y="127.50"></text></g><g><title>btrfs_calculate_inode_block_rsv_size (80,197,525 samples, 0.01%)</title><rect x="18.1409%" y="101" width="0.0116%" height="15" fill="rgb(233,0,47)" fg:x="125158590526" fg:w="80197525"/><text x="18.3909%" y="111.50"></text></g><g><title>need_preemptive_reclaim (153,530,845 samples, 0.02%)</title><rect x="18.1781%" y="69" width="0.0223%" height="15" fill="rgb(253,80,5)" fg:x="125415039399" fg:w="153530845"/><text x="18.4281%" y="79.50"></text></g><g><title>calc_available_free_space.isra.0 (102,461,184 samples, 0.01%)</title><rect x="18.1855%" y="53" width="0.0149%" height="15" fill="rgb(214,133,25)" fg:x="125466109060" fg:w="102461184"/><text x="18.4355%" y="63.50"></text></g><g><title>btrfs_reserve_metadata_bytes (458,548,110 samples, 0.07%)</title><rect x="18.1525%" y="101" width="0.0665%" height="15" fill="rgb(209,27,14)" fg:x="125238788051" fg:w="458548110"/><text x="18.4025%" y="111.50"></text></g><g><title>__reserve_bytes (452,834,521 samples, 0.07%)</title><rect x="18.1533%" y="85" width="0.0656%" height="15" fill="rgb(219,102,51)" fg:x="125244501640" fg:w="452834521"/><text x="18.4033%" y="95.50"></text></g><g><title>work_busy (120,730,742 samples, 0.02%)</title><rect x="18.2015%" y="69" width="0.0175%" height="15" fill="rgb(237,18,16)" fg:x="125576605419" fg:w="120730742"/><text x="18.4515%" y="79.50"></text></g><g><title>btrfs_delalloc_reserve_metadata (794,106,069 samples, 0.12%)</title><rect x="18.1055%" y="117" width="0.1151%" height="15" fill="rgb(241,85,17)" fg:x="124914680691" fg:w="794106069"/><text x="18.3555%" y="127.50"></text></g><g><title>alloc_extent_state (81,342,046 samples, 0.01%)</title><rect x="18.2347%" y="85" width="0.0118%" height="15" fill="rgb(236,90,42)" fg:x="125806112663" fg:w="81342046"/><text x="18.4847%" y="95.50"></text></g><g><title>_raw_spin_lock (83,806,328 samples, 0.01%)</title><rect x="18.2607%" y="53" width="0.0121%" height="15" fill="rgb(249,57,21)" fg:x="125985389218" fg:w="83806328"/><text x="18.5107%" y="63.50"></text></g><g><title>btrfs_delalloc_release_metadata (82,148,995 samples, 0.01%)</title><rect x="18.2750%" y="53" width="0.0119%" height="15" fill="rgb(243,12,36)" fg:x="126084043206" fg:w="82148995"/><text x="18.5250%" y="63.50"></text></g><g><title>btrfs_inode_rsv_release (131,233,194 samples, 0.02%)</title><rect x="18.2871%" y="53" width="0.0190%" height="15" fill="rgb(253,128,47)" fg:x="126167352490" fg:w="131233194"/><text x="18.5371%" y="63.50"></text></g><g><title>btrfs_block_rsv_release (106,030,897 samples, 0.02%)</title><rect x="18.2907%" y="37" width="0.0154%" height="15" fill="rgb(207,33,20)" fg:x="126192554787" fg:w="106030897"/><text x="18.5407%" y="47.50"></text></g><g><title>btrfs_clear_delalloc_extent (445,453,096 samples, 0.06%)</title><rect x="18.2502%" y="69" width="0.0646%" height="15" fill="rgb(233,215,35)" fg:x="125912564406" fg:w="445453096"/><text x="18.5002%" y="79.50"></text></g><g><title>clear_state_bit (476,264,799 samples, 0.07%)</title><rect x="18.2465%" y="85" width="0.0690%" height="15" fill="rgb(249,188,52)" fg:x="125887454709" fg:w="476264799"/><text x="18.4965%" y="95.50"></text></g><g><title>__clear_extent_bit (700,756,823 samples, 0.10%)</title><rect x="18.2244%" y="101" width="0.1016%" height="15" fill="rgb(225,12,32)" fg:x="125735119578" fg:w="700756823"/><text x="18.4744%" y="111.50"></text></g><g><title>btrfs_get_extent (122,299,479 samples, 0.02%)</title><rect x="18.3331%" y="85" width="0.0177%" height="15" fill="rgb(247,98,14)" fg:x="126484599679" fg:w="122299479"/><text x="18.5831%" y="95.50"></text></g><g><title>set_extent_bit (246,611,669 samples, 0.04%)</title><rect x="18.3533%" y="85" width="0.0357%" height="15" fill="rgb(247,219,48)" fg:x="126624187288" fg:w="246611669"/><text x="18.6033%" y="95.50"></text></g><g><title>__set_extent_bit (243,176,701 samples, 0.04%)</title><rect x="18.3538%" y="69" width="0.0352%" height="15" fill="rgb(253,60,48)" fg:x="126627622256" fg:w="243176701"/><text x="18.6038%" y="79.50"></text></g><g><title>btrfs_set_extent_delalloc (411,201,173 samples, 0.06%)</title><rect x="18.3296%" y="101" width="0.0596%" height="15" fill="rgb(245,15,52)" fg:x="126460755135" fg:w="411201173"/><text x="18.5796%" y="111.50"></text></g><g><title>set_state_bits.isra.0 (119,015,618 samples, 0.02%)</title><rect x="18.4328%" y="69" width="0.0173%" height="15" fill="rgb(220,133,28)" fg:x="127172706089" fg:w="119015618"/><text x="18.6828%" y="79.50"></text></g><g><title>btrfs_set_delalloc_extent (114,566,818 samples, 0.02%)</title><rect x="18.4335%" y="53" width="0.0166%" height="15" fill="rgb(217,180,4)" fg:x="127177154889" fg:w="114566818"/><text x="18.6835%" y="63.50"></text></g><g><title>set_extent_bit (342,719,214 samples, 0.05%)</title><rect x="18.4015%" y="101" width="0.0497%" height="15" fill="rgb(251,24,1)" fg:x="126957001875" fg:w="342719214"/><text x="18.6515%" y="111.50"></text></g><g><title>__set_extent_bit (342,719,214 samples, 0.05%)</title><rect x="18.4015%" y="85" width="0.0497%" height="15" fill="rgb(212,185,49)" fg:x="126957001875" fg:w="342719214"/><text x="18.6515%" y="95.50"></text></g><g><title>btrfs_dirty_folio (1,592,100,369 samples, 0.23%)</title><rect x="18.2206%" y="117" width="0.2308%" height="15" fill="rgb(215,175,22)" fg:x="125708786760" fg:w="1592100369"/><text x="18.4706%" y="127.50"></text></g><g><title>btrfs_drop_folio (74,388,197 samples, 0.01%)</title><rect x="18.4514%" y="117" width="0.0108%" height="15" fill="rgb(250,205,14)" fg:x="127300887129" fg:w="74388197"/><text x="18.7014%" y="127.50"></text></g><g><title>btrfs_inode_lock (71,155,667 samples, 0.01%)</title><rect x="18.4622%" y="117" width="0.0103%" height="15" fill="rgb(225,211,22)" fg:x="127375275326" fg:w="71155667"/><text x="18.7122%" y="127.50"></text></g><g><title>btrfs_block_rsv_release (112,913,821 samples, 0.02%)</title><rect x="18.4759%" y="101" width="0.0164%" height="15" fill="rgb(251,179,42)" fg:x="127470273754" fg:w="112913821"/><text x="18.7259%" y="111.50"></text></g><g><title>btrfs_inode_rsv_release (137,892,307 samples, 0.02%)</title><rect x="18.4725%" y="117" width="0.0200%" height="15" fill="rgb(208,216,51)" fg:x="127446430993" fg:w="137892307"/><text x="18.7225%" y="127.50"></text></g><g><title>btrfs_xattr_handler_get_security (76,466,600 samples, 0.01%)</title><rect x="18.5135%" y="37" width="0.0111%" height="15" fill="rgb(235,36,11)" fg:x="127729672223" fg:w="76466600"/><text x="18.7635%" y="47.50"></text></g><g><title>__vfs_getxattr (143,645,299 samples, 0.02%)</title><rect x="18.5076%" y="53" width="0.0208%" height="15" fill="rgb(213,189,28)" fg:x="127688490601" fg:w="143645299"/><text x="18.7576%" y="63.50"></text></g><g><title>cap_inode_need_killpriv (175,679,684 samples, 0.03%)</title><rect x="18.5033%" y="69" width="0.0255%" height="15" fill="rgb(227,203,42)" fg:x="127658749936" fg:w="175679684"/><text x="18.7533%" y="79.50"></text></g><g><title>security_inode_need_killpriv (191,720,814 samples, 0.03%)</title><rect x="18.5014%" y="85" width="0.0278%" height="15" fill="rgb(244,72,36)" fg:x="127646162394" fg:w="191720814"/><text x="18.7514%" y="95.50"></text></g><g><title>file_remove_privs_flags (204,279,690 samples, 0.03%)</title><rect x="18.4998%" y="101" width="0.0296%" height="15" fill="rgb(213,53,17)" fg:x="127634743670" fg:w="204279690"/><text x="18.7498%" y="111.50"></text></g><g><title>inode_set_ctime_current (82,377,221 samples, 0.01%)</title><rect x="18.5354%" y="101" width="0.0119%" height="15" fill="rgb(207,167,3)" fg:x="127880237762" fg:w="82377221"/><text x="18.7854%" y="111.50"></text></g><g><title>btrfs_write_check (380,544,378 samples, 0.06%)</title><rect x="18.4926%" y="117" width="0.0552%" height="15" fill="rgb(216,98,30)" fg:x="127585449757" fg:w="380544378"/><text x="18.7426%" y="127.50"></text></g><g><title>alloc_extent_state (127,350,722 samples, 0.02%)</title><rect x="18.5848%" y="69" width="0.0185%" height="15" fill="rgb(236,123,15)" fg:x="128221526458" fg:w="127350722"/><text x="18.8348%" y="79.50"></text></g><g><title>split_state (74,180,909 samples, 0.01%)</title><rect x="18.6089%" y="69" width="0.0108%" height="15" fill="rgb(248,81,50)" fg:x="128387676567" fg:w="74180909"/><text x="18.8589%" y="79.50"></text></g><g><title>__set_extent_bit (327,110,891 samples, 0.05%)</title><rect x="18.5729%" y="85" width="0.0474%" height="15" fill="rgb(214,120,4)" fg:x="128139305307" fg:w="327110891"/><text x="18.8229%" y="95.50"></text></g><g><title>__lock_extent (341,943,843 samples, 0.05%)</title><rect x="18.5711%" y="101" width="0.0496%" height="15" fill="rgb(208,179,34)" fg:x="128126722177" fg:w="341943843"/><text x="18.8211%" y="111.50"></text></g><g><title>lock_and_cleanup_extent_if_need (485,930,192 samples, 0.07%)</title><rect x="18.5684%" y="117" width="0.0704%" height="15" fill="rgb(227,140,7)" fg:x="128108447554" fg:w="485930192"/><text x="18.8184%" y="127.50"></text></g><g><title>btrfs_lookup_ordered_range (124,541,207 samples, 0.02%)</title><rect x="18.6208%" y="101" width="0.0181%" height="15" fill="rgb(214,22,6)" fg:x="128469836539" fg:w="124541207"/><text x="18.8708%" y="111.50"></text></g><g><title>filemap_get_entry (113,036,078 samples, 0.02%)</title><rect x="18.6543%" y="85" width="0.0164%" height="15" fill="rgb(207,137,27)" fg:x="128700729497" fg:w="113036078"/><text x="18.9043%" y="95.50"></text></g><g><title>__filemap_get_folio (188,647,415 samples, 0.03%)</title><rect x="18.6442%" y="101" width="0.0273%" height="15" fill="rgb(210,8,46)" fg:x="128630833150" fg:w="188647415"/><text x="18.8942%" y="111.50"></text></g><g><title>prepare_one_folio.constprop.0 (235,134,977 samples, 0.03%)</title><rect x="18.6400%" y="117" width="0.0341%" height="15" fill="rgb(240,16,54)" fg:x="128602468734" fg:w="235134977"/><text x="18.8900%" y="127.50"></text></g><g><title>btrfs_buffered_write (4,915,603,750 samples, 0.71%)</title><rect x="17.9641%" y="133" width="0.7125%" height="15" fill="rgb(211,209,29)" fg:x="123938842976" fg:w="4915603750"/><text x="18.2141%" y="143.50"></text></g><g><title>btrfs_do_write_iter (4,968,260,876 samples, 0.72%)</title><rect x="17.9570%" y="149" width="0.7201%" height="15" fill="rgb(226,228,24)" fg:x="123889636078" fg:w="4968260876"/><text x="18.2070%" y="159.50"></text></g><g><title>ksys_write (5,121,939,595 samples, 0.74%)</title><rect x="17.9436%" y="181" width="0.7424%" height="15" fill="rgb(222,84,9)" fg:x="123797316267" fg:w="5121939595"/><text x="18.1936%" y="191.50"></text></g><g><title>vfs_write (5,101,305,594 samples, 0.74%)</title><rect x="17.9466%" y="165" width="0.7394%" height="15" fill="rgb(234,203,30)" fg:x="123817950268" fg:w="5101305594"/><text x="18.1966%" y="175.50"></text></g><g><title>do_syscall_64 (5,173,143,437 samples, 0.75%)</title><rect x="17.9404%" y="197" width="0.7498%" height="15" fill="rgb(238,109,14)" fg:x="123775652501" fg:w="5173143437"/><text x="18.1904%" y="207.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5,186,681,587 samples, 0.75%)</title><rect x="17.9386%" y="213" width="0.7518%" height="15" fill="rgb(233,206,34)" fg:x="123763265915" fg:w="5186681587"/><text x="18.1886%" y="223.50"></text></g><g><title>__GI___libc_write (5,308,862,803 samples, 0.77%)</title><rect x="17.9246%" y="229" width="0.7695%" height="15" fill="rgb(220,167,47)" fg:x="123666158576" fg:w="5308862803"/><text x="18.1746%" y="239.50"></text></g><g><title>serde_json::ser::format_escaped_str (16,064,180,303 samples, 2.33%)</title><rect x="16.3688%" y="341" width="2.3284%" height="15" fill="rgb(238,105,10)" fg:x="112932685437" fg:w="16064180303"/><text x="16.6188%" y="351.50">s..</text></g><g><title>serde_json::ser::format_escaped_str_contents (5,353,273,716 samples, 0.78%)</title><rect x="17.9213%" y="325" width="0.7759%" height="15" fill="rgb(213,227,17)" fg:x="123643592024" fg:w="5353273716"/><text x="18.1713%" y="335.50"></text></g><g><title>serde_json::ser::Formatter::write_string_fragment (5,349,965,403 samples, 0.78%)</title><rect x="17.9218%" y="309" width="0.7754%" height="15" fill="rgb(217,132,38)" fg:x="123646900337" fg:w="5349965403"/><text x="18.1718%" y="319.50"></text></g><g><title>std::io::Write::write_all (5,349,965,403 samples, 0.78%)</title><rect x="17.9218%" y="293" width="0.7754%" height="15" fill="rgb(242,146,4)" fg:x="123646900337" fg:w="5349965403"/><text x="18.1718%" y="303.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (5,337,484,592 samples, 0.77%)</title><rect x="17.9236%" y="277" width="0.7736%" height="15" fill="rgb(212,61,9)" fg:x="123659381148" fg:w="5337484592"/><text x="18.1736%" y="287.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (5,330,707,164 samples, 0.77%)</title><rect x="17.9246%" y="261" width="0.7726%" height="15" fill="rgb(247,126,22)" fg:x="123666158576" fg:w="5330707164"/><text x="18.1746%" y="271.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (5,330,707,164 samples, 0.77%)</title><rect x="17.9246%" y="245" width="0.7726%" height="15" fill="rgb(220,196,2)" fg:x="123666158576" fg:w="5330707164"/><text x="18.1746%" y="255.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (16,096,203,214 samples, 2.33%)</title><rect x="16.3683%" y="389" width="2.3330%" height="15" fill="rgb(208,46,4)" fg:x="112929323851" fg:w="16096203214"/><text x="16.6183%" y="399.50">s..</text></g><g><title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (16,096,203,214 samples, 2.33%)</title><rect x="16.3683%" y="373" width="2.3330%" height="15" fill="rgb(252,104,46)" fg:x="112929323851" fg:w="16096203214"/><text x="16.6183%" y="383.50">&lt;..</text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (16,096,203,214 samples, 2.33%)</title><rect x="16.3683%" y="357" width="2.3330%" height="15" fill="rgb(237,152,48)" fg:x="112929323851" fg:w="16096203214"/><text x="16.6183%" y="367.50">&lt;..</text></g><g><title>clear_state_bit (167,311,561 samples, 0.02%)</title><rect x="18.7697%" y="181" width="0.0243%" height="15" fill="rgb(221,59,37)" fg:x="129496856610" fg:w="167311561"/><text x="19.0197%" y="191.50"></text></g><g><title>__clear_extent_bit (355,097,762 samples, 0.05%)</title><rect x="18.7515%" y="197" width="0.0515%" height="15" fill="rgb(209,202,51)" fg:x="129371065263" fg:w="355097762"/><text x="19.0015%" y="207.50"></text></g><g><title>balance_dirty_pages_ratelimited_flags (145,591,175 samples, 0.02%)</title><rect x="18.8029%" y="197" width="0.0211%" height="15" fill="rgb(228,81,30)" fg:x="129726163025" fg:w="145591175"/><text x="19.0529%" y="207.50"></text></g><g><title>btrfs_check_data_free_space (99,166,437 samples, 0.01%)</title><rect x="18.8240%" y="197" width="0.0144%" height="15" fill="rgb(227,42,39)" fg:x="129871754200" fg:w="99166437"/><text x="19.0740%" y="207.50"></text></g><g><title>need_preemptive_reclaim (118,646,513 samples, 0.02%)</title><rect x="18.8983%" y="149" width="0.0172%" height="15" fill="rgb(221,26,2)" fg:x="130384522294" fg:w="118646513"/><text x="19.1483%" y="159.50"></text></g><g><title>calc_available_free_space.isra.0 (87,909,842 samples, 0.01%)</title><rect x="18.9028%" y="133" width="0.0127%" height="15" fill="rgb(254,61,31)" fg:x="130415258965" fg:w="87909842"/><text x="19.1528%" y="143.50"></text></g><g><title>btrfs_reserve_metadata_bytes (336,063,265 samples, 0.05%)</title><rect x="18.8802%" y="181" width="0.0487%" height="15" fill="rgb(222,173,38)" fg:x="130259283547" fg:w="336063265"/><text x="19.1302%" y="191.50"></text></g><g><title>__reserve_bytes (328,067,812 samples, 0.05%)</title><rect x="18.8814%" y="165" width="0.0476%" height="15" fill="rgb(218,50,12)" fg:x="130267279000" fg:w="328067812"/><text x="19.1314%" y="175.50"></text></g><g><title>work_busy (88,757,989 samples, 0.01%)</title><rect x="18.9160%" y="149" width="0.0129%" height="15" fill="rgb(223,88,40)" fg:x="130506588823" fg:w="88757989"/><text x="19.1660%" y="159.50"></text></g><g><title>btrfs_delalloc_reserve_metadata (580,040,354 samples, 0.08%)</title><rect x="18.8460%" y="197" width="0.0841%" height="15" fill="rgb(237,54,19)" fg:x="130023296895" fg:w="580040354"/><text x="19.0960%" y="207.50"></text></g><g><title>btrfs_delalloc_release_metadata (75,236,466 samples, 0.01%)</title><rect x="18.9675%" y="133" width="0.0109%" height="15" fill="rgb(251,129,25)" fg:x="130861663523" fg:w="75236466"/><text x="19.2175%" y="143.50"></text></g><g><title>btrfs_inode_rsv_release (78,853,343 samples, 0.01%)</title><rect x="18.9791%" y="133" width="0.0114%" height="15" fill="rgb(238,97,19)" fg:x="130941463133" fg:w="78853343"/><text x="19.2291%" y="143.50"></text></g><g><title>btrfs_clear_delalloc_extent (342,604,374 samples, 0.05%)</title><rect x="18.9487%" y="149" width="0.0497%" height="15" fill="rgb(240,169,18)" fg:x="130732250647" fg:w="342604374"/><text x="19.1987%" y="159.50"></text></g><g><title>clear_state_bit (363,202,685 samples, 0.05%)</title><rect x="18.9463%" y="165" width="0.0526%" height="15" fill="rgb(230,187,49)" fg:x="130715098660" fg:w="363202685"/><text x="19.1963%" y="175.50"></text></g><g><title>__clear_extent_bit (523,219,593 samples, 0.08%)</title><rect x="18.9313%" y="181" width="0.0758%" height="15" fill="rgb(209,44,26)" fg:x="130612126727" fg:w="523219593"/><text x="19.1813%" y="191.50"></text></g><g><title>btrfs_get_extent (94,500,738 samples, 0.01%)</title><rect x="19.0120%" y="165" width="0.0137%" height="15" fill="rgb(244,0,6)" fg:x="131168629353" fg:w="94500738"/><text x="19.2620%" y="175.50"></text></g><g><title>btrfs_set_extent_delalloc (324,130,612 samples, 0.05%)</title><rect x="19.0100%" y="181" width="0.0470%" height="15" fill="rgb(248,18,21)" fg:x="131154929368" fg:w="324130612"/><text x="19.2600%" y="191.50"></text></g><g><title>set_extent_bit (204,481,113 samples, 0.03%)</title><rect x="19.0274%" y="165" width="0.0296%" height="15" fill="rgb(245,180,19)" fg:x="131274578867" fg:w="204481113"/><text x="19.2774%" y="175.50"></text></g><g><title>__set_extent_bit (202,259,939 samples, 0.03%)</title><rect x="19.0277%" y="149" width="0.0293%" height="15" fill="rgb(252,118,36)" fg:x="131276800041" fg:w="202259939"/><text x="19.2777%" y="159.50"></text></g><g><title>set_state_bits.isra.0 (107,824,743 samples, 0.02%)</title><rect x="19.0855%" y="149" width="0.0156%" height="15" fill="rgb(210,224,19)" fg:x="131675593505" fg:w="107824743"/><text x="19.3355%" y="159.50"></text></g><g><title>btrfs_set_delalloc_extent (102,098,935 samples, 0.01%)</title><rect x="19.0863%" y="133" width="0.0148%" height="15" fill="rgb(218,30,24)" fg:x="131681319313" fg:w="102098935"/><text x="19.3363%" y="143.50"></text></g><g><title>btrfs_dirty_folio (1,184,623,116 samples, 0.17%)</title><rect x="18.9301%" y="197" width="0.1717%" height="15" fill="rgb(219,75,50)" fg:x="130603337249" fg:w="1184623116"/><text x="19.1801%" y="207.50"></text></g><g><title>set_extent_bit (258,552,267 samples, 0.04%)</title><rect x="19.0643%" y="181" width="0.0375%" height="15" fill="rgb(234,72,50)" fg:x="131529408098" fg:w="258552267"/><text x="19.3143%" y="191.50"></text></g><g><title>__set_extent_bit (258,552,267 samples, 0.04%)</title><rect x="19.0643%" y="165" width="0.0375%" height="15" fill="rgb(219,100,48)" fg:x="131529408098" fg:w="258552267"/><text x="19.3143%" y="175.50"></text></g><g><title>btrfs_inode_rsv_release (74,416,849 samples, 0.01%)</title><rect x="19.1174%" y="197" width="0.0108%" height="15" fill="rgb(253,5,41)" fg:x="131895711419" fg:w="74416849"/><text x="19.3674%" y="207.50"></text></g><g><title>__vfs_getxattr (106,207,470 samples, 0.02%)</title><rect x="19.1376%" y="133" width="0.0154%" height="15" fill="rgb(247,181,11)" fg:x="132035127933" fg:w="106207470"/><text x="19.3876%" y="143.50"></text></g><g><title>cap_inode_need_killpriv (123,372,002 samples, 0.02%)</title><rect x="19.1356%" y="149" width="0.0179%" height="15" fill="rgb(222,223,25)" fg:x="132021355690" fg:w="123372002"/><text x="19.3856%" y="159.50"></text></g><g><title>file_remove_privs_flags (152,952,101 samples, 0.02%)</title><rect x="19.1320%" y="181" width="0.0222%" height="15" fill="rgb(214,198,28)" fg:x="131996318748" fg:w="152952101"/><text x="19.3820%" y="191.50"></text></g><g><title>security_inode_need_killpriv (144,979,577 samples, 0.02%)</title><rect x="19.1331%" y="165" width="0.0210%" height="15" fill="rgb(230,46,43)" fg:x="132004291272" fg:w="144979577"/><text x="19.3831%" y="175.50"></text></g><g><title>btrfs_write_check (260,569,049 samples, 0.04%)</title><rect x="19.1283%" y="197" width="0.0378%" height="15" fill="rgb(233,65,53)" fg:x="131971254328" fg:w="260569049"/><text x="19.3783%" y="207.50"></text></g><g><title>alloc_extent_state (95,152,730 samples, 0.01%)</title><rect x="19.1958%" y="149" width="0.0138%" height="15" fill="rgb(221,121,27)" fg:x="132437002562" fg:w="95152730"/><text x="19.4458%" y="159.50"></text></g><g><title>split_state (77,721,857 samples, 0.01%)</title><rect x="19.2152%" y="149" width="0.0113%" height="15" fill="rgb(247,70,47)" fg:x="132570549975" fg:w="77721857"/><text x="19.4652%" y="159.50"></text></g><g><title>__lock_extent (290,869,366 samples, 0.04%)</title><rect x="19.1846%" y="181" width="0.0422%" height="15" fill="rgb(228,85,35)" fg:x="132359690746" fg:w="290869366"/><text x="19.4346%" y="191.50"></text></g><g><title>__set_extent_bit (275,074,107 samples, 0.04%)</title><rect x="19.1869%" y="165" width="0.0399%" height="15" fill="rgb(209,50,18)" fg:x="132375486005" fg:w="275074107"/><text x="19.4369%" y="175.50"></text></g><g><title>lock_and_cleanup_extent_if_need (406,768,061 samples, 0.06%)</title><rect x="19.1818%" y="197" width="0.0590%" height="15" fill="rgb(250,19,35)" fg:x="132340060145" fg:w="406768061"/><text x="19.4318%" y="207.50"></text></g><g><title>btrfs_lookup_ordered_range (95,206,325 samples, 0.01%)</title><rect x="19.2269%" y="181" width="0.0138%" height="15" fill="rgb(253,107,29)" fg:x="132651621881" fg:w="95206325"/><text x="19.4769%" y="191.50"></text></g><g><title>filemap_get_entry (76,179,038 samples, 0.01%)</title><rect x="19.2485%" y="165" width="0.0110%" height="15" fill="rgb(252,179,29)" fg:x="132800621072" fg:w="76179038"/><text x="19.4985%" y="175.50"></text></g><g><title>__filemap_get_folio (108,294,559 samples, 0.02%)</title><rect x="19.2441%" y="181" width="0.0157%" height="15" fill="rgb(238,194,6)" fg:x="132769634056" fg:w="108294559"/><text x="19.4941%" y="191.50"></text></g><g><title>prepare_one_folio.constprop.0 (134,558,936 samples, 0.02%)</title><rect x="19.2411%" y="197" width="0.0195%" height="15" fill="rgb(238,164,29)" fg:x="132749058812" fg:w="134558936"/><text x="19.4911%" y="207.50"></text></g><g><title>btrfs_buffered_write (3,633,005,856 samples, 0.53%)</title><rect x="18.7353%" y="213" width="0.5266%" height="15" fill="rgb(224,25,9)" fg:x="129259572957" fg:w="3633005856"/><text x="18.9853%" y="223.50"></text></g><g><title>btrfs_do_write_iter (3,683,039,891 samples, 0.53%)</title><rect x="18.7282%" y="229" width="0.5338%" height="15" fill="rgb(244,153,23)" fg:x="129210710859" fg:w="3683039891"/><text x="18.9782%" y="239.50"></text></g><g><title>ksys_write (3,819,952,729 samples, 0.55%)</title><rect x="18.7150%" y="261" width="0.5537%" height="15" fill="rgb(212,203,14)" fg:x="129119591169" fg:w="3819952729"/><text x="18.9650%" y="271.50"></text></g><g><title>vfs_write (3,791,644,787 samples, 0.55%)</title><rect x="18.7191%" y="245" width="0.5496%" height="15" fill="rgb(220,164,20)" fg:x="129147899111" fg:w="3791644787"/><text x="18.9691%" y="255.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3,863,291,603 samples, 0.56%)</title><rect x="18.7125%" y="293" width="0.5600%" height="15" fill="rgb(222,203,48)" fg:x="129102415465" fg:w="3863291603"/><text x="18.9625%" y="303.50"></text></g><g><title>do_syscall_64 (3,857,518,571 samples, 0.56%)</title><rect x="18.7133%" y="277" width="0.5591%" height="15" fill="rgb(215,159,22)" fg:x="129108188497" fg:w="3857518571"/><text x="18.9633%" y="287.50"></text></g><g><title>__GI___libc_write (3,933,485,722 samples, 0.57%)</title><rect x="18.7042%" y="309" width="0.5701%" height="15" fill="rgb(216,183,47)" fg:x="129044924516" fg:w="3933485722"/><text x="18.9542%" y="319.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (3,961,032,017 samples, 0.57%)</title><rect x="18.7038%" y="357" width="0.5741%" height="15" fill="rgb(229,195,25)" fg:x="129042646066" fg:w="3961032017"/><text x="18.9538%" y="367.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (3,958,753,567 samples, 0.57%)</title><rect x="18.7042%" y="341" width="0.5738%" height="15" fill="rgb(224,132,51)" fg:x="129044924516" fg:w="3958753567"/><text x="18.9542%" y="351.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (3,958,753,567 samples, 0.57%)</title><rect x="18.7042%" y="325" width="0.5738%" height="15" fill="rgb(240,63,7)" fg:x="129044924516" fg:w="3958753567"/><text x="18.9542%" y="335.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (20,081,173,966 samples, 2.91%)</title><rect x="16.3680%" y="405" width="2.9106%" height="15" fill="rgb(249,182,41)" fg:x="112927043383" fg:w="20081173966"/><text x="16.6180%" y="415.50">&lt;s..</text></g><g><title>serde_json::ser::Formatter::begin_object_key (3,982,690,284 samples, 0.58%)</title><rect x="18.7014%" y="389" width="0.5773%" height="15" fill="rgb(243,47,26)" fg:x="129025527065" fg:w="3982690284"/><text x="18.9514%" y="399.50"></text></g><g><title>std::io::Write::write_all (3,975,784,041 samples, 0.58%)</title><rect x="18.7024%" y="373" width="0.5763%" height="15" fill="rgb(233,48,2)" fg:x="129032433308" fg:w="3975784041"/><text x="18.9524%" y="383.50"></text></g><g><title>__clear_extent_bit (137,029,587 samples, 0.02%)</title><rect x="19.2962%" y="133" width="0.0199%" height="15" fill="rgb(244,165,34)" fg:x="133129100195" fg:w="137029587"/><text x="19.5462%" y="143.50"></text></g><g><title>btrfs_reserve_metadata_bytes (104,365,290 samples, 0.02%)</title><rect x="19.3399%" y="117" width="0.0151%" height="15" fill="rgb(207,89,7)" fg:x="133431192695" fg:w="104365290"/><text x="19.5899%" y="127.50"></text></g><g><title>__reserve_bytes (102,092,996 samples, 0.01%)</title><rect x="19.3403%" y="101" width="0.0148%" height="15" fill="rgb(244,117,36)" fg:x="133433464989" fg:w="102092996"/><text x="19.5903%" y="111.50"></text></g><g><title>btrfs_delalloc_reserve_metadata (192,776,645 samples, 0.03%)</title><rect x="19.3276%" y="133" width="0.0279%" height="15" fill="rgb(226,144,34)" fg:x="133346239047" fg:w="192776645"/><text x="19.5776%" y="143.50"></text></g><g><title>btrfs_clear_delalloc_extent (112,286,982 samples, 0.02%)</title><rect x="19.3630%" y="85" width="0.0163%" height="15" fill="rgb(213,23,19)" fg:x="133590564201" fg:w="112286982"/><text x="19.6130%" y="95.50"></text></g><g><title>clear_state_bit (116,758,741 samples, 0.02%)</title><rect x="19.3627%" y="101" width="0.0169%" height="15" fill="rgb(217,75,12)" fg:x="133588240025" fg:w="116758741"/><text x="19.6127%" y="111.50"></text></g><g><title>__clear_extent_bit (183,215,806 samples, 0.03%)</title><rect x="19.3566%" y="117" width="0.0266%" height="15" fill="rgb(224,159,17)" fg:x="133545898874" fg:w="183215806"/><text x="19.6066%" y="127.50"></text></g><g><title>set_extent_bit (71,869,542 samples, 0.01%)</title><rect x="19.3903%" y="101" width="0.0104%" height="15" fill="rgb(217,118,1)" fg:x="133778873562" fg:w="71869542"/><text x="19.6403%" y="111.50"></text></g><g><title>__set_extent_bit (70,751,510 samples, 0.01%)</title><rect x="19.3905%" y="85" width="0.0103%" height="15" fill="rgb(232,180,48)" fg:x="133779991594" fg:w="70751510"/><text x="19.6405%" y="95.50"></text></g><g><title>btrfs_set_extent_delalloc (119,313,385 samples, 0.02%)</title><rect x="19.3836%" y="117" width="0.0173%" height="15" fill="rgb(230,27,33)" fg:x="133732555117" fg:w="119313385"/><text x="19.6336%" y="127.50"></text></g><g><title>btrfs_dirty_folio (431,125,771 samples, 0.06%)</title><rect x="19.3556%" y="133" width="0.0625%" height="15" fill="rgb(205,31,21)" fg:x="133539015692" fg:w="431125771"/><text x="19.6056%" y="143.50"></text></g><g><title>set_extent_bit (95,668,154 samples, 0.01%)</title><rect x="19.4042%" y="117" width="0.0139%" height="15" fill="rgb(253,59,4)" fg:x="133874473309" fg:w="95668154"/><text x="19.6542%" y="127.50"></text></g><g><title>__set_extent_bit (94,551,244 samples, 0.01%)</title><rect x="19.4044%" y="101" width="0.0137%" height="15" fill="rgb(224,201,9)" fg:x="133875590219" fg:w="94551244"/><text x="19.6544%" y="111.50"></text></g><g><title>btrfs_write_check (86,665,024 samples, 0.01%)</title><rect x="19.4272%" y="133" width="0.0126%" height="15" fill="rgb(229,206,30)" fg:x="134033420310" fg:w="86665024"/><text x="19.6772%" y="143.50"></text></g><g><title>__lock_extent (89,180,105 samples, 0.01%)</title><rect x="19.4467%" y="117" width="0.0129%" height="15" fill="rgb(212,67,47)" fg:x="134167949886" fg:w="89180105"/><text x="19.6967%" y="127.50"></text></g><g><title>__set_extent_bit (86,891,332 samples, 0.01%)</title><rect x="19.4471%" y="101" width="0.0126%" height="15" fill="rgb(211,96,50)" fg:x="134170238659" fg:w="86891332"/><text x="19.6971%" y="111.50"></text></g><g><title>lock_and_cleanup_extent_if_need (121,967,313 samples, 0.02%)</title><rect x="19.4453%" y="133" width="0.0177%" height="15" fill="rgb(252,114,18)" fg:x="134157852351" fg:w="121967313"/><text x="19.6953%" y="143.50"></text></g><g><title>btrfs_do_write_iter (1,270,003,259 samples, 0.18%)</title><rect x="19.2882%" y="165" width="0.1841%" height="15" fill="rgb(223,58,37)" fg:x="133074499679" fg:w="1270003259"/><text x="19.5382%" y="175.50"></text></g><g><title>btrfs_buffered_write (1,248,234,874 samples, 0.18%)</title><rect x="19.2914%" y="149" width="0.1809%" height="15" fill="rgb(237,70,4)" fg:x="133096268064" fg:w="1248234874"/><text x="19.5414%" y="159.50"></text></g><g><title>ksys_write (1,313,434,746 samples, 0.19%)</title><rect x="19.2841%" y="197" width="0.1904%" height="15" fill="rgb(244,85,46)" fg:x="133045926263" fg:w="1313434746"/><text x="19.5341%" y="207.50"></text></g><g><title>vfs_write (1,305,420,122 samples, 0.19%)</title><rect x="19.2853%" y="181" width="0.1892%" height="15" fill="rgb(223,39,52)" fg:x="133053940887" fg:w="1305420122"/><text x="19.5353%" y="191.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,329,468,857 samples, 0.19%)</title><rect x="19.2831%" y="229" width="0.1927%" height="15" fill="rgb(218,200,14)" fg:x="133039074860" fg:w="1329468857"/><text x="19.5331%" y="239.50"></text></g><g><title>do_syscall_64 (1,326,059,748 samples, 0.19%)</title><rect x="19.2836%" y="213" width="0.1922%" height="15" fill="rgb(208,171,16)" fg:x="133042483969" fg:w="1326059748"/><text x="19.5336%" y="223.50"></text></g><g><title>__GI___libc_write (1,356,995,051 samples, 0.20%)</title><rect x="19.2796%" y="245" width="0.1967%" height="15" fill="rgb(234,200,18)" fg:x="133014920761" fg:w="1356995051"/><text x="19.5296%" y="255.50"></text></g><g><title>serde_json::ser::Formatter::begin_string (1,369,467,557 samples, 0.20%)</title><rect x="19.2791%" y="325" width="0.1985%" height="15" fill="rgb(228,45,11)" fg:x="133011493679" fg:w="1369467557"/><text x="19.5291%" y="335.50"></text></g><g><title>std::io::Write::write_all (1,369,467,557 samples, 0.20%)</title><rect x="19.2791%" y="309" width="0.1985%" height="15" fill="rgb(237,182,11)" fg:x="133011493679" fg:w="1369467557"/><text x="19.5291%" y="319.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1,368,328,589 samples, 0.20%)</title><rect x="19.2793%" y="293" width="0.1983%" height="15" fill="rgb(241,175,49)" fg:x="133012632647" fg:w="1368328589"/><text x="19.5293%" y="303.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (1,366,040,475 samples, 0.20%)</title><rect x="19.2796%" y="277" width="0.1980%" height="15" fill="rgb(247,38,35)" fg:x="133014920761" fg:w="1366040475"/><text x="19.5296%" y="287.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (1,366,040,475 samples, 0.20%)</title><rect x="19.2796%" y="261" width="0.1980%" height="15" fill="rgb(228,39,49)" fg:x="133014920761" fg:w="1366040475"/><text x="19.5296%" y="271.50"></text></g><g><title>clear_state_bit (69,492,689 samples, 0.01%)</title><rect x="19.4995%" y="117" width="0.0101%" height="15" fill="rgb(226,101,26)" fg:x="134532047044" fg:w="69492689"/><text x="19.7495%" y="127.50"></text></g><g><title>__clear_extent_bit (119,708,424 samples, 0.02%)</title><rect x="19.4944%" y="133" width="0.0174%" height="15" fill="rgb(206,141,19)" fg:x="134496650767" fg:w="119708424"/><text x="19.7444%" y="143.50"></text></g><g><title>btrfs_reserve_metadata_bytes (114,160,836 samples, 0.02%)</title><rect x="19.5364%" y="117" width="0.0165%" height="15" fill="rgb(211,200,13)" fg:x="134786567982" fg:w="114160836"/><text x="19.7864%" y="127.50"></text></g><g><title>__reserve_bytes (113,008,330 samples, 0.02%)</title><rect x="19.5366%" y="101" width="0.0164%" height="15" fill="rgb(241,121,6)" fg:x="134787720488" fg:w="113008330"/><text x="19.7866%" y="111.50"></text></g><g><title>btrfs_delalloc_reserve_metadata (201,260,131 samples, 0.03%)</title><rect x="19.5241%" y="133" width="0.0292%" height="15" fill="rgb(234,221,29)" fg:x="134701770692" fg:w="201260131"/><text x="19.7741%" y="143.50"></text></g><g><title>btrfs_clear_delalloc_extent (93,922,222 samples, 0.01%)</title><rect x="19.5623%" y="85" width="0.0136%" height="15" fill="rgb(229,136,5)" fg:x="134965663640" fg:w="93922222"/><text x="19.8123%" y="95.50"></text></g><g><title>clear_state_bit (98,448,351 samples, 0.01%)</title><rect x="19.5619%" y="101" width="0.0143%" height="15" fill="rgb(238,36,11)" fg:x="134962271737" fg:w="98448351"/><text x="19.8119%" y="111.50"></text></g><g><title>__clear_extent_bit (171,293,940 samples, 0.02%)</title><rect x="19.5539%" y="117" width="0.0248%" height="15" fill="rgb(251,55,41)" fg:x="134907582386" fg:w="171293940"/><text x="19.8039%" y="127.50"></text></g><g><title>btrfs_set_extent_delalloc (82,365,147 samples, 0.01%)</title><rect x="19.5794%" y="117" width="0.0119%" height="15" fill="rgb(242,34,40)" fg:x="135083381795" fg:w="82365147"/><text x="19.8294%" y="127.50"></text></g><g><title>btrfs_dirty_folio (359,800,041 samples, 0.05%)</title><rect x="19.5533%" y="133" width="0.0522%" height="15" fill="rgb(215,42,17)" fg:x="134903030823" fg:w="359800041"/><text x="19.8033%" y="143.50"></text></g><g><title>set_extent_bit (81,147,937 samples, 0.01%)</title><rect x="19.5937%" y="117" width="0.0118%" height="15" fill="rgb(207,44,46)" fg:x="135181682927" fg:w="81147937"/><text x="19.8437%" y="127.50"></text></g><g><title>__set_extent_bit (81,147,937 samples, 0.01%)</title><rect x="19.5937%" y="101" width="0.0118%" height="15" fill="rgb(211,206,28)" fg:x="135181682927" fg:w="81147937"/><text x="19.8437%" y="111.50"></text></g><g><title>btrfs_write_check (74,147,646 samples, 0.01%)</title><rect x="19.6132%" y="133" width="0.0107%" height="15" fill="rgb(237,167,16)" fg:x="135316537583" fg:w="74147646"/><text x="19.8632%" y="143.50"></text></g><g><title>__lock_extent (77,499,386 samples, 0.01%)</title><rect x="19.6336%" y="117" width="0.0112%" height="15" fill="rgb(233,66,6)" fg:x="135457432280" fg:w="77499386"/><text x="19.8836%" y="127.50"></text></g><g><title>__set_extent_bit (75,354,396 samples, 0.01%)</title><rect x="19.6339%" y="101" width="0.0109%" height="15" fill="rgb(246,123,29)" fg:x="135459577270" fg:w="75354396"/><text x="19.8839%" y="111.50"></text></g><g><title>lock_and_cleanup_extent_if_need (105,111,281 samples, 0.02%)</title><rect x="19.6328%" y="133" width="0.0152%" height="15" fill="rgb(209,62,40)" fg:x="135451695189" fg:w="105111281"/><text x="19.8828%" y="143.50"></text></g><g><title>btrfs_buffered_write (1,156,072,073 samples, 0.17%)</title><rect x="19.4874%" y="149" width="0.1676%" height="15" fill="rgb(218,4,25)" fg:x="134448639485" fg:w="1156072073"/><text x="19.7374%" y="159.50"></text></g><g><title>btrfs_do_write_iter (1,165,230,070 samples, 0.17%)</title><rect x="19.4862%" y="165" width="0.1689%" height="15" fill="rgb(253,91,49)" fg:x="134440629075" fg:w="1165230070"/><text x="19.7362%" y="175.50"></text></g><g><title>ksys_write (1,214,205,150 samples, 0.18%)</title><rect x="19.4824%" y="197" width="0.1760%" height="15" fill="rgb(228,155,29)" fg:x="134414223118" fg:w="1214205150"/><text x="19.7324%" y="207.50"></text></g><g><title>vfs_write (1,209,665,472 samples, 0.18%)</title><rect x="19.4831%" y="181" width="0.1753%" height="15" fill="rgb(243,57,37)" fg:x="134418762796" fg:w="1209665472"/><text x="19.7331%" y="191.50"></text></g><g><title>do_syscall_64 (1,224,628,269 samples, 0.18%)</title><rect x="19.4814%" y="213" width="0.1775%" height="15" fill="rgb(244,167,17)" fg:x="134407278969" fg:w="1224628269"/><text x="19.7314%" y="223.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,228,085,896 samples, 0.18%)</title><rect x="19.4811%" y="229" width="0.1780%" height="15" fill="rgb(207,181,38)" fg:x="134404953475" fg:w="1228085896"/><text x="19.7311%" y="239.50"></text></g><g><title>__GI___libc_write (1,260,255,938 samples, 0.18%)</title><rect x="19.4781%" y="245" width="0.1827%" height="15" fill="rgb(211,8,23)" fg:x="134384235338" fg:w="1260255938"/><text x="19.7281%" y="255.50"></text></g><g><title>serde_json::ser::Formatter::end_string (1,272,729,467 samples, 0.18%)</title><rect x="19.4776%" y="325" width="0.1845%" height="15" fill="rgb(235,11,44)" fg:x="134380961236" fg:w="1272729467"/><text x="19.7276%" y="335.50"></text></g><g><title>std::io::Write::write_all (1,272,729,467 samples, 0.18%)</title><rect x="19.4776%" y="309" width="0.1845%" height="15" fill="rgb(248,18,52)" fg:x="134380961236" fg:w="1272729467"/><text x="19.7276%" y="319.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1,271,603,396 samples, 0.18%)</title><rect x="19.4778%" y="293" width="0.1843%" height="15" fill="rgb(208,4,7)" fg:x="134382087307" fg:w="1271603396"/><text x="19.7278%" y="303.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (1,269,455,365 samples, 0.18%)</title><rect x="19.4781%" y="277" width="0.1840%" height="15" fill="rgb(240,17,39)" fg:x="134384235338" fg:w="1269455365"/><text x="19.7281%" y="287.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (1,269,455,365 samples, 0.18%)</title><rect x="19.4781%" y="261" width="0.1840%" height="15" fill="rgb(207,170,3)" fg:x="134384235338" fg:w="1269455365"/><text x="19.7281%" y="271.50"></text></g><g><title>__clear_extent_bit (125,787,635 samples, 0.02%)</title><rect x="19.6805%" y="117" width="0.0182%" height="15" fill="rgb(236,100,52)" fg:x="135780786879" fg:w="125787635"/><text x="19.9305%" y="127.50"></text></g><g><title>btrfs_reserve_metadata_bytes (115,273,826 samples, 0.02%)</title><rect x="19.7255%" y="101" width="0.0167%" height="15" fill="rgb(246,78,51)" fg:x="136091016994" fg:w="115273826"/><text x="19.9755%" y="111.50"></text></g><g><title>__reserve_bytes (111,909,191 samples, 0.02%)</title><rect x="19.7259%" y="85" width="0.0162%" height="15" fill="rgb(211,17,15)" fg:x="136094381629" fg:w="111909191"/><text x="19.9759%" y="95.50"></text></g><g><title>btrfs_delalloc_reserve_metadata (197,615,709 samples, 0.03%)</title><rect x="19.7139%" y="117" width="0.0286%" height="15" fill="rgb(209,59,46)" fg:x="136010936982" fg:w="197615709"/><text x="19.9639%" y="127.50"></text></g><g><title>btrfs_clear_delalloc_extent (95,813,763 samples, 0.01%)</title><rect x="19.7496%" y="69" width="0.0139%" height="15" fill="rgb(210,92,25)" fg:x="136257628023" fg:w="95813763"/><text x="19.9996%" y="79.50"></text></g><g><title>clear_state_bit (103,895,632 samples, 0.02%)</title><rect x="19.7491%" y="85" width="0.0151%" height="15" fill="rgb(238,174,52)" fg:x="136254171832" fg:w="103895632"/><text x="19.9991%" y="95.50"></text></g><g><title>__clear_extent_bit (172,236,994 samples, 0.02%)</title><rect x="19.7430%" y="101" width="0.0250%" height="15" fill="rgb(230,73,7)" fg:x="136212009720" fg:w="172236994"/><text x="19.9930%" y="111.50"></text></g><g><title>btrfs_set_extent_delalloc (100,737,059 samples, 0.01%)</title><rect x="19.7688%" y="101" width="0.0146%" height="15" fill="rgb(243,124,40)" fg:x="136389876706" fg:w="100737059"/><text x="20.0188%" y="111.50"></text></g><g><title>btrfs_dirty_folio (388,175,730 samples, 0.06%)</title><rect x="19.7425%" y="117" width="0.0563%" height="15" fill="rgb(244,170,11)" fg:x="136208552691" fg:w="388175730"/><text x="19.9925%" y="127.50"></text></g><g><title>set_extent_bit (82,536,871 samples, 0.01%)</title><rect x="19.7868%" y="101" width="0.0120%" height="15" fill="rgb(207,114,54)" fg:x="136514191550" fg:w="82536871"/><text x="20.0368%" y="111.50"></text></g><g><title>__set_extent_bit (82,536,871 samples, 0.01%)</title><rect x="19.7868%" y="85" width="0.0120%" height="15" fill="rgb(205,42,20)" fg:x="136514191550" fg:w="82536871"/><text x="20.0368%" y="95.50"></text></g><g><title>btrfs_write_check (97,069,668 samples, 0.01%)</title><rect x="19.8084%" y="117" width="0.0141%" height="15" fill="rgb(230,30,28)" fg:x="136663080599" fg:w="97069668"/><text x="20.0584%" y="127.50"></text></g><g><title>__lock_extent (71,689,431 samples, 0.01%)</title><rect x="19.8308%" y="101" width="0.0104%" height="15" fill="rgb(205,73,54)" fg:x="136817537659" fg:w="71689431"/><text x="20.0808%" y="111.50"></text></g><g><title>lock_and_cleanup_extent_if_need (110,330,950 samples, 0.02%)</title><rect x="19.8296%" y="117" width="0.0160%" height="15" fill="rgb(254,227,23)" fg:x="136809573994" fg:w="110330950"/><text x="20.0796%" y="127.50"></text></g><g><title>btrfs_do_write_iter (1,256,362,127 samples, 0.18%)</title><rect x="19.6724%" y="149" width="0.1821%" height="15" fill="rgb(228,202,34)" fg:x="135724822053" fg:w="1256362127"/><text x="19.9224%" y="159.50"></text></g><g><title>btrfs_buffered_write (1,242,607,560 samples, 0.18%)</title><rect x="19.6744%" y="133" width="0.1801%" height="15" fill="rgb(222,225,37)" fg:x="135738576620" fg:w="1242607560"/><text x="19.9244%" y="143.50"></text></g><g><title>ksys_write (1,292,881,987 samples, 0.19%)</title><rect x="19.6689%" y="181" width="0.1874%" height="15" fill="rgb(221,14,54)" fg:x="135700825357" fg:w="1292881987"/><text x="19.9189%" y="191.50"></text></g><g><title>vfs_write (1,282,644,738 samples, 0.19%)</title><rect x="19.6704%" y="165" width="0.1859%" height="15" fill="rgb(254,102,2)" fg:x="135711062606" fg:w="1282644738"/><text x="19.9204%" y="175.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,304,270,919 samples, 0.19%)</title><rect x="19.6683%" y="213" width="0.1890%" height="15" fill="rgb(232,104,17)" fg:x="135696301695" fg:w="1304270919"/><text x="19.9183%" y="223.50"></text></g><g><title>do_syscall_64 (1,304,270,919 samples, 0.19%)</title><rect x="19.6683%" y="197" width="0.1890%" height="15" fill="rgb(250,220,14)" fg:x="135696301695" fg:w="1304270919"/><text x="19.9183%" y="207.50"></text></g><g><title>__GI___libc_write (1,344,605,097 samples, 0.19%)</title><rect x="19.6632%" y="229" width="0.1949%" height="15" fill="rgb(241,158,9)" fg:x="135661688041" fg:w="1344605097"/><text x="19.9132%" y="239.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1,353,877,671 samples, 0.20%)</title><rect x="19.6631%" y="277" width="0.1962%" height="15" fill="rgb(246,9,43)" fg:x="135660531451" fg:w="1353877671"/><text x="19.9131%" y="287.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (1,352,721,081 samples, 0.20%)</title><rect x="19.6632%" y="261" width="0.1961%" height="15" fill="rgb(206,73,33)" fg:x="135661688041" fg:w="1352721081"/><text x="19.9132%" y="271.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (1,352,721,081 samples, 0.20%)</title><rect x="19.6632%" y="245" width="0.1961%" height="15" fill="rgb(222,79,8)" fg:x="135661688041" fg:w="1352721081"/><text x="19.9132%" y="255.50"></text></g><g><title>serde_json::ser::format_escaped_str (4,006,317,374 samples, 0.58%)</title><rect x="19.2788%" y="341" width="0.5807%" height="15" fill="rgb(234,8,54)" fg:x="133009217966" fg:w="4006317374"/><text x="19.5288%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (1,361,844,637 samples, 0.20%)</title><rect x="19.6621%" y="325" width="0.1974%" height="15" fill="rgb(209,134,38)" fg:x="135653690703" fg:w="1361844637"/><text x="19.9121%" y="335.50"></text></g><g><title>serde_json::ser::Formatter::write_string_fragment (1,358,455,189 samples, 0.20%)</title><rect x="19.6626%" y="309" width="0.1969%" height="15" fill="rgb(230,127,29)" fg:x="135657080151" fg:w="1358455189"/><text x="19.9126%" y="319.50"></text></g><g><title>std::io::Write::write_all (1,358,455,189 samples, 0.20%)</title><rect x="19.6626%" y="293" width="0.1969%" height="15" fill="rgb(242,44,41)" fg:x="135657080151" fg:w="1358455189"/><text x="19.9126%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (4,012,036,670 samples, 0.58%)</title><rect x="19.2788%" y="357" width="0.5815%" height="15" fill="rgb(222,56,43)" fg:x="133009217966" fg:w="4012036670"/><text x="19.5288%" y="367.50"></text></g><g><title>__clear_extent_bit (107,076,796 samples, 0.02%)</title><rect x="19.8771%" y="133" width="0.0155%" height="15" fill="rgb(238,39,47)" fg:x="137136868646" fg:w="107076796"/><text x="20.1271%" y="143.50"></text></g><g><title>btrfs_reserve_metadata_bytes (103,880,154 samples, 0.02%)</title><rect x="19.9182%" y="117" width="0.0151%" height="15" fill="rgb(226,79,43)" fg:x="137420984368" fg:w="103880154"/><text x="20.1682%" y="127.50"></text></g><g><title>__reserve_bytes (101,618,369 samples, 0.01%)</title><rect x="19.9186%" y="101" width="0.0147%" height="15" fill="rgb(242,105,53)" fg:x="137423246153" fg:w="101618369"/><text x="20.1686%" y="111.50"></text></g><g><title>btrfs_delalloc_reserve_metadata (194,164,113 samples, 0.03%)</title><rect x="19.9055%" y="133" width="0.0281%" height="15" fill="rgb(251,132,46)" fg:x="137333016540" fg:w="194164113"/><text x="20.1555%" y="143.50"></text></g><g><title>btrfs_clear_delalloc_extent (86,831,589 samples, 0.01%)</title><rect x="19.9413%" y="85" width="0.0126%" height="15" fill="rgb(231,77,14)" fg:x="137579853746" fg:w="86831589"/><text x="20.1913%" y="95.50"></text></g><g><title>clear_state_bit (96,016,813 samples, 0.01%)</title><rect x="19.9401%" y="101" width="0.0139%" height="15" fill="rgb(240,135,9)" fg:x="137571800347" fg:w="96016813"/><text x="20.1901%" y="111.50"></text></g><g><title>__clear_extent_bit (158,949,171 samples, 0.02%)</title><rect x="19.9338%" y="117" width="0.0230%" height="15" fill="rgb(248,109,14)" fg:x="137528306645" fg:w="158949171"/><text x="20.1838%" y="127.50"></text></g><g><title>btrfs_set_extent_delalloc (88,802,856 samples, 0.01%)</title><rect x="19.9581%" y="117" width="0.0129%" height="15" fill="rgb(227,146,52)" fg:x="137696383385" fg:w="88802856"/><text x="20.2081%" y="127.50"></text></g><g><title>btrfs_dirty_folio (359,869,591 samples, 0.05%)</title><rect x="19.9336%" y="133" width="0.0522%" height="15" fill="rgb(232,54,3)" fg:x="137527180653" fg:w="359869591"/><text x="20.1836%" y="143.50"></text></g><g><title>set_extent_bit (87,029,955 samples, 0.01%)</title><rect x="19.9732%" y="117" width="0.0126%" height="15" fill="rgb(229,201,43)" fg:x="137800020289" fg:w="87029955"/><text x="20.2232%" y="127.50"></text></g><g><title>__set_extent_bit (87,029,955 samples, 0.01%)</title><rect x="19.9732%" y="101" width="0.0126%" height="15" fill="rgb(252,161,33)" fg:x="137800020289" fg:w="87029955"/><text x="20.2232%" y="111.50"></text></g><g><title>btrfs_write_check (79,841,185 samples, 0.01%)</title><rect x="19.9936%" y="133" width="0.0116%" height="15" fill="rgb(226,146,40)" fg:x="137940653662" fg:w="79841185"/><text x="20.2436%" y="143.50"></text></g><g><title>__set_extent_bit (82,354,416 samples, 0.01%)</title><rect x="20.0136%" y="101" width="0.0119%" height="15" fill="rgb(219,47,25)" fg:x="138078731307" fg:w="82354416"/><text x="20.2636%" y="111.50"></text></g><g><title>__lock_extent (90,361,714 samples, 0.01%)</title><rect x="20.0127%" y="117" width="0.0131%" height="15" fill="rgb(250,135,13)" fg:x="138072975214" fg:w="90361714"/><text x="20.2627%" y="127.50"></text></g><g><title>lock_and_cleanup_extent_if_need (113,218,907 samples, 0.02%)</title><rect x="20.0124%" y="133" width="0.0164%" height="15" fill="rgb(219,229,18)" fg:x="138070723409" fg:w="113218907"/><text x="20.2624%" y="143.50"></text></g><g><title>btrfs_buffered_write (1,138,372,728 samples, 0.16%)</title><rect x="19.8721%" y="149" width="0.1650%" height="15" fill="rgb(217,152,27)" fg:x="137102770802" fg:w="1138372728"/><text x="20.1221%" y="159.50"></text></g><g><title>btrfs_do_write_iter (1,154,184,569 samples, 0.17%)</title><rect x="19.8700%" y="165" width="0.1673%" height="15" fill="rgb(225,71,47)" fg:x="137088111023" fg:w="1154184569"/><text x="20.1200%" y="175.50"></text></g><g><title>ksys_write (1,198,453,519 samples, 0.17%)</title><rect x="19.8662%" y="197" width="0.1737%" height="15" fill="rgb(220,139,14)" fg:x="137062144954" fg:w="1198453519"/><text x="20.1162%" y="207.50"></text></g><g><title>vfs_write (1,191,654,723 samples, 0.17%)</title><rect x="19.8672%" y="181" width="0.1727%" height="15" fill="rgb(247,54,32)" fg:x="137068943750" fg:w="1191654723"/><text x="20.1172%" y="191.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,207,634,952 samples, 0.18%)</title><rect x="19.8657%" y="229" width="0.1750%" height="15" fill="rgb(252,131,39)" fg:x="137058735442" fg:w="1207634952"/><text x="20.1157%" y="239.50"></text></g><g><title>do_syscall_64 (1,206,491,132 samples, 0.17%)</title><rect x="19.8659%" y="213" width="0.1749%" height="15" fill="rgb(210,108,39)" fg:x="137059879262" fg:w="1206491132"/><text x="20.1159%" y="223.50"></text></g><g><title>__GI___libc_write (1,236,297,589 samples, 0.18%)</title><rect x="19.8621%" y="245" width="0.1792%" height="15" fill="rgb(205,23,29)" fg:x="137033505223" fg:w="1236297589"/><text x="20.1121%" y="255.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (1,248,633,179 samples, 0.18%)</title><rect x="19.8608%" y="357" width="0.1810%" height="15" fill="rgb(246,139,46)" fg:x="137024608867" fg:w="1248633179"/><text x="20.1108%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (1,248,633,179 samples, 0.18%)</title><rect x="19.8608%" y="341" width="0.1810%" height="15" fill="rgb(250,81,26)" fg:x="137024608867" fg:w="1248633179"/><text x="20.1108%" y="351.50"></text></g><g><title>serde_json::ser::Formatter::write_u64 (1,248,633,179 samples, 0.18%)</title><rect x="19.8608%" y="325" width="0.1810%" height="15" fill="rgb(214,104,7)" fg:x="137024608867" fg:w="1248633179"/><text x="20.1108%" y="335.50"></text></g><g><title>std::io::Write::write_all (1,247,467,872 samples, 0.18%)</title><rect x="19.8609%" y="309" width="0.1808%" height="15" fill="rgb(233,189,8)" fg:x="137025774174" fg:w="1247467872"/><text x="20.1109%" y="319.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1,244,276,720 samples, 0.18%)</title><rect x="19.8614%" y="293" width="0.1803%" height="15" fill="rgb(228,141,17)" fg:x="137028965326" fg:w="1244276720"/><text x="20.1114%" y="303.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (1,239,736,823 samples, 0.18%)</title><rect x="19.8621%" y="277" width="0.1797%" height="15" fill="rgb(247,157,1)" fg:x="137033505223" fg:w="1239736823"/><text x="20.1121%" y="287.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (1,239,736,823 samples, 0.18%)</title><rect x="19.8621%" y="261" width="0.1797%" height="15" fill="rgb(249,225,5)" fg:x="137033505223" fg:w="1239736823"/><text x="20.1121%" y="271.50"></text></g><g><title>__clear_extent_bit (130,243,768 samples, 0.02%)</title><rect x="20.0574%" y="165" width="0.0189%" height="15" fill="rgb(242,55,13)" fg:x="138381419135" fg:w="130243768"/><text x="20.3074%" y="175.50"></text></g><g><title>btrfs_reserve_metadata_bytes (138,012,406 samples, 0.02%)</title><rect x="20.1011%" y="149" width="0.0200%" height="15" fill="rgb(230,49,50)" fg:x="138682724291" fg:w="138012406"/><text x="20.3511%" y="159.50"></text></g><g><title>__reserve_bytes (133,486,147 samples, 0.02%)</title><rect x="20.1018%" y="133" width="0.0193%" height="15" fill="rgb(241,111,38)" fg:x="138687250550" fg:w="133486147"/><text x="20.3518%" y="143.50"></text></g><g><title>btrfs_delalloc_reserve_metadata (216,752,026 samples, 0.03%)</title><rect x="20.0905%" y="165" width="0.0314%" height="15" fill="rgb(252,155,4)" fg:x="138609731610" fg:w="216752026"/><text x="20.3405%" y="175.50"></text></g><g><title>clear_state_bit (128,320,508 samples, 0.02%)</title><rect x="20.1305%" y="133" width="0.0186%" height="15" fill="rgb(212,69,32)" fg:x="138885173396" fg:w="128320508"/><text x="20.3805%" y="143.50"></text></g><g><title>btrfs_clear_delalloc_extent (117,925,825 samples, 0.02%)</title><rect x="20.1320%" y="117" width="0.0171%" height="15" fill="rgb(243,107,47)" fg:x="138895568079" fg:w="117925825"/><text x="20.3820%" y="127.50"></text></g><g><title>__clear_extent_bit (198,306,144 samples, 0.03%)</title><rect x="20.1226%" y="149" width="0.0287%" height="15" fill="rgb(247,130,12)" fg:x="138831057020" fg:w="198306144"/><text x="20.3726%" y="159.50"></text></g><g><title>btrfs_set_extent_delalloc (111,408,168 samples, 0.02%)</title><rect x="20.1520%" y="149" width="0.0161%" height="15" fill="rgb(233,74,16)" fg:x="139033939832" fg:w="111408168"/><text x="20.4020%" y="159.50"></text></g><g><title>btrfs_dirty_folio (437,911,399 samples, 0.06%)</title><rect x="20.1219%" y="165" width="0.0635%" height="15" fill="rgb(208,58,18)" fg:x="138826483636" fg:w="437911399"/><text x="20.3719%" y="175.50"></text></g><g><title>set_extent_bit (91,505,715 samples, 0.01%)</title><rect x="20.1722%" y="149" width="0.0133%" height="15" fill="rgb(242,225,1)" fg:x="139172889320" fg:w="91505715"/><text x="20.4222%" y="159.50"></text></g><g><title>__set_extent_bit (91,505,715 samples, 0.01%)</title><rect x="20.1722%" y="133" width="0.0133%" height="15" fill="rgb(249,39,40)" fg:x="139172889320" fg:w="91505715"/><text x="20.4222%" y="143.50"></text></g><g><title>btrfs_write_check (92,614,460 samples, 0.01%)</title><rect x="20.1924%" y="165" width="0.0134%" height="15" fill="rgb(207,72,44)" fg:x="139312318161" fg:w="92614460"/><text x="20.4424%" y="175.50"></text></g><g><title>__lock_extent (86,786,392 samples, 0.01%)</title><rect x="20.2131%" y="149" width="0.0126%" height="15" fill="rgb(215,193,12)" fg:x="139455030168" fg:w="86786392"/><text x="20.4631%" y="159.50"></text></g><g><title>__set_extent_bit (83,389,432 samples, 0.01%)</title><rect x="20.2135%" y="133" width="0.0121%" height="15" fill="rgb(248,41,39)" fg:x="139458427128" fg:w="83389432"/><text x="20.4635%" y="143.50"></text></g><g><title>lock_and_cleanup_extent_if_need (125,665,812 samples, 0.02%)</title><rect x="20.2122%" y="165" width="0.0182%" height="15" fill="rgb(253,85,4)" fg:x="139449296345" fg:w="125665812"/><text x="20.4622%" y="175.50"></text></g><g><title>btrfs_buffered_write (1,278,744,339 samples, 0.19%)</title><rect x="20.0530%" y="181" width="0.1853%" height="15" fill="rgb(243,70,31)" fg:x="138350747098" fg:w="1278744339"/><text x="20.3030%" y="191.50"></text></g><g><title>btrfs_do_write_iter (1,299,294,434 samples, 0.19%)</title><rect x="20.0505%" y="197" width="0.1883%" height="15" fill="rgb(253,195,26)" fg:x="138333640433" fg:w="1299294434"/><text x="20.3005%" y="207.50"></text></g><g><title>ksys_write (1,344,879,269 samples, 0.19%)</title><rect x="20.0472%" y="229" width="0.1949%" height="15" fill="rgb(243,42,11)" fg:x="138310780020" fg:w="1344879269"/><text x="20.2972%" y="239.50"></text></g><g><title>vfs_write (1,339,146,317 samples, 0.19%)</title><rect x="20.0480%" y="213" width="0.1941%" height="15" fill="rgb(239,66,17)" fg:x="138316512972" fg:w="1339146317"/><text x="20.2980%" y="223.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,360,571,357 samples, 0.20%)</title><rect x="20.0459%" y="261" width="0.1972%" height="15" fill="rgb(217,132,21)" fg:x="138301770526" fg:w="1360571357"/><text x="20.2959%" y="271.50"></text></g><g><title>do_syscall_64 (1,354,924,380 samples, 0.20%)</title><rect x="20.0467%" y="245" width="0.1964%" height="15" fill="rgb(252,202,21)" fg:x="138307417503" fg:w="1354924380"/><text x="20.2967%" y="255.50"></text></g><g><title>__GI___libc_write (1,375,502,933 samples, 0.20%)</title><rect x="20.0444%" y="277" width="0.1994%" height="15" fill="rgb(233,98,36)" fg:x="138291417651" fg:w="1375502933"/><text x="20.2944%" y="287.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1,384,627,059 samples, 0.20%)</title><rect x="20.0441%" y="325" width="0.2007%" height="15" fill="rgb(216,153,54)" fg:x="138289169881" fg:w="1384627059"/><text x="20.2941%" y="335.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (1,382,379,289 samples, 0.20%)</title><rect x="20.0444%" y="309" width="0.2004%" height="15" fill="rgb(250,99,7)" fg:x="138291417651" fg:w="1382379289"/><text x="20.2944%" y="319.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (1,382,379,289 samples, 0.20%)</title><rect x="20.0444%" y="293" width="0.2004%" height="15" fill="rgb(207,56,50)" fg:x="138291417651" fg:w="1382379289"/><text x="20.2944%" y="303.50"></text></g><g><title>serde_json::ser::Formatter::begin_object (1,402,842,568 samples, 0.20%)</title><rect x="20.0418%" y="357" width="0.2033%" height="15" fill="rgb(244,61,34)" fg:x="138273242046" fg:w="1402842568"/><text x="20.2918%" y="367.50"></text></g><g><title>std::io::Write::write_all (1,391,450,486 samples, 0.20%)</title><rect x="20.0434%" y="341" width="0.2017%" height="15" fill="rgb(241,50,38)" fg:x="138284634128" fg:w="1391450486"/><text x="20.2934%" y="351.50"></text></g><g><title>clear_state_bit (69,622,109 samples, 0.01%)</title><rect x="20.2689%" y="149" width="0.0101%" height="15" fill="rgb(212,166,30)" fg:x="139840593745" fg:w="69622109"/><text x="20.5189%" y="159.50"></text></g><g><title>__clear_extent_bit (114,105,257 samples, 0.02%)</title><rect x="20.2640%" y="165" width="0.0165%" height="15" fill="rgb(249,127,32)" fg:x="139806404122" fg:w="114105257"/><text x="20.5140%" y="175.50"></text></g><g><title>btrfs_delalloc_reserve_metadata (202,280,251 samples, 0.03%)</title><rect x="20.2950%" y="165" width="0.0293%" height="15" fill="rgb(209,103,0)" fg:x="140020657494" fg:w="202280251"/><text x="20.5450%" y="175.50"></text></g><g><title>btrfs_reserve_metadata_bytes (104,757,094 samples, 0.02%)</title><rect x="20.3092%" y="149" width="0.0152%" height="15" fill="rgb(238,209,51)" fg:x="140118180651" fg:w="104757094"/><text x="20.5592%" y="159.50"></text></g><g><title>__reserve_bytes (102,546,701 samples, 0.01%)</title><rect x="20.3095%" y="133" width="0.0149%" height="15" fill="rgb(237,56,23)" fg:x="140120391044" fg:w="102546701"/><text x="20.5595%" y="143.50"></text></g><g><title>btrfs_clear_delalloc_extent (132,821,806 samples, 0.02%)</title><rect x="20.3333%" y="117" width="0.0193%" height="15" fill="rgb(215,153,46)" fg:x="140284665728" fg:w="132821806"/><text x="20.5833%" y="127.50"></text></g><g><title>clear_state_bit (141,623,145 samples, 0.02%)</title><rect x="20.3322%" y="133" width="0.0205%" height="15" fill="rgb(224,49,31)" fg:x="140276967919" fg:w="141623145"/><text x="20.5822%" y="143.50"></text></g><g><title>__clear_extent_bit (208,200,508 samples, 0.03%)</title><rect x="20.3253%" y="149" width="0.0302%" height="15" fill="rgb(250,18,42)" fg:x="140229754587" fg:w="208200508"/><text x="20.5753%" y="159.50"></text></g><g><title>btrfs_set_extent_delalloc (89,996,747 samples, 0.01%)</title><rect x="20.3565%" y="149" width="0.0130%" height="15" fill="rgb(215,176,39)" fg:x="140444830348" fg:w="89996747"/><text x="20.6065%" y="159.50"></text></g><g><title>btrfs_dirty_folio (392,658,077 samples, 0.06%)</title><rect x="20.3244%" y="165" width="0.0569%" height="15" fill="rgb(223,77,29)" fg:x="140222937745" fg:w="392658077"/><text x="20.5744%" y="175.50"></text></g><g><title>btrfs_write_check (70,667,143 samples, 0.01%)</title><rect x="20.3907%" y="165" width="0.0102%" height="15" fill="rgb(234,94,52)" fg:x="140680710072" fg:w="70667143"/><text x="20.6407%" y="175.50"></text></g><g><title>__lock_extent (82,532,356 samples, 0.01%)</title><rect x="20.4099%" y="149" width="0.0120%" height="15" fill="rgb(220,154,50)" fg:x="140812901426" fg:w="82532356"/><text x="20.6599%" y="159.50"></text></g><g><title>__set_extent_bit (76,814,769 samples, 0.01%)</title><rect x="20.4107%" y="133" width="0.0111%" height="15" fill="rgb(212,11,10)" fg:x="140818619013" fg:w="76814769"/><text x="20.6607%" y="143.50"></text></g><g><title>lock_and_cleanup_extent_if_need (121,408,566 samples, 0.02%)</title><rect x="20.4089%" y="165" width="0.0176%" height="15" fill="rgb(205,166,19)" fg:x="140806170151" fg:w="121408566"/><text x="20.6589%" y="175.50"></text></g><g><title>btrfs_do_write_iter (1,243,022,687 samples, 0.18%)</title><rect x="20.2549%" y="197" width="0.1802%" height="15" fill="rgb(244,198,16)" fg:x="139743902281" fg:w="1243022687"/><text x="20.5049%" y="207.50"></text></g><g><title>btrfs_buffered_write (1,228,193,150 samples, 0.18%)</title><rect x="20.2571%" y="181" width="0.1780%" height="15" fill="rgb(219,69,12)" fg:x="139758731818" fg:w="1228193150"/><text x="20.5071%" y="191.50"></text></g><g><title>ksys_write (1,300,110,837 samples, 0.19%)</title><rect x="20.2500%" y="229" width="0.1884%" height="15" fill="rgb(245,30,7)" fg:x="139709599818" fg:w="1300110837"/><text x="20.5000%" y="239.50"></text></g><g><title>vfs_write (1,294,383,445 samples, 0.19%)</title><rect x="20.2508%" y="213" width="0.1876%" height="15" fill="rgb(218,221,48)" fg:x="139715327210" fg:w="1294383445"/><text x="20.5008%" y="223.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,313,791,337 samples, 0.19%)</title><rect x="20.2493%" y="261" width="0.1904%" height="15" fill="rgb(216,66,15)" fg:x="139705045747" fg:w="1313791337"/><text x="20.4993%" y="271.50"></text></g><g><title>do_syscall_64 (1,312,645,167 samples, 0.19%)</title><rect x="20.2495%" y="245" width="0.1903%" height="15" fill="rgb(226,122,50)" fg:x="139706191917" fg:w="1312645167"/><text x="20.4995%" y="255.50"></text></g><g><title>__GI___libc_write (1,336,961,002 samples, 0.19%)</title><rect x="20.2464%" y="277" width="0.1938%" height="15" fill="rgb(239,156,16)" fg:x="139685257142" fg:w="1336961002"/><text x="20.4964%" y="287.50"></text></g><g><title>serde_json::ser::Formatter::begin_object_value (1,351,905,014 samples, 0.20%)</title><rect x="20.2451%" y="357" width="0.1959%" height="15" fill="rgb(224,27,38)" fg:x="139676084614" fg:w="1351905014"/><text x="20.4951%" y="367.50"></text></g><g><title>std::io::Write::write_all (1,348,411,255 samples, 0.20%)</title><rect x="20.2456%" y="341" width="0.1954%" height="15" fill="rgb(224,39,27)" fg:x="139679578373" fg:w="1348411255"/><text x="20.4956%" y="351.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1,343,892,923 samples, 0.19%)</title><rect x="20.2463%" y="325" width="0.1948%" height="15" fill="rgb(215,92,29)" fg:x="139684096705" fg:w="1343892923"/><text x="20.4963%" y="335.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (1,342,732,486 samples, 0.19%)</title><rect x="20.2464%" y="309" width="0.1946%" height="15" fill="rgb(207,159,16)" fg:x="139685257142" fg:w="1342732486"/><text x="20.4964%" y="319.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (1,342,732,486 samples, 0.19%)</title><rect x="20.2464%" y="293" width="0.1946%" height="15" fill="rgb(238,163,47)" fg:x="139685257142" fg:w="1342732486"/><text x="20.4964%" y="303.50"></text></g><g><title>__clear_extent_bit (114,159,273 samples, 0.02%)</title><rect x="20.4576%" y="165" width="0.0165%" height="15" fill="rgb(219,91,49)" fg:x="141142387442" fg:w="114159273"/><text x="20.7076%" y="175.50"></text></g><g><title>btrfs_reserve_metadata_bytes (94,912,229 samples, 0.01%)</title><rect x="20.4987%" y="149" width="0.0138%" height="15" fill="rgb(227,167,31)" fg:x="141425619602" fg:w="94912229"/><text x="20.7487%" y="159.50"></text></g><g><title>__reserve_bytes (93,783,284 samples, 0.01%)</title><rect x="20.4988%" y="133" width="0.0136%" height="15" fill="rgb(234,80,54)" fg:x="141426748547" fg:w="93783284"/><text x="20.7488%" y="143.50"></text></g><g><title>btrfs_delalloc_reserve_metadata (170,293,672 samples, 0.02%)</title><rect x="20.4879%" y="165" width="0.0247%" height="15" fill="rgb(212,114,2)" fg:x="141351406219" fg:w="170293672"/><text x="20.7379%" y="175.50"></text></g><g><title>btrfs_clear_delalloc_extent (115,680,272 samples, 0.02%)</title><rect x="20.5213%" y="117" width="0.0168%" height="15" fill="rgb(234,50,24)" fg:x="141581859183" fg:w="115680272"/><text x="20.7713%" y="127.50"></text></g><g><title>clear_state_bit (122,428,620 samples, 0.02%)</title><rect x="20.5207%" y="133" width="0.0177%" height="15" fill="rgb(221,68,8)" fg:x="141577410701" fg:w="122428620"/><text x="20.7707%" y="143.50"></text></g><g><title>__clear_extent_bit (203,512,238 samples, 0.03%)</title><rect x="20.5129%" y="149" width="0.0295%" height="15" fill="rgb(254,180,31)" fg:x="141523951058" fg:w="203512238"/><text x="20.7629%" y="159.50"></text></g><g><title>btrfs_set_extent_delalloc (89,215,413 samples, 0.01%)</title><rect x="20.5436%" y="149" width="0.0129%" height="15" fill="rgb(247,130,50)" fg:x="141735515498" fg:w="89215413"/><text x="20.7936%" y="159.50"></text></g><g><title>btrfs_dirty_folio (402,487,762 samples, 0.06%)</title><rect x="20.5126%" y="165" width="0.0583%" height="15" fill="rgb(211,109,4)" fg:x="141521699891" fg:w="402487762"/><text x="20.7626%" y="175.50"></text></g><g><title>set_extent_bit (83,528,157 samples, 0.01%)</title><rect x="20.5588%" y="149" width="0.0121%" height="15" fill="rgb(238,50,21)" fg:x="141840659496" fg:w="83528157"/><text x="20.8088%" y="159.50"></text></g><g><title>__set_extent_bit (82,413,202 samples, 0.01%)</title><rect x="20.5590%" y="133" width="0.0119%" height="15" fill="rgb(225,57,45)" fg:x="141841774451" fg:w="82413202"/><text x="20.8090%" y="143.50"></text></g><g><title>btrfs_write_check (83,521,523 samples, 0.01%)</title><rect x="20.5814%" y="165" width="0.0121%" height="15" fill="rgb(209,196,50)" fg:x="141996045816" fg:w="83521523"/><text x="20.8314%" y="175.50"></text></g><g><title>__lock_extent (83,523,289 samples, 0.01%)</title><rect x="20.5993%" y="149" width="0.0121%" height="15" fill="rgb(242,140,13)" fg:x="142119817136" fg:w="83523289"/><text x="20.8493%" y="159.50"></text></g><g><title>__set_extent_bit (76,667,879 samples, 0.01%)</title><rect x="20.6003%" y="133" width="0.0111%" height="15" fill="rgb(217,111,7)" fg:x="142126672546" fg:w="76667879"/><text x="20.8503%" y="143.50"></text></g><g><title>lock_and_cleanup_extent_if_need (116,771,544 samples, 0.02%)</title><rect x="20.5985%" y="165" width="0.0169%" height="15" fill="rgb(253,193,51)" fg:x="142114059094" fg:w="116771544"/><text x="20.8485%" y="175.50"></text></g><g><title>btrfs_do_write_iter (1,190,228,093 samples, 0.17%)</title><rect x="20.4518%" y="197" width="0.1725%" height="15" fill="rgb(252,70,29)" fg:x="141102359250" fg:w="1190228093"/><text x="20.7018%" y="207.50"></text></g><g><title>btrfs_buffered_write (1,183,354,682 samples, 0.17%)</title><rect x="20.4528%" y="181" width="0.1715%" height="15" fill="rgb(232,127,12)" fg:x="141109232661" fg:w="1183354682"/><text x="20.7028%" y="191.50"></text></g><g><title>ksys_write (1,245,122,306 samples, 0.18%)</title><rect x="20.4470%" y="229" width="0.1805%" height="15" fill="rgb(211,180,21)" fg:x="141069214169" fg:w="1245122306"/><text x="20.6970%" y="239.50"></text></g><g><title>vfs_write (1,236,049,168 samples, 0.18%)</title><rect x="20.4483%" y="213" width="0.1792%" height="15" fill="rgb(229,72,13)" fg:x="141078287307" fg:w="1236049168"/><text x="20.6983%" y="223.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,256,578,127 samples, 0.18%)</title><rect x="20.4460%" y="261" width="0.1821%" height="15" fill="rgb(240,211,49)" fg:x="141062335091" fg:w="1256578127"/><text x="20.6960%" y="271.50"></text></g><g><title>do_syscall_64 (1,253,151,600 samples, 0.18%)</title><rect x="20.4465%" y="245" width="0.1816%" height="15" fill="rgb(219,149,40)" fg:x="141065761618" fg:w="1253151600"/><text x="20.6965%" y="255.50"></text></g><g><title>__GI___libc_write (1,292,093,247 samples, 0.19%)</title><rect x="20.4417%" y="277" width="0.1873%" height="15" fill="rgb(210,127,46)" fg:x="141032543601" fg:w="1292093247"/><text x="20.6917%" y="287.50"></text></g><g><title>cargo_tarpaulin::traces::_::&lt;impl serde::ser::Serialize for cargo_tarpaulin::traces::CoverageStat&gt;::serialize (9,320,067,534 samples, 1.35%)</title><rect x="19.2788%" y="389" width="1.3509%" height="15" fill="rgb(220,106,7)" fg:x="133009217966" fg:w="9320067534"/><text x="19.5288%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (9,320,067,534 samples, 1.35%)</title><rect x="19.2788%" y="373" width="1.3509%" height="15" fill="rgb(249,31,22)" fg:x="133009217966" fg:w="9320067534"/><text x="19.5288%" y="383.50"></text></g><g><title>serde_json::ser::Formatter::end_object (1,301,295,872 samples, 0.19%)</title><rect x="20.4410%" y="357" width="0.1886%" height="15" fill="rgb(253,1,49)" fg:x="141027989628" fg:w="1301295872"/><text x="20.6910%" y="367.50"></text></g><g><title>std::io::Write::write_all (1,301,295,872 samples, 0.19%)</title><rect x="20.4410%" y="341" width="0.1886%" height="15" fill="rgb(227,144,33)" fg:x="141027989628" fg:w="1301295872"/><text x="20.6910%" y="351.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1,297,869,026 samples, 0.19%)</title><rect x="20.4415%" y="325" width="0.1881%" height="15" fill="rgb(249,163,44)" fg:x="141031416474" fg:w="1297869026"/><text x="20.6915%" y="335.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (1,296,741,899 samples, 0.19%)</title><rect x="20.4417%" y="309" width="0.1880%" height="15" fill="rgb(234,15,39)" fg:x="141032543601" fg:w="1296741899"/><text x="20.6917%" y="319.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (1,296,741,899 samples, 0.19%)</title><rect x="20.4417%" y="293" width="0.1880%" height="15" fill="rgb(207,66,16)" fg:x="141032543601" fg:w="1296741899"/><text x="20.6917%" y="303.50"></text></g><g><title>__clear_extent_bit (111,935,438 samples, 0.02%)</title><rect x="20.6480%" y="149" width="0.0162%" height="15" fill="rgb(233,112,24)" fg:x="142455989081" fg:w="111935438"/><text x="20.8980%" y="159.50"></text></g><g><title>btrfs_reserve_metadata_bytes (108,276,437 samples, 0.02%)</title><rect x="20.6876%" y="133" width="0.0157%" height="15" fill="rgb(230,90,22)" fg:x="142729119607" fg:w="108276437"/><text x="20.9376%" y="143.50"></text></g><g><title>__reserve_bytes (107,148,220 samples, 0.02%)</title><rect x="20.6878%" y="117" width="0.0155%" height="15" fill="rgb(229,61,13)" fg:x="142730247824" fg:w="107148220"/><text x="20.9378%" y="127.50"></text></g><g><title>btrfs_delalloc_reserve_metadata (188,343,560 samples, 0.03%)</title><rect x="20.6765%" y="149" width="0.0273%" height="15" fill="rgb(225,57,24)" fg:x="142652510307" fg:w="188343560"/><text x="20.9265%" y="159.50"></text></g><g><title>btrfs_clear_delalloc_extent (111,640,089 samples, 0.02%)</title><rect x="20.7099%" y="101" width="0.0162%" height="15" fill="rgb(208,169,48)" fg:x="142883225452" fg:w="111640089"/><text x="20.9599%" y="111.50"></text></g><g><title>clear_state_bit (119,651,383 samples, 0.02%)</title><rect x="20.7091%" y="117" width="0.0173%" height="15" fill="rgb(244,218,51)" fg:x="142877514161" fg:w="119651383"/><text x="20.9591%" y="127.50"></text></g><g><title>__clear_extent_bit (174,687,290 samples, 0.03%)</title><rect x="20.7041%" y="133" width="0.0253%" height="15" fill="rgb(214,148,10)" fg:x="142843099433" fg:w="174687290"/><text x="20.9541%" y="143.50"></text></g><g><title>btrfs_set_extent_delalloc (108,590,291 samples, 0.02%)</title><rect x="20.7303%" y="133" width="0.0157%" height="15" fill="rgb(225,174,27)" fg:x="143023468660" fg:w="108590291"/><text x="20.9803%" y="143.50"></text></g><g><title>btrfs_dirty_folio (383,989,977 samples, 0.06%)</title><rect x="20.7038%" y="149" width="0.0557%" height="15" fill="rgb(230,96,26)" fg:x="142840853867" fg:w="383989977"/><text x="20.9538%" y="159.50"></text></g><g><title>set_extent_bit (75,539,884 samples, 0.01%)</title><rect x="20.7485%" y="133" width="0.0109%" height="15" fill="rgb(232,10,30)" fg:x="143149303960" fg:w="75539884"/><text x="20.9985%" y="143.50"></text></g><g><title>__set_extent_bit (75,539,884 samples, 0.01%)</title><rect x="20.7485%" y="117" width="0.0109%" height="15" fill="rgb(222,8,50)" fg:x="143149303960" fg:w="75539884"/><text x="20.9985%" y="127.50"></text></g><g><title>btrfs_write_check (88,672,141 samples, 0.01%)</title><rect x="20.7682%" y="149" width="0.0129%" height="15" fill="rgb(213,81,27)" fg:x="143285407941" fg:w="88672141"/><text x="21.0182%" y="159.50"></text></g><g><title>__lock_extent (84,676,798 samples, 0.01%)</title><rect x="20.7876%" y="133" width="0.0123%" height="15" fill="rgb(245,50,10)" fg:x="143418971666" fg:w="84676798"/><text x="21.0376%" y="143.50"></text></g><g><title>__set_extent_bit (83,571,411 samples, 0.01%)</title><rect x="20.7878%" y="117" width="0.0121%" height="15" fill="rgb(216,100,18)" fg:x="143420077053" fg:w="83571411"/><text x="21.0378%" y="127.50"></text></g><g><title>lock_and_cleanup_extent_if_need (127,063,800 samples, 0.02%)</title><rect x="20.7868%" y="149" width="0.0184%" height="15" fill="rgb(236,147,54)" fg:x="143413239986" fg:w="127063800"/><text x="21.0368%" y="159.50"></text></g><g><title>btrfs_buffered_write (1,174,593,836 samples, 0.17%)</title><rect x="20.6436%" y="165" width="0.1702%" height="15" fill="rgb(205,143,26)" fg:x="142425406267" fg:w="1174593836"/><text x="20.8936%" y="175.50"></text></g><g><title>btrfs_do_write_iter (1,192,852,051 samples, 0.17%)</title><rect x="20.6411%" y="181" width="0.1729%" height="15" fill="rgb(236,26,9)" fg:x="142408308131" fg:w="1192852051"/><text x="20.8911%" y="191.50"></text></g><g><title>ksys_write (1,249,918,305 samples, 0.18%)</title><rect x="20.6365%" y="213" width="0.1812%" height="15" fill="rgb(221,165,53)" fg:x="142376268294" fg:w="1249918305"/><text x="20.8865%" y="223.50"></text></g><g><title>vfs_write (1,246,485,733 samples, 0.18%)</title><rect x="20.6370%" y="197" width="0.1807%" height="15" fill="rgb(214,110,17)" fg:x="142379700866" fg:w="1246485733"/><text x="20.8870%" y="207.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,264,679,159 samples, 0.18%)</title><rect x="20.6355%" y="245" width="0.1833%" height="15" fill="rgb(237,197,12)" fg:x="142369384802" fg:w="1264679159"/><text x="20.8855%" y="255.50"></text></g><g><title>do_syscall_64 (1,264,679,159 samples, 0.18%)</title><rect x="20.6355%" y="229" width="0.1833%" height="15" fill="rgb(205,84,17)" fg:x="142369384802" fg:w="1264679159"/><text x="20.8855%" y="239.50"></text></g><g><title>__GI___libc_write (1,300,212,441 samples, 0.19%)</title><rect x="20.6310%" y="261" width="0.1885%" height="15" fill="rgb(237,18,45)" fg:x="142338309294" fg:w="1300212441"/><text x="20.8810%" y="271.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1,307,001,664 samples, 0.19%)</title><rect x="20.6306%" y="309" width="0.1894%" height="15" fill="rgb(221,87,14)" fg:x="142336050929" fg:w="1307001664"/><text x="20.8806%" y="319.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (1,304,743,299 samples, 0.19%)</title><rect x="20.6310%" y="293" width="0.1891%" height="15" fill="rgb(238,186,15)" fg:x="142338309294" fg:w="1304743299"/><text x="20.8810%" y="303.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (1,304,743,299 samples, 0.19%)</title><rect x="20.6310%" y="277" width="0.1891%" height="15" fill="rgb(208,115,11)" fg:x="142338309294" fg:w="1304743299"/><text x="20.8810%" y="287.50"></text></g><g><title>serde_json::ser::Formatter::begin_array (1,309,306,987 samples, 0.19%)</title><rect x="20.6305%" y="341" width="0.1898%" height="15" fill="rgb(254,175,0)" fg:x="142334906258" fg:w="1309306987"/><text x="20.8805%" y="351.50"></text></g><g><title>std::io::Write::write_all (1,309,306,987 samples, 0.19%)</title><rect x="20.6305%" y="325" width="0.1898%" height="15" fill="rgb(227,24,42)" fg:x="142334906258" fg:w="1309306987"/><text x="20.8805%" y="335.50"></text></g><g><title>__clear_extent_bit (115,548,521 samples, 0.02%)</title><rect x="20.8368%" y="149" width="0.0167%" height="15" fill="rgb(223,211,37)" fg:x="143758312690" fg:w="115548521"/><text x="21.0868%" y="159.50"></text></g><g><title>btrfs_reserve_metadata_bytes (132,619,797 samples, 0.02%)</title><rect x="20.8759%" y="133" width="0.0192%" height="15" fill="rgb(235,49,27)" fg:x="144027854162" fg:w="132619797"/><text x="21.1259%" y="143.50"></text></g><g><title>__reserve_bytes (129,173,965 samples, 0.02%)</title><rect x="20.8764%" y="117" width="0.0187%" height="15" fill="rgb(254,97,51)" fg:x="144031299994" fg:w="129173965"/><text x="21.1264%" y="127.50"></text></g><g><title>btrfs_delalloc_reserve_metadata (211,402,620 samples, 0.03%)</title><rect x="20.8653%" y="149" width="0.0306%" height="15" fill="rgb(249,51,40)" fg:x="143954812489" fg:w="211402620"/><text x="21.1153%" y="159.50"></text></g><g><title>btrfs_clear_delalloc_extent (95,303,702 samples, 0.01%)</title><rect x="20.9025%" y="101" width="0.0138%" height="15" fill="rgb(210,128,45)" fg:x="144212013924" fg:w="95303702"/><text x="21.1525%" y="111.50"></text></g><g><title>clear_state_bit (98,749,133 samples, 0.01%)</title><rect x="20.9022%" y="117" width="0.0143%" height="15" fill="rgb(224,137,50)" fg:x="144209728573" fg:w="98749133"/><text x="21.1522%" y="127.50"></text></g><g><title>__clear_extent_bit (152,560,117 samples, 0.02%)</title><rect x="20.8969%" y="133" width="0.0221%" height="15" fill="rgb(242,15,9)" fg:x="144173136262" fg:w="152560117"/><text x="21.1469%" y="143.50"></text></g><g><title>btrfs_set_extent_delalloc (97,455,670 samples, 0.01%)</title><rect x="20.9195%" y="133" width="0.0141%" height="15" fill="rgb(233,187,41)" fg:x="144329141627" fg:w="97455670"/><text x="21.1695%" y="143.50"></text></g><g><title>set_extent_bit (72,189,313 samples, 0.01%)</title><rect x="20.9232%" y="117" width="0.0105%" height="15" fill="rgb(227,2,29)" fg:x="144354407984" fg:w="72189313"/><text x="21.1732%" y="127.50"></text></g><g><title>__set_extent_bit (72,189,313 samples, 0.01%)</title><rect x="20.9232%" y="101" width="0.0105%" height="15" fill="rgb(222,70,3)" fg:x="144354407984" fg:w="72189313"/><text x="21.1732%" y="111.50"></text></g><g><title>btrfs_dirty_folio (356,456,656 samples, 0.05%)</title><rect x="20.8959%" y="149" width="0.0517%" height="15" fill="rgb(213,11,42)" fg:x="144166215109" fg:w="356456656"/><text x="21.1459%" y="159.50"></text></g><g><title>set_extent_bit (76,706,577 samples, 0.01%)</title><rect x="20.9365%" y="133" width="0.0111%" height="15" fill="rgb(225,150,9)" fg:x="144445965188" fg:w="76706577"/><text x="21.1865%" y="143.50"></text></g><g><title>__set_extent_bit (76,706,577 samples, 0.01%)</title><rect x="20.9365%" y="117" width="0.0111%" height="15" fill="rgb(230,162,45)" fg:x="144445965188" fg:w="76706577"/><text x="21.1865%" y="127.50"></text></g><g><title>btrfs_write_check (96,372,797 samples, 0.01%)</title><rect x="20.9555%" y="149" width="0.0140%" height="15" fill="rgb(222,14,52)" fg:x="144577597109" fg:w="96372797"/><text x="21.2055%" y="159.50"></text></g><g><title>__lock_extent (89,879,619 samples, 0.01%)</title><rect x="20.9780%" y="133" width="0.0130%" height="15" fill="rgb(254,198,14)" fg:x="144732919629" fg:w="89879619"/><text x="21.2280%" y="143.50"></text></g><g><title>__set_extent_bit (84,172,776 samples, 0.01%)</title><rect x="20.9789%" y="117" width="0.0122%" height="15" fill="rgb(220,217,30)" fg:x="144738626472" fg:w="84172776"/><text x="21.2289%" y="127.50"></text></g><g><title>lock_and_cleanup_extent_if_need (131,872,256 samples, 0.02%)</title><rect x="20.9763%" y="149" width="0.0191%" height="15" fill="rgb(215,146,41)" fg:x="144720664670" fg:w="131872256"/><text x="21.2263%" y="159.50"></text></g><g><title>btrfs_buffered_write (1,192,547,902 samples, 0.17%)</title><rect x="20.8303%" y="165" width="0.1729%" height="15" fill="rgb(217,27,36)" fg:x="143713747442" fg:w="1192547902"/><text x="21.0803%" y="175.50"></text></g><g><title>btrfs_do_write_iter (1,204,972,699 samples, 0.17%)</title><rect x="20.8287%" y="181" width="0.1747%" height="15" fill="rgb(219,218,39)" fg:x="143702485989" fg:w="1204972699"/><text x="21.0787%" y="191.50"></text></g><g><title>ksys_write (1,244,704,054 samples, 0.18%)</title><rect x="20.8257%" y="213" width="0.1804%" height="15" fill="rgb(219,4,42)" fg:x="143681845687" fg:w="1244704054"/><text x="21.0757%" y="223.50"></text></g><g><title>vfs_write (1,241,278,284 samples, 0.18%)</title><rect x="20.8262%" y="197" width="0.1799%" height="15" fill="rgb(249,119,36)" fg:x="143685271457" fg:w="1241278284"/><text x="21.0762%" y="207.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,262,723,333 samples, 0.18%)</title><rect x="20.8246%" y="245" width="0.1830%" height="15" fill="rgb(209,23,33)" fg:x="143674000077" fg:w="1262723333"/><text x="21.0746%" y="255.50"></text></g><g><title>do_syscall_64 (1,260,538,573 samples, 0.18%)</title><rect x="20.8249%" y="229" width="0.1827%" height="15" fill="rgb(211,10,0)" fg:x="143676184837" fg:w="1260538573"/><text x="21.0749%" y="239.50"></text></g><g><title>__GI___libc_write (1,295,882,522 samples, 0.19%)</title><rect x="20.8206%" y="261" width="0.1878%" height="15" fill="rgb(208,99,37)" fg:x="143646506888" fg:w="1295882522"/><text x="21.0706%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_seq (2,612,006,142 samples, 0.38%)</title><rect x="20.6301%" y="357" width="0.3786%" height="15" fill="rgb(213,132,31)" fg:x="142332678766" fg:w="2612006142"/><text x="20.8801%" y="367.50"></text></g><g><title>serde_json::ser::Formatter::end_array (1,300,471,663 samples, 0.19%)</title><rect x="20.8202%" y="341" width="0.1885%" height="15" fill="rgb(243,129,40)" fg:x="143644213245" fg:w="1300471663"/><text x="21.0702%" y="351.50"></text></g><g><title>std::io::Write::write_all (1,300,471,663 samples, 0.19%)</title><rect x="20.8202%" y="325" width="0.1885%" height="15" fill="rgb(210,66,33)" fg:x="143644213245" fg:w="1300471663"/><text x="21.0702%" y="335.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1,298,178,020 samples, 0.19%)</title><rect x="20.8206%" y="309" width="0.1882%" height="15" fill="rgb(209,189,4)" fg:x="143646506888" fg:w="1298178020"/><text x="21.0706%" y="319.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (1,298,178,020 samples, 0.19%)</title><rect x="20.8206%" y="293" width="0.1882%" height="15" fill="rgb(214,107,37)" fg:x="143646506888" fg:w="1298178020"/><text x="21.0706%" y="303.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (1,298,178,020 samples, 0.19%)</title><rect x="20.8206%" y="277" width="0.1882%" height="15" fill="rgb(245,88,54)" fg:x="143646506888" fg:w="1298178020"/><text x="21.0706%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::set::HashSet&lt;T,H&gt;&gt;::serialize (2,615,325,388 samples, 0.38%)</title><rect x="20.6301%" y="389" width="0.3791%" height="15" fill="rgb(205,146,20)" fg:x="142332678766" fg:w="2615325388"/><text x="20.8801%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2,615,325,388 samples, 0.38%)</title><rect x="20.6301%" y="373" width="0.3791%" height="15" fill="rgb(220,161,25)" fg:x="142332678766" fg:w="2615325388"/><text x="20.8801%" y="383.50"></text></g><g><title>clear_state_bit (134,148,399 samples, 0.02%)</title><rect x="21.0537%" y="149" width="0.0194%" height="15" fill="rgb(215,152,15)" fg:x="145255071601" fg:w="134148399"/><text x="21.3037%" y="159.50"></text></g><g><title>__clear_extent_bit (231,449,692 samples, 0.03%)</title><rect x="21.0436%" y="165" width="0.0335%" height="15" fill="rgb(233,192,44)" fg:x="145185129665" fg:w="231449692"/><text x="21.2936%" y="175.50"></text></g><g><title>balance_dirty_pages_ratelimited_flags (71,905,505 samples, 0.01%)</title><rect x="21.0776%" y="165" width="0.0104%" height="15" fill="rgb(240,170,46)" fg:x="145419991807" fg:w="71905505"/><text x="21.3276%" y="175.50"></text></g><g><title>btrfs_check_data_free_space (72,778,747 samples, 0.01%)</title><rect x="21.0881%" y="165" width="0.0105%" height="15" fill="rgb(207,104,33)" fg:x="145491897312" fg:w="72778747"/><text x="21.3381%" y="175.50"></text></g><g><title>need_preemptive_reclaim (87,535,467 samples, 0.01%)</title><rect x="21.1405%" y="117" width="0.0127%" height="15" fill="rgb(219,21,39)" fg:x="145853812164" fg:w="87535467"/><text x="21.3905%" y="127.50"></text></g><g><title>__reserve_bytes (220,815,444 samples, 0.03%)</title><rect x="21.1310%" y="133" width="0.0320%" height="15" fill="rgb(214,133,29)" fg:x="145788014160" fg:w="220815444"/><text x="21.3810%" y="143.50"></text></g><g><title>btrfs_reserve_metadata_bytes (225,308,833 samples, 0.03%)</title><rect x="21.1305%" y="149" width="0.0327%" height="15" fill="rgb(226,93,6)" fg:x="145784656783" fg:w="225308833"/><text x="21.3805%" y="159.50"></text></g><g><title>btrfs_delalloc_reserve_metadata (404,386,684 samples, 0.06%)</title><rect x="21.1050%" y="165" width="0.0586%" height="15" fill="rgb(252,222,34)" fg:x="145609021900" fg:w="404386684"/><text x="21.3550%" y="175.50"></text></g><g><title>btrfs_inode_rsv_release (73,071,400 samples, 0.01%)</title><rect x="21.1960%" y="101" width="0.0106%" height="15" fill="rgb(252,92,48)" fg:x="146236631538" fg:w="73071400"/><text x="21.4460%" y="111.50"></text></g><g><title>btrfs_clear_delalloc_extent (234,120,769 samples, 0.03%)</title><rect x="21.1775%" y="117" width="0.0339%" height="15" fill="rgb(245,223,24)" fg:x="146108701588" fg:w="234120769"/><text x="21.4275%" y="127.50"></text></g><g><title>clear_state_bit (247,766,742 samples, 0.04%)</title><rect x="21.1763%" y="133" width="0.0359%" height="15" fill="rgb(205,176,3)" fg:x="146100761943" fg:w="247766742"/><text x="21.4263%" y="143.50"></text></g><g><title>__clear_extent_bit (367,295,843 samples, 0.05%)</title><rect x="21.1643%" y="149" width="0.0532%" height="15" fill="rgb(235,151,15)" fg:x="146017969321" fg:w="367295843"/><text x="21.4143%" y="159.50"></text></g><g><title>btrfs_set_extent_delalloc (208,355,881 samples, 0.03%)</title><rect x="21.2190%" y="149" width="0.0302%" height="15" fill="rgb(237,209,11)" fg:x="146395454362" fg:w="208355881"/><text x="21.4690%" y="159.50"></text></g><g><title>set_extent_bit (125,082,691 samples, 0.02%)</title><rect x="21.2311%" y="133" width="0.0181%" height="15" fill="rgb(243,227,24)" fg:x="146478727552" fg:w="125082691"/><text x="21.4811%" y="143.50"></text></g><g><title>__set_extent_bit (122,815,565 samples, 0.02%)</title><rect x="21.2314%" y="117" width="0.0178%" height="15" fill="rgb(239,193,16)" fg:x="146480994678" fg:w="122815565"/><text x="21.4814%" y="127.50"></text></g><g><title>btrfs_dirty_folio (757,941,568 samples, 0.11%)</title><rect x="21.1636%" y="165" width="0.1099%" height="15" fill="rgb(231,27,9)" fg:x="146013408584" fg:w="757941568"/><text x="21.4136%" y="175.50"></text></g><g><title>set_extent_bit (138,904,436 samples, 0.02%)</title><rect x="21.2534%" y="149" width="0.0201%" height="15" fill="rgb(219,169,10)" fg:x="146632445716" fg:w="138904436"/><text x="21.5034%" y="159.50"></text></g><g><title>__set_extent_bit (137,758,505 samples, 0.02%)</title><rect x="21.2535%" y="133" width="0.0200%" height="15" fill="rgb(244,229,43)" fg:x="146633591647" fg:w="137758505"/><text x="21.5035%" y="143.50"></text></g><g><title>__vfs_getxattr (77,280,764 samples, 0.01%)</title><rect x="21.3008%" y="101" width="0.0112%" height="15" fill="rgb(254,38,20)" fg:x="146959662660" fg:w="77280764"/><text x="21.5508%" y="111.50"></text></g><g><title>cap_inode_need_killpriv (94,376,687 samples, 0.01%)</title><rect x="21.2985%" y="117" width="0.0137%" height="15" fill="rgb(250,47,30)" fg:x="146943677950" fg:w="94376687"/><text x="21.5485%" y="127.50"></text></g><g><title>file_remove_privs_flags (113,877,660 samples, 0.02%)</title><rect x="21.2960%" y="149" width="0.0165%" height="15" fill="rgb(224,124,36)" fg:x="146926442830" fg:w="113877660"/><text x="21.5460%" y="159.50"></text></g><g><title>security_inode_need_killpriv (104,740,148 samples, 0.02%)</title><rect x="21.2973%" y="133" width="0.0152%" height="15" fill="rgb(246,68,51)" fg:x="146935580342" fg:w="104740148"/><text x="21.5473%" y="143.50"></text></g><g><title>btrfs_write_check (195,923,652 samples, 0.03%)</title><rect x="21.2934%" y="165" width="0.0284%" height="15" fill="rgb(253,43,49)" fg:x="146908280706" fg:w="195923652"/><text x="21.5434%" y="175.50"></text></g><g><title>__lock_extent (154,846,342 samples, 0.02%)</title><rect x="21.3390%" y="149" width="0.0224%" height="15" fill="rgb(219,54,36)" fg:x="147223017843" fg:w="154846342"/><text x="21.5890%" y="159.50"></text></g><g><title>__set_extent_bit (143,397,062 samples, 0.02%)</title><rect x="21.3406%" y="133" width="0.0208%" height="15" fill="rgb(227,133,34)" fg:x="147234467123" fg:w="143397062"/><text x="21.5906%" y="143.50"></text></g><g><title>lock_and_cleanup_extent_if_need (237,177,590 samples, 0.03%)</title><rect x="21.3348%" y="165" width="0.0344%" height="15" fill="rgb(247,227,15)" fg:x="147194566962" fg:w="237177590"/><text x="21.5848%" y="175.50"></text></g><g><title>prepare_one_folio.constprop.0 (80,882,779 samples, 0.01%)</title><rect x="21.3699%" y="165" width="0.0117%" height="15" fill="rgb(229,96,14)" fg:x="147436274133" fg:w="80882779"/><text x="21.6199%" y="175.50"></text></g><g><title>btrfs_do_write_iter (2,448,311,144 samples, 0.35%)</title><rect x="21.0279%" y="197" width="0.3549%" height="15" fill="rgb(220,79,17)" fg:x="145076844403" fg:w="2448311144"/><text x="21.2779%" y="207.50"></text></g><g><title>btrfs_buffered_write (2,421,883,293 samples, 0.35%)</title><rect x="21.0317%" y="181" width="0.3510%" height="15" fill="rgb(205,131,53)" fg:x="145103272254" fg:w="2421883293"/><text x="21.2817%" y="191.50"></text></g><g><title>ksys_write (2,533,625,318 samples, 0.37%)</title><rect x="21.0203%" y="229" width="0.3672%" height="15" fill="rgb(209,50,29)" fg:x="145024585345" fg:w="2533625318"/><text x="21.2703%" y="239.50"></text></g><g><title>vfs_write (2,517,933,330 samples, 0.36%)</title><rect x="21.0226%" y="213" width="0.3650%" height="15" fill="rgb(245,86,46)" fg:x="145040277333" fg:w="2517933330"/><text x="21.2726%" y="223.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2,558,701,850 samples, 0.37%)</title><rect x="21.0195%" y="261" width="0.3709%" height="15" fill="rgb(235,66,46)" fg:x="145018953530" fg:w="2558701850"/><text x="21.2695%" y="271.50"></text></g><g><title>do_syscall_64 (2,558,701,850 samples, 0.37%)</title><rect x="21.0195%" y="245" width="0.3709%" height="15" fill="rgb(232,148,31)" fg:x="145018953530" fg:w="2558701850"/><text x="21.2695%" y="255.50"></text></g><g><title>__GI___libc_write (2,627,272,106 samples, 0.38%)</title><rect x="21.0107%" y="277" width="0.3808%" height="15" fill="rgb(217,149,8)" fg:x="144958263093" fg:w="2627272106"/><text x="21.2607%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for usize&gt;::serialize (2,652,418,614 samples, 0.38%)</title><rect x="21.0092%" y="389" width="0.3844%" height="15" fill="rgb(209,183,11)" fg:x="144948004154" fg:w="2652418614"/><text x="21.2592%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (2,652,418,614 samples, 0.38%)</title><rect x="21.0092%" y="373" width="0.3844%" height="15" fill="rgb(208,55,20)" fg:x="144948004154" fg:w="2652418614"/><text x="21.2592%" y="383.50"></text></g><g><title>serde_json::ser::Formatter::write_u64 (2,649,025,857 samples, 0.38%)</title><rect x="21.0097%" y="357" width="0.3840%" height="15" fill="rgb(218,39,14)" fg:x="144951396911" fg:w="2649025857"/><text x="21.2597%" y="367.50"></text></g><g><title>std::io::Write::write_all (2,647,883,565 samples, 0.38%)</title><rect x="21.0099%" y="341" width="0.3838%" height="15" fill="rgb(216,169,33)" fg:x="144952539203" fg:w="2647883565"/><text x="21.2599%" y="351.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (2,643,308,736 samples, 0.38%)</title><rect x="21.0105%" y="325" width="0.3831%" height="15" fill="rgb(233,80,24)" fg:x="144957114032" fg:w="2643308736"/><text x="21.2605%" y="335.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (2,642,159,675 samples, 0.38%)</title><rect x="21.0107%" y="309" width="0.3830%" height="15" fill="rgb(213,179,31)" fg:x="144958263093" fg:w="2642159675"/><text x="21.2607%" y="319.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (2,642,159,675 samples, 0.38%)</title><rect x="21.0107%" y="293" width="0.3830%" height="15" fill="rgb(209,19,5)" fg:x="144958263093" fg:w="2642159675"/><text x="21.2607%" y="303.50"></text></g><g><title>merge_prev_state (90,105,650 samples, 0.01%)</title><rect x="21.5106%" y="165" width="0.0131%" height="15" fill="rgb(219,18,35)" fg:x="148407184782" fg:w="90105650"/><text x="21.7606%" y="175.50"></text></g><g><title>clear_state_bit (239,720,584 samples, 0.03%)</title><rect x="21.4898%" y="181" width="0.0347%" height="15" fill="rgb(209,169,16)" fg:x="148263294250" fg:w="239720584"/><text x="21.7398%" y="191.50"></text></g><g><title>__clear_extent_bit (456,574,960 samples, 0.07%)</title><rect x="21.4682%" y="197" width="0.0662%" height="15" fill="rgb(245,90,51)" fg:x="148114900450" fg:w="456574960"/><text x="21.7182%" y="207.50"></text></g><g><title>balance_dirty_pages_ratelimited_flags (163,131,439 samples, 0.02%)</title><rect x="21.5344%" y="197" width="0.0236%" height="15" fill="rgb(220,99,45)" fg:x="148571475410" fg:w="163131439"/><text x="21.7844%" y="207.50"></text></g><g><title>btrfs_check_data_free_space (112,011,297 samples, 0.02%)</title><rect x="21.5581%" y="197" width="0.0162%" height="15" fill="rgb(249,89,25)" fg:x="148734606849" fg:w="112011297"/><text x="21.8081%" y="207.50"></text></g><g><title>btrfs_delalloc_release_extents (70,942,047 samples, 0.01%)</title><rect x="21.5743%" y="197" width="0.0103%" height="15" fill="rgb(239,193,0)" fg:x="148846618146" fg:w="70942047"/><text x="21.8243%" y="207.50"></text></g><g><title>btrfs_calculate_inode_block_rsv_size (71,184,776 samples, 0.01%)</title><rect x="21.6249%" y="181" width="0.0103%" height="15" fill="rgb(231,126,1)" fg:x="149195456662" fg:w="71184776"/><text x="21.8749%" y="191.50"></text></g><g><title>btrfs_reduce_alloc_profile (69,889,124 samples, 0.01%)</title><rect x="21.6708%" y="117" width="0.0101%" height="15" fill="rgb(243,166,3)" fg:x="149512327940" fg:w="69889124"/><text x="21.9208%" y="127.50"></text></g><g><title>need_preemptive_reclaim (138,359,204 samples, 0.02%)</title><rect x="21.6612%" y="149" width="0.0201%" height="15" fill="rgb(223,22,34)" fg:x="149446141083" fg:w="138359204"/><text x="21.9112%" y="159.50"></text></g><g><title>calc_available_free_space.isra.0 (108,733,350 samples, 0.02%)</title><rect x="21.6655%" y="133" width="0.0158%" height="15" fill="rgb(251,52,51)" fg:x="149475766937" fg:w="108733350"/><text x="21.9155%" y="143.50"></text></g><g><title>btrfs_reserve_metadata_bytes (480,864,236 samples, 0.07%)</title><rect x="21.6352%" y="181" width="0.0697%" height="15" fill="rgb(221,165,28)" fg:x="149266641438" fg:w="480864236"/><text x="21.8852%" y="191.50"></text></g><g><title>__reserve_bytes (473,042,003 samples, 0.07%)</title><rect x="21.6363%" y="165" width="0.0686%" height="15" fill="rgb(218,121,47)" fg:x="149274463671" fg:w="473042003"/><text x="21.8863%" y="175.50"></text></g><g><title>work_busy (154,959,545 samples, 0.02%)</title><rect x="21.6824%" y="149" width="0.0225%" height="15" fill="rgb(209,120,9)" fg:x="149592546129" fg:w="154959545"/><text x="21.9324%" y="159.50"></text></g><g><title>btrfs_delalloc_reserve_metadata (848,163,017 samples, 0.12%)</title><rect x="21.5846%" y="197" width="0.1229%" height="15" fill="rgb(236,68,12)" fg:x="148917560193" fg:w="848163017"/><text x="21.8346%" y="207.50"></text></g><g><title>_raw_spin_lock (82,539,413 samples, 0.01%)</title><rect x="21.7464%" y="133" width="0.0120%" height="15" fill="rgb(225,194,26)" fg:x="150034286648" fg:w="82539413"/><text x="21.9964%" y="143.50"></text></g><g><title>btrfs_delalloc_release_metadata (113,130,290 samples, 0.02%)</title><rect x="21.7602%" y="133" width="0.0164%" height="15" fill="rgb(231,84,39)" fg:x="150129163675" fg:w="113130290"/><text x="22.0102%" y="143.50"></text></g><g><title>btrfs_inode_rsv_release (129,024,947 samples, 0.02%)</title><rect x="21.7766%" y="133" width="0.0187%" height="15" fill="rgb(210,11,45)" fg:x="150242293965" fg:w="129024947"/><text x="22.0266%" y="143.50"></text></g><g><title>btrfs_block_rsv_release (103,795,021 samples, 0.02%)</title><rect x="21.7802%" y="117" width="0.0150%" height="15" fill="rgb(224,54,52)" fg:x="150267523891" fg:w="103795021"/><text x="22.0302%" y="127.50"></text></g><g><title>btrfs_clear_delalloc_extent (478,496,925 samples, 0.07%)</title><rect x="21.7365%" y="149" width="0.0694%" height="15" fill="rgb(238,102,14)" fg:x="149965927390" fg:w="478496925"/><text x="21.9865%" y="159.50"></text></g><g><title>clear_state_bit (514,923,272 samples, 0.07%)</title><rect x="21.7323%" y="165" width="0.0746%" height="15" fill="rgb(243,160,52)" fg:x="149936379097" fg:w="514923272"/><text x="21.9823%" y="175.50"></text></g><g><title>__clear_extent_bit (732,283,370 samples, 0.11%)</title><rect x="21.7088%" y="181" width="0.1061%" height="15" fill="rgb(216,114,19)" fg:x="149774881260" fg:w="732283370"/><text x="21.9588%" y="191.50"></text></g><g><title>btrfs_get_extent (125,454,664 samples, 0.02%)</title><rect x="21.8232%" y="165" width="0.0182%" height="15" fill="rgb(244,166,37)" fg:x="150564038195" fg:w="125454664"/><text x="22.0732%" y="175.50"></text></g><g><title>btrfs_set_extent_delalloc (413,046,067 samples, 0.06%)</title><rect x="21.8194%" y="181" width="0.0599%" height="15" fill="rgb(246,29,44)" fg:x="150537933678" fg:w="413046067"/><text x="22.0694%" y="191.50"></text></g><g><title>set_extent_bit (244,221,665 samples, 0.04%)</title><rect x="21.8439%" y="165" width="0.0354%" height="15" fill="rgb(215,56,53)" fg:x="150706758080" fg:w="244221665"/><text x="22.0939%" y="175.50"></text></g><g><title>__set_extent_bit (241,948,084 samples, 0.04%)</title><rect x="21.8442%" y="149" width="0.0351%" height="15" fill="rgb(217,60,2)" fg:x="150709031661" fg:w="241948084"/><text x="22.0942%" y="159.50"></text></g><g><title>set_state_bits.isra.0 (118,613,866 samples, 0.02%)</title><rect x="21.9178%" y="149" width="0.0172%" height="15" fill="rgb(207,26,24)" fg:x="151216707117" fg:w="118613866"/><text x="22.1678%" y="159.50"></text></g><g><title>btrfs_set_delalloc_extent (117,454,015 samples, 0.02%)</title><rect x="21.9180%" y="133" width="0.0170%" height="15" fill="rgb(252,210,15)" fg:x="151217866968" fg:w="117454015"/><text x="22.1680%" y="143.50"></text></g><g><title>set_extent_bit (325,405,243 samples, 0.05%)</title><rect x="21.8883%" y="181" width="0.0472%" height="15" fill="rgb(253,209,26)" fg:x="151013220702" fg:w="325405243"/><text x="22.1383%" y="191.50"></text></g><g><title>__set_extent_bit (325,405,243 samples, 0.05%)</title><rect x="21.8883%" y="165" width="0.0472%" height="15" fill="rgb(238,170,14)" fg:x="151013220702" fg:w="325405243"/><text x="22.1383%" y="175.50"></text></g><g><title>btrfs_dirty_folio (1,575,160,594 samples, 0.23%)</title><rect x="21.7075%" y="197" width="0.2283%" height="15" fill="rgb(216,178,15)" fg:x="149765723210" fg:w="1575160594"/><text x="21.9575%" y="207.50"></text></g><g><title>btrfs_drop_folio (85,872,483 samples, 0.01%)</title><rect x="21.9358%" y="197" width="0.0124%" height="15" fill="rgb(250,197,2)" fg:x="151340883804" fg:w="85872483"/><text x="22.1858%" y="207.50"></text></g><g><title>btrfs_block_rsv_release (86,748,954 samples, 0.01%)</title><rect x="21.9592%" y="181" width="0.0126%" height="15" fill="rgb(212,70,42)" fg:x="151502184956" fg:w="86748954"/><text x="22.2092%" y="191.50"></text></g><g><title>btrfs_inode_rsv_release (113,005,409 samples, 0.02%)</title><rect x="21.9557%" y="197" width="0.0164%" height="15" fill="rgb(227,213,9)" fg:x="151478202964" fg:w="113005409"/><text x="22.2057%" y="207.50"></text></g><g><title>btrfs_xattr_handler_get_security (69,187,525 samples, 0.01%)</title><rect x="21.9940%" y="117" width="0.0100%" height="15" fill="rgb(245,99,25)" fg:x="151742298133" fg:w="69187525"/><text x="22.2440%" y="127.50"></text></g><g><title>__vfs_getxattr (140,004,685 samples, 0.02%)</title><rect x="21.9880%" y="133" width="0.0203%" height="15" fill="rgb(250,82,29)" fg:x="151700989883" fg:w="140004685"/><text x="22.2380%" y="143.50"></text></g><g><title>cap_inode_need_killpriv (173,312,226 samples, 0.03%)</title><rect x="21.9837%" y="149" width="0.0251%" height="15" fill="rgb(241,226,54)" fg:x="151671092236" fg:w="173312226"/><text x="22.2337%" y="159.50"></text></g><g><title>file_remove_privs_flags (216,528,109 samples, 0.03%)</title><rect x="21.9781%" y="181" width="0.0314%" height="15" fill="rgb(221,99,41)" fg:x="151632444880" fg:w="216528109"/><text x="22.2281%" y="191.50"></text></g><g><title>security_inode_need_killpriv (197,274,446 samples, 0.03%)</title><rect x="21.9809%" y="165" width="0.0286%" height="15" fill="rgb(213,90,21)" fg:x="151651698543" fg:w="197274446"/><text x="22.2309%" y="175.50"></text></g><g><title>inode_set_ctime_current (76,938,941 samples, 0.01%)</title><rect x="22.0145%" y="181" width="0.0112%" height="15" fill="rgb(205,208,24)" fg:x="151883390138" fg:w="76938941"/><text x="22.2645%" y="191.50"></text></g><g><title>btrfs_write_check (368,019,034 samples, 0.05%)</title><rect x="21.9728%" y="197" width="0.0533%" height="15" fill="rgb(246,31,12)" fg:x="151595758259" fg:w="368019034"/><text x="22.2228%" y="207.50"></text></g><g><title>fault_in_iov_iter_readable (81,207,759 samples, 0.01%)</title><rect x="22.0354%" y="197" width="0.0118%" height="15" fill="rgb(213,154,6)" fg:x="152027729541" fg:w="81207759"/><text x="22.2854%" y="207.50"></text></g><g><title>fault_in_readable (75,514,718 samples, 0.01%)</title><rect x="22.0362%" y="181" width="0.0109%" height="15" fill="rgb(222,163,29)" fg:x="152033422582" fg:w="75514718"/><text x="22.2862%" y="191.50"></text></g><g><title>alloc_extent_state (102,056,879 samples, 0.01%)</title><rect x="22.0714%" y="149" width="0.0148%" height="15" fill="rgb(227,201,8)" fg:x="152276318156" fg:w="102056879"/><text x="22.3214%" y="159.50"></text></g><g><title>split_state (94,031,535 samples, 0.01%)</title><rect x="22.0913%" y="149" width="0.0136%" height="15" fill="rgb(233,9,32)" fg:x="152413773918" fg:w="94031535"/><text x="22.3413%" y="159.50"></text></g><g><title>__lock_extent (355,352,769 samples, 0.05%)</title><rect x="22.0546%" y="181" width="0.0515%" height="15" fill="rgb(217,54,24)" fg:x="152160452132" fg:w="355352769"/><text x="22.3046%" y="191.50"></text></g><g><title>__set_extent_bit (339,383,859 samples, 0.05%)</title><rect x="22.0569%" y="165" width="0.0492%" height="15" fill="rgb(235,192,0)" fg:x="152176421042" fg:w="339383859"/><text x="22.3069%" y="175.50"></text></g><g><title>lock_and_cleanup_extent_if_need (496,650,659 samples, 0.07%)</title><rect x="22.0515%" y="197" width="0.0720%" height="15" fill="rgb(235,45,9)" fg:x="152138691298" fg:w="496650659"/><text x="22.3015%" y="207.50"></text></g><g><title>btrfs_lookup_ordered_range (118,385,717 samples, 0.02%)</title><rect x="22.1063%" y="181" width="0.0172%" height="15" fill="rgb(246,42,40)" fg:x="152516956240" fg:w="118385717"/><text x="22.3563%" y="191.50"></text></g><g><title>filemap_get_entry (111,613,694 samples, 0.02%)</title><rect x="22.1362%" y="165" width="0.0162%" height="15" fill="rgb(248,111,24)" fg:x="152723575662" fg:w="111613694"/><text x="22.3862%" y="175.50"></text></g><g><title>__filemap_get_folio (173,412,474 samples, 0.03%)</title><rect x="22.1279%" y="181" width="0.0251%" height="15" fill="rgb(249,65,22)" fg:x="152666298268" fg:w="173412474"/><text x="22.3779%" y="191.50"></text></g><g><title>prepare_one_folio.constprop.0 (210,125,013 samples, 0.03%)</title><rect x="22.1245%" y="197" width="0.0305%" height="15" fill="rgb(238,111,51)" fg:x="152642262823" fg:w="210125013"/><text x="22.3745%" y="207.50"></text></g><g><title>btrfs_buffered_write (4,883,759,497 samples, 0.71%)</title><rect x="21.4489%" y="213" width="0.7079%" height="15" fill="rgb(250,118,22)" fg:x="147981249300" fg:w="4883759497"/><text x="21.6989%" y="223.50"></text></g><g><title>btrfs_do_write_iter (4,940,769,587 samples, 0.72%)</title><rect x="21.4409%" y="229" width="0.7161%" height="15" fill="rgb(234,84,26)" fg:x="147926537350" fg:w="4940769587"/><text x="21.6909%" y="239.50"></text></g><g><title>ksys_write (5,191,475,119 samples, 0.75%)</title><rect x="21.4162%" y="261" width="0.7525%" height="15" fill="rgb(243,172,12)" fg:x="147756075880" fg:w="5191475119"/><text x="21.6662%" y="271.50"></text></g><g><title>vfs_write (5,158,503,080 samples, 0.75%)</title><rect x="21.4210%" y="245" width="0.7477%" height="15" fill="rgb(236,150,49)" fg:x="147789047919" fg:w="5158503080"/><text x="21.6710%" y="255.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5,259,640,059 samples, 0.76%)</title><rect x="21.4116%" y="293" width="0.7623%" height="15" fill="rgb(225,197,26)" fg:x="147724339162" fg:w="5259640059"/><text x="21.6616%" y="303.50"></text></g><g><title>do_syscall_64 (5,246,039,299 samples, 0.76%)</title><rect x="21.4136%" y="277" width="0.7604%" height="15" fill="rgb(214,17,42)" fg:x="147737939922" fg:w="5246039299"/><text x="21.6636%" y="287.50"></text></g><g><title>__GI___libc_write (5,351,172,221 samples, 0.78%)</title><rect x="21.4005%" y="309" width="0.7756%" height="15" fill="rgb(224,165,40)" fg:x="147647496772" fg:w="5351172221"/><text x="21.6505%" y="319.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (5,379,833,191 samples, 0.78%)</title><rect x="21.3997%" y="357" width="0.7798%" height="15" fill="rgb(246,100,4)" fg:x="147641706921" fg:w="5379833191"/><text x="21.6497%" y="367.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (5,374,043,340 samples, 0.78%)</title><rect x="21.4005%" y="341" width="0.7789%" height="15" fill="rgb(222,103,0)" fg:x="147647496772" fg:w="5374043340"/><text x="21.6505%" y="351.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (5,374,043,340 samples, 0.78%)</title><rect x="21.4005%" y="325" width="0.7789%" height="15" fill="rgb(227,189,26)" fg:x="147647496772" fg:w="5374043340"/><text x="21.6505%" y="335.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (40,096,749,646 samples, 5.81%)</title><rect x="16.3678%" y="421" width="5.8117%" height="15" fill="rgb(214,202,17)" fg:x="112925949832" fg:w="40096749646"/><text x="16.6178%" y="431.50">serde::..</text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (20,014,482,129 samples, 2.90%)</title><rect x="19.2786%" y="405" width="2.9010%" height="15" fill="rgb(229,111,3)" fg:x="133008217349" fg:w="20014482129"/><text x="19.5286%" y="415.50">&lt;s..</text></g><g><title>serde_json::ser::Formatter::begin_object_value (5,422,276,710 samples, 0.79%)</title><rect x="21.3937%" y="389" width="0.7859%" height="15" fill="rgb(229,172,15)" fg:x="147600422768" fg:w="5422276710"/><text x="21.6437%" y="399.50"></text></g><g><title>std::io::Write::write_all (5,393,554,999 samples, 0.78%)</title><rect x="21.3978%" y="373" width="0.7818%" height="15" fill="rgb(230,224,35)" fg:x="147629144479" fg:w="5393554999"/><text x="21.6478%" y="383.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (40,107,147,172 samples, 5.81%)</title><rect x="16.3678%" y="437" width="5.8133%" height="15" fill="rgb(251,141,6)" fg:x="112925949832" fg:w="40107147172"/><text x="16.6178%" y="447.50">&lt;serde_..</text></g><g><title>__clear_extent_bit (123,262,633 samples, 0.02%)</title><rect x="22.1966%" y="213" width="0.0179%" height="15" fill="rgb(225,208,6)" fg:x="153140333264" fg:w="123262633"/><text x="22.4466%" y="223.50"></text></g><g><title>btrfs_reserve_metadata_bytes (96,134,281 samples, 0.01%)</title><rect x="22.2381%" y="197" width="0.0139%" height="15" fill="rgb(246,181,16)" fg:x="153426171177" fg:w="96134281"/><text x="22.4881%" y="207.50"></text></g><g><title>__reserve_bytes (91,557,072 samples, 0.01%)</title><rect x="22.2387%" y="181" width="0.0133%" height="15" fill="rgb(227,129,36)" fg:x="153430748386" fg:w="91557072"/><text x="22.4887%" y="191.50"></text></g><g><title>btrfs_delalloc_reserve_metadata (179,608,001 samples, 0.03%)</title><rect x="22.2265%" y="213" width="0.0260%" height="15" fill="rgb(248,117,24)" fg:x="153346084151" fg:w="179608001"/><text x="22.4765%" y="223.50"></text></g><g><title>btrfs_clear_delalloc_extent (112,042,330 samples, 0.02%)</title><rect x="22.2611%" y="165" width="0.0162%" height="15" fill="rgb(214,185,35)" fg:x="153585004702" fg:w="112042330"/><text x="22.5111%" y="175.50"></text></g><g><title>clear_state_bit (117,715,592 samples, 0.02%)</title><rect x="22.2604%" y="181" width="0.0171%" height="15" fill="rgb(236,150,34)" fg:x="153580460267" fg:w="117715592"/><text x="22.5104%" y="191.50"></text></g><g><title>__clear_extent_bit (195,309,478 samples, 0.03%)</title><rect x="22.2525%" y="197" width="0.0283%" height="15" fill="rgb(243,228,27)" fg:x="153525692152" fg:w="195309478"/><text x="22.5025%" y="207.50"></text></g><g><title>btrfs_set_extent_delalloc (100,389,754 samples, 0.01%)</title><rect x="22.2816%" y="197" width="0.0146%" height="15" fill="rgb(245,77,44)" fg:x="153726769994" fg:w="100389754"/><text x="22.5316%" y="207.50"></text></g><g><title>btrfs_dirty_folio (409,808,449 samples, 0.06%)</title><rect x="22.2525%" y="213" width="0.0594%" height="15" fill="rgb(235,214,42)" fg:x="153525692152" fg:w="409808449"/><text x="22.5025%" y="223.50"></text></g><g><title>set_extent_bit (91,207,215 samples, 0.01%)</title><rect x="22.2987%" y="197" width="0.0132%" height="15" fill="rgb(221,74,3)" fg:x="153844293386" fg:w="91207215"/><text x="22.5487%" y="207.50"></text></g><g><title>__set_extent_bit (90,073,247 samples, 0.01%)</title><rect x="22.2988%" y="181" width="0.0131%" height="15" fill="rgb(206,121,29)" fg:x="153845427354" fg:w="90073247"/><text x="22.5488%" y="191.50"></text></g><g><title>btrfs_write_check (92,625,975 samples, 0.01%)</title><rect x="22.3245%" y="213" width="0.0134%" height="15" fill="rgb(249,131,53)" fg:x="154022393934" fg:w="92625975"/><text x="22.5745%" y="223.50"></text></g><g><title>__lock_extent (85,205,518 samples, 0.01%)</title><rect x="22.3442%" y="197" width="0.0123%" height="15" fill="rgb(236,170,29)" fg:x="154158199857" fg:w="85205518"/><text x="22.5942%" y="207.50"></text></g><g><title>__set_extent_bit (79,518,732 samples, 0.01%)</title><rect x="22.3450%" y="181" width="0.0115%" height="15" fill="rgb(247,96,15)" fg:x="154163886643" fg:w="79518732"/><text x="22.5950%" y="191.50"></text></g><g><title>lock_and_cleanup_extent_if_need (113,588,131 samples, 0.02%)</title><rect x="22.3437%" y="213" width="0.0165%" height="15" fill="rgb(211,210,7)" fg:x="154154770602" fg:w="113588131"/><text x="22.5937%" y="223.50"></text></g><g><title>btrfs_do_write_iter (1,247,778,270 samples, 0.18%)</title><rect x="22.1879%" y="245" width="0.1809%" height="15" fill="rgb(240,88,50)" fg:x="153079946386" fg:w="1247778270"/><text x="22.4379%" y="255.50"></text></g><g><title>btrfs_buffered_write (1,232,895,809 samples, 0.18%)</title><rect x="22.1900%" y="229" width="0.1787%" height="15" fill="rgb(209,229,26)" fg:x="153094828847" fg:w="1232895809"/><text x="22.4400%" y="239.50"></text></g><g><title>ksys_write (1,281,940,944 samples, 0.19%)</title><rect x="22.1851%" y="277" width="0.1858%" height="15" fill="rgb(210,68,23)" fg:x="153060575719" fg:w="1281940944"/><text x="22.4351%" y="287.50"></text></g><g><title>vfs_write (1,275,158,196 samples, 0.18%)</title><rect x="22.1861%" y="261" width="0.1848%" height="15" fill="rgb(229,180,13)" fg:x="153067358467" fg:w="1275158196"/><text x="22.4361%" y="271.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,296,814,175 samples, 0.19%)</title><rect x="22.1844%" y="309" width="0.1880%" height="15" fill="rgb(236,53,44)" fg:x="153055979068" fg:w="1296814175"/><text x="22.4344%" y="319.50"></text></g><g><title>do_syscall_64 (1,295,653,084 samples, 0.19%)</title><rect x="22.1846%" y="293" width="0.1878%" height="15" fill="rgb(244,214,29)" fg:x="153057140159" fg:w="1295653084"/><text x="22.4346%" y="303.50"></text></g><g><title>__GI___libc_write (1,326,538,926 samples, 0.19%)</title><rect x="22.1813%" y="325" width="0.1923%" height="15" fill="rgb(220,75,29)" fg:x="153034257925" fg:w="1326538926"/><text x="22.4313%" y="335.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1,332,264,908 samples, 0.19%)</title><rect x="22.1813%" y="373" width="0.1931%" height="15" fill="rgb(214,183,37)" fg:x="153034257925" fg:w="1332264908"/><text x="22.4313%" y="383.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (1,332,264,908 samples, 0.19%)</title><rect x="22.1813%" y="357" width="0.1931%" height="15" fill="rgb(239,117,29)" fg:x="153034257925" fg:w="1332264908"/><text x="22.4313%" y="367.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (1,332,264,908 samples, 0.19%)</title><rect x="22.1813%" y="341" width="0.1931%" height="15" fill="rgb(237,171,35)" fg:x="153034257925" fg:w="1332264908"/><text x="22.4313%" y="351.50"></text></g><g><title>cargo_tarpaulin::traces::_::&lt;impl serde::ser::Serialize for cargo_tarpaulin::traces::Trace&gt;::serialize (42,784,251,749 samples, 6.20%)</title><rect x="16.1734%" y="453" width="6.2013%" height="15" fill="rgb(229,178,53)" fg:x="111584516572" fg:w="42784251749"/><text x="16.4234%" y="463.50">cargo_ta..</text></g><g><title>_ZN86_$LT$serde_json..ser..Compound$LT$W$C$F$GT$$u20$as$u20$serde..ser..SerializeStruct$GT$3end17h83db4a3a065bd81dE.llvm.2496156589971852688 (1,335,671,317 samples, 0.19%)</title><rect x="22.1811%" y="437" width="0.1936%" height="15" fill="rgb(210,102,19)" fg:x="153033097004" fg:w="1335671317"/><text x="22.4311%" y="447.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::end (1,335,671,317 samples, 0.19%)</title><rect x="22.1811%" y="421" width="0.1936%" height="15" fill="rgb(235,127,22)" fg:x="153033097004" fg:w="1335671317"/><text x="22.4311%" y="431.50"></text></g><g><title>serde_json::ser::Formatter::end_object (1,335,671,317 samples, 0.19%)</title><rect x="22.1811%" y="405" width="0.1936%" height="15" fill="rgb(244,31,31)" fg:x="153033097004" fg:w="1335671317"/><text x="22.4311%" y="415.50"></text></g><g><title>std::io::Write::write_all (1,335,671,317 samples, 0.19%)</title><rect x="22.1811%" y="389" width="0.1936%" height="15" fill="rgb(231,43,21)" fg:x="153033097004" fg:w="1335671317"/><text x="22.4311%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (42,785,374,688 samples, 6.20%)</title><rect x="16.1734%" y="469" width="6.2014%" height="15" fill="rgb(217,131,35)" fg:x="111584516572" fg:w="42785374688"/><text x="16.4234%" y="479.50">serde::s..</text></g><g><title>__clear_extent_bit (105,130,191 samples, 0.02%)</title><rect x="22.3884%" y="277" width="0.0152%" height="15" fill="rgb(221,149,4)" fg:x="154463170345" fg:w="105130191"/><text x="22.6384%" y="287.50"></text></g><g><title>btrfs_reserve_metadata_bytes (103,799,978 samples, 0.02%)</title><rect x="22.4280%" y="261" width="0.0150%" height="15" fill="rgb(232,170,28)" fg:x="154736302923" fg:w="103799978"/><text x="22.6780%" y="271.50"></text></g><g><title>__reserve_bytes (102,647,771 samples, 0.01%)</title><rect x="22.4281%" y="245" width="0.0149%" height="15" fill="rgb(238,56,10)" fg:x="154737455130" fg:w="102647771"/><text x="22.6781%" y="255.50"></text></g><g><title>btrfs_delalloc_reserve_metadata (188,242,320 samples, 0.03%)</title><rect x="22.4166%" y="277" width="0.0273%" height="15" fill="rgb(235,196,14)" fg:x="154657621861" fg:w="188242320"/><text x="22.6666%" y="287.50"></text></g><g><title>btrfs_clear_delalloc_extent (109,607,092 samples, 0.02%)</title><rect x="22.4501%" y="229" width="0.0159%" height="15" fill="rgb(216,45,48)" fg:x="154889104125" fg:w="109607092"/><text x="22.7001%" y="239.50"></text></g><g><title>clear_state_bit (117,605,281 samples, 0.02%)</title><rect x="22.4491%" y="245" width="0.0170%" height="15" fill="rgb(238,213,17)" fg:x="154882277353" fg:w="117605281"/><text x="22.6991%" y="255.50"></text></g><g><title>__clear_extent_bit (170,093,663 samples, 0.02%)</title><rect x="22.4445%" y="261" width="0.0247%" height="15" fill="rgb(212,13,2)" fg:x="154850326233" fg:w="170093663"/><text x="22.6945%" y="271.50"></text></g><g><title>btrfs_set_extent_delalloc (114,149,959 samples, 0.02%)</title><rect x="22.4703%" y="261" width="0.0165%" height="15" fill="rgb(240,114,20)" fg:x="155028465448" fg:w="114149959"/><text x="22.7203%" y="271.50"></text></g><g><title>btrfs_dirty_folio (382,610,549 samples, 0.06%)</title><rect x="22.4438%" y="277" width="0.0555%" height="15" fill="rgb(228,41,40)" fg:x="154845864181" fg:w="382610549"/><text x="22.6938%" y="287.50"></text></g><g><title>set_extent_bit (69,770,240 samples, 0.01%)</title><rect x="22.4892%" y="261" width="0.0101%" height="15" fill="rgb(244,132,35)" fg:x="155158704490" fg:w="69770240"/><text x="22.7392%" y="271.50"></text></g><g><title>__set_extent_bit (69,770,240 samples, 0.01%)</title><rect x="22.4892%" y="245" width="0.0101%" height="15" fill="rgb(253,189,4)" fg:x="155158704490" fg:w="69770240"/><text x="22.7392%" y="255.50"></text></g><g><title>btrfs_write_check (86,435,196 samples, 0.01%)</title><rect x="22.5081%" y="277" width="0.0125%" height="15" fill="rgb(224,37,19)" fg:x="155289175487" fg:w="86435196"/><text x="22.7581%" y="287.50"></text></g><g><title>__lock_extent (75,443,377 samples, 0.01%)</title><rect x="22.5276%" y="261" width="0.0109%" height="15" fill="rgb(235,223,18)" fg:x="155423877838" fg:w="75443377"/><text x="22.7776%" y="271.50"></text></g><g><title>__set_extent_bit (69,714,567 samples, 0.01%)</title><rect x="22.5285%" y="245" width="0.0101%" height="15" fill="rgb(235,163,25)" fg:x="155429606648" fg:w="69714567"/><text x="22.7785%" y="255.50"></text></g><g><title>lock_and_cleanup_extent_if_need (121,151,367 samples, 0.02%)</title><rect x="22.5266%" y="277" width="0.0176%" height="15" fill="rgb(217,145,28)" fg:x="155416962779" fg:w="121151367"/><text x="22.7766%" y="287.50"></text></g><g><title>btrfs_buffered_write (1,157,066,321 samples, 0.17%)</title><rect x="22.3829%" y="293" width="0.1677%" height="15" fill="rgb(223,223,32)" fg:x="154425590371" fg:w="1157066321"/><text x="22.6329%" y="303.50"></text></g><g><title>btrfs_do_write_iter (1,173,878,543 samples, 0.17%)</title><rect x="22.3806%" y="309" width="0.1701%" height="15" fill="rgb(227,189,39)" fg:x="154409765390" fg:w="1173878543"/><text x="22.6306%" y="319.50"></text></g><g><title>ksys_write (1,211,565,167 samples, 0.18%)</title><rect x="22.3777%" y="341" width="0.1756%" height="15" fill="rgb(248,10,22)" fg:x="154389302170" fg:w="1211565167"/><text x="22.6277%" y="351.50"></text></g><g><title>vfs_write (1,205,937,834 samples, 0.17%)</title><rect x="22.3785%" y="325" width="0.1748%" height="15" fill="rgb(248,46,39)" fg:x="154394929503" fg:w="1205937834"/><text x="22.6285%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,225,098,051 samples, 0.18%)</title><rect x="22.3767%" y="373" width="0.1776%" height="15" fill="rgb(248,113,48)" fg:x="154382522898" fg:w="1225098051"/><text x="22.6267%" y="383.50"></text></g><g><title>do_syscall_64 (1,222,880,084 samples, 0.18%)</title><rect x="22.3770%" y="357" width="0.1772%" height="15" fill="rgb(245,16,25)" fg:x="154384740865" fg:w="1222880084"/><text x="22.6270%" y="367.50"></text></g><g><title>__GI___libc_write (1,237,769,868 samples, 0.18%)</title><rect x="22.3750%" y="389" width="0.1794%" height="15" fill="rgb(249,152,16)" fg:x="154371023179" fg:w="1237769868"/><text x="22.6250%" y="399.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1,247,843,039 samples, 0.18%)</title><rect x="22.3749%" y="437" width="0.1809%" height="15" fill="rgb(250,16,1)" fg:x="154369891260" fg:w="1247843039"/><text x="22.6249%" y="447.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (1,246,711,120 samples, 0.18%)</title><rect x="22.3750%" y="421" width="0.1807%" height="15" fill="rgb(249,138,3)" fg:x="154371023179" fg:w="1246711120"/><text x="22.6250%" y="431.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (1,246,711,120 samples, 0.18%)</title><rect x="22.3750%" y="405" width="0.1807%" height="15" fill="rgb(227,71,41)" fg:x="154371023179" fg:w="1246711120"/><text x="22.6250%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (44,037,709,345 samples, 6.38%)</title><rect x="16.1734%" y="549" width="6.3830%" height="15" fill="rgb(209,184,23)" fg:x="111584516572" fg:w="44037709345"/><text x="16.4234%" y="559.50">core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (44,037,709,345 samples, 6.38%)</title><rect x="16.1734%" y="533" width="6.3830%" height="15" fill="rgb(223,215,31)" fg:x="111584516572" fg:w="44037709345"/><text x="16.4234%" y="543.50">core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (44,037,709,345 samples, 6.38%)</title><rect x="16.1734%" y="517" width="6.3830%" height="15" fill="rgb(210,146,28)" fg:x="111584516572" fg:w="44037709345"/><text x="16.4234%" y="527.50">core::it..</text></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (44,037,709,345 samples, 6.38%)</title><rect x="16.1734%" y="501" width="6.3830%" height="15" fill="rgb(209,183,41)" fg:x="111584516572" fg:w="44037709345"/><text x="16.4234%" y="511.50">serde::s..</text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (44,037,709,345 samples, 6.38%)</title><rect x="16.1734%" y="485" width="6.3830%" height="15" fill="rgb(209,224,45)" fg:x="111584516572" fg:w="44037709345"/><text x="16.4234%" y="495.50">&lt;serde_j..</text></g><g><title>serde_json::ser::Formatter::begin_array_value (1,252,334,657 samples, 0.18%)</title><rect x="22.3749%" y="469" width="0.1815%" height="15" fill="rgb(224,209,51)" fg:x="154369891260" fg:w="1252334657"/><text x="22.6249%" y="479.50"></text></g><g><title>std::io::Write::write_all (1,252,334,657 samples, 0.18%)</title><rect x="22.3749%" y="453" width="0.1815%" height="15" fill="rgb(223,17,39)" fg:x="154369891260" fg:w="1252334657"/><text x="22.6249%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (44,078,629,376 samples, 6.39%)</title><rect x="16.1704%" y="597" width="6.3889%" height="15" fill="rgb(234,204,37)" fg:x="111564039166" fg:w="44078629376"/><text x="16.4204%" y="607.50">serde::s..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (44,078,629,376 samples, 6.39%)</title><rect x="16.1704%" y="581" width="6.3889%" height="15" fill="rgb(236,120,5)" fg:x="111564039166" fg:w="44078629376"/><text x="16.4204%" y="591.50">serde::s..</text></g><g><title>serde::ser::Serializer::collect_seq (44,078,629,376 samples, 6.39%)</title><rect x="16.1704%" y="565" width="6.3889%" height="15" fill="rgb(248,97,27)" fg:x="111564039166" fg:w="44078629376"/><text x="16.4204%" y="575.50">serde::s..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (44,174,443,317 samples, 6.40%)</title><rect x="16.1592%" y="725" width="6.4028%" height="15" fill="rgb(240,66,17)" fg:x="111486580005" fg:w="44174443317"/><text x="16.4092%" y="735.50">serde::s..</text></g><g><title>serde::ser::Serializer::collect_map (44,174,443,317 samples, 6.40%)</title><rect x="16.1592%" y="709" width="6.4028%" height="15" fill="rgb(210,79,3)" fg:x="111486580005" fg:w="44174443317"/><text x="16.4092%" y="719.50">serde::s..</text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (44,174,443,317 samples, 6.40%)</title><rect x="16.1592%" y="693" width="6.4028%" height="15" fill="rgb(214,176,27)" fg:x="111486580005" fg:w="44174443317"/><text x="16.4092%" y="703.50">core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (44,174,443,317 samples, 6.40%)</title><rect x="16.1592%" y="677" width="6.4028%" height="15" fill="rgb(235,185,3)" fg:x="111486580005" fg:w="44174443317"/><text x="16.4092%" y="687.50">core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (44,174,443,317 samples, 6.40%)</title><rect x="16.1592%" y="661" width="6.4028%" height="15" fill="rgb(227,24,12)" fg:x="111486580005" fg:w="44174443317"/><text x="16.4092%" y="671.50">core::it..</text></g><g><title>serde::ser::Serializer::collect_map::_{{closure}} (44,174,443,317 samples, 6.40%)</title><rect x="16.1592%" y="645" width="6.4028%" height="15" fill="rgb(252,169,48)" fg:x="111486580005" fg:w="44174443317"/><text x="16.4092%" y="655.50">serde::s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (44,174,443,317 samples, 6.40%)</title><rect x="16.1592%" y="629" width="6.4028%" height="15" fill="rgb(212,65,1)" fg:x="111486580005" fg:w="44174443317"/><text x="16.4092%" y="639.50">serde::s..</text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (44,096,984,156 samples, 6.39%)</title><rect x="16.1704%" y="613" width="6.3916%" height="15" fill="rgb(242,39,24)" fg:x="111564039166" fg:w="44096984156"/><text x="16.4204%" y="623.50">&lt;serde_j..</text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (82,878,977 samples, 0.01%)</title><rect x="22.5620%" y="613" width="0.0120%" height="15" fill="rgb(249,32,23)" fg:x="155661023322" fg:w="82878977"/><text x="22.8120%" y="623.50"></text></g><g><title>btrfs_buffered_write (128,869,556 samples, 0.02%)</title><rect x="22.5789%" y="229" width="0.0187%" height="15" fill="rgb(251,195,23)" fg:x="155777927829" fg:w="128869556"/><text x="22.8289%" y="239.50"></text></g><g><title>__GI___libc_write (140,162,506 samples, 0.02%)</title><rect x="22.5775%" y="325" width="0.0203%" height="15" fill="rgb(236,174,8)" fg:x="155767759267" fg:w="140162506"/><text x="22.8275%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (139,037,433 samples, 0.02%)</title><rect x="22.5776%" y="309" width="0.0202%" height="15" fill="rgb(220,197,8)" fg:x="155768884340" fg:w="139037433"/><text x="22.8276%" y="319.50"></text></g><g><title>do_syscall_64 (139,037,433 samples, 0.02%)</title><rect x="22.5776%" y="293" width="0.0202%" height="15" fill="rgb(240,108,37)" fg:x="155768884340" fg:w="139037433"/><text x="22.8276%" y="303.50"></text></g><g><title>ksys_write (137,915,163 samples, 0.02%)</title><rect x="22.5778%" y="277" width="0.0200%" height="15" fill="rgb(232,176,24)" fg:x="155770006610" fg:w="137915163"/><text x="22.8278%" y="287.50"></text></g><g><title>vfs_write (137,915,163 samples, 0.02%)</title><rect x="22.5778%" y="261" width="0.0200%" height="15" fill="rgb(243,35,29)" fg:x="155770006610" fg:w="137915163"/><text x="22.8278%" y="271.50"></text></g><g><title>btrfs_do_write_iter (134,522,011 samples, 0.02%)</title><rect x="22.5783%" y="245" width="0.0195%" height="15" fill="rgb(210,37,18)" fg:x="155773399762" fg:w="134522011"/><text x="22.8283%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_struct (143,610,790 samples, 0.02%)</title><rect x="22.5771%" y="437" width="0.0208%" height="15" fill="rgb(224,184,40)" fg:x="155765469989" fg:w="143610790"/><text x="22.8271%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_map (143,610,790 samples, 0.02%)</title><rect x="22.5771%" y="421" width="0.0208%" height="15" fill="rgb(236,39,29)" fg:x="155765469989" fg:w="143610790"/><text x="22.8271%" y="431.50"></text></g><g><title>serde_json::ser::Formatter::begin_object (142,449,544 samples, 0.02%)</title><rect x="22.5773%" y="405" width="0.0206%" height="15" fill="rgb(232,48,39)" fg:x="155766631235" fg:w="142449544"/><text x="22.8273%" y="415.50"></text></g><g><title>std::io::Write::write_all (142,449,544 samples, 0.02%)</title><rect x="22.5773%" y="389" width="0.0206%" height="15" fill="rgb(236,34,42)" fg:x="155766631235" fg:w="142449544"/><text x="22.8273%" y="399.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (141,321,512 samples, 0.02%)</title><rect x="22.5775%" y="373" width="0.0205%" height="15" fill="rgb(243,106,37)" fg:x="155767759267" fg:w="141321512"/><text x="22.8275%" y="383.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (141,321,512 samples, 0.02%)</title><rect x="22.5775%" y="357" width="0.0205%" height="15" fill="rgb(218,96,6)" fg:x="155767759267" fg:w="141321512"/><text x="22.8275%" y="367.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (141,321,512 samples, 0.02%)</title><rect x="22.5775%" y="341" width="0.0205%" height="15" fill="rgb(235,130,12)" fg:x="155767759267" fg:w="141321512"/><text x="22.8275%" y="351.50"></text></g><g><title>__GI___libc_write (150,881,061 samples, 0.02%)</title><rect x="22.5983%" y="325" width="0.0219%" height="15" fill="rgb(231,95,0)" fg:x="155911384917" fg:w="150881061"/><text x="22.8483%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (146,328,916 samples, 0.02%)</title><rect x="22.5989%" y="309" width="0.0212%" height="15" fill="rgb(228,12,23)" fg:x="155915937062" fg:w="146328916"/><text x="22.8489%" y="319.50"></text></g><g><title>do_syscall_64 (146,328,916 samples, 0.02%)</title><rect x="22.5989%" y="293" width="0.0212%" height="15" fill="rgb(216,12,1)" fg:x="155915937062" fg:w="146328916"/><text x="22.8489%" y="303.50"></text></g><g><title>ksys_write (146,328,916 samples, 0.02%)</title><rect x="22.5989%" y="277" width="0.0212%" height="15" fill="rgb(219,59,3)" fg:x="155915937062" fg:w="146328916"/><text x="22.8489%" y="287.50"></text></g><g><title>vfs_write (146,328,916 samples, 0.02%)</title><rect x="22.5989%" y="261" width="0.0212%" height="15" fill="rgb(215,208,46)" fg:x="155915937062" fg:w="146328916"/><text x="22.8489%" y="271.50"></text></g><g><title>btrfs_do_write_iter (144,037,534 samples, 0.02%)</title><rect x="22.5993%" y="245" width="0.0209%" height="15" fill="rgb(254,224,29)" fg:x="155918228444" fg:w="144037534"/><text x="22.8493%" y="255.50"></text></g><g><title>btrfs_buffered_write (141,735,490 samples, 0.02%)</title><rect x="22.5996%" y="229" width="0.0205%" height="15" fill="rgb(232,14,29)" fg:x="155920530488" fg:w="141735490"/><text x="22.8496%" y="239.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (152,000,984 samples, 0.02%)</title><rect x="22.5983%" y="373" width="0.0220%" height="15" fill="rgb(208,45,52)" fg:x="155911384917" fg:w="152000984"/><text x="22.8483%" y="383.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (152,000,984 samples, 0.02%)</title><rect x="22.5983%" y="357" width="0.0220%" height="15" fill="rgb(234,191,28)" fg:x="155911384917" fg:w="152000984"/><text x="22.8483%" y="367.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (152,000,984 samples, 0.02%)</title><rect x="22.5983%" y="341" width="0.0220%" height="15" fill="rgb(244,67,43)" fg:x="155911384917" fg:w="152000984"/><text x="22.8483%" y="351.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::end (155,461,443 samples, 0.02%)</title><rect x="22.5980%" y="437" width="0.0225%" height="15" fill="rgb(236,189,24)" fg:x="155909080779" fg:w="155461443"/><text x="22.8480%" y="447.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::end (155,461,443 samples, 0.02%)</title><rect x="22.5980%" y="421" width="0.0225%" height="15" fill="rgb(239,214,33)" fg:x="155909080779" fg:w="155461443"/><text x="22.8480%" y="431.50"></text></g><g><title>serde_json::ser::Formatter::end_object (155,461,443 samples, 0.02%)</title><rect x="22.5980%" y="405" width="0.0225%" height="15" fill="rgb(226,176,41)" fg:x="155909080779" fg:w="155461443"/><text x="22.8480%" y="415.50"></text></g><g><title>std::io::Write::write_all (153,157,305 samples, 0.02%)</title><rect x="22.5983%" y="389" width="0.0222%" height="15" fill="rgb(248,47,8)" fg:x="155911384917" fg:w="153157305"/><text x="22.8483%" y="399.50"></text></g><g><title>btrfs_delalloc_reserve_metadata (69,213,255 samples, 0.01%)</title><rect x="22.6388%" y="133" width="0.0100%" height="15" fill="rgb(218,81,44)" fg:x="156191104712" fg:w="69213255"/><text x="22.8888%" y="143.50"></text></g><g><title>btrfs_dirty_folio (146,221,646 samples, 0.02%)</title><rect x="22.6489%" y="133" width="0.0212%" height="15" fill="rgb(213,98,6)" fg:x="156260317967" fg:w="146221646"/><text x="22.8989%" y="143.50"></text></g><g><title>btrfs_do_write_iter (463,878,036 samples, 0.07%)</title><rect x="22.6249%" y="165" width="0.0672%" height="15" fill="rgb(222,85,22)" fg:x="156094756068" fg:w="463878036"/><text x="22.8749%" y="175.50"></text></g><g><title>btrfs_buffered_write (458,349,585 samples, 0.07%)</title><rect x="22.6257%" y="149" width="0.0664%" height="15" fill="rgb(239,46,39)" fg:x="156100284519" fg:w="458349585"/><text x="22.8757%" y="159.50"></text></g><g><title>ksys_write (477,517,478 samples, 0.07%)</title><rect x="22.6236%" y="197" width="0.0692%" height="15" fill="rgb(237,12,29)" fg:x="156085686527" fg:w="477517478"/><text x="22.8736%" y="207.50"></text></g><g><title>vfs_write (475,287,901 samples, 0.07%)</title><rect x="22.6239%" y="181" width="0.0689%" height="15" fill="rgb(214,77,8)" fg:x="156087916104" fg:w="475287901"/><text x="22.8739%" y="191.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (486,439,057 samples, 0.07%)</title><rect x="22.6226%" y="229" width="0.0705%" height="15" fill="rgb(217,168,37)" fg:x="156079034285" fg:w="486439057"/><text x="22.8726%" y="239.50"></text></g><g><title>do_syscall_64 (484,275,562 samples, 0.07%)</title><rect x="22.6229%" y="213" width="0.0702%" height="15" fill="rgb(221,217,23)" fg:x="156081197780" fg:w="484275562"/><text x="22.8729%" y="223.50"></text></g><g><title>__GI___libc_write (497,691,865 samples, 0.07%)</title><rect x="22.6215%" y="245" width="0.0721%" height="15" fill="rgb(243,229,36)" fg:x="156071203650" fg:w="497691865"/><text x="22.8715%" y="255.50"></text></g><g><title>serde_json::ser::Formatter::begin_string (505,491,361 samples, 0.07%)</title><rect x="22.6210%" y="325" width="0.0733%" height="15" fill="rgb(251,163,40)" fg:x="156067911171" fg:w="505491361"/><text x="22.8710%" y="335.50"></text></g><g><title>std::io::Write::write_all (505,491,361 samples, 0.07%)</title><rect x="22.6210%" y="309" width="0.0733%" height="15" fill="rgb(237,222,12)" fg:x="156067911171" fg:w="505491361"/><text x="22.8710%" y="319.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (502,198,882 samples, 0.07%)</title><rect x="22.6215%" y="293" width="0.0728%" height="15" fill="rgb(248,132,6)" fg:x="156071203650" fg:w="502198882"/><text x="22.8715%" y="303.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (502,198,882 samples, 0.07%)</title><rect x="22.6215%" y="277" width="0.0728%" height="15" fill="rgb(227,167,50)" fg:x="156071203650" fg:w="502198882"/><text x="22.8715%" y="287.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (502,198,882 samples, 0.07%)</title><rect x="22.6215%" y="261" width="0.0728%" height="15" fill="rgb(242,84,37)" fg:x="156071203650" fg:w="502198882"/><text x="22.8715%" y="271.50"></text></g><g><title>btrfs_delalloc_reserve_metadata (87,609,622 samples, 0.01%)</title><rect x="22.7138%" y="133" width="0.0127%" height="15" fill="rgb(212,4,50)" fg:x="156708062602" fg:w="87609622"/><text x="22.9638%" y="143.50"></text></g><g><title>btrfs_dirty_folio (137,991,477 samples, 0.02%)</title><rect x="22.7265%" y="133" width="0.0200%" height="15" fill="rgb(230,228,32)" fg:x="156795672224" fg:w="137991477"/><text x="22.9765%" y="143.50"></text></g><g><title>btrfs_do_write_iter (454,374,303 samples, 0.07%)</title><rect x="22.6979%" y="165" width="0.0659%" height="15" fill="rgb(248,217,23)" fg:x="156598288194" fg:w="454374303"/><text x="22.9479%" y="175.50"></text></g><g><title>btrfs_buffered_write (453,249,192 samples, 0.07%)</title><rect x="22.6980%" y="149" width="0.0657%" height="15" fill="rgb(238,197,32)" fg:x="156599413305" fg:w="453249192"/><text x="22.9480%" y="159.50"></text></g><g><title>ksys_write (474,595,172 samples, 0.07%)</title><rect x="22.6969%" y="197" width="0.0688%" height="15" fill="rgb(236,106,1)" fg:x="156591544815" fg:w="474595172"/><text x="22.9469%" y="207.50"></text></g><g><title>vfs_write (472,313,786 samples, 0.07%)</title><rect x="22.6972%" y="181" width="0.0685%" height="15" fill="rgb(219,228,13)" fg:x="156593826201" fg:w="472313786"/><text x="22.9472%" y="191.50"></text></g><g><title>__GI___libc_write (493,880,628 samples, 0.07%)</title><rect x="22.6946%" y="245" width="0.0716%" height="15" fill="rgb(238,30,35)" fg:x="156575678044" fg:w="493880628"/><text x="22.9446%" y="255.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (480,244,853 samples, 0.07%)</title><rect x="22.6965%" y="229" width="0.0696%" height="15" fill="rgb(236,70,23)" fg:x="156589313819" fg:w="480244853"/><text x="22.9465%" y="239.50"></text></g><g><title>do_syscall_64 (480,244,853 samples, 0.07%)</title><rect x="22.6965%" y="213" width="0.0696%" height="15" fill="rgb(249,104,48)" fg:x="156589313819" fg:w="480244853"/><text x="22.9465%" y="223.50"></text></g><g><title>serde_json::ser::Formatter::end_string (499,592,737 samples, 0.07%)</title><rect x="22.6942%" y="325" width="0.0724%" height="15" fill="rgb(254,117,50)" fg:x="156573402532" fg:w="499592737"/><text x="22.9442%" y="335.50"></text></g><g><title>std::io::Write::write_all (499,592,737 samples, 0.07%)</title><rect x="22.6942%" y="309" width="0.0724%" height="15" fill="rgb(223,152,4)" fg:x="156573402532" fg:w="499592737"/><text x="22.9442%" y="319.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (499,592,737 samples, 0.07%)</title><rect x="22.6942%" y="293" width="0.0724%" height="15" fill="rgb(245,6,2)" fg:x="156573402532" fg:w="499592737"/><text x="22.9442%" y="303.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (497,317,225 samples, 0.07%)</title><rect x="22.6946%" y="277" width="0.0721%" height="15" fill="rgb(249,150,24)" fg:x="156575678044" fg:w="497317225"/><text x="22.9446%" y="287.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (497,317,225 samples, 0.07%)</title><rect x="22.6946%" y="261" width="0.0721%" height="15" fill="rgb(228,185,42)" fg:x="156575678044" fg:w="497317225"/><text x="22.9446%" y="271.50"></text></g><g><title>btrfs_delalloc_reserve_metadata (86,684,607 samples, 0.01%)</title><rect x="22.7848%" y="117" width="0.0126%" height="15" fill="rgb(226,39,33)" fg:x="157198309075" fg:w="86684607"/><text x="23.0348%" y="127.50"></text></g><g><title>btrfs_dirty_folio (150,991,744 samples, 0.02%)</title><rect x="22.7974%" y="117" width="0.0219%" height="15" fill="rgb(221,166,19)" fg:x="157284993682" fg:w="150991744"/><text x="23.0474%" y="127.50"></text></g><g><title>btrfs_do_write_iter (475,076,755 samples, 0.07%)</title><rect x="22.7703%" y="149" width="0.0689%" height="15" fill="rgb(209,109,2)" fg:x="157097797109" fg:w="475076755"/><text x="23.0203%" y="159.50"></text></g><g><title>btrfs_buffered_write (470,567,060 samples, 0.07%)</title><rect x="22.7709%" y="133" width="0.0682%" height="15" fill="rgb(252,216,26)" fg:x="157102306804" fg:w="470567060"/><text x="23.0209%" y="143.50"></text></g><g><title>ksys_write (496,387,346 samples, 0.07%)</title><rect x="22.7688%" y="181" width="0.0719%" height="15" fill="rgb(227,173,36)" fg:x="157087806073" fg:w="496387346"/><text x="23.0188%" y="191.50"></text></g><g><title>vfs_write (492,957,587 samples, 0.07%)</title><rect x="22.7693%" y="165" width="0.0715%" height="15" fill="rgb(209,90,7)" fg:x="157091235832" fg:w="492957587"/><text x="23.0193%" y="175.50"></text></g><g><title>__GI___libc_write (511,201,082 samples, 0.07%)</title><rect x="22.7673%" y="229" width="0.0741%" height="15" fill="rgb(250,194,11)" fg:x="157077546745" fg:w="511201082"/><text x="23.0173%" y="239.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (506,608,240 samples, 0.07%)</title><rect x="22.7680%" y="213" width="0.0734%" height="15" fill="rgb(220,72,50)" fg:x="157082139587" fg:w="506608240"/><text x="23.0180%" y="223.50"></text></g><g><title>do_syscall_64 (504,345,625 samples, 0.07%)</title><rect x="22.7683%" y="197" width="0.0731%" height="15" fill="rgb(222,106,48)" fg:x="157084402202" fg:w="504345625"/><text x="23.0183%" y="207.50"></text></g><g><title>serde_json::ser::format_escaped_str (1,524,248,081 samples, 0.22%)</title><rect x="22.6208%" y="341" width="0.2209%" height="15" fill="rgb(216,220,45)" fg:x="156066794574" fg:w="1524248081"/><text x="22.8708%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (518,047,386 samples, 0.08%)</title><rect x="22.7667%" y="325" width="0.0751%" height="15" fill="rgb(234,112,18)" fg:x="157072995269" fg:w="518047386"/><text x="23.0167%" y="335.50"></text></g><g><title>serde_json::ser::Formatter::write_string_fragment (518,047,386 samples, 0.08%)</title><rect x="22.7667%" y="309" width="0.0751%" height="15" fill="rgb(206,179,9)" fg:x="157072995269" fg:w="518047386"/><text x="23.0167%" y="319.50"></text></g><g><title>std::io::Write::write_all (518,047,386 samples, 0.08%)</title><rect x="22.7667%" y="293" width="0.0751%" height="15" fill="rgb(215,115,40)" fg:x="157072995269" fg:w="518047386"/><text x="23.0167%" y="303.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (513,495,910 samples, 0.07%)</title><rect x="22.7673%" y="277" width="0.0744%" height="15" fill="rgb(222,69,34)" fg:x="157077546745" fg:w="513495910"/><text x="23.0173%" y="287.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (513,495,910 samples, 0.07%)</title><rect x="22.7673%" y="261" width="0.0744%" height="15" fill="rgb(209,161,10)" fg:x="157077546745" fg:w="513495910"/><text x="23.0173%" y="271.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (513,495,910 samples, 0.07%)</title><rect x="22.7673%" y="245" width="0.0744%" height="15" fill="rgb(217,6,38)" fg:x="157077546745" fg:w="513495910"/><text x="23.0173%" y="255.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1,527,656,889 samples, 0.22%)</title><rect x="22.6208%" y="389" width="0.2214%" height="15" fill="rgb(229,229,48)" fg:x="156066794574" fg:w="1527656889"/><text x="22.8708%" y="399.50"></text></g><g><title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1,527,656,889 samples, 0.22%)</title><rect x="22.6208%" y="373" width="0.2214%" height="15" fill="rgb(225,21,28)" fg:x="156066794574" fg:w="1527656889"/><text x="22.8708%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1,527,656,889 samples, 0.22%)</title><rect x="22.6208%" y="357" width="0.2214%" height="15" fill="rgb(206,33,13)" fg:x="156066794574" fg:w="1527656889"/><text x="22.8708%" y="367.50"></text></g><g><title>btrfs_dirty_folio (102,833,341 samples, 0.01%)</title><rect x="22.8602%" y="197" width="0.0149%" height="15" fill="rgb(242,178,17)" fg:x="157718192214" fg:w="102833341"/><text x="23.1102%" y="207.50"></text></g><g><title>btrfs_do_write_iter (303,802,802 samples, 0.04%)</title><rect x="22.8450%" y="229" width="0.0440%" height="15" fill="rgb(220,162,5)" fg:x="157613774412" fg:w="303802802"/><text x="23.0950%" y="239.50"></text></g><g><title>btrfs_buffered_write (301,532,177 samples, 0.04%)</title><rect x="22.8454%" y="213" width="0.0437%" height="15" fill="rgb(210,33,43)" fg:x="157616045037" fg:w="301532177"/><text x="23.0954%" y="223.50"></text></g><g><title>ksys_write (314,028,853 samples, 0.05%)</title><rect x="22.8439%" y="261" width="0.0455%" height="15" fill="rgb(216,116,54)" fg:x="157605826600" fg:w="314028853"/><text x="23.0939%" y="271.50"></text></g><g><title>vfs_write (311,740,715 samples, 0.05%)</title><rect x="22.8442%" y="245" width="0.0452%" height="15" fill="rgb(249,92,24)" fg:x="157608114738" fg:w="311740715"/><text x="23.0942%" y="255.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (319,711,652 samples, 0.05%)</title><rect x="22.8437%" y="293" width="0.0463%" height="15" fill="rgb(231,189,14)" fg:x="157604691883" fg:w="319711652"/><text x="23.0937%" y="303.50"></text></g><g><title>do_syscall_64 (319,711,652 samples, 0.05%)</title><rect x="22.8437%" y="277" width="0.0463%" height="15" fill="rgb(230,8,41)" fg:x="157604691883" fg:w="319711652"/><text x="23.0937%" y="287.50"></text></g><g><title>__GI___libc_write (331,064,582 samples, 0.05%)</title><rect x="22.8424%" y="309" width="0.0480%" height="15" fill="rgb(249,7,27)" fg:x="157595595151" fg:w="331064582"/><text x="23.0924%" y="319.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (334,457,969 samples, 0.05%)</title><rect x="22.8422%" y="357" width="0.0485%" height="15" fill="rgb(232,86,5)" fg:x="157594451463" fg:w="334457969"/><text x="23.0922%" y="367.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (333,314,281 samples, 0.05%)</title><rect x="22.8424%" y="341" width="0.0483%" height="15" fill="rgb(224,175,18)" fg:x="157595595151" fg:w="333314281"/><text x="23.0924%" y="351.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (333,314,281 samples, 0.05%)</title><rect x="22.8424%" y="325" width="0.0483%" height="15" fill="rgb(220,129,12)" fg:x="157595595151" fg:w="333314281"/><text x="23.0924%" y="335.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1,863,272,001 samples, 0.27%)</title><rect x="22.6208%" y="405" width="0.2701%" height="15" fill="rgb(210,19,36)" fg:x="156066794574" fg:w="1863272001"/><text x="22.8708%" y="415.50"></text></g><g><title>serde_json::ser::Formatter::begin_object_key (335,615,112 samples, 0.05%)</title><rect x="22.8422%" y="389" width="0.0486%" height="15" fill="rgb(219,96,14)" fg:x="157594451463" fg:w="335615112"/><text x="23.0922%" y="399.50"></text></g><g><title>std::io::Write::write_all (335,615,112 samples, 0.05%)</title><rect x="22.8422%" y="373" width="0.0486%" height="15" fill="rgb(249,106,1)" fg:x="157594451463" fg:w="335615112"/><text x="23.0922%" y="383.50"></text></g><g><title>btrfs_do_write_iter (162,796,632 samples, 0.02%)</title><rect x="22.8922%" y="181" width="0.0236%" height="15" fill="rgb(249,155,20)" fg:x="157939196259" fg:w="162796632"/><text x="23.1422%" y="191.50"></text></g><g><title>btrfs_buffered_write (161,662,228 samples, 0.02%)</title><rect x="22.8924%" y="165" width="0.0234%" height="15" fill="rgb(244,168,9)" fg:x="157940330663" fg:w="161662228"/><text x="23.1424%" y="175.50"></text></g><g><title>ksys_write (170,797,750 samples, 0.02%)</title><rect x="22.8914%" y="213" width="0.0248%" height="15" fill="rgb(216,23,50)" fg:x="157933485887" fg:w="170797750"/><text x="23.1414%" y="223.50"></text></g><g><title>vfs_write (170,797,750 samples, 0.02%)</title><rect x="22.8914%" y="197" width="0.0248%" height="15" fill="rgb(224,219,20)" fg:x="157933485887" fg:w="170797750"/><text x="23.1414%" y="207.50"></text></g><g><title>__GI___libc_write (174,204,017 samples, 0.03%)</title><rect x="22.8910%" y="261" width="0.0252%" height="15" fill="rgb(222,156,15)" fg:x="157931205475" fg:w="174204017"/><text x="23.1410%" y="271.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (173,056,375 samples, 0.03%)</title><rect x="22.8912%" y="245" width="0.0251%" height="15" fill="rgb(231,97,17)" fg:x="157932353117" fg:w="173056375"/><text x="23.1412%" y="255.50"></text></g><g><title>do_syscall_64 (173,056,375 samples, 0.03%)</title><rect x="22.8912%" y="229" width="0.0251%" height="15" fill="rgb(218,70,48)" fg:x="157932353117" fg:w="173056375"/><text x="23.1412%" y="239.50"></text></g><g><title>serde_json::ser::Formatter::begin_string (175,323,537 samples, 0.03%)</title><rect x="22.8910%" y="341" width="0.0254%" height="15" fill="rgb(212,196,52)" fg:x="157931205475" fg:w="175323537"/><text x="23.1410%" y="351.50"></text></g><g><title>std::io::Write::write_all (175,323,537 samples, 0.03%)</title><rect x="22.8910%" y="325" width="0.0254%" height="15" fill="rgb(243,203,18)" fg:x="157931205475" fg:w="175323537"/><text x="23.1410%" y="335.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (175,323,537 samples, 0.03%)</title><rect x="22.8910%" y="309" width="0.0254%" height="15" fill="rgb(252,125,41)" fg:x="157931205475" fg:w="175323537"/><text x="23.1410%" y="319.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (175,323,537 samples, 0.03%)</title><rect x="22.8910%" y="293" width="0.0254%" height="15" fill="rgb(223,180,33)" fg:x="157931205475" fg:w="175323537"/><text x="23.1410%" y="303.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (175,323,537 samples, 0.03%)</title><rect x="22.8910%" y="277" width="0.0254%" height="15" fill="rgb(254,159,46)" fg:x="157931205475" fg:w="175323537"/><text x="23.1410%" y="287.50"></text></g><g><title>btrfs_do_write_iter (158,577,817 samples, 0.02%)</title><rect x="22.9178%" y="181" width="0.0230%" height="15" fill="rgb(254,38,10)" fg:x="158115557254" fg:w="158577817"/><text x="23.1678%" y="191.50"></text></g><g><title>btrfs_buffered_write (157,434,269 samples, 0.02%)</title><rect x="22.9179%" y="165" width="0.0228%" height="15" fill="rgb(208,217,32)" fg:x="158116700802" fg:w="157434269"/><text x="23.1679%" y="175.50"></text></g><g><title>serde_json::ser::Formatter::end_string (173,269,494 samples, 0.03%)</title><rect x="22.9165%" y="341" width="0.0251%" height="15" fill="rgb(221,120,13)" fg:x="158106529012" fg:w="173269494"/><text x="23.1665%" y="351.50"></text></g><g><title>std::io::Write::write_all (173,269,494 samples, 0.03%)</title><rect x="22.9165%" y="325" width="0.0251%" height="15" fill="rgb(246,54,52)" fg:x="158106529012" fg:w="173269494"/><text x="23.1665%" y="335.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (173,269,494 samples, 0.03%)</title><rect x="22.9165%" y="309" width="0.0251%" height="15" fill="rgb(242,34,25)" fg:x="158106529012" fg:w="173269494"/><text x="23.1665%" y="319.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (173,269,494 samples, 0.03%)</title><rect x="22.9165%" y="293" width="0.0251%" height="15" fill="rgb(247,209,9)" fg:x="158106529012" fg:w="173269494"/><text x="23.1665%" y="303.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (173,269,494 samples, 0.03%)</title><rect x="22.9165%" y="277" width="0.0251%" height="15" fill="rgb(228,71,26)" fg:x="158106529012" fg:w="173269494"/><text x="23.1665%" y="287.50"></text></g><g><title>__GI___libc_write (173,269,494 samples, 0.03%)</title><rect x="22.9165%" y="261" width="0.0251%" height="15" fill="rgb(222,145,49)" fg:x="158106529012" fg:w="173269494"/><text x="23.1665%" y="271.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (170,989,855 samples, 0.02%)</title><rect x="22.9168%" y="245" width="0.0248%" height="15" fill="rgb(218,121,17)" fg:x="158108808651" fg:w="170989855"/><text x="23.1668%" y="255.50"></text></g><g><title>do_syscall_64 (169,864,555 samples, 0.02%)</title><rect x="22.9170%" y="229" width="0.0246%" height="15" fill="rgb(244,50,7)" fg:x="158109933951" fg:w="169864555"/><text x="23.1670%" y="239.50"></text></g><g><title>ksys_write (167,627,667 samples, 0.02%)</title><rect x="22.9173%" y="213" width="0.0243%" height="15" fill="rgb(246,229,37)" fg:x="158112170839" fg:w="167627667"/><text x="23.1673%" y="223.50"></text></g><g><title>vfs_write (166,493,952 samples, 0.02%)</title><rect x="22.9174%" y="197" width="0.0241%" height="15" fill="rgb(225,18,5)" fg:x="158113304554" fg:w="166493952"/><text x="23.1674%" y="207.50"></text></g><g><title>btrfs_do_write_iter (135,811,912 samples, 0.02%)</title><rect x="22.9434%" y="165" width="0.0197%" height="15" fill="rgb(213,204,8)" fg:x="158292358181" fg:w="135811912"/><text x="23.1934%" y="175.50"></text></g><g><title>btrfs_buffered_write (133,567,888 samples, 0.02%)</title><rect x="22.9437%" y="149" width="0.0194%" height="15" fill="rgb(238,103,6)" fg:x="158294602205" fg:w="133567888"/><text x="23.1937%" y="159.50"></text></g><g><title>__GI___libc_write (150,626,358 samples, 0.02%)</title><rect x="22.9419%" y="245" width="0.0218%" height="15" fill="rgb(222,25,35)" fg:x="158282056019" fg:w="150626358"/><text x="23.1919%" y="255.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (148,314,704 samples, 0.02%)</title><rect x="22.9422%" y="229" width="0.0215%" height="15" fill="rgb(213,203,35)" fg:x="158284367673" fg:w="148314704"/><text x="23.1922%" y="239.50"></text></g><g><title>do_syscall_64 (148,314,704 samples, 0.02%)</title><rect x="22.9422%" y="213" width="0.0215%" height="15" fill="rgb(221,79,53)" fg:x="158284367673" fg:w="148314704"/><text x="23.1922%" y="223.50"></text></g><g><title>ksys_write (148,314,704 samples, 0.02%)</title><rect x="22.9422%" y="197" width="0.0215%" height="15" fill="rgb(243,200,35)" fg:x="158284367673" fg:w="148314704"/><text x="23.1922%" y="207.50"></text></g><g><title>vfs_write (146,041,159 samples, 0.02%)</title><rect x="22.9426%" y="181" width="0.0212%" height="15" fill="rgb(248,60,25)" fg:x="158286641218" fg:w="146041159"/><text x="23.1926%" y="191.50"></text></g><g><title>serde_json::ser::format_escaped_str (503,735,564 samples, 0.07%)</title><rect x="22.8909%" y="357" width="0.0730%" height="15" fill="rgb(227,53,46)" fg:x="157930066575" fg:w="503735564"/><text x="23.1409%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (154,003,633 samples, 0.02%)</title><rect x="22.9416%" y="341" width="0.0223%" height="15" fill="rgb(216,120,32)" fg:x="158279798506" fg:w="154003633"/><text x="23.1916%" y="351.50"></text></g><g><title>serde_json::ser::Formatter::write_string_fragment (151,746,120 samples, 0.02%)</title><rect x="22.9419%" y="325" width="0.0220%" height="15" fill="rgb(220,134,1)" fg:x="158282056019" fg:w="151746120"/><text x="23.1919%" y="335.50"></text></g><g><title>std::io::Write::write_all (151,746,120 samples, 0.02%)</title><rect x="22.9419%" y="309" width="0.0220%" height="15" fill="rgb(237,168,5)" fg:x="158282056019" fg:w="151746120"/><text x="23.1919%" y="319.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (151,746,120 samples, 0.02%)</title><rect x="22.9419%" y="293" width="0.0220%" height="15" fill="rgb(231,100,33)" fg:x="158282056019" fg:w="151746120"/><text x="23.1919%" y="303.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (151,746,120 samples, 0.02%)</title><rect x="22.9419%" y="277" width="0.0220%" height="15" fill="rgb(236,177,47)" fg:x="158282056019" fg:w="151746120"/><text x="23.1919%" y="287.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (151,746,120 samples, 0.02%)</title><rect x="22.9419%" y="261" width="0.0220%" height="15" fill="rgb(235,7,49)" fg:x="158282056019" fg:w="151746120"/><text x="23.1919%" y="271.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (507,133,056 samples, 0.07%)</title><rect x="22.8909%" y="389" width="0.0735%" height="15" fill="rgb(232,119,22)" fg:x="157930066575" fg:w="507133056"/><text x="23.1409%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (507,133,056 samples, 0.07%)</title><rect x="22.8909%" y="373" width="0.0735%" height="15" fill="rgb(254,73,53)" fg:x="157930066575" fg:w="507133056"/><text x="23.1409%" y="383.50"></text></g><g><title>btrfs_dirty_folio (94,136,233 samples, 0.01%)</title><rect x="22.9808%" y="165" width="0.0136%" height="15" fill="rgb(251,35,20)" fg:x="158550550585" fg:w="94136233"/><text x="23.2308%" y="175.50"></text></g><g><title>btrfs_do_write_iter (291,252,303 samples, 0.04%)</title><rect x="22.9672%" y="197" width="0.0422%" height="15" fill="rgb(241,119,20)" fg:x="158456594571" fg:w="291252303"/><text x="23.2172%" y="207.50"></text></g><g><title>btrfs_buffered_write (285,550,461 samples, 0.04%)</title><rect x="22.9680%" y="181" width="0.0414%" height="15" fill="rgb(207,102,14)" fg:x="158462296413" fg:w="285550461"/><text x="23.2180%" y="191.50"></text></g><g><title>ksys_write (301,511,016 samples, 0.04%)</title><rect x="22.9660%" y="229" width="0.0437%" height="15" fill="rgb(248,201,50)" fg:x="158448616930" fg:w="301511016"/><text x="23.2160%" y="239.50"></text></g><g><title>vfs_write (298,101,618 samples, 0.04%)</title><rect x="22.9665%" y="213" width="0.0432%" height="15" fill="rgb(222,185,44)" fg:x="158452026328" fg:w="298101618"/><text x="23.2165%" y="223.50"></text></g><g><title>do_syscall_64 (304,916,390 samples, 0.04%)</title><rect x="22.9659%" y="245" width="0.0442%" height="15" fill="rgb(218,107,18)" fg:x="158447466102" fg:w="304916390"/><text x="23.2159%" y="255.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (307,170,145 samples, 0.04%)</title><rect x="22.9657%" y="261" width="0.0445%" height="15" fill="rgb(237,177,39)" fg:x="158446335750" fg:w="307170145"/><text x="23.2157%" y="271.50"></text></g><g><title>__GI___libc_write (315,153,100 samples, 0.05%)</title><rect x="22.9647%" y="277" width="0.0457%" height="15" fill="rgb(246,69,6)" fg:x="158439478394" fg:w="315153100"/><text x="23.2147%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for usize&gt;::serialize (318,587,740 samples, 0.05%)</title><rect x="22.9644%" y="389" width="0.0462%" height="15" fill="rgb(234,208,37)" fg:x="158437199631" fg:w="318587740"/><text x="23.2144%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (318,587,740 samples, 0.05%)</title><rect x="22.9644%" y="373" width="0.0462%" height="15" fill="rgb(225,4,6)" fg:x="158437199631" fg:w="318587740"/><text x="23.2144%" y="383.50"></text></g><g><title>serde_json::ser::Formatter::write_u64 (318,587,740 samples, 0.05%)</title><rect x="22.9644%" y="357" width="0.0462%" height="15" fill="rgb(233,45,0)" fg:x="158437199631" fg:w="318587740"/><text x="23.2144%" y="367.50"></text></g><g><title>std::io::Write::write_all (318,587,740 samples, 0.05%)</title><rect x="22.9644%" y="341" width="0.0462%" height="15" fill="rgb(226,136,5)" fg:x="158437199631" fg:w="318587740"/><text x="23.2144%" y="351.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (317,463,321 samples, 0.05%)</title><rect x="22.9646%" y="325" width="0.0460%" height="15" fill="rgb(211,91,47)" fg:x="158438324050" fg:w="317463321"/><text x="23.2146%" y="335.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (316,308,977 samples, 0.05%)</title><rect x="22.9647%" y="309" width="0.0458%" height="15" fill="rgb(242,88,51)" fg:x="158439478394" fg:w="316308977"/><text x="23.2147%" y="319.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (316,308,977 samples, 0.05%)</title><rect x="22.9647%" y="293" width="0.0458%" height="15" fill="rgb(230,91,28)" fg:x="158439478394" fg:w="316308977"/><text x="23.2147%" y="303.50"></text></g><g><title>btrfs_delalloc_reserve_metadata (82,681,352 samples, 0.01%)</title><rect x="23.0289%" y="197" width="0.0120%" height="15" fill="rgb(254,186,29)" fg:x="158881996450" fg:w="82681352"/><text x="23.2789%" y="207.50"></text></g><g><title>btrfs_dirty_folio (137,417,986 samples, 0.02%)</title><rect x="23.0408%" y="197" width="0.0199%" height="15" fill="rgb(238,6,4)" fg:x="158964677802" fg:w="137417986"/><text x="23.2908%" y="207.50"></text></g><g><title>btrfs_do_write_iter (451,032,409 samples, 0.07%)</title><rect x="23.0158%" y="229" width="0.0654%" height="15" fill="rgb(221,151,16)" fg:x="158791771631" fg:w="451032409"/><text x="23.2658%" y="239.50"></text></g><g><title>btrfs_buffered_write (439,853,664 samples, 0.06%)</title><rect x="23.0174%" y="213" width="0.0638%" height="15" fill="rgb(251,143,52)" fg:x="158802950376" fg:w="439853664"/><text x="23.2674%" y="223.50"></text></g><g><title>ksys_write (477,874,245 samples, 0.07%)</title><rect x="23.0130%" y="261" width="0.0693%" height="15" fill="rgb(206,90,15)" fg:x="158772873745" fg:w="477874245"/><text x="23.2630%" y="271.50"></text></g><g><title>vfs_write (474,532,930 samples, 0.07%)</title><rect x="23.0135%" y="245" width="0.0688%" height="15" fill="rgb(218,35,8)" fg:x="158776215060" fg:w="474532930"/><text x="23.2635%" y="255.50"></text></g><g><title>do_syscall_64 (482,390,078 samples, 0.07%)</title><rect x="23.0126%" y="277" width="0.0699%" height="15" fill="rgb(239,215,6)" fg:x="158769484510" fg:w="482390078"/><text x="23.2626%" y="287.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (483,527,937 samples, 0.07%)</title><rect x="23.0126%" y="293" width="0.0701%" height="15" fill="rgb(245,116,39)" fg:x="158769484510" fg:w="483527937"/><text x="23.2626%" y="303.50"></text></g><g><title>__GI___libc_write (496,065,171 samples, 0.07%)</title><rect x="23.0114%" y="309" width="0.0719%" height="15" fill="rgb(242,65,28)" fg:x="158761487655" fg:w="496065171"/><text x="23.2614%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3,496,578,317 samples, 0.51%)</title><rect x="22.5771%" y="469" width="0.5068%" height="15" fill="rgb(252,132,53)" fg:x="155765469989" fg:w="3496578317"/><text x="22.8271%" y="479.50"></text></g><g><title>cargo_tarpaulin::source_analysis::_::&lt;impl serde::ser::Serialize for cargo_tarpaulin::source_analysis::Function&gt;::serialize (3,496,578,317 samples, 0.51%)</title><rect x="22.5771%" y="453" width="0.5068%" height="15" fill="rgb(224,159,50)" fg:x="155765469989" fg:w="3496578317"/><text x="22.8271%" y="463.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (3,197,506,084 samples, 0.46%)</title><rect x="22.6205%" y="437" width="0.4635%" height="15" fill="rgb(224,93,4)" fg:x="156064542222" fg:w="3197506084"/><text x="22.8705%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3,197,506,084 samples, 0.46%)</title><rect x="22.6205%" y="421" width="0.4635%" height="15" fill="rgb(208,81,34)" fg:x="156064542222" fg:w="3197506084"/><text x="22.8705%" y="431.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1,331,981,731 samples, 0.19%)</title><rect x="22.8909%" y="405" width="0.1931%" height="15" fill="rgb(233,92,54)" fg:x="157930066575" fg:w="1331981731"/><text x="23.1409%" y="415.50"></text></g><g><title>serde_json::ser::Formatter::begin_object_value (506,260,935 samples, 0.07%)</title><rect x="23.0106%" y="389" width="0.0734%" height="15" fill="rgb(237,21,14)" fg:x="158755787371" fg:w="506260935"/><text x="23.2606%" y="399.50"></text></g><g><title>std::io::Write::write_all (501,690,709 samples, 0.07%)</title><rect x="23.0112%" y="373" width="0.0727%" height="15" fill="rgb(249,128,51)" fg:x="158760357597" fg:w="501690709"/><text x="23.2612%" y="383.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (500,560,651 samples, 0.07%)</title><rect x="23.0114%" y="357" width="0.0726%" height="15" fill="rgb(223,129,24)" fg:x="158761487655" fg:w="500560651"/><text x="23.2614%" y="367.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (500,560,651 samples, 0.07%)</title><rect x="23.0114%" y="341" width="0.0726%" height="15" fill="rgb(231,168,25)" fg:x="158761487655" fg:w="500560651"/><text x="23.2614%" y="351.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (500,560,651 samples, 0.07%)</title><rect x="23.0114%" y="325" width="0.0726%" height="15" fill="rgb(224,39,20)" fg:x="158761487655" fg:w="500560651"/><text x="23.2614%" y="335.50"></text></g><g><title>btrfs_do_write_iter (160,825,698 samples, 0.02%)</title><rect x="23.0858%" y="309" width="0.0233%" height="15" fill="rgb(225,152,53)" fg:x="159274621857" fg:w="160825698"/><text x="23.3358%" y="319.50"></text></g><g><title>btrfs_buffered_write (158,527,700 samples, 0.02%)</title><rect x="23.0861%" y="293" width="0.0230%" height="15" fill="rgb(252,17,24)" fg:x="159276919855" fg:w="158527700"/><text x="23.3361%" y="303.50"></text></g><g><title>ksys_write (168,799,788 samples, 0.02%)</title><rect x="23.0849%" y="341" width="0.0245%" height="15" fill="rgb(250,114,30)" fg:x="159268928176" fg:w="168799788"/><text x="23.3349%" y="351.50"></text></g><g><title>vfs_write (166,531,758 samples, 0.02%)</title><rect x="23.0853%" y="325" width="0.0241%" height="15" fill="rgb(229,5,4)" fg:x="159271196206" fg:w="166531758"/><text x="23.3353%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (169,947,059 samples, 0.02%)</title><rect x="23.0849%" y="373" width="0.0246%" height="15" fill="rgb(225,176,49)" fg:x="159268928176" fg:w="169947059"/><text x="23.3349%" y="383.50"></text></g><g><title>do_syscall_64 (169,947,059 samples, 0.02%)</title><rect x="23.0849%" y="357" width="0.0246%" height="15" fill="rgb(224,221,49)" fg:x="159268928176" fg:w="169947059"/><text x="23.3349%" y="367.50"></text></g><g><title>__GI___libc_write (176,816,373 samples, 0.03%)</title><rect x="23.0841%" y="389" width="0.0256%" height="15" fill="rgb(253,169,27)" fg:x="159263204659" fg:w="176816373"/><text x="23.3341%" y="399.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (177,967,447 samples, 0.03%)</title><rect x="23.0841%" y="437" width="0.0258%" height="15" fill="rgb(211,206,16)" fg:x="159263204659" fg:w="177967447"/><text x="23.3341%" y="447.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (177,967,447 samples, 0.03%)</title><rect x="23.0841%" y="421" width="0.0258%" height="15" fill="rgb(244,87,35)" fg:x="159263204659" fg:w="177967447"/><text x="23.3341%" y="431.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (177,967,447 samples, 0.03%)</title><rect x="23.0841%" y="405" width="0.0258%" height="15" fill="rgb(246,28,10)" fg:x="159263204659" fg:w="177967447"/><text x="23.3341%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (3,676,861,822 samples, 0.53%)</title><rect x="22.5771%" y="549" width="0.5329%" height="15" fill="rgb(229,12,44)" fg:x="155765469989" fg:w="3676861822"/><text x="22.8271%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3,676,861,822 samples, 0.53%)</title><rect x="22.5771%" y="533" width="0.5329%" height="15" fill="rgb(210,145,37)" fg:x="155765469989" fg:w="3676861822"/><text x="22.8271%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (3,676,861,822 samples, 0.53%)</title><rect x="22.5771%" y="517" width="0.5329%" height="15" fill="rgb(227,112,52)" fg:x="155765469989" fg:w="3676861822"/><text x="22.8271%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (3,676,861,822 samples, 0.53%)</title><rect x="22.5771%" y="501" width="0.5329%" height="15" fill="rgb(238,155,34)" fg:x="155765469989" fg:w="3676861822"/><text x="22.8271%" y="511.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (3,676,861,822 samples, 0.53%)</title><rect x="22.5771%" y="485" width="0.5329%" height="15" fill="rgb(239,226,36)" fg:x="155765469989" fg:w="3676861822"/><text x="22.8271%" y="495.50"></text></g><g><title>serde_json::ser::Formatter::begin_array_value (180,283,505 samples, 0.03%)</title><rect x="23.0839%" y="469" width="0.0261%" height="15" fill="rgb(230,16,23)" fg:x="159262048306" fg:w="180283505"/><text x="23.3339%" y="479.50"></text></g><g><title>std::io::Write::write_all (180,283,505 samples, 0.03%)</title><rect x="23.0839%" y="453" width="0.0261%" height="15" fill="rgb(236,171,36)" fg:x="159262048306" fg:w="180283505"/><text x="23.3339%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3,725,772,213 samples, 0.54%)</title><rect x="22.5740%" y="597" width="0.5400%" height="15" fill="rgb(221,22,14)" fg:x="155743902299" fg:w="3725772213"/><text x="22.8240%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (3,725,772,213 samples, 0.54%)</title><rect x="22.5740%" y="581" width="0.5400%" height="15" fill="rgb(242,43,11)" fg:x="155743902299" fg:w="3725772213"/><text x="22.8240%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3,725,772,213 samples, 0.54%)</title><rect x="22.5740%" y="565" width="0.5400%" height="15" fill="rgb(232,69,23)" fg:x="155743902299" fg:w="3725772213"/><text x="22.8240%" y="575.50"></text></g><g><title>serde_json::ser::to_writer (47,996,658,888 samples, 6.96%)</title><rect x="16.1592%" y="821" width="6.9568%" height="15" fill="rgb(216,180,54)" fg:x="111486580005" fg:w="47996658888"/><text x="16.4092%" y="831.50">serde_jso..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (47,996,658,888 samples, 6.96%)</title><rect x="16.1592%" y="805" width="6.9568%" height="15" fill="rgb(216,5,24)" fg:x="111486580005" fg:w="47996658888"/><text x="16.4092%" y="815.50">serde::se..</text></g><g><title>cargo_tarpaulin::traces::_::&lt;impl serde::ser::Serialize for cargo_tarpaulin::traces::TraceMap&gt;::serialize (47,996,658,888 samples, 6.96%)</title><rect x="16.1592%" y="789" width="6.9568%" height="15" fill="rgb(225,89,9)" fg:x="111486580005" fg:w="47996658888"/><text x="16.4092%" y="799.50">cargo_tar..</text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (47,996,658,888 samples, 6.96%)</title><rect x="16.1592%" y="773" width="6.9568%" height="15" fill="rgb(243,75,33)" fg:x="111486580005" fg:w="47996658888"/><text x="16.4092%" y="783.50">&lt;serde_js..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (47,996,658,888 samples, 6.96%)</title><rect x="16.1592%" y="757" width="6.9568%" height="15" fill="rgb(247,141,45)" fg:x="111486580005" fg:w="47996658888"/><text x="16.4092%" y="767.50">serde::se..</text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (47,996,658,888 samples, 6.96%)</title><rect x="16.1592%" y="741" width="6.9568%" height="15" fill="rgb(232,177,36)" fg:x="111486580005" fg:w="47996658888"/><text x="16.4092%" y="751.50">&lt;serde_js..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (3,822,215,571 samples, 0.55%)</title><rect x="22.5620%" y="725" width="0.5540%" height="15" fill="rgb(219,125,36)" fg:x="155661023322" fg:w="3822215571"/><text x="22.8120%" y="735.50"></text></g><g><title>serde::ser::Serializer::collect_map (3,822,215,571 samples, 0.55%)</title><rect x="22.5620%" y="709" width="0.5540%" height="15" fill="rgb(227,94,9)" fg:x="155661023322" fg:w="3822215571"/><text x="22.8120%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (3,822,215,571 samples, 0.55%)</title><rect x="22.5620%" y="693" width="0.5540%" height="15" fill="rgb(240,34,52)" fg:x="155661023322" fg:w="3822215571"/><text x="22.8120%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3,822,215,571 samples, 0.55%)</title><rect x="22.5620%" y="677" width="0.5540%" height="15" fill="rgb(216,45,12)" fg:x="155661023322" fg:w="3822215571"/><text x="22.8120%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (3,822,215,571 samples, 0.55%)</title><rect x="22.5620%" y="661" width="0.5540%" height="15" fill="rgb(246,21,19)" fg:x="155661023322" fg:w="3822215571"/><text x="22.8120%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map::_{{closure}} (3,822,215,571 samples, 0.55%)</title><rect x="22.5620%" y="645" width="0.5540%" height="15" fill="rgb(213,98,42)" fg:x="155661023322" fg:w="3822215571"/><text x="22.8120%" y="655.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3,822,215,571 samples, 0.55%)</title><rect x="22.5620%" y="629" width="0.5540%" height="15" fill="rgb(250,136,47)" fg:x="155661023322" fg:w="3822215571"/><text x="22.8120%" y="639.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (3,739,336,594 samples, 0.54%)</title><rect x="22.5740%" y="613" width="0.5420%" height="15" fill="rgb(251,124,27)" fg:x="155743902299" fg:w="3739336594"/><text x="22.8240%" y="623.50"></text></g><g><title>cargo_tarpaulin::report_coverage_with_check (63,306,584,034 samples, 9.18%)</title><rect x="13.9414%" y="853" width="9.1759%" height="15" fill="rgb(229,180,14)" fg:x="96185347827" fg:w="63306584034"/><text x="14.1914%" y="863.50">cargo_tarpaul..</text></g><g><title>cargo_tarpaulin::report::report_coverage (63,290,483,835 samples, 9.17%)</title><rect x="13.9437%" y="837" width="9.1735%" height="15" fill="rgb(245,216,25)" fg:x="96201448026" fg:w="63290483835"/><text x="14.1937%" y="847.50">cargo_tarpaul..</text></g><g><title>cargo_tarpaulin::report_tracemap (63,313,736,236 samples, 9.18%)</title><rect x="13.9414%" y="869" width="9.1769%" height="15" fill="rgb(251,43,5)" fg:x="96185347827" fg:w="63313736236"/><text x="14.1914%" y="879.50">cargo_tarpaul..</text></g><g><title>btrfs_truncate_inode_items (74,838,290 samples, 0.01%)</title><rect x="23.1186%" y="629" width="0.0108%" height="15" fill="rgb(250,128,24)" fg:x="159501124517" fg:w="74838290"/><text x="23.3686%" y="639.50"></text></g><g><title>evict (171,585,837 samples, 0.02%)</title><rect x="23.1186%" y="661" width="0.0249%" height="15" fill="rgb(217,117,27)" fg:x="159501124517" fg:w="171585837"/><text x="23.3686%" y="671.50"></text></g><g><title>btrfs_evict_inode (171,585,837 samples, 0.02%)</title><rect x="23.1186%" y="645" width="0.0249%" height="15" fill="rgb(245,147,4)" fg:x="159501124517" fg:w="171585837"/><text x="23.3686%" y="655.50"></text></g><g><title>truncate_inode_pages_range (96,747,547 samples, 0.01%)</title><rect x="23.1294%" y="629" width="0.0140%" height="15" fill="rgb(242,201,35)" fg:x="159575962807" fg:w="96747547"/><text x="23.3794%" y="639.50"></text></g><g><title>truncate_folio_batch_exceptionals (76,137,720 samples, 0.01%)</title><rect x="23.1324%" y="613" width="0.0110%" height="15" fill="rgb(218,181,1)" fg:x="159596572634" fg:w="76137720"/><text x="23.3824%" y="623.50"></text></g><g><title>xas_store (70,364,080 samples, 0.01%)</title><rect x="23.1333%" y="597" width="0.0102%" height="15" fill="rgb(222,6,29)" fg:x="159602346274" fg:w="70364080"/><text x="23.3833%" y="607.50"></text></g><g><title>__x64_sys_unlinkat (174,759,698 samples, 0.03%)</title><rect x="23.1186%" y="693" width="0.0253%" height="15" fill="rgb(208,186,3)" fg:x="159501124517" fg:w="174759698"/><text x="23.3686%" y="703.50"></text></g><g><title>do_unlinkat (174,759,698 samples, 0.03%)</title><rect x="23.1186%" y="677" width="0.0253%" height="15" fill="rgb(216,36,26)" fg:x="159501124517" fg:w="174759698"/><text x="23.3686%" y="687.50"></text></g><g><title>cargo_tarpaulin::run (77,191,552,330 samples, 11.19%)</title><rect x="11.9557%" y="885" width="11.1884%" height="15" fill="rgb(248,201,23)" fg:x="82485469182" fg:w="77191552330"/><text x="12.2057%" y="895.50">cargo_tarpaulin:..</text></g><g><title>std::fs::remove_dir_all (177,937,449 samples, 0.03%)</title><rect x="23.1183%" y="869" width="0.0258%" height="15" fill="rgb(251,170,31)" fg:x="159499084063" fg:w="177937449"/><text x="23.3683%" y="879.50"></text></g><g><title>std::sys::pal::unix::fs::remove_dir_impl::remove_dir_all (177,937,449 samples, 0.03%)</title><rect x="23.1183%" y="853" width="0.0258%" height="15" fill="rgb(207,110,25)" fg:x="159499084063" fg:w="177937449"/><text x="23.3683%" y="863.50"></text></g><g><title>std::sys::pal::unix::fs::remove_dir_impl::remove_dir_all_modern (177,937,449 samples, 0.03%)</title><rect x="23.1183%" y="837" width="0.0258%" height="15" fill="rgb(250,54,15)" fg:x="159499084063" fg:w="177937449"/><text x="23.3683%" y="847.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_path_with_cstr (177,937,449 samples, 0.03%)</title><rect x="23.1183%" y="821" width="0.0258%" height="15" fill="rgb(227,68,33)" fg:x="159499084063" fg:w="177937449"/><text x="23.3683%" y="831.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_with_cstr (177,937,449 samples, 0.03%)</title><rect x="23.1183%" y="805" width="0.0258%" height="15" fill="rgb(238,34,41)" fg:x="159499084063" fg:w="177937449"/><text x="23.3683%" y="815.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_with_cstr_stack (177,937,449 samples, 0.03%)</title><rect x="23.1183%" y="789" width="0.0258%" height="15" fill="rgb(220,11,15)" fg:x="159499084063" fg:w="177937449"/><text x="23.3683%" y="799.50"></text></g><g><title>std::sys::pal::unix::fs::remove_dir_impl::remove_dir_all_modern::_{{closure}} (177,937,449 samples, 0.03%)</title><rect x="23.1183%" y="773" width="0.0258%" height="15" fill="rgb(246,111,35)" fg:x="159499084063" fg:w="177937449"/><text x="23.3683%" y="783.50"></text></g><g><title>std::sys::pal::unix::fs::remove_dir_impl::remove_dir_all_recursive (177,937,449 samples, 0.03%)</title><rect x="23.1183%" y="757" width="0.0258%" height="15" fill="rgb(209,88,53)" fg:x="159499084063" fg:w="177937449"/><text x="23.3683%" y="767.50"></text></g><g><title>unlinkat (175,896,995 samples, 0.03%)</title><rect x="23.1186%" y="741" width="0.0255%" height="15" fill="rgb(231,185,47)" fg:x="159501124517" fg:w="175896995"/><text x="23.3686%" y="751.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (175,896,995 samples, 0.03%)</title><rect x="23.1186%" y="725" width="0.0255%" height="15" fill="rgb(233,154,1)" fg:x="159501124517" fg:w="175896995"/><text x="23.3686%" y="735.50"></text></g><g><title>do_syscall_64 (175,896,995 samples, 0.03%)</title><rect x="23.1186%" y="709" width="0.0255%" height="15" fill="rgb(225,15,46)" fg:x="159501124517" fg:w="175896995"/><text x="23.3686%" y="719.50"></text></g><g><title>std::panic::catch_unwind (77,197,673,213 samples, 11.19%)</title><rect x="11.9557%" y="1013" width="11.1893%" height="15" fill="rgb(211,135,41)" fg:x="82485469182" fg:w="77197673213"/><text x="12.2057%" y="1023.50">std::panic::catc..</text></g><g><title>std::panicking::try (77,197,673,213 samples, 11.19%)</title><rect x="11.9557%" y="997" width="11.1893%" height="15" fill="rgb(208,54,0)" fg:x="82485469182" fg:w="77197673213"/><text x="12.2057%" y="1007.50">std::panicking::..</text></g><g><title>std::panicking::try::do_call (77,197,673,213 samples, 11.19%)</title><rect x="11.9557%" y="981" width="11.1893%" height="15" fill="rgb(244,136,14)" fg:x="82485469182" fg:w="77197673213"/><text x="12.2057%" y="991.50">std::panicking::..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (77,197,673,213 samples, 11.19%)</title><rect x="11.9557%" y="965" width="11.1893%" height="15" fill="rgb(241,56,14)" fg:x="82485469182" fg:w="77197673213"/><text x="12.2057%" y="975.50">core::ops::funct..</text></g><g><title>_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h05240483b460bc9eE.llvm.17468850352284423155 (77,197,673,213 samples, 11.19%)</title><rect x="11.9557%" y="949" width="11.1893%" height="15" fill="rgb(205,80,24)" fg:x="82485469182" fg:w="77197673213"/><text x="12.2057%" y="959.50">_ZN3std2rt10lang..</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (77,197,673,213 samples, 11.19%)</title><rect x="11.9557%" y="933" width="11.1893%" height="15" fill="rgb(220,57,4)" fg:x="82485469182" fg:w="77197673213"/><text x="12.2057%" y="943.50">std::sys::backtr..</text></g><g><title>core::ops::function::FnOnce::call_once (77,197,673,213 samples, 11.19%)</title><rect x="11.9557%" y="917" width="11.1893%" height="15" fill="rgb(226,193,50)" fg:x="82485469182" fg:w="77197673213"/><text x="12.2057%" y="927.50">core::ops::funct..</text></g><g><title>cargo_tarpaulin::main (77,197,673,213 samples, 11.19%)</title><rect x="11.9557%" y="901" width="11.1893%" height="15" fill="rgb(231,168,22)" fg:x="82485469182" fg:w="77197673213"/><text x="12.2057%" y="911.50">cargo_tarpaulin:..</text></g><g><title>__libc_start_main@@GLIBC_2.34 (77,199,478,744 samples, 11.19%)</title><rect x="11.9556%" y="1141" width="11.1895%" height="15" fill="rgb(254,215,14)" fg:x="82484598539" fg:w="77199478744"/><text x="12.2056%" y="1151.50">__libc_start_mai..</text></g><g><title>__libc_start_call_main (77,199,478,744 samples, 11.19%)</title><rect x="11.9556%" y="1125" width="11.1895%" height="15" fill="rgb(211,115,16)" fg:x="82484598539" fg:w="77199478744"/><text x="12.2056%" y="1135.50">__libc_start_cal..</text></g><g><title>main (77,198,608,101 samples, 11.19%)</title><rect x="11.9557%" y="1109" width="11.1894%" height="15" fill="rgb(236,210,16)" fg:x="82485469182" fg:w="77198608101"/><text x="12.2057%" y="1119.50">main</text></g><g><title>std::rt::lang_start_internal (77,198,608,101 samples, 11.19%)</title><rect x="11.9557%" y="1093" width="11.1894%" height="15" fill="rgb(221,94,12)" fg:x="82485469182" fg:w="77198608101"/><text x="12.2057%" y="1103.50">std::rt::lang_st..</text></g><g><title>std::panic::catch_unwind (77,198,608,101 samples, 11.19%)</title><rect x="11.9557%" y="1077" width="11.1894%" height="15" fill="rgb(235,218,49)" fg:x="82485469182" fg:w="77198608101"/><text x="12.2057%" y="1087.50">std::panic::catc..</text></g><g><title>std::panicking::try (77,198,608,101 samples, 11.19%)</title><rect x="11.9557%" y="1061" width="11.1894%" height="15" fill="rgb(217,114,14)" fg:x="82485469182" fg:w="77198608101"/><text x="12.2057%" y="1071.50">std::panicking::..</text></g><g><title>std::panicking::try::do_call (77,198,608,101 samples, 11.19%)</title><rect x="11.9557%" y="1045" width="11.1894%" height="15" fill="rgb(216,145,22)" fg:x="82485469182" fg:w="77198608101"/><text x="12.2057%" y="1055.50">std::panicking::..</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (77,198,608,101 samples, 11.19%)</title><rect x="11.9557%" y="1029" width="11.1894%" height="15" fill="rgb(217,112,39)" fg:x="82485469182" fg:w="77198608101"/><text x="12.2057%" y="1039.50">std::rt::lang_st..</text></g><g><title>_start (77,206,399,086 samples, 11.19%)</title><rect x="11.9556%" y="1157" width="11.1905%" height="15" fill="rgb(225,85,32)" fg:x="82484598539" fg:w="77206399086"/><text x="12.2056%" y="1167.50">_start</text></g><g><title>&lt;std::path::PathBuf as core::cmp::Ord&gt;::cmp (799,231,904 samples, 0.12%)</title><rect x="23.1963%" y="1093" width="0.1158%" height="15" fill="rgb(245,209,47)" fg:x="160037369495" fg:w="799231904"/><text x="23.4463%" y="1103.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,034,002,086 samples, 0.15%)</title><rect x="23.1682%" y="1141" width="0.1499%" height="15" fill="rgb(218,220,15)" fg:x="159843384532" fg:w="1034002086"/><text x="23.4182%" y="1151.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,013,832,318 samples, 0.15%)</title><rect x="23.1711%" y="1125" width="0.1469%" height="15" fill="rgb(222,202,31)" fg:x="159863554300" fg:w="1013832318"/><text x="23.4211%" y="1135.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,013,832,318 samples, 0.15%)</title><rect x="23.1711%" y="1109" width="0.1469%" height="15" fill="rgb(243,203,4)" fg:x="159863554300" fg:w="1013832318"/><text x="23.4211%" y="1119.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (1,165,825,493 samples, 0.17%)</title><rect x="23.1516%" y="1157" width="0.1690%" height="15" fill="rgb(237,92,17)" fg:x="159729087446" fg:w="1165825493"/><text x="23.4016%" y="1167.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (69,473,418 samples, 0.01%)</title><rect x="23.3316%" y="1157" width="0.0101%" height="15" fill="rgb(231,119,7)" fg:x="160970458736" fg:w="69473418"/><text x="23.5816%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (78,799,068 samples, 0.01%)</title><rect x="23.3903%" y="1109" width="0.0114%" height="15" fill="rgb(237,82,41)" fg:x="161375817356" fg:w="78799068"/><text x="23.6403%" y="1119.50"></text></g><g><title>&lt;llvm_profparser::coverage::SourceLocation as core::cmp::Ord&gt;::cmp (268,797,908 samples, 0.04%)</title><rect x="23.4017%" y="1109" width="0.0390%" height="15" fill="rgb(226,81,48)" fg:x="161454616424" fg:w="268797908"/><text x="23.6517%" y="1119.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (228,681,215 samples, 0.03%)</title><rect x="23.4076%" y="1093" width="0.0331%" height="15" fill="rgb(234,70,51)" fg:x="161494733117" fg:w="228681215"/><text x="23.6576%" y="1103.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (680,255,691 samples, 0.10%)</title><rect x="23.3432%" y="1157" width="0.0986%" height="15" fill="rgb(251,86,4)" fg:x="161050802860" fg:w="680255691"/><text x="23.5932%" y="1167.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (559,349,686 samples, 0.08%)</title><rect x="23.3607%" y="1141" width="0.0811%" height="15" fill="rgb(244,144,28)" fg:x="161171708865" fg:w="559349686"/><text x="23.6107%" y="1151.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (559,349,686 samples, 0.08%)</title><rect x="23.3607%" y="1125" width="0.0811%" height="15" fill="rgb(232,161,39)" fg:x="161171708865" fg:w="559349686"/><text x="23.6107%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (425,619,342 samples, 0.06%)</title><rect x="23.4421%" y="1157" width="0.0617%" height="15" fill="rgb(247,34,51)" fg:x="161732897228" fg:w="425619342"/><text x="23.6921%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (193,803,383 samples, 0.03%)</title><rect x="23.4757%" y="1141" width="0.0281%" height="15" fill="rgb(225,132,2)" fg:x="161964713187" fg:w="193803383"/><text x="23.7257%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (190,583,890 samples, 0.03%)</title><rect x="23.4761%" y="1125" width="0.0276%" height="15" fill="rgb(209,159,44)" fg:x="161967932680" fg:w="190583890"/><text x="23.7261%" y="1135.50"></text></g><g><title>alloc_perturb (89,700,091 samples, 0.01%)</title><rect x="23.5200%" y="1157" width="0.0130%" height="15" fill="rgb(251,214,1)" fg:x="162270403991" fg:w="89700091"/><text x="23.7700%" y="1167.50"></text></g><g><title>exc_page_fault (96,556,811 samples, 0.01%)</title><rect x="23.5620%" y="1141" width="0.0140%" height="15" fill="rgb(247,84,47)" fg:x="162560322392" fg:w="96556811"/><text x="23.8120%" y="1151.50"></text></g><g><title>asm_exc_page_fault (209,505,176 samples, 0.03%)</title><rect x="23.5482%" y="1157" width="0.0304%" height="15" fill="rgb(240,111,43)" fg:x="162464948225" fg:w="209505176"/><text x="23.7982%" y="1167.50"></text></g><g><title>cargo_tarpaulin::source_analysis::items::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::process_items (115,657,538 samples, 0.02%)</title><rect x="23.5908%" y="1109" width="0.0168%" height="15" fill="rgb(215,214,35)" fg:x="162758719454" fg:w="115657538"/><text x="23.8408%" y="1119.50"></text></g><g><title>cargo_tarpaulin::launch_tarpaulin (138,864,190 samples, 0.02%)</title><rect x="23.5902%" y="1157" width="0.0201%" height="15" fill="rgb(248,207,23)" fg:x="162754506993" fg:w="138864190"/><text x="23.8402%" y="1167.50"></text></g><g><title>cargo_tarpaulin::source_analysis::SourceAnalysis::get_analysis (134,651,729 samples, 0.02%)</title><rect x="23.5908%" y="1141" width="0.0195%" height="15" fill="rgb(214,186,4)" fg:x="162758719454" fg:w="134651729"/><text x="23.8408%" y="1151.50"></text></g><g><title>cargo_tarpaulin::source_analysis::SourceAnalysis::analyse_package (134,651,729 samples, 0.02%)</title><rect x="23.5908%" y="1125" width="0.0195%" height="15" fill="rgb(220,133,22)" fg:x="162758719454" fg:w="134651729"/><text x="23.8408%" y="1135.50"></text></g><g><title>do_dentry_open (102,047,547 samples, 0.01%)</title><rect x="23.6374%" y="581" width="0.0148%" height="15" fill="rgb(239,134,19)" fg:x="163080508935" fg:w="102047547"/><text x="23.8874%" y="591.50"></text></g><g><title>do_open (213,003,400 samples, 0.03%)</title><rect x="23.6221%" y="613" width="0.0309%" height="15" fill="rgb(250,140,9)" fg:x="162975170044" fg:w="213003400"/><text x="23.8721%" y="623.50"></text></g><g><title>vfs_open (115,487,304 samples, 0.02%)</title><rect x="23.6363%" y="597" width="0.0167%" height="15" fill="rgb(225,59,14)" fg:x="163072686140" fg:w="115487304"/><text x="23.8863%" y="607.50"></text></g><g><title>link_path_walk.part.0.constprop.0 (99,467,445 samples, 0.01%)</title><rect x="23.6530%" y="613" width="0.0144%" height="15" fill="rgb(214,152,51)" fg:x="163188173444" fg:w="99467445"/><text x="23.9030%" y="623.50"></text></g><g><title>do_filp_open (356,844,944 samples, 0.05%)</title><rect x="23.6191%" y="645" width="0.0517%" height="15" fill="rgb(251,227,43)" fg:x="162954054252" fg:w="356844944"/><text x="23.8691%" y="655.50"></text></g><g><title>path_openat (355,708,311 samples, 0.05%)</title><rect x="23.6192%" y="629" width="0.0516%" height="15" fill="rgb(241,96,17)" fg:x="162955190885" fg:w="355708311"/><text x="23.8692%" y="639.50"></text></g><g><title>__x64_sys_openat (375,729,355 samples, 0.05%)</title><rect x="23.6186%" y="677" width="0.0545%" height="15" fill="rgb(234,198,43)" fg:x="162950707573" fg:w="375729355"/><text x="23.8686%" y="687.50"></text></g><g><title>do_sys_openat2 (375,729,355 samples, 0.05%)</title><rect x="23.6186%" y="661" width="0.0545%" height="15" fill="rgb(220,108,29)" fg:x="162950707573" fg:w="375729355"/><text x="23.8686%" y="671.50"></text></g><g><title>__opendir (384,601,604 samples, 0.06%)</title><rect x="23.6178%" y="741" width="0.0557%" height="15" fill="rgb(226,163,33)" fg:x="162945114019" fg:w="384601604"/><text x="23.8678%" y="751.50"></text></g><g><title>__open64_nocancel (384,601,604 samples, 0.06%)</title><rect x="23.6178%" y="725" width="0.0557%" height="15" fill="rgb(205,194,45)" fg:x="162945114019" fg:w="384601604"/><text x="23.8678%" y="735.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (379,008,050 samples, 0.05%)</title><rect x="23.6186%" y="709" width="0.0549%" height="15" fill="rgb(206,143,44)" fg:x="162950707573" fg:w="379008050"/><text x="23.8686%" y="719.50"></text></g><g><title>do_syscall_64 (379,008,050 samples, 0.05%)</title><rect x="23.6186%" y="693" width="0.0549%" height="15" fill="rgb(236,136,36)" fg:x="162950707573" fg:w="379008050"/><text x="23.8686%" y="703.50"></text></g><g><title>std::sys::pal::unix::fs::readdir::_{{closure}} (448,007,888 samples, 0.06%)</title><rect x="23.6178%" y="757" width="0.0649%" height="15" fill="rgb(249,172,42)" fg:x="162945114019" fg:w="448007888"/><text x="23.8678%" y="767.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_path_with_cstr (450,208,388 samples, 0.07%)</title><rect x="23.6176%" y="805" width="0.0653%" height="15" fill="rgb(216,139,23)" fg:x="162943977428" fg:w="450208388"/><text x="23.8676%" y="815.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_with_cstr (450,208,388 samples, 0.07%)</title><rect x="23.6176%" y="789" width="0.0653%" height="15" fill="rgb(207,166,20)" fg:x="162943977428" fg:w="450208388"/><text x="23.8676%" y="799.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_with_cstr_stack (450,208,388 samples, 0.07%)</title><rect x="23.6176%" y="773" width="0.0653%" height="15" fill="rgb(210,209,22)" fg:x="162943977428" fg:w="450208388"/><text x="23.8676%" y="783.50"></text></g><g><title>std::sys::pal::unix::fs::readdir (451,321,188 samples, 0.07%)</title><rect x="23.6176%" y="821" width="0.0654%" height="15" fill="rgb(232,118,20)" fg:x="162943977428" fg:w="451321188"/><text x="23.8676%" y="831.50"></text></g><g><title>walkdir::IntoIter::handle_entry (459,051,407 samples, 0.07%)</title><rect x="23.6167%" y="869" width="0.0665%" height="15" fill="rgb(238,113,42)" fg:x="162937376768" fg:w="459051407"/><text x="23.8667%" y="879.50"></text></g><g><title>walkdir::IntoIter::push (459,051,407 samples, 0.07%)</title><rect x="23.6167%" y="853" width="0.0665%" height="15" fill="rgb(231,42,5)" fg:x="162937376768" fg:w="459051407"/><text x="23.8667%" y="863.50"></text></g><g><title>std::fs::read_dir (459,051,407 samples, 0.07%)</title><rect x="23.6167%" y="837" width="0.0665%" height="15" fill="rgb(243,166,24)" fg:x="162937376768" fg:w="459051407"/><text x="23.8667%" y="847.50"></text></g><g><title>&lt;walkdir::IntoIter as core::iter::traits::iterator::Iterator&gt;::next (492,282,790 samples, 0.07%)</title><rect x="23.6125%" y="885" width="0.0714%" height="15" fill="rgb(237,226,12)" fg:x="162908661310" fg:w="492282790"/><text x="23.8625%" y="895.50"></text></g><g><title>cargo_tarpaulin::path_utils::is_cargo_home (111,416,728 samples, 0.02%)</title><rect x="23.6840%" y="853" width="0.0161%" height="15" fill="rgb(229,133,24)" fg:x="163402083310" fg:w="111416728"/><text x="23.9340%" y="863.50"></text></g><g><title>std::path::Path::starts_with (76,202,636 samples, 0.01%)</title><rect x="23.6891%" y="837" width="0.0110%" height="15" fill="rgb(238,33,43)" fg:x="163437297402" fg:w="76202636"/><text x="23.9391%" y="847.50"></text></g><g><title>std::path::Path::_starts_with (75,097,038 samples, 0.01%)</title><rect x="23.6893%" y="821" width="0.0109%" height="15" fill="rgb(227,59,38)" fg:x="163438403000" fg:w="75097038"/><text x="23.9393%" y="831.50"></text></g><g><title>std::path::iter_after (75,097,038 samples, 0.01%)</title><rect x="23.6893%" y="805" width="0.0109%" height="15" fill="rgb(230,97,0)" fg:x="163438403000" fg:w="75097038"/><text x="23.9393%" y="815.50"></text></g><g><title>&lt;walkdir::FilterEntry&lt;walkdir::IntoIter,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (636,875,062 samples, 0.09%)</title><rect x="23.6125%" y="901" width="0.0923%" height="15" fill="rgb(250,173,50)" fg:x="162908661310" fg:w="636875062"/><text x="23.8625%" y="911.50"></text></g><g><title>cargo_tarpaulin::path_utils::get_source_walker::_{{closure}} (144,592,272 samples, 0.02%)</title><rect x="23.6838%" y="885" width="0.0210%" height="15" fill="rgb(240,15,50)" fg:x="163400944100" fg:w="144592272"/><text x="23.9338%" y="895.50"></text></g><g><title>cargo_tarpaulin::path_utils::is_coverable_file_path (144,592,272 samples, 0.02%)</title><rect x="23.6838%" y="869" width="0.0210%" height="15" fill="rgb(221,93,22)" fg:x="163400944100" fg:w="144592272"/><text x="23.9338%" y="879.50"></text></g><g><title>cargo_tarpaulin::path_utils::get_source_walker::_{{closure}} (76,486,897 samples, 0.01%)</title><rect x="23.7048%" y="869" width="0.0111%" height="15" fill="rgb(245,180,53)" fg:x="163545536372" fg:w="76486897"/><text x="23.9548%" y="879.50"></text></g><g><title>cargo_tarpaulin::config::Config::exclude_path (76,486,897 samples, 0.01%)</title><rect x="23.7048%" y="853" width="0.0111%" height="15" fill="rgb(231,88,51)" fg:x="163545536372" fg:w="76486897"/><text x="23.9548%" y="863.50"></text></g><g><title>cargo_tarpaulin::config::Config::strip_base_dir (76,486,897 samples, 0.01%)</title><rect x="23.7048%" y="837" width="0.0111%" height="15" fill="rgb(240,58,21)" fg:x="163545536372" fg:w="76486897"/><text x="23.9548%" y="847.50"></text></g><g><title>cargo_tarpaulin::config::path_relative_from (76,486,897 samples, 0.01%)</title><rect x="23.7048%" y="821" width="0.0111%" height="15" fill="rgb(237,21,10)" fg:x="163545536372" fg:w="76486897"/><text x="23.9548%" y="831.50"></text></g><g><title>cp_statx (138,719,439 samples, 0.02%)</title><rect x="23.7279%" y="565" width="0.0201%" height="15" fill="rgb(218,43,11)" fg:x="163704544117" fg:w="138719439"/><text x="23.9779%" y="575.50"></text></g><g><title>btrfs_getattr (217,052,569 samples, 0.03%)</title><rect x="23.7493%" y="549" width="0.0315%" height="15" fill="rgb(218,221,29)" fg:x="163852200792" fg:w="217052569"/><text x="23.9993%" y="559.50"></text></g><g><title>inode_permission (86,443,405 samples, 0.01%)</title><rect x="23.8047%" y="501" width="0.0125%" height="15" fill="rgb(214,118,42)" fg:x="164234965566" fg:w="86443405"/><text x="24.0547%" y="511.50"></text></g><g><title>avc_has_perm_noaudit (141,444,939 samples, 0.02%)</title><rect x="23.8512%" y="469" width="0.0205%" height="15" fill="rgb(251,200,26)" fg:x="164555621895" fg:w="141444939"/><text x="24.1012%" y="479.50"></text></g><g><title>selinux_inode_permission (321,079,937 samples, 0.05%)</title><rect x="23.8253%" y="485" width="0.0465%" height="15" fill="rgb(237,101,39)" fg:x="164377122216" fg:w="321079937"/><text x="24.0753%" y="495.50"></text></g><g><title>security_inode_permission (377,905,241 samples, 0.05%)</title><rect x="23.8173%" y="501" width="0.0548%" height="15" fill="rgb(251,117,11)" fg:x="164321408971" fg:w="377905241"/><text x="24.0673%" y="511.50"></text></g><g><title>link_path_walk.part.0.constprop.0 (751,793,480 samples, 0.11%)</title><rect x="23.7919%" y="517" width="0.1090%" height="15" fill="rgb(216,223,23)" fg:x="164146734798" fg:w="751793480"/><text x="24.0419%" y="527.50"></text></g><g><title>walk_component (138,037,266 samples, 0.02%)</title><rect x="23.8809%" y="501" width="0.0200%" height="15" fill="rgb(251,54,12)" fg:x="164760491012" fg:w="138037266"/><text x="24.1309%" y="511.50"></text></g><g><title>lookup_fast (103,381,331 samples, 0.01%)</title><rect x="23.8859%" y="485" width="0.0150%" height="15" fill="rgb(254,176,54)" fg:x="164795146947" fg:w="103381331"/><text x="24.1359%" y="495.50"></text></g><g><title>__d_lookup_rcu (90,280,182 samples, 0.01%)</title><rect x="23.8878%" y="469" width="0.0131%" height="15" fill="rgb(210,32,8)" fg:x="164808248096" fg:w="90280182"/><text x="24.1378%" y="479.50"></text></g><g><title>path_lookupat (903,209,983 samples, 0.13%)</title><rect x="23.7838%" y="533" width="0.1309%" height="15" fill="rgb(235,52,38)" fg:x="164090498532" fg:w="903209983"/><text x="24.0338%" y="543.50"></text></g><g><title>filename_lookup (925,579,195 samples, 0.13%)</title><rect x="23.7807%" y="549" width="0.1342%" height="15" fill="rgb(231,4,44)" fg:x="164069253361" fg:w="925579195"/><text x="24.0307%" y="559.50"></text></g><g><title>security_inode_getattr (217,315,081 samples, 0.03%)</title><rect x="23.9260%" y="549" width="0.0315%" height="15" fill="rgb(249,2,32)" fg:x="165071634384" fg:w="217315081"/><text x="24.1760%" y="559.50"></text></g><g><title>do_statx (1,610,092,723 samples, 0.23%)</title><rect x="23.7256%" y="581" width="0.2334%" height="15" fill="rgb(224,65,26)" fg:x="163688954408" fg:w="1610092723"/><text x="23.9756%" y="591.50"></text></g><g><title>vfs_statx (1,455,783,575 samples, 0.21%)</title><rect x="23.7480%" y="565" width="0.2110%" height="15" fill="rgb(250,73,40)" fg:x="163843263556" fg:w="1455783575"/><text x="23.9980%" y="575.50"></text></g><g><title>getname_flags.part.0 (79,997,901 samples, 0.01%)</title><rect x="23.9591%" y="581" width="0.0116%" height="15" fill="rgb(253,177,16)" fg:x="165300156044" fg:w="79997901"/><text x="24.2091%" y="591.50"></text></g><g><title>__x64_sys_statx (1,704,511,002 samples, 0.25%)</title><rect x="23.7248%" y="597" width="0.2471%" height="15" fill="rgb(217,32,34)" fg:x="163683417880" fg:w="1704511002"/><text x="23.9748%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,726,984,067 samples, 0.25%)</title><rect x="23.7235%" y="629" width="0.2503%" height="15" fill="rgb(212,7,10)" fg:x="163674419129" fg:w="1726984067"/><text x="23.9735%" y="639.50"></text></g><g><title>do_syscall_64 (1,725,868,909 samples, 0.25%)</title><rect x="23.7236%" y="613" width="0.2502%" height="15" fill="rgb(245,89,8)" fg:x="163675534287" fg:w="1725868909"/><text x="23.9736%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,496,081,958 samples, 0.36%)</title><rect x="23.6125%" y="997" width="0.3618%" height="15" fill="rgb(237,16,53)" fg:x="162908661310" fg:w="2496081958"/><text x="23.8625%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2,496,081,958 samples, 0.36%)</title><rect x="23.6125%" y="981" width="0.3618%" height="15" fill="rgb(250,204,30)" fg:x="162908661310" fg:w="2496081958"/><text x="23.8625%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,496,081,958 samples, 0.36%)</title><rect x="23.6125%" y="965" width="0.3618%" height="15" fill="rgb(208,77,27)" fg:x="162908661310" fg:w="2496081958"/><text x="23.8625%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,496,081,958 samples, 0.36%)</title><rect x="23.6125%" y="949" width="0.3618%" height="15" fill="rgb(250,204,28)" fg:x="162908661310" fg:w="2496081958"/><text x="23.8625%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,496,081,958 samples, 0.36%)</title><rect x="23.6125%" y="933" width="0.3618%" height="15" fill="rgb(244,63,21)" fg:x="162908661310" fg:w="2496081958"/><text x="23.8625%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,496,081,958 samples, 0.36%)</title><rect x="23.6125%" y="917" width="0.3618%" height="15" fill="rgb(236,85,44)" fg:x="162908661310" fg:w="2496081958"/><text x="23.8625%" y="927.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_try_fold::_{{closure}} (1,859,206,896 samples, 0.27%)</title><rect x="23.7048%" y="901" width="0.2695%" height="15" fill="rgb(215,98,4)" fg:x="163545536372" fg:w="1859206896"/><text x="23.9548%" y="911.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (1,859,206,896 samples, 0.27%)</title><rect x="23.7048%" y="885" width="0.2695%" height="15" fill="rgb(235,38,11)" fg:x="163545536372" fg:w="1859206896"/><text x="23.9548%" y="895.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (1,782,719,999 samples, 0.26%)</title><rect x="23.7159%" y="869" width="0.2584%" height="15" fill="rgb(254,186,25)" fg:x="163622023269" fg:w="1782719999"/><text x="23.9659%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (1,762,473,836 samples, 0.26%)</title><rect x="23.7188%" y="853" width="0.2555%" height="15" fill="rgb(225,55,31)" fg:x="163642269432" fg:w="1762473836"/><text x="23.9688%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,762,473,836 samples, 0.26%)</title><rect x="23.7188%" y="837" width="0.2555%" height="15" fill="rgb(211,15,21)" fg:x="163642269432" fg:w="1762473836"/><text x="23.9688%" y="847.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,762,473,836 samples, 0.26%)</title><rect x="23.7188%" y="821" width="0.2555%" height="15" fill="rgb(215,187,41)" fg:x="163642269432" fg:w="1762473836"/><text x="23.9688%" y="831.50"></text></g><g><title>cargo_tarpaulin::path_utils::is_source_file (1,762,473,836 samples, 0.26%)</title><rect x="23.7188%" y="805" width="0.2555%" height="15" fill="rgb(248,69,32)" fg:x="163642269432" fg:w="1762473836"/><text x="23.9688%" y="815.50"></text></g><g><title>std::path::Path::is_file (1,762,473,836 samples, 0.26%)</title><rect x="23.7188%" y="789" width="0.2555%" height="15" fill="rgb(252,102,52)" fg:x="163642269432" fg:w="1762473836"/><text x="23.9688%" y="799.50"></text></g><g><title>std::fs::metadata (1,762,473,836 samples, 0.26%)</title><rect x="23.7188%" y="773" width="0.2555%" height="15" fill="rgb(253,140,32)" fg:x="163642269432" fg:w="1762473836"/><text x="23.9688%" y="783.50"></text></g><g><title>std::sys::pal::unix::fs::stat (1,762,473,836 samples, 0.26%)</title><rect x="23.7188%" y="757" width="0.2555%" height="15" fill="rgb(216,56,42)" fg:x="163642269432" fg:w="1762473836"/><text x="23.9688%" y="767.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_path_with_cstr (1,762,473,836 samples, 0.26%)</title><rect x="23.7188%" y="741" width="0.2555%" height="15" fill="rgb(216,184,14)" fg:x="163642269432" fg:w="1762473836"/><text x="23.9688%" y="751.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_with_cstr (1,762,473,836 samples, 0.26%)</title><rect x="23.7188%" y="725" width="0.2555%" height="15" fill="rgb(237,187,27)" fg:x="163642269432" fg:w="1762473836"/><text x="23.9688%" y="735.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_with_cstr_stack (1,762,473,836 samples, 0.26%)</title><rect x="23.7188%" y="709" width="0.2555%" height="15" fill="rgb(219,65,3)" fg:x="163642269432" fg:w="1762473836"/><text x="23.9688%" y="719.50"></text></g><g><title>std::sys::pal::unix::fs::stat::_{{closure}} (1,762,473,836 samples, 0.26%)</title><rect x="23.7188%" y="693" width="0.2555%" height="15" fill="rgb(245,83,25)" fg:x="163642269432" fg:w="1762473836"/><text x="23.9688%" y="703.50"></text></g><g><title>std::sys::pal::unix::fs::try_statx (1,752,441,513 samples, 0.25%)</title><rect x="23.7203%" y="677" width="0.2540%" height="15" fill="rgb(214,205,45)" fg:x="163652301755" fg:w="1752441513"/><text x="23.9703%" y="687.50"></text></g><g><title>std::sys::pal::unix::fs::try_statx::statx (1,744,623,846 samples, 0.25%)</title><rect x="23.7214%" y="661" width="0.2529%" height="15" fill="rgb(241,20,18)" fg:x="163660119422" fg:w="1744623846"/><text x="23.9714%" y="671.50"></text></g><g><title>statx (1,744,623,846 samples, 0.25%)</title><rect x="23.7214%" y="645" width="0.2529%" height="15" fill="rgb(232,163,23)" fg:x="163660119422" fg:w="1744623846"/><text x="23.9714%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (84,449,386 samples, 0.01%)</title><rect x="23.9778%" y="773" width="0.0122%" height="15" fill="rgb(214,5,46)" fg:x="165429152982" fg:w="84449386"/><text x="24.2278%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (84,449,386 samples, 0.01%)</title><rect x="23.9778%" y="757" width="0.0122%" height="15" fill="rgb(229,78,17)" fg:x="165429152982" fg:w="84449386"/><text x="24.2278%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (114,364,314 samples, 0.02%)</title><rect x="23.9743%" y="965" width="0.0166%" height="15" fill="rgb(248,89,10)" fg:x="165404743268" fg:w="114364314"/><text x="24.2243%" y="975.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (114,364,314 samples, 0.02%)</title><rect x="23.9743%" y="949" width="0.0166%" height="15" fill="rgb(248,54,15)" fg:x="165404743268" fg:w="114364314"/><text x="24.2243%" y="959.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (114,364,314 samples, 0.02%)</title><rect x="23.9743%" y="933" width="0.0166%" height="15" fill="rgb(223,116,6)" fg:x="165404743268" fg:w="114364314"/><text x="24.2243%" y="943.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (114,364,314 samples, 0.02%)</title><rect x="23.9743%" y="917" width="0.0166%" height="15" fill="rgb(205,125,38)" fg:x="165404743268" fg:w="114364314"/><text x="24.2243%" y="927.50"></text></g><g><title>&lt;std::path::PathBuf as core::cmp::Ord&gt;::cmp (114,364,314 samples, 0.02%)</title><rect x="23.9743%" y="901" width="0.0166%" height="15" fill="rgb(251,78,38)" fg:x="165404743268" fg:w="114364314"/><text x="24.2243%" y="911.50"></text></g><g><title>std::path::compare_components (114,364,314 samples, 0.02%)</title><rect x="23.9743%" y="885" width="0.0166%" height="15" fill="rgb(253,78,28)" fg:x="165404743268" fg:w="114364314"/><text x="24.2243%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp (114,364,314 samples, 0.02%)</title><rect x="23.9743%" y="869" width="0.0166%" height="15" fill="rgb(209,120,3)" fg:x="165404743268" fg:w="114364314"/><text x="24.2243%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp_by (114,364,314 samples, 0.02%)</title><rect x="23.9743%" y="853" width="0.0166%" height="15" fill="rgb(238,229,9)" fg:x="165404743268" fg:w="114364314"/><text x="24.2243%" y="863.50"></text></g><g><title>core::iter::traits::iterator::iter_compare (114,364,314 samples, 0.02%)</title><rect x="23.9743%" y="837" width="0.0166%" height="15" fill="rgb(253,159,18)" fg:x="165404743268" fg:w="114364314"/><text x="24.2243%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (114,364,314 samples, 0.02%)</title><rect x="23.9743%" y="821" width="0.0166%" height="15" fill="rgb(244,42,34)" fg:x="165404743268" fg:w="114364314"/><text x="24.2243%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (114,364,314 samples, 0.02%)</title><rect x="23.9743%" y="805" width="0.0166%" height="15" fill="rgb(224,8,7)" fg:x="165404743268" fg:w="114364314"/><text x="24.2243%" y="815.50"></text></g><g><title>std::path::compare_components (95,328,683 samples, 0.01%)</title><rect x="23.9770%" y="789" width="0.0138%" height="15" fill="rgb(210,201,45)" fg:x="165423778899" fg:w="95328683"/><text x="24.2270%" y="799.50"></text></g><g><title>cargo_tarpaulin::traces::TraceMap::add_trace (115,492,289 samples, 0.02%)</title><rect x="23.9743%" y="997" width="0.0167%" height="15" fill="rgb(252,185,21)" fg:x="165404743268" fg:w="115492289"/><text x="24.2243%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (115,492,289 samples, 0.02%)</title><rect x="23.9743%" y="981" width="0.0167%" height="15" fill="rgb(223,131,1)" fg:x="165404743268" fg:w="115492289"/><text x="24.2243%" y="991.50"></text></g><g><title>&lt;std::path::Component as core::cmp::PartialEq&gt;::eq (324,620,361 samples, 0.05%)</title><rect x="24.0004%" y="917" width="0.0471%" height="15" fill="rgb(245,141,16)" fg:x="165585094052" fg:w="324620361"/><text x="24.2504%" y="927.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (75,331,265 samples, 0.01%)</title><rect x="24.5084%" y="901" width="0.0109%" height="15" fill="rgb(229,55,45)" fg:x="169089455052" fg:w="75331265"/><text x="24.7584%" y="911.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (75,331,265 samples, 0.01%)</title><rect x="24.5084%" y="885" width="0.0109%" height="15" fill="rgb(208,92,15)" fg:x="169089455052" fg:w="75331265"/><text x="24.7584%" y="895.50"></text></g><g><title>std::path::Components::finished (94,428,379 samples, 0.01%)</title><rect x="24.5193%" y="901" width="0.0137%" height="15" fill="rgb(234,185,47)" fg:x="169164786317" fg:w="94428379"/><text x="24.7693%" y="911.50"></text></g><g><title>&lt;std::path::State as core::cmp::PartialEq&gt;::eq (94,428,379 samples, 0.01%)</title><rect x="24.5193%" y="885" width="0.0137%" height="15" fill="rgb(253,104,50)" fg:x="169164786317" fg:w="94428379"/><text x="24.7693%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (205,948,808 samples, 0.03%)</title><rect x="24.5652%" y="869" width="0.0299%" height="15" fill="rgb(205,70,7)" fg:x="169481320111" fg:w="205948808"/><text x="24.8152%" y="879.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (205,948,808 samples, 0.03%)</title><rect x="24.5652%" y="853" width="0.0299%" height="15" fill="rgb(240,178,43)" fg:x="169481320111" fg:w="205948808"/><text x="24.8152%" y="863.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (1,130,680,045 samples, 0.16%)</title><rect x="24.5349%" y="885" width="0.1639%" height="15" fill="rgb(214,112,2)" fg:x="169272461352" fg:w="1130680045"/><text x="24.7849%" y="895.50"></text></g><g><title>std::path::Components::parse_next_component::_{{closure}} (715,872,478 samples, 0.10%)</title><rect x="24.5950%" y="869" width="0.1038%" height="15" fill="rgb(206,46,17)" fg:x="169687268919" fg:w="715872478"/><text x="24.8450%" y="879.50"></text></g><g><title>std::path::Components::is_sep_byte (715,872,478 samples, 0.10%)</title><rect x="24.5950%" y="853" width="0.1038%" height="15" fill="rgb(225,220,16)" fg:x="169687268919" fg:w="715872478"/><text x="24.8450%" y="863.50"></text></g><g><title>std::path::Components::parse_next_component (1,214,649,582 samples, 0.18%)</title><rect x="24.5330%" y="901" width="0.1761%" height="15" fill="rgb(238,65,40)" fg:x="169259214696" fg:w="1214649582"/><text x="24.7830%" y="911.50"></text></g><g><title>std::path::Components::parse_single_component (70,722,881 samples, 0.01%)</title><rect x="24.6988%" y="885" width="0.0103%" height="15" fill="rgb(230,151,21)" fg:x="170403141397" fg:w="70722881"/><text x="24.9488%" y="895.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (4,595,748,783 samples, 0.67%)</title><rect x="24.0475%" y="917" width="0.6661%" height="15" fill="rgb(218,58,49)" fg:x="165909714413" fg:w="4595748783"/><text x="24.2975%" y="927.50"></text></g><g><title>malloc (159,274,676 samples, 0.02%)</title><rect x="24.7345%" y="917" width="0.0231%" height="15" fill="rgb(219,179,14)" fg:x="170649360325" fg:w="159274676"/><text x="24.9845%" y="927.50"></text></g><g><title>std::path::Path::components (497,742,383 samples, 0.07%)</title><rect x="24.7653%" y="901" width="0.0721%" height="15" fill="rgb(223,72,1)" fg:x="170862237924" fg:w="497742383"/><text x="25.0153%" y="911.50"></text></g><g><title>std::path::has_physical_root (152,318,952 samples, 0.02%)</title><rect x="24.8154%" y="885" width="0.0221%" height="15" fill="rgb(238,126,10)" fg:x="171207661355" fg:w="152318952"/><text x="25.0654%" y="895.50"></text></g><g><title>&lt;std::path::Component as core::cmp::PartialEq&gt;::eq (1,689,755,399 samples, 0.24%)</title><rect x="25.0110%" y="885" width="0.2449%" height="15" fill="rgb(224,206,38)" fg:x="172557544056" fg:w="1689755399"/><text x="25.2610%" y="895.50"></text></g><g><title>&lt;std::path::Components as core::clone::Clone&gt;::clone (1,155,767,384 samples, 0.17%)</title><rect x="25.2560%" y="885" width="0.1675%" height="15" fill="rgb(212,201,54)" fg:x="174247299455" fg:w="1155767384"/><text x="25.5060%" y="895.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (80,349,228 samples, 0.01%)</title><rect x="25.7716%" y="869" width="0.0116%" height="15" fill="rgb(218,154,48)" fg:x="177804914739" fg:w="80349228"/><text x="26.0216%" y="879.50"></text></g><g><title>sysvec_apic_timer_interrupt (74,865,390 samples, 0.01%)</title><rect x="25.7724%" y="853" width="0.0109%" height="15" fill="rgb(232,93,24)" fg:x="177810398577" fg:w="74865390"/><text x="26.0224%" y="863.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (355,464,952 samples, 0.05%)</title><rect x="25.7931%" y="869" width="0.0515%" height="15" fill="rgb(245,30,21)" fg:x="177952947492" fg:w="355464952"/><text x="26.0431%" y="879.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (355,464,952 samples, 0.05%)</title><rect x="25.7931%" y="853" width="0.0515%" height="15" fill="rgb(242,148,29)" fg:x="177952947492" fg:w="355464952"/><text x="26.0431%" y="863.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (116,556,265 samples, 0.02%)</title><rect x="25.8277%" y="837" width="0.0169%" height="15" fill="rgb(244,153,54)" fg:x="178191856179" fg:w="116556265"/><text x="26.0777%" y="847.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (116,556,265 samples, 0.02%)</title><rect x="25.8277%" y="821" width="0.0169%" height="15" fill="rgb(252,87,22)" fg:x="178191856179" fg:w="116556265"/><text x="26.0777%" y="831.50"></text></g><g><title>core::slice::index::get_offset_len_noubcheck (83,067,136 samples, 0.01%)</title><rect x="25.8325%" y="805" width="0.0120%" height="15" fill="rgb(210,51,29)" fg:x="178225345308" fg:w="83067136"/><text x="26.0825%" y="815.50"></text></g><g><title>core::slice::index::get_noubcheck (83,067,136 samples, 0.01%)</title><rect x="25.8325%" y="789" width="0.0120%" height="15" fill="rgb(242,136,47)" fg:x="178225345308" fg:w="83067136"/><text x="26.0825%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (399,876,314 samples, 0.06%)</title><rect x="25.9230%" y="837" width="0.0580%" height="15" fill="rgb(238,68,4)" fg:x="178849104030" fg:w="399876314"/><text x="26.1730%" y="847.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (399,876,314 samples, 0.06%)</title><rect x="25.9230%" y="821" width="0.0580%" height="15" fill="rgb(242,161,30)" fg:x="178849104030" fg:w="399876314"/><text x="26.1730%" y="831.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (2,333,536,929 samples, 0.34%)</title><rect x="25.8594%" y="853" width="0.3382%" height="15" fill="rgb(218,58,44)" fg:x="178410894579" fg:w="2333536929"/><text x="26.1094%" y="863.50"></text></g><g><title>std::path::Components::parse_next_component::_{{closure}} (1,488,089,204 samples, 0.22%)</title><rect x="25.9820%" y="837" width="0.2157%" height="15" fill="rgb(252,125,32)" fg:x="179256342304" fg:w="1488089204"/><text x="26.2320%" y="847.50"></text></g><g><title>std::path::Components::is_sep_byte (1,488,089,204 samples, 0.22%)</title><rect x="25.9820%" y="821" width="0.2157%" height="15" fill="rgb(219,178,0)" fg:x="179256342304" fg:w="1488089204"/><text x="26.2320%" y="831.50"></text></g><g><title>std::path::Components::parse_next_component (2,926,758,242 samples, 0.42%)</title><rect x="25.8457%" y="869" width="0.4242%" height="15" fill="rgb(213,152,7)" fg:x="178315835946" fg:w="2926758242"/><text x="26.0957%" y="879.50"></text></g><g><title>std::path::Components::parse_single_component (498,162,680 samples, 0.07%)</title><rect x="26.1977%" y="853" width="0.0722%" height="15" fill="rgb(249,109,34)" fg:x="180744431508" fg:w="498162680"/><text x="26.4477%" y="863.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (5,939,862,810 samples, 0.86%)</title><rect x="25.4235%" y="885" width="0.8609%" height="15" fill="rgb(232,96,21)" fg:x="175403066839" fg:w="5939862810"/><text x="25.6735%" y="895.50"></text></g><g><title>std::path::Components::prefix_len (100,335,461 samples, 0.01%)</title><rect x="26.2699%" y="869" width="0.0145%" height="15" fill="rgb(228,27,39)" fg:x="181242594188" fg:w="100335461"/><text x="26.5199%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (100,335,461 samples, 0.01%)</title><rect x="26.2699%" y="853" width="0.0145%" height="15" fill="rgb(211,182,52)" fg:x="181242594188" fg:w="100335461"/><text x="26.5199%" y="863.50"></text></g><g><title>&lt;std::path::Component as core::cmp::PartialEq&gt;::eq (80,554,109 samples, 0.01%)</title><rect x="26.2872%" y="869" width="0.0117%" height="15" fill="rgb(234,178,38)" fg:x="181362328138" fg:w="80554109"/><text x="26.5372%" y="879.50"></text></g><g><title>__memcmp_evex_movbe (394,568,116 samples, 0.06%)</title><rect x="26.2991%" y="869" width="0.0572%" height="15" fill="rgb(221,111,3)" fg:x="181444013211" fg:w="394568116"/><text x="26.5491%" y="879.50"></text></g><g><title>[unknown] (510,564,626 samples, 0.07%)</title><rect x="26.2872%" y="885" width="0.0740%" height="15" fill="rgb(228,175,21)" fg:x="181362328138" fg:w="510564626"/><text x="26.5372%" y="895.50"></text></g><g><title>_int_free (114,683,391 samples, 0.02%)</title><rect x="26.3627%" y="885" width="0.0166%" height="15" fill="rgb(228,174,43)" fg:x="181882898679" fg:w="114683391"/><text x="26.6127%" y="895.50"></text></g><g><title>cfree@GLIBC_2.2.5 (71,246,739 samples, 0.01%)</title><rect x="26.3926%" y="885" width="0.0103%" height="15" fill="rgb(211,191,0)" fg:x="182089040457" fg:w="71246739"/><text x="26.6426%" y="895.50"></text></g><g><title>&lt;std::path::Component as core::cmp::PartialEq&gt;::eq (218,952,523 samples, 0.03%)</title><rect x="26.4045%" y="869" width="0.0317%" height="15" fill="rgb(253,117,3)" fg:x="182171138310" fg:w="218952523"/><text x="26.6545%" y="879.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (206,528,123 samples, 0.03%)</title><rect x="27.4399%" y="853" width="0.0299%" height="15" fill="rgb(241,127,19)" fg:x="189314797991" fg:w="206528123"/><text x="27.6899%" y="863.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (206,528,123 samples, 0.03%)</title><rect x="27.4399%" y="837" width="0.0299%" height="15" fill="rgb(218,103,12)" fg:x="189314797991" fg:w="206528123"/><text x="27.6899%" y="847.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (82,097,481 samples, 0.01%)</title><rect x="27.4579%" y="821" width="0.0119%" height="15" fill="rgb(236,214,43)" fg:x="189439228633" fg:w="82097481"/><text x="27.7079%" y="831.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (82,097,481 samples, 0.01%)</title><rect x="27.4579%" y="805" width="0.0119%" height="15" fill="rgb(244,144,19)" fg:x="189439228633" fg:w="82097481"/><text x="27.7079%" y="815.50"></text></g><g><title>core::slice::index::get_offset_len_noubcheck (69,408,131 samples, 0.01%)</title><rect x="27.4598%" y="789" width="0.0101%" height="15" fill="rgb(246,188,10)" fg:x="189451917983" fg:w="69408131"/><text x="27.7098%" y="799.50"></text></g><g><title>core::slice::index::get_noubcheck (69,408,131 samples, 0.01%)</title><rect x="27.4598%" y="773" width="0.0101%" height="15" fill="rgb(212,193,33)" fg:x="189451917983" fg:w="69408131"/><text x="27.7098%" y="783.50"></text></g><g><title>std::path::Components::finished (204,160,980 samples, 0.03%)</title><rect x="27.4698%" y="853" width="0.0296%" height="15" fill="rgb(241,51,29)" fg:x="189521326114" fg:w="204160980"/><text x="27.7198%" y="863.50"></text></g><g><title>&lt;std::path::State as core::cmp::PartialEq&gt;::eq (204,160,980 samples, 0.03%)</title><rect x="27.4698%" y="837" width="0.0296%" height="15" fill="rgb(211,58,19)" fg:x="189521326114" fg:w="204160980"/><text x="27.7198%" y="847.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (479,585,606 samples, 0.07%)</title><rect x="27.5955%" y="821" width="0.0695%" height="15" fill="rgb(229,111,26)" fg:x="190388600968" fg:w="479585606"/><text x="27.8455%" y="831.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (479,585,606 samples, 0.07%)</title><rect x="27.5955%" y="805" width="0.0695%" height="15" fill="rgb(213,115,40)" fg:x="190388600968" fg:w="479585606"/><text x="27.8455%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (2,666,875,506 samples, 0.39%)</title><rect x="27.5100%" y="837" width="0.3865%" height="15" fill="rgb(209,56,44)" fg:x="189798408631" fg:w="2666875506"/><text x="27.7600%" y="847.50"></text></g><g><title>std::path::Components::parse_next_component::_{{closure}} (1,597,097,563 samples, 0.23%)</title><rect x="27.6650%" y="821" width="0.2315%" height="15" fill="rgb(230,108,32)" fg:x="190868186574" fg:w="1597097563"/><text x="27.9150%" y="831.50"></text></g><g><title>std::path::Components::is_sep_byte (1,597,097,563 samples, 0.23%)</title><rect x="27.6650%" y="805" width="0.2315%" height="15" fill="rgb(216,165,31)" fg:x="190868186574" fg:w="1597097563"/><text x="27.9150%" y="815.50"></text></g><g><title>std::path::Components::parse_next_component (3,141,633,476 samples, 0.46%)</title><rect x="27.4994%" y="853" width="0.4554%" height="15" fill="rgb(218,122,21)" fg:x="189725487094" fg:w="3141633476"/><text x="27.7494%" y="863.50"></text></g><g><title>std::path::Components::parse_single_component (401,836,433 samples, 0.06%)</title><rect x="27.8965%" y="837" width="0.0582%" height="15" fill="rgb(223,224,47)" fg:x="192465284137" fg:w="401836433"/><text x="28.1465%" y="847.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (10,530,519,937 samples, 1.53%)</title><rect x="26.4362%" y="869" width="1.5263%" height="15" fill="rgb(238,102,44)" fg:x="182390090833" fg:w="10530519937"/><text x="26.6862%" y="879.50"></text></g><g><title>std::path::Path::components (1,066,729,073 samples, 0.15%)</title><rect x="27.9633%" y="853" width="0.1546%" height="15" fill="rgb(236,46,40)" fg:x="192925808711" fg:w="1066729073"/><text x="28.2133%" y="863.50"></text></g><g><title>std::path::has_physical_root (113,319,934 samples, 0.02%)</title><rect x="28.1015%" y="837" width="0.0164%" height="15" fill="rgb(247,202,50)" fg:x="193879217850" fg:w="113319934"/><text x="28.3515%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (14,854,148,396 samples, 2.15%)</title><rect x="26.4029%" y="885" width="2.1530%" height="15" fill="rgb(209,99,20)" fg:x="182160287196" fg:w="14854148396"/><text x="26.6529%" y="895.50">c..</text></g><g><title>std::path::Path::_starts_with (4,088,626,881 samples, 0.59%)</title><rect x="27.9633%" y="869" width="0.5926%" height="15" fill="rgb(252,27,34)" fg:x="192925808711" fg:w="4088626881"/><text x="28.2133%" y="879.50"></text></g><g><title>std::path::iter_after (3,021,897,808 samples, 0.44%)</title><rect x="28.1179%" y="853" width="0.4380%" height="15" fill="rgb(215,206,23)" fg:x="193992537784" fg:w="3021897808"/><text x="28.3679%" y="863.50"></text></g><g><title>&lt;std::path::Components as core::clone::Clone&gt;::clone (1,383,283,048 samples, 0.20%)</title><rect x="28.3554%" y="837" width="0.2005%" height="15" fill="rgb(212,135,36)" fg:x="195631152544" fg:w="1383283048"/><text x="28.6054%" y="847.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (77,387,167 samples, 0.01%)</title><rect x="28.5447%" y="821" width="0.0112%" height="15" fill="rgb(240,189,1)" fg:x="196937048425" fg:w="77387167"/><text x="28.7947%" y="831.50"></text></g><g><title>std::path::Path::_starts_with (3,369,527,954 samples, 0.49%)</title><rect x="28.5613%" y="885" width="0.4884%" height="15" fill="rgb(242,56,20)" fg:x="197051568012" fg:w="3369527954"/><text x="28.8113%" y="895.50"></text></g><g><title>std::path::iter_after (3,185,574,459 samples, 0.46%)</title><rect x="28.5879%" y="869" width="0.4617%" height="15" fill="rgb(247,132,33)" fg:x="197235521507" fg:w="3185574459"/><text x="28.8379%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (303,460,932 samples, 0.04%)</title><rect x="29.0057%" y="853" width="0.0440%" height="15" fill="rgb(208,149,11)" fg:x="200117635034" fg:w="303460932"/><text x="29.2557%" y="863.50"></text></g><g><title>std::path::Path::_starts_with (29,593,160,443 samples, 4.29%)</title><rect x="24.7606%" y="917" width="4.2893%" height="15" fill="rgb(211,33,11)" fg:x="170830043982" fg:w="29593160443"/><text x="25.0106%" y="927.50">std::..</text></g><g><title>std::path::iter_after (29,063,224,118 samples, 4.21%)</title><rect x="24.8375%" y="901" width="4.2125%" height="15" fill="rgb(221,29,38)" fg:x="171359980307" fg:w="29063224118"/><text x="25.0875%" y="911.50">std::..</text></g><g><title>&lt;cargo_tarpaulin::statemachine::instrumented::LlvmInstrumentedData as cargo_tarpaulin::statemachine::StateData&gt;::wait::_{{closure}} (34,849,031,027 samples, 5.05%)</title><rect x="24.0004%" y="981" width="5.0511%" height="15" fill="rgb(206,182,49)" fg:x="165585094052" fg:w="34849031027"/><text x="24.2504%" y="991.50">&lt;cargo..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (34,849,031,027 samples, 5.05%)</title><rect x="24.0004%" y="965" width="5.0511%" height="15" fill="rgb(216,140,1)" fg:x="165585094052" fg:w="34849031027"/><text x="24.2504%" y="975.50">&lt;core:..</text></g><g><title>&lt;cargo_tarpaulin::statemachine::instrumented::LlvmInstrumentedData as cargo_tarpaulin::statemachine::StateData&gt;::wait::_{{closure}}::_{{closure}} (34,849,031,027 samples, 5.05%)</title><rect x="24.0004%" y="949" width="5.0511%" height="15" fill="rgb(232,57,40)" fg:x="165585094052" fg:w="34849031027"/><text x="24.2504%" y="959.50">&lt;cargo..</text></g><g><title>std::path::Path::starts_with (34,849,031,027 samples, 5.05%)</title><rect x="24.0004%" y="933" width="5.0511%" height="15" fill="rgb(224,186,18)" fg:x="165585094052" fg:w="34849031027"/><text x="24.2504%" y="943.50">std::p..</text></g><g><title>core::option::Option&lt;T&gt;::is_some (155,973,425 samples, 0.02%)</title><rect x="29.9062%" y="885" width="0.0226%" height="15" fill="rgb(215,121,11)" fg:x="206330334070" fg:w="155973425"/><text x="30.1562%" y="895.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (355,029,721 samples, 0.05%)</title><rect x="29.9288%" y="885" width="0.0515%" height="15" fill="rgb(245,147,10)" fg:x="206486307495" fg:w="355029721"/><text x="30.1788%" y="895.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (355,029,721 samples, 0.05%)</title><rect x="29.9288%" y="869" width="0.0515%" height="15" fill="rgb(238,153,13)" fg:x="206486307495" fg:w="355029721"/><text x="30.1788%" y="879.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (144,493,155 samples, 0.02%)</title><rect x="29.9593%" y="853" width="0.0209%" height="15" fill="rgb(233,108,0)" fg:x="206696844061" fg:w="144493155"/><text x="30.2093%" y="863.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (144,493,155 samples, 0.02%)</title><rect x="29.9593%" y="837" width="0.0209%" height="15" fill="rgb(212,157,17)" fg:x="206696844061" fg:w="144493155"/><text x="30.2093%" y="847.50"></text></g><g><title>core::slice::index::get_offset_len_noubcheck (144,493,155 samples, 0.02%)</title><rect x="29.9593%" y="821" width="0.0209%" height="15" fill="rgb(225,213,38)" fg:x="206696844061" fg:w="144493155"/><text x="30.2093%" y="831.50"></text></g><g><title>core::slice::index::get_noubcheck (144,493,155 samples, 0.02%)</title><rect x="29.9593%" y="805" width="0.0209%" height="15" fill="rgb(248,16,11)" fg:x="206696844061" fg:w="144493155"/><text x="30.2093%" y="815.50"></text></g><g><title>std::path::Components::finished (103,896,384 samples, 0.02%)</title><rect x="29.9802%" y="885" width="0.0151%" height="15" fill="rgb(241,33,4)" fg:x="206841337216" fg:w="103896384"/><text x="30.2302%" y="895.50"></text></g><g><title>&lt;std::path::State as core::cmp::PartialEq&gt;::eq (103,896,384 samples, 0.02%)</title><rect x="29.9802%" y="869" width="0.0151%" height="15" fill="rgb(222,26,43)" fg:x="206841337216" fg:w="103896384"/><text x="30.2302%" y="879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,382,898,371 samples, 0.20%)</title><rect x="30.2378%" y="853" width="0.2004%" height="15" fill="rgb(243,29,36)" fg:x="208618623096" fg:w="1382898371"/><text x="30.4878%" y="863.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1,382,898,371 samples, 0.20%)</title><rect x="30.2378%" y="837" width="0.2004%" height="15" fill="rgb(241,9,27)" fg:x="208618623096" fg:w="1382898371"/><text x="30.4878%" y="847.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (6,548,692,288 samples, 0.95%)</title><rect x="30.0222%" y="869" width="0.9492%" height="15" fill="rgb(205,117,26)" fg:x="207130682183" fg:w="6548692288"/><text x="30.2722%" y="879.50"></text></g><g><title>std::path::Components::parse_next_component::_{{closure}} (3,677,853,004 samples, 0.53%)</title><rect x="30.4383%" y="853" width="0.5331%" height="15" fill="rgb(209,80,39)" fg:x="210001521467" fg:w="3677853004"/><text x="30.6883%" y="863.50"></text></g><g><title>std::path::Components::is_sep_byte (3,677,853,004 samples, 0.53%)</title><rect x="30.4383%" y="837" width="0.5331%" height="15" fill="rgb(239,155,6)" fg:x="210001521467" fg:w="3677853004"/><text x="30.6883%" y="847.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (14,039,574,680 samples, 2.03%)</title><rect x="29.0516%" y="901" width="2.0349%" height="15" fill="rgb(212,104,12)" fg:x="200434125079" fg:w="14039574680"/><text x="29.3016%" y="911.50">&lt;..</text></g><g><title>std::path::Components::parse_next_component (7,528,466,159 samples, 1.09%)</title><rect x="29.9953%" y="885" width="1.0912%" height="15" fill="rgb(234,204,3)" fg:x="206945233600" fg:w="7528466159"/><text x="30.2453%" y="895.50"></text></g><g><title>std::path::Components::parse_single_component (794,325,288 samples, 0.12%)</title><rect x="30.9714%" y="869" width="0.1151%" height="15" fill="rgb(251,218,7)" fg:x="213679374471" fg:w="794325288"/><text x="31.2214%" y="879.50"></text></g><g><title>&lt;std::path::PathBuf as core::cmp::Ord&gt;::cmp (463,962,953 samples, 0.07%)</title><rect x="31.1168%" y="821" width="0.0672%" height="15" fill="rgb(221,81,32)" fg:x="214682554670" fg:w="463962953"/><text x="31.3668%" y="831.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (690,420,267 samples, 0.10%)</title><rect x="31.0867%" y="885" width="0.1001%" height="15" fill="rgb(214,152,26)" fg:x="214474866617" fg:w="690420267"/><text x="31.3367%" y="895.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (670,975,123 samples, 0.10%)</title><rect x="31.0895%" y="869" width="0.0973%" height="15" fill="rgb(223,22,3)" fg:x="214494311761" fg:w="670975123"/><text x="31.3395%" y="879.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (642,312,247 samples, 0.09%)</title><rect x="31.0936%" y="853" width="0.0931%" height="15" fill="rgb(207,174,7)" fg:x="214522974637" fg:w="642312247"/><text x="31.3436%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (642,312,247 samples, 0.09%)</title><rect x="31.0936%" y="837" width="0.0931%" height="15" fill="rgb(224,19,52)" fg:x="214522974637" fg:w="642312247"/><text x="31.3436%" y="847.50"></text></g><g><title>[unknown] (710,388,191 samples, 0.10%)</title><rect x="31.0865%" y="901" width="0.1030%" height="15" fill="rgb(228,24,14)" fg:x="214473699759" fg:w="710388191"/><text x="31.3365%" y="911.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (133,329,187 samples, 0.02%)</title><rect x="31.1950%" y="885" width="0.0193%" height="15" fill="rgb(230,153,43)" fg:x="215222289726" fg:w="133329187"/><text x="31.4450%" y="895.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (104,953,644 samples, 0.02%)</title><rect x="31.1991%" y="869" width="0.0152%" height="15" fill="rgb(231,106,12)" fg:x="215250665269" fg:w="104953644"/><text x="31.4491%" y="879.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (104,953,644 samples, 0.02%)</title><rect x="31.1991%" y="853" width="0.0152%" height="15" fill="rgb(215,92,2)" fg:x="215250665269" fg:w="104953644"/><text x="31.4491%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (104,953,644 samples, 0.02%)</title><rect x="31.1991%" y="837" width="0.0152%" height="15" fill="rgb(249,143,25)" fg:x="215250665269" fg:w="104953644"/><text x="31.4491%" y="847.50"></text></g><g><title>cfree@GLIBC_2.2.5 (142,092,887 samples, 0.02%)</title><rect x="31.1940%" y="901" width="0.0206%" height="15" fill="rgb(252,7,35)" fg:x="215215683846" fg:w="142092887"/><text x="31.4440%" y="911.50"></text></g><g><title>malloc (300,655,963 samples, 0.04%)</title><rect x="31.2146%" y="901" width="0.0436%" height="15" fill="rgb(216,69,40)" fg:x="215357776733" fg:w="300655963"/><text x="31.4646%" y="911.50"></text></g><g><title>std::path::Path::components (594,920,939 samples, 0.09%)</title><rect x="31.2602%" y="901" width="0.0862%" height="15" fill="rgb(240,36,33)" fg:x="215672039958" fg:w="594920939"/><text x="31.5102%" y="911.50"></text></g><g><title>std::path::has_physical_root (166,160,031 samples, 0.02%)</title><rect x="31.3223%" y="885" width="0.0241%" height="15" fill="rgb(231,128,14)" fg:x="216100800866" fg:w="166160031"/><text x="31.5723%" y="895.50"></text></g><g><title>std::sys::path::unix::is_sep_byte (133,428,421 samples, 0.02%)</title><rect x="31.3271%" y="869" width="0.0193%" height="15" fill="rgb(245,143,14)" fg:x="216133532476" fg:w="133428421"/><text x="31.5771%" y="879.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (69,043,880 samples, 0.01%)</title><rect x="31.7004%" y="853" width="0.0100%" height="15" fill="rgb(222,130,28)" fg:x="218709376645" fg:w="69043880"/><text x="31.9504%" y="863.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (70,170,809 samples, 0.01%)</title><rect x="31.7004%" y="869" width="0.0102%" height="15" fill="rgb(212,10,48)" fg:x="218709376645" fg:w="70170809"/><text x="31.9504%" y="879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::rposition (484,149,293 samples, 0.07%)</title><rect x="31.6773%" y="885" width="0.0702%" height="15" fill="rgb(254,118,45)" fg:x="218549637226" fg:w="484149293"/><text x="31.9273%" y="895.50"></text></g><g><title>std::path::compare_components::_{{closure}} (248,795,223 samples, 0.04%)</title><rect x="31.7114%" y="869" width="0.0361%" height="15" fill="rgb(228,6,45)" fg:x="218784991296" fg:w="248795223"/><text x="31.9614%" y="879.50"></text></g><g><title>std::path::Components::is_sep_byte (248,795,223 samples, 0.04%)</title><rect x="31.7114%" y="853" width="0.0361%" height="15" fill="rgb(241,18,35)" fg:x="218784991296" fg:w="248795223"/><text x="31.9614%" y="863.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (81,344,708 samples, 0.01%)</title><rect x="32.0004%" y="741" width="0.0118%" height="15" fill="rgb(227,214,53)" fg:x="220779041037" fg:w="81344708"/><text x="32.2504%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (82,425,695 samples, 0.01%)</title><rect x="32.0004%" y="757" width="0.0119%" height="15" fill="rgb(224,107,51)" fg:x="220779041037" fg:w="82425695"/><text x="32.2504%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (380,926,747 samples, 0.06%)</title><rect x="31.9897%" y="773" width="0.0552%" height="15" fill="rgb(248,60,28)" fg:x="220704806068" fg:w="380926747"/><text x="32.2397%" y="783.50"></text></g><g><title>std::path::Components::parse_next_component::_{{closure}} (206,930,842 samples, 0.03%)</title><rect x="32.0149%" y="757" width="0.0300%" height="15" fill="rgb(249,101,23)" fg:x="220878801973" fg:w="206930842"/><text x="32.2649%" y="767.50"></text></g><g><title>std::path::Components::is_sep_byte (206,930,842 samples, 0.03%)</title><rect x="32.0149%" y="741" width="0.0300%" height="15" fill="rgb(228,51,19)" fg:x="220878801973" fg:w="206930842"/><text x="32.2649%" y="751.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (1,006,715,760 samples, 0.15%)</title><rect x="31.9107%" y="805" width="0.1459%" height="15" fill="rgb(213,20,6)" fg:x="220159849081" fg:w="1006715760"/><text x="32.1607%" y="815.50"></text></g><g><title>std::path::Components::parse_next_component (481,891,129 samples, 0.07%)</title><rect x="31.9867%" y="789" width="0.0698%" height="15" fill="rgb(212,124,10)" fg:x="220684673712" fg:w="481891129"/><text x="32.2367%" y="799.50"></text></g><g><title>std::path::Components::parse_single_component (80,832,026 samples, 0.01%)</title><rect x="32.0449%" y="773" width="0.0117%" height="15" fill="rgb(248,3,40)" fg:x="221085732815" fg:w="80832026"/><text x="32.2949%" y="783.50"></text></g><g><title>__memcmp_evex_movbe (180,614,753 samples, 0.03%)</title><rect x="32.0575%" y="789" width="0.0262%" height="15" fill="rgb(223,178,23)" fg:x="221173100294" fg:w="180614753"/><text x="32.3075%" y="799.50"></text></g><g><title>[unknown] (411,026,356 samples, 0.06%)</title><rect x="32.0566%" y="805" width="0.0596%" height="15" fill="rgb(240,132,45)" fg:x="221166564841" fg:w="411026356"/><text x="32.3066%" y="815.50"></text></g><g><title>std::path::compare_components (70,785,362 samples, 0.01%)</title><rect x="32.1059%" y="789" width="0.0103%" height="15" fill="rgb(245,164,36)" fg:x="221506805835" fg:w="70785362"/><text x="32.3559%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (117,848,929 samples, 0.02%)</title><rect x="32.2147%" y="741" width="0.0171%" height="15" fill="rgb(231,188,53)" fg:x="222257638691" fg:w="117848929"/><text x="32.4647%" y="751.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (388,633,540 samples, 0.06%)</title><rect x="32.1767%" y="773" width="0.0563%" height="15" fill="rgb(237,198,39)" fg:x="221995586663" fg:w="388633540"/><text x="32.4267%" y="783.50"></text></g><g><title>std::path::Components::parse_next_component (127,598,070 samples, 0.02%)</title><rect x="32.2146%" y="757" width="0.0185%" height="15" fill="rgb(223,120,35)" fg:x="222256622133" fg:w="127598070"/><text x="32.4646%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp_by::compare::_{{closure}} (1,399,046,565 samples, 0.20%)</title><rect x="32.2345%" y="773" width="0.2028%" height="15" fill="rgb(253,107,49)" fg:x="222394138603" fg:w="1399046565"/><text x="32.4845%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp::_{{closure}} (1,365,354,996 samples, 0.20%)</title><rect x="32.2394%" y="757" width="0.1979%" height="15" fill="rgb(216,44,31)" fg:x="222427830172" fg:w="1365354996"/><text x="32.4894%" y="767.50"></text></g><g><title>&lt;std::path::Component as core::cmp::Ord&gt;::cmp (1,365,354,996 samples, 0.20%)</title><rect x="32.2394%" y="741" width="0.1979%" height="15" fill="rgb(253,87,21)" fg:x="222427830172" fg:w="1365354996"/><text x="32.4894%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (163,090,169 samples, 0.02%)</title><rect x="32.4137%" y="725" width="0.0236%" height="15" fill="rgb(226,18,2)" fg:x="223630094999" fg:w="163090169"/><text x="32.6637%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (2,480,580,582 samples, 0.36%)</title><rect x="32.1228%" y="805" width="0.3595%" height="15" fill="rgb(216,8,46)" fg:x="221623359548" fg:w="2480580582"/><text x="32.3728%" y="815.50"></text></g><g><title>core::iter::traits::iterator::iter_compare::compare::_{{closure}} (2,480,580,582 samples, 0.36%)</title><rect x="32.1228%" y="789" width="0.3595%" height="15" fill="rgb(226,140,39)" fg:x="221623359548" fg:w="2480580582"/><text x="32.3728%" y="799.50"></text></g><g><title>std::path::compare_components (308,617,481 samples, 0.04%)</title><rect x="32.4376%" y="773" width="0.0447%" height="15" fill="rgb(221,194,54)" fg:x="223795322649" fg:w="308617481"/><text x="32.6876%" y="783.50"></text></g><g><title>std::path::Path::components (1,464,490,001 samples, 0.21%)</title><rect x="32.4823%" y="805" width="0.2123%" height="15" fill="rgb(213,92,11)" fg:x="224103940130" fg:w="1464490001"/><text x="32.7323%" y="815.50"></text></g><g><title>std::path::has_physical_root (324,858,845 samples, 0.05%)</title><rect x="32.6475%" y="789" width="0.0471%" height="15" fill="rgb(229,162,46)" fg:x="225243571286" fg:w="324858845"/><text x="32.8975%" y="799.50"></text></g><g><title>std::sys::path::unix::is_sep_byte (261,949,606 samples, 0.04%)</title><rect x="32.6566%" y="773" width="0.0380%" height="15" fill="rgb(214,111,36)" fg:x="225306480525" fg:w="261949606"/><text x="32.9066%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::rposition (280,135,952 samples, 0.04%)</title><rect x="32.7740%" y="789" width="0.0406%" height="15" fill="rgb(207,6,21)" fg:x="226116121022" fg:w="280135952"/><text x="33.0240%" y="799.50"></text></g><g><title>std::path::compare_components::_{{closure}} (142,799,348 samples, 0.02%)</title><rect x="32.7939%" y="773" width="0.0207%" height="15" fill="rgb(213,127,38)" fg:x="226253457626" fg:w="142799348"/><text x="33.0439%" y="783.50"></text></g><g><title>std::path::Components::is_sep_byte (142,799,348 samples, 0.02%)</title><rect x="32.7939%" y="757" width="0.0207%" height="15" fill="rgb(238,118,32)" fg:x="226253457626" fg:w="142799348"/><text x="33.0439%" y="767.50"></text></g><g><title>&lt;std::path::State as core::cmp::PartialEq&gt;::eq (110,114,522 samples, 0.02%)</title><rect x="32.8146%" y="789" width="0.0160%" height="15" fill="rgb(240,139,39)" fg:x="226396256974" fg:w="110114522"/><text x="33.0646%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp (490,615,199 samples, 0.07%)</title><rect x="32.8305%" y="789" width="0.0711%" height="15" fill="rgb(235,10,37)" fg:x="226506371496" fg:w="490615199"/><text x="33.0805%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp_by (490,615,199 samples, 0.07%)</title><rect x="32.8305%" y="773" width="0.0711%" height="15" fill="rgb(249,171,38)" fg:x="226506371496" fg:w="490615199"/><text x="33.0805%" y="783.50"></text></g><g><title>core::iter::traits::iterator::iter_compare (490,615,199 samples, 0.07%)</title><rect x="32.8305%" y="757" width="0.0711%" height="15" fill="rgb(242,144,32)" fg:x="226506371496" fg:w="490615199"/><text x="33.0805%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (490,615,199 samples, 0.07%)</title><rect x="32.8305%" y="741" width="0.0711%" height="15" fill="rgb(217,117,21)" fg:x="226506371496" fg:w="490615199"/><text x="33.0805%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (490,615,199 samples, 0.07%)</title><rect x="32.8305%" y="725" width="0.0711%" height="15" fill="rgb(249,87,1)" fg:x="226506371496" fg:w="490615199"/><text x="33.0805%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (487,264,030 samples, 0.07%)</title><rect x="32.8310%" y="709" width="0.0706%" height="15" fill="rgb(248,196,48)" fg:x="226509722665" fg:w="487264030"/><text x="33.0810%" y="719.50"></text></g><g><title>core::iter::traits::iterator::iter_compare::compare::_{{closure}} (487,264,030 samples, 0.07%)</title><rect x="32.8310%" y="693" width="0.0706%" height="15" fill="rgb(251,206,33)" fg:x="226509722665" fg:w="487264030"/><text x="33.0810%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp_by::compare::_{{closure}} (435,576,015 samples, 0.06%)</title><rect x="32.8385%" y="677" width="0.0631%" height="15" fill="rgb(232,141,28)" fg:x="226561410680" fg:w="435576015"/><text x="33.0885%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp::_{{closure}} (424,744,892 samples, 0.06%)</title><rect x="32.8401%" y="661" width="0.0616%" height="15" fill="rgb(209,167,14)" fg:x="226572241803" fg:w="424744892"/><text x="33.0901%" y="671.50"></text></g><g><title>&lt;std::path::Component as core::cmp::Ord&gt;::cmp (424,744,892 samples, 0.06%)</title><rect x="32.8401%" y="645" width="0.0616%" height="15" fill="rgb(225,11,50)" fg:x="226572241803" fg:w="424744892"/><text x="33.0901%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (9,262,929,535 samples, 1.34%)</title><rect x="33.3545%" y="757" width="1.3426%" height="15" fill="rgb(209,50,20)" fg:x="230120968341" fg:w="9262929535"/><text x="33.6045%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (9,262,929,535 samples, 1.34%)</title><rect x="33.3545%" y="741" width="1.3426%" height="15" fill="rgb(212,17,46)" fg:x="230120968341" fg:w="9262929535"/><text x="33.6045%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (18,497,914,946 samples, 2.68%)</title><rect x="32.9017%" y="789" width="2.6811%" height="15" fill="rgb(216,101,39)" fg:x="226996986695" fg:w="18497914946"/><text x="33.1517%" y="799.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (18,497,914,946 samples, 2.68%)</title><rect x="32.9017%" y="773" width="2.6811%" height="15" fill="rgb(212,228,48)" fg:x="226996986695" fg:w="18497914946"/><text x="33.1517%" y="783.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::position::check::_{{closure}} (6,111,003,765 samples, 0.89%)</title><rect x="34.6971%" y="757" width="0.8857%" height="15" fill="rgb(250,6,50)" fg:x="239383897876" fg:w="6111003765"/><text x="34.9471%" y="767.50"></text></g><g><title>std::path::compare_components::_{{closure}} (6,111,003,765 samples, 0.89%)</title><rect x="34.6971%" y="741" width="0.8857%" height="15" fill="rgb(250,160,48)" fg:x="239383897876" fg:w="6111003765"/><text x="34.9471%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (105,328,565 samples, 0.02%)</title><rect x="35.5828%" y="789" width="0.0153%" height="15" fill="rgb(244,216,33)" fg:x="245494901641" fg:w="105328565"/><text x="35.8328%" y="799.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (105,328,565 samples, 0.02%)</title><rect x="35.5828%" y="773" width="0.0153%" height="15" fill="rgb(207,157,5)" fg:x="245494901641" fg:w="105328565"/><text x="35.8328%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (105,328,565 samples, 0.02%)</title><rect x="35.5828%" y="757" width="0.0153%" height="15" fill="rgb(228,199,8)" fg:x="245494901641" fg:w="105328565"/><text x="35.8328%" y="767.50"></text></g><g><title>core::cmp::min (105,328,565 samples, 0.02%)</title><rect x="35.5828%" y="741" width="0.0153%" height="15" fill="rgb(227,80,20)" fg:x="245494901641" fg:w="105328565"/><text x="35.8328%" y="751.50"></text></g><g><title>core::cmp::Ord::min (105,328,565 samples, 0.02%)</title><rect x="35.5828%" y="725" width="0.0153%" height="15" fill="rgb(222,9,33)" fg:x="245494901641" fg:w="105328565"/><text x="35.8328%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (457,213,563 samples, 0.07%)</title><rect x="35.5981%" y="789" width="0.0663%" height="15" fill="rgb(239,44,28)" fg:x="245600230206" fg:w="457213563"/><text x="35.8481%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (457,213,563 samples, 0.07%)</title><rect x="35.5981%" y="773" width="0.0663%" height="15" fill="rgb(249,187,43)" fg:x="245600230206" fg:w="457213563"/><text x="35.8481%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp (26,979,074,941 samples, 3.91%)</title><rect x="31.7610%" y="885" width="3.9104%" height="15" fill="rgb(216,141,28)" fg:x="219127440958" fg:w="26979074941"/><text x="32.0110%" y="895.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::cmp_by (26,979,074,941 samples, 3.91%)</title><rect x="31.7610%" y="869" width="3.9104%" height="15" fill="rgb(230,154,53)" fg:x="219127440958" fg:w="26979074941"/><text x="32.0110%" y="879.50">core..</text></g><g><title>core::iter::traits::iterator::iter_compare (26,979,074,941 samples, 3.91%)</title><rect x="31.7610%" y="853" width="3.9104%" height="15" fill="rgb(227,82,4)" fg:x="219127440958" fg:w="26979074941"/><text x="32.0110%" y="863.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (26,824,610,671 samples, 3.89%)</title><rect x="31.7834%" y="837" width="3.8880%" height="15" fill="rgb(220,107,16)" fg:x="219281905228" fg:w="26824610671"/><text x="32.0334%" y="847.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (26,824,610,671 samples, 3.89%)</title><rect x="31.7834%" y="821" width="3.8880%" height="15" fill="rgb(207,187,2)" fg:x="219281905228" fg:w="26824610671"/><text x="32.0334%" y="831.50">core..</text></g><g><title>std::path::compare_components (20,538,085,768 samples, 2.98%)</title><rect x="32.6946%" y="805" width="2.9769%" height="15" fill="rgb(210,162,52)" fg:x="225568430131" fg:w="20538085768"/><text x="32.9446%" y="815.50">std..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,218,111,010 samples, 0.32%)</title><rect x="35.7876%" y="853" width="0.3215%" height="15" fill="rgb(217,216,49)" fg:x="246907721718" fg:w="2218111010"/><text x="36.0376%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (2,218,111,010 samples, 0.32%)</title><rect x="35.7876%" y="837" width="0.3215%" height="15" fill="rgb(218,146,49)" fg:x="246907721718" fg:w="2218111010"/><text x="36.0376%" y="847.50"></text></g><g><title>__hrtimer_run_queues (71,063,047 samples, 0.01%)</title><rect x="36.1151%" y="773" width="0.0103%" height="15" fill="rgb(216,55,40)" fg:x="249167394697" fg:w="71063047"/><text x="36.3651%" y="783.50"></text></g><g><title>__sysvec_apic_timer_interrupt (78,760,628 samples, 0.01%)</title><rect x="36.1146%" y="805" width="0.0114%" height="15" fill="rgb(208,196,21)" fg:x="249164039601" fg:w="78760628"/><text x="36.3646%" y="815.50"></text></g><g><title>hrtimer_interrupt (78,760,628 samples, 0.01%)</title><rect x="36.1146%" y="789" width="0.0114%" height="15" fill="rgb(242,117,42)" fg:x="249164039601" fg:w="78760628"/><text x="36.3646%" y="799.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (91,801,153 samples, 0.01%)</title><rect x="36.1129%" y="837" width="0.0133%" height="15" fill="rgb(210,11,23)" fg:x="249152082174" fg:w="91801153"/><text x="36.3629%" y="847.50"></text></g><g><title>sysvec_apic_timer_interrupt (89,723,499 samples, 0.01%)</title><rect x="36.1132%" y="821" width="0.0130%" height="15" fill="rgb(217,110,2)" fg:x="249154159828" fg:w="89723499"/><text x="36.3632%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (4,677,793,699 samples, 0.68%)</title><rect x="35.6715%" y="885" width="0.6780%" height="15" fill="rgb(229,77,54)" fg:x="246106515899" fg:w="4677793699"/><text x="35.9215%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4,677,793,699 samples, 0.68%)</title><rect x="35.6715%" y="869" width="0.6780%" height="15" fill="rgb(218,53,16)" fg:x="246106515899" fg:w="4677793699"/><text x="35.9215%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position::check::_{{closure}} (1,658,476,870 samples, 0.24%)</title><rect x="36.1091%" y="853" width="0.2404%" height="15" fill="rgb(215,38,13)" fg:x="249125832728" fg:w="1658476870"/><text x="36.3591%" y="863.50"></text></g><g><title>std::path::compare_components::_{{closure}} (1,538,263,800 samples, 0.22%)</title><rect x="36.1265%" y="837" width="0.2230%" height="15" fill="rgb(235,42,18)" fg:x="249246045798" fg:w="1538263800"/><text x="36.3765%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (143,038,264 samples, 0.02%)</title><rect x="36.3555%" y="885" width="0.0207%" height="15" fill="rgb(219,66,54)" fg:x="250825692125" fg:w="143038264"/><text x="36.6055%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (143,038,264 samples, 0.02%)</title><rect x="36.3555%" y="869" width="0.0207%" height="15" fill="rgb(222,205,4)" fg:x="250825692125" fg:w="143038264"/><text x="36.6055%" y="879.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (185,066,868 samples, 0.03%)</title><rect x="36.3945%" y="853" width="0.0268%" height="15" fill="rgb(227,213,46)" fg:x="251095086362" fg:w="185066868"/><text x="36.6445%" y="863.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (185,066,868 samples, 0.03%)</title><rect x="36.3945%" y="837" width="0.0268%" height="15" fill="rgb(250,145,42)" fg:x="251095086362" fg:w="185066868"/><text x="36.6445%" y="847.50"></text></g><g><title>core::slice::index::get_offset_len_noubcheck (185,066,868 samples, 0.03%)</title><rect x="36.3945%" y="821" width="0.0268%" height="15" fill="rgb(219,15,2)" fg:x="251095086362" fg:w="185066868"/><text x="36.6445%" y="831.50"></text></g><g><title>core::slice::index::get_noubcheck (185,066,868 samples, 0.03%)</title><rect x="36.3945%" y="805" width="0.0268%" height="15" fill="rgb(231,181,52)" fg:x="251095086362" fg:w="185066868"/><text x="36.6445%" y="815.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (313,599,527 samples, 0.05%)</title><rect x="36.3762%" y="869" width="0.0455%" height="15" fill="rgb(235,1,42)" fg:x="250968730389" fg:w="313599527"/><text x="36.6262%" y="879.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (50,882,270,085 samples, 7.38%)</title><rect x="29.0516%" y="981" width="7.3750%" height="15" fill="rgb(249,88,27)" fg:x="200434125079" fg:w="50882270085"/><text x="29.3016%" y="991.50">alloc::col..</text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (50,882,270,085 samples, 7.38%)</title><rect x="29.0516%" y="965" width="7.3750%" height="15" fill="rgb(235,145,16)" fg:x="200434125079" fg:w="50882270085"/><text x="29.3016%" y="975.50">alloc::col..</text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (50,882,270,085 samples, 7.38%)</title><rect x="29.0516%" y="949" width="7.3750%" height="15" fill="rgb(237,114,19)" fg:x="200434125079" fg:w="50882270085"/><text x="29.3016%" y="959.50">alloc::col..</text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (50,882,270,085 samples, 7.38%)</title><rect x="29.0516%" y="933" width="7.3750%" height="15" fill="rgb(238,51,50)" fg:x="200434125079" fg:w="50882270085"/><text x="29.3016%" y="943.50">alloc::col..</text></g><g><title>&lt;std::path::PathBuf as core::cmp::Ord&gt;::cmp (50,882,270,085 samples, 7.38%)</title><rect x="29.0516%" y="917" width="7.3750%" height="15" fill="rgb(205,194,25)" fg:x="200434125079" fg:w="50882270085"/><text x="29.3016%" y="927.50">&lt;std::path..</text></g><g><title>std::path::compare_components (35,049,434,267 samples, 5.08%)</title><rect x="31.3464%" y="901" width="5.0802%" height="15" fill="rgb(215,203,17)" fg:x="216266960897" fg:w="35049434267"/><text x="31.5964%" y="911.50">std::p..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (347,664,775 samples, 0.05%)</title><rect x="36.3762%" y="885" width="0.0504%" height="15" fill="rgb(233,112,49)" fg:x="250968730389" fg:w="347664775"/><text x="36.6262%" y="895.50"></text></g><g><title>_int_malloc (88,665,543 samples, 0.01%)</title><rect x="36.4314%" y="869" width="0.0129%" height="15" fill="rgb(241,130,26)" fg:x="251349538825" fg:w="88665543"/><text x="36.6814%" y="879.50"></text></g><g><title>_int_malloc (486,837,448 samples, 0.07%)</title><rect x="36.4699%" y="853" width="0.0706%" height="15" fill="rgb(252,223,19)" fg:x="251615261738" fg:w="486837448"/><text x="36.7199%" y="863.50"></text></g><g><title>_int_realloc (825,620,974 samples, 0.12%)</title><rect x="36.4442%" y="869" width="0.1197%" height="15" fill="rgb(211,95,25)" fg:x="251438204368" fg:w="825620974"/><text x="36.6942%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,018,315,089 samples, 0.15%)</title><rect x="36.4286%" y="949" width="0.1476%" height="15" fill="rgb(251,182,27)" fg:x="251330285013" fg:w="1018315089"/><text x="36.6786%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,018,315,089 samples, 0.15%)</title><rect x="36.4286%" y="933" width="0.1476%" height="15" fill="rgb(238,24,4)" fg:x="251330285013" fg:w="1018315089"/><text x="36.6786%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,018,315,089 samples, 0.15%)</title><rect x="36.4286%" y="917" width="0.1476%" height="15" fill="rgb(224,220,25)" fg:x="251330285013" fg:w="1018315089"/><text x="36.6786%" y="927.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h4813e28088395dc8E.llvm.6412023112901746188 (1,018,315,089 samples, 0.15%)</title><rect x="36.4286%" y="901" width="0.1476%" height="15" fill="rgb(239,133,26)" fg:x="251330285013" fg:w="1018315089"/><text x="36.6786%" y="911.50"></text></g><g><title>realloc (1,018,315,089 samples, 0.15%)</title><rect x="36.4286%" y="885" width="0.1476%" height="15" fill="rgb(211,94,48)" fg:x="251330285013" fg:w="1018315089"/><text x="36.6786%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,020,544,971 samples, 0.15%)</title><rect x="36.4286%" y="965" width="0.1479%" height="15" fill="rgb(239,87,6)" fg:x="251330285013" fg:w="1020544971"/><text x="36.6786%" y="975.50"></text></g><g><title>_int_malloc (131,049,194 samples, 0.02%)</title><rect x="36.6159%" y="661" width="0.0190%" height="15" fill="rgb(227,62,0)" fg:x="252622440285" fg:w="131049194"/><text x="36.8659%" y="671.50"></text></g><g><title>[unknown] (80,384,187 samples, 0.01%)</title><rect x="36.6488%" y="645" width="0.0117%" height="15" fill="rgb(211,226,4)" fg:x="252849577231" fg:w="80384187"/><text x="36.8988%" y="655.50"></text></g><g><title>_int_free (89,171,148 samples, 0.01%)</title><rect x="36.6730%" y="645" width="0.0129%" height="15" fill="rgb(253,38,52)" fg:x="253016600684" fg:w="89171148"/><text x="36.9230%" y="655.50"></text></g><g><title>_int_malloc (247,838,466 samples, 0.04%)</title><rect x="36.6872%" y="645" width="0.0359%" height="15" fill="rgb(229,126,40)" fg:x="253114391357" fg:w="247838466"/><text x="36.9372%" y="655.50"></text></g><g><title>_int_realloc (125,673,694 samples, 0.02%)</title><rect x="36.7231%" y="645" width="0.0182%" height="15" fill="rgb(229,165,44)" fg:x="253362229823" fg:w="125673694"/><text x="36.9731%" y="655.50"></text></g><g><title>malloc (84,252,730 samples, 0.01%)</title><rect x="36.7556%" y="645" width="0.0122%" height="15" fill="rgb(247,95,47)" fg:x="253586232684" fg:w="84252730"/><text x="37.0056%" y="655.50"></text></g><g><title>realloc (97,355,305 samples, 0.01%)</title><rect x="36.7678%" y="645" width="0.0141%" height="15" fill="rgb(216,140,30)" fg:x="253670485414" fg:w="97355305"/><text x="37.0178%" y="655.50"></text></g><g><title>std::path::Path::_join (84,603,783 samples, 0.01%)</title><rect x="36.7819%" y="645" width="0.0123%" height="15" fill="rgb(246,214,8)" fg:x="253767840719" fg:w="84603783"/><text x="37.0319%" y="655.50"></text></g><g><title>_int_realloc (1,101,206,528 samples, 0.16%)</title><rect x="36.6349%" y="661" width="0.1596%" height="15" fill="rgb(227,224,15)" fg:x="252753489479" fg:w="1101206528"/><text x="36.8849%" y="671.50"></text></g><g><title>malloc (100,472,009 samples, 0.01%)</title><rect x="36.8078%" y="661" width="0.0146%" height="15" fill="rgb(233,175,4)" fg:x="253946288481" fg:w="100472009"/><text x="37.0578%" y="671.50"></text></g><g><title>realloc (97,166,498 samples, 0.01%)</title><rect x="36.8223%" y="661" width="0.0141%" height="15" fill="rgb(221,66,45)" fg:x="254046760490" fg:w="97166498"/><text x="37.0723%" y="671.50"></text></g><g><title>realloc (1,711,226,639 samples, 0.25%)</title><rect x="36.5972%" y="677" width="0.2480%" height="15" fill="rgb(221,178,18)" fg:x="252493573235" fg:w="1711226639"/><text x="36.8472%" y="687.50"></text></g><g><title>llvm_profparser::coverage::CoverageMappingInfo::get_files_from_id (2,906,261,328 samples, 0.42%)</title><rect x="36.4286%" y="981" width="0.4212%" height="15" fill="rgb(213,81,29)" fg:x="251330285013" fg:w="2906261328"/><text x="36.6786%" y="991.50"></text></g><g><title>std::path::Path::join (1,885,716,357 samples, 0.27%)</title><rect x="36.5765%" y="965" width="0.2733%" height="15" fill="rgb(220,89,49)" fg:x="252350829984" fg:w="1885716357"/><text x="36.8265%" y="975.50"></text></g><g><title>std::path::Path::_join (1,885,716,357 samples, 0.27%)</title><rect x="36.5765%" y="949" width="0.2733%" height="15" fill="rgb(227,60,33)" fg:x="252350829984" fg:w="1885716357"/><text x="36.8265%" y="959.50"></text></g><g><title>std::path::PathBuf::push (1,885,716,357 samples, 0.27%)</title><rect x="36.5765%" y="933" width="0.2733%" height="15" fill="rgb(205,113,12)" fg:x="252350829984" fg:w="1885716357"/><text x="36.8265%" y="943.50"></text></g><g><title>std::path::PathBuf::_push (1,885,716,357 samples, 0.27%)</title><rect x="36.5765%" y="917" width="0.2733%" height="15" fill="rgb(211,32,1)" fg:x="252350829984" fg:w="1885716357"/><text x="36.8265%" y="927.50"></text></g><g><title>std::ffi::os_str::OsString::push (1,885,716,357 samples, 0.27%)</title><rect x="36.5765%" y="901" width="0.2733%" height="15" fill="rgb(246,2,12)" fg:x="252350829984" fg:w="1885716357"/><text x="36.8265%" y="911.50"></text></g><g><title>std::sys::os_str::bytes::Buf::push_slice (1,885,716,357 samples, 0.27%)</title><rect x="36.5765%" y="885" width="0.2733%" height="15" fill="rgb(243,37,27)" fg:x="252350829984" fg:w="1885716357"/><text x="36.8265%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,885,716,357 samples, 0.27%)</title><rect x="36.5765%" y="869" width="0.2733%" height="15" fill="rgb(248,211,31)" fg:x="252350829984" fg:w="1885716357"/><text x="36.8265%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,885,716,357 samples, 0.27%)</title><rect x="36.5765%" y="853" width="0.2733%" height="15" fill="rgb(242,146,47)" fg:x="252350829984" fg:w="1885716357"/><text x="36.8265%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,885,716,357 samples, 0.27%)</title><rect x="36.5765%" y="837" width="0.2733%" height="15" fill="rgb(206,70,20)" fg:x="252350829984" fg:w="1885716357"/><text x="36.8265%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,885,716,357 samples, 0.27%)</title><rect x="36.5765%" y="821" width="0.2733%" height="15" fill="rgb(215,10,51)" fg:x="252350829984" fg:w="1885716357"/><text x="36.8265%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,885,716,357 samples, 0.27%)</title><rect x="36.5765%" y="805" width="0.2733%" height="15" fill="rgb(243,178,53)" fg:x="252350829984" fg:w="1885716357"/><text x="36.8265%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1,885,716,357 samples, 0.27%)</title><rect x="36.5765%" y="789" width="0.2733%" height="15" fill="rgb(233,221,20)" fg:x="252350829984" fg:w="1885716357"/><text x="36.8265%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,885,716,357 samples, 0.27%)</title><rect x="36.5765%" y="773" width="0.2733%" height="15" fill="rgb(218,95,35)" fg:x="252350829984" fg:w="1885716357"/><text x="36.8265%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,885,716,357 samples, 0.27%)</title><rect x="36.5765%" y="757" width="0.2733%" height="15" fill="rgb(229,13,5)" fg:x="252350829984" fg:w="1885716357"/><text x="36.8265%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,885,716,357 samples, 0.27%)</title><rect x="36.5765%" y="741" width="0.2733%" height="15" fill="rgb(252,164,30)" fg:x="252350829984" fg:w="1885716357"/><text x="36.8265%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,885,716,357 samples, 0.27%)</title><rect x="36.5765%" y="725" width="0.2733%" height="15" fill="rgb(232,68,36)" fg:x="252350829984" fg:w="1885716357"/><text x="36.8265%" y="735.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,885,716,357 samples, 0.27%)</title><rect x="36.5765%" y="709" width="0.2733%" height="15" fill="rgb(219,59,54)" fg:x="252350829984" fg:w="1885716357"/><text x="36.8265%" y="719.50"></text></g><g><title>alloc::alloc::realloc (1,885,716,357 samples, 0.27%)</title><rect x="36.5765%" y="693" width="0.2733%" height="15" fill="rgb(250,92,33)" fg:x="252350829984" fg:w="1885716357"/><text x="36.8265%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (75,663,339 samples, 0.01%)</title><rect x="36.8770%" y="933" width="0.0110%" height="15" fill="rgb(229,162,54)" fg:x="254424175589" fg:w="75663339"/><text x="37.1270%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (105,348,895 samples, 0.02%)</title><rect x="36.8770%" y="965" width="0.0153%" height="15" fill="rgb(244,114,52)" fg:x="254424175589" fg:w="105348895"/><text x="37.1270%" y="975.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (105,348,895 samples, 0.02%)</title><rect x="36.8770%" y="949" width="0.0153%" height="15" fill="rgb(212,211,43)" fg:x="254424175589" fg:w="105348895"/><text x="37.1270%" y="959.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (89,950,798 samples, 0.01%)</title><rect x="36.8923%" y="965" width="0.0130%" height="15" fill="rgb(226,147,8)" fg:x="254529524484" fg:w="89950798"/><text x="37.1423%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (84,164,021 samples, 0.01%)</title><rect x="36.9206%" y="853" width="0.0122%" height="15" fill="rgb(226,23,13)" fg:x="254724941094" fg:w="84164021"/><text x="37.1706%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (84,164,021 samples, 0.01%)</title><rect x="36.9206%" y="837" width="0.0122%" height="15" fill="rgb(240,63,4)" fg:x="254724941094" fg:w="84164021"/><text x="37.1706%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (84,164,021 samples, 0.01%)</title><rect x="36.9206%" y="821" width="0.0122%" height="15" fill="rgb(221,1,32)" fg:x="254724941094" fg:w="84164021"/><text x="37.1706%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (84,164,021 samples, 0.01%)</title><rect x="36.9206%" y="805" width="0.0122%" height="15" fill="rgb(242,117,10)" fg:x="254724941094" fg:w="84164021"/><text x="37.1706%" y="815.50"></text></g><g><title>&lt;std::path::PathBuf as core::clone::Clone&gt;::clone (167,503,365 samples, 0.02%)</title><rect x="36.9157%" y="965" width="0.0243%" height="15" fill="rgb(249,172,44)" fg:x="254691080024" fg:w="167503365"/><text x="37.1657%" y="975.50"></text></g><g><title>&lt;std::ffi::os_str::OsString as core::clone::Clone&gt;::clone (167,503,365 samples, 0.02%)</title><rect x="36.9157%" y="949" width="0.0243%" height="15" fill="rgb(244,46,45)" fg:x="254691080024" fg:w="167503365"/><text x="37.1657%" y="959.50"></text></g><g><title>&lt;std::sys::os_str::bytes::Buf as core::clone::Clone&gt;::clone (167,503,365 samples, 0.02%)</title><rect x="36.9157%" y="933" width="0.0243%" height="15" fill="rgb(206,43,17)" fg:x="254691080024" fg:w="167503365"/><text x="37.1657%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (152,226,672 samples, 0.02%)</title><rect x="36.9179%" y="917" width="0.0221%" height="15" fill="rgb(239,218,39)" fg:x="254706356717" fg:w="152226672"/><text x="37.1679%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (133,642,295 samples, 0.02%)</title><rect x="36.9206%" y="901" width="0.0194%" height="15" fill="rgb(208,169,54)" fg:x="254724941094" fg:w="133642295"/><text x="37.1706%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (133,642,295 samples, 0.02%)</title><rect x="36.9206%" y="885" width="0.0194%" height="15" fill="rgb(247,25,42)" fg:x="254724941094" fg:w="133642295"/><text x="37.1706%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (133,642,295 samples, 0.02%)</title><rect x="36.9206%" y="869" width="0.0194%" height="15" fill="rgb(226,23,31)" fg:x="254724941094" fg:w="133642295"/><text x="37.1706%" y="879.50"></text></g><g><title>hashbrown::map::make_hash (80,812,257 samples, 0.01%)</title><rect x="36.9498%" y="917" width="0.0117%" height="15" fill="rgb(247,16,28)" fg:x="254926449961" fg:w="80812257"/><text x="37.1998%" y="927.50"></text></g><g><title>core::hash::BuildHasher::hash_one (80,812,257 samples, 0.01%)</title><rect x="36.9498%" y="901" width="0.0117%" height="15" fill="rgb(231,147,38)" fg:x="254926449961" fg:w="80812257"/><text x="37.1998%" y="911.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (80,812,257 samples, 0.01%)</title><rect x="36.9498%" y="885" width="0.0117%" height="15" fill="rgb(253,81,48)" fg:x="254926449961" fg:w="80812257"/><text x="37.1998%" y="895.50"></text></g><g><title>&lt;llvm_profparser::coverage::Counter as core::hash::Hash&gt;::hash (73,306,644 samples, 0.01%)</title><rect x="36.9509%" y="869" width="0.0106%" height="15" fill="rgb(249,222,43)" fg:x="254933955574" fg:w="73306644"/><text x="37.2009%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (79,691,855 samples, 0.01%)</title><rect x="36.9825%" y="869" width="0.0116%" height="15" fill="rgb(221,3,27)" fg:x="255151621043" fg:w="79691855"/><text x="37.2325%" y="879.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (368,526,065 samples, 0.05%)</title><rect x="36.9426%" y="965" width="0.0534%" height="15" fill="rgb(228,180,5)" fg:x="254876260891" fg:w="368526065"/><text x="37.1926%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (368,526,065 samples, 0.05%)</title><rect x="36.9426%" y="949" width="0.0534%" height="15" fill="rgb(227,131,42)" fg:x="254876260891" fg:w="368526065"/><text x="37.1926%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (348,946,310 samples, 0.05%)</title><rect x="36.9454%" y="933" width="0.0506%" height="15" fill="rgb(212,3,39)" fg:x="254895840646" fg:w="348946310"/><text x="37.1954%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (237,524,738 samples, 0.03%)</title><rect x="36.9616%" y="917" width="0.0344%" height="15" fill="rgb(226,45,5)" fg:x="255007262218" fg:w="237524738"/><text x="37.2116%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (226,684,350 samples, 0.03%)</title><rect x="36.9631%" y="901" width="0.0329%" height="15" fill="rgb(215,167,45)" fg:x="255018102606" fg:w="226684350"/><text x="37.2131%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (223,271,703 samples, 0.03%)</title><rect x="36.9636%" y="885" width="0.0324%" height="15" fill="rgb(250,218,53)" fg:x="255021515253" fg:w="223271703"/><text x="37.2136%" y="895.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (113,355,300 samples, 0.02%)</title><rect x="36.9960%" y="965" width="0.0164%" height="15" fill="rgb(207,140,0)" fg:x="255244786956" fg:w="113355300"/><text x="37.2460%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (113,355,300 samples, 0.02%)</title><rect x="36.9960%" y="949" width="0.0164%" height="15" fill="rgb(238,133,51)" fg:x="255244786956" fg:w="113355300"/><text x="37.2460%" y="959.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::CoverageMapping::generate_subreport (1,131,246,682 samples, 0.16%)</title><rect x="36.8498%" y="981" width="0.1640%" height="15" fill="rgb(218,203,53)" fg:x="254236546341" fg:w="1131246682"/><text x="37.0998%" y="991.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (82,540,752 samples, 0.01%)</title><rect x="37.0155%" y="917" width="0.0120%" height="15" fill="rgb(226,184,25)" fg:x="255379440189" fg:w="82540752"/><text x="37.2655%" y="927.50"></text></g><g><title>llvm_profparser::coverage::reporting::CoverageResult::insert (83,594,933 samples, 0.01%)</title><rect x="37.0155%" y="981" width="0.0121%" height="15" fill="rgb(231,121,21)" fg:x="255379440189" fg:w="83594933"/><text x="37.2655%" y="991.50"></text></g><g><title>alloc::collections::btree::map::entry::Entry&lt;K,V,A&gt;::or_insert (83,594,933 samples, 0.01%)</title><rect x="37.0155%" y="965" width="0.0121%" height="15" fill="rgb(251,14,34)" fg:x="255379440189" fg:w="83594933"/><text x="37.2655%" y="975.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (83,594,933 samples, 0.01%)</title><rect x="37.0155%" y="949" width="0.0121%" height="15" fill="rgb(249,193,11)" fg:x="255379440189" fg:w="83594933"/><text x="37.2655%" y="959.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (83,594,933 samples, 0.01%)</title><rect x="37.0155%" y="933" width="0.0121%" height="15" fill="rgb(220,172,37)" fg:x="255379440189" fg:w="83594933"/><text x="37.2655%" y="943.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::CoverageMapping::generate_subreport (89,889,669,204 samples, 13.03%)</title><rect x="24.0004%" y="997" width="13.0289%" height="15" fill="rgb(231,229,43)" fg:x="165585094052" fg:w="89889669204"/><text x="24.2504%" y="1007.50">llvm_profparser::cov..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (97,406,138 samples, 0.01%)</title><rect x="37.0322%" y="917" width="0.0141%" height="15" fill="rgb(250,161,5)" fg:x="255494501645" fg:w="97406138"/><text x="37.2822%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (122,349,425 samples, 0.02%)</title><rect x="37.0293%" y="965" width="0.0177%" height="15" fill="rgb(218,225,18)" fg:x="255474763256" fg:w="122349425"/><text x="37.2793%" y="975.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::read_object_file::_{{closure}} (122,349,425 samples, 0.02%)</title><rect x="37.0293%" y="949" width="0.0177%" height="15" fill="rgb(245,45,42)" fg:x="255474763256" fg:w="122349425"/><text x="37.2793%" y="959.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::parse_profile_counters (122,349,425 samples, 0.02%)</title><rect x="37.0293%" y="933" width="0.0177%" height="15" fill="rgb(211,115,1)" fg:x="255474763256" fg:w="122349425"/><text x="37.2793%" y="943.50"></text></g><g><title>alloc_anon_folio (125,571,293 samples, 0.02%)</title><rect x="37.1431%" y="693" width="0.0182%" height="15" fill="rgb(248,133,52)" fg:x="256259625738" fg:w="125571293"/><text x="37.3931%" y="703.50"></text></g><g><title>do_anonymous_page (166,699,979 samples, 0.02%)</title><rect x="37.1387%" y="709" width="0.0242%" height="15" fill="rgb(238,100,21)" fg:x="256229338961" fg:w="166699979"/><text x="37.3887%" y="719.50"></text></g><g><title>__handle_mm_fault (179,936,479 samples, 0.03%)</title><rect x="37.1379%" y="725" width="0.0261%" height="15" fill="rgb(247,144,11)" fg:x="256223945768" fg:w="179936479"/><text x="37.3879%" y="735.50"></text></g><g><title>handle_mm_fault (190,643,291 samples, 0.03%)</title><rect x="37.1376%" y="741" width="0.0276%" height="15" fill="rgb(206,164,16)" fg:x="256221813910" fg:w="190643291"/><text x="37.3876%" y="751.50"></text></g><g><title>exc_page_fault (203,622,927 samples, 0.03%)</title><rect x="37.1367%" y="773" width="0.0295%" height="15" fill="rgb(222,34,3)" fg:x="256215303648" fg:w="203622927"/><text x="37.3867%" y="783.50"></text></g><g><title>do_user_addr_fault (203,622,927 samples, 0.03%)</title><rect x="37.1367%" y="757" width="0.0295%" height="15" fill="rgb(248,82,4)" fg:x="256215303648" fg:w="203622927"/><text x="37.3867%" y="767.50"></text></g><g><title>asm_exc_page_fault (205,872,276 samples, 0.03%)</title><rect x="37.1365%" y="789" width="0.0298%" height="15" fill="rgb(228,81,46)" fg:x="256214175370" fg:w="205872276"/><text x="37.3865%" y="799.50"></text></g><g><title>__memmove_avx512_unaligned_erms (678,457,448 samples, 0.10%)</title><rect x="37.0683%" y="805" width="0.0983%" height="15" fill="rgb(227,67,47)" fg:x="255743811745" fg:w="678457448"/><text x="37.3183%" y="815.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h4813e28088395dc8E.llvm.6412023112901746188 (683,990,114 samples, 0.10%)</title><rect x="37.0678%" y="853" width="0.0991%" height="15" fill="rgb(215,93,53)" fg:x="255740563549" fg:w="683990114"/><text x="37.3178%" y="863.50"></text></g><g><title>realloc (680,741,918 samples, 0.10%)</title><rect x="37.0683%" y="837" width="0.0987%" height="15" fill="rgb(248,194,39)" fg:x="255743811745" fg:w="680741918"/><text x="37.3183%" y="847.50"></text></g><g><title>_int_realloc (680,741,918 samples, 0.10%)</title><rect x="37.0683%" y="821" width="0.0987%" height="15" fill="rgb(215,5,19)" fg:x="255743811745" fg:w="680741918"/><text x="37.3183%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (685,104,178 samples, 0.10%)</title><rect x="37.0678%" y="901" width="0.0993%" height="15" fill="rgb(226,215,51)" fg:x="255740563549" fg:w="685104178"/><text x="37.3178%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (685,104,178 samples, 0.10%)</title><rect x="37.0678%" y="885" width="0.0993%" height="15" fill="rgb(225,56,26)" fg:x="255740563549" fg:w="685104178"/><text x="37.3178%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (685,104,178 samples, 0.10%)</title><rect x="37.0678%" y="869" width="0.0993%" height="15" fill="rgb(222,75,29)" fg:x="255740563549" fg:w="685104178"/><text x="37.3178%" y="879.50"></text></g><g><title>alloc_anon_folio (72,220,909 samples, 0.01%)</title><rect x="37.1773%" y="789" width="0.0105%" height="15" fill="rgb(236,139,6)" fg:x="256495546027" fg:w="72220909"/><text x="37.4273%" y="799.50"></text></g><g><title>do_anonymous_page (85,850,908 samples, 0.01%)</title><rect x="37.1755%" y="805" width="0.0124%" height="15" fill="rgb(223,137,36)" fg:x="256483075881" fg:w="85850908"/><text x="37.4255%" y="815.50"></text></g><g><title>__handle_mm_fault (94,896,388 samples, 0.01%)</title><rect x="37.1747%" y="821" width="0.0138%" height="15" fill="rgb(226,99,2)" fg:x="256477439943" fg:w="94896388"/><text x="37.4247%" y="831.50"></text></g><g><title>handle_mm_fault (97,186,061 samples, 0.01%)</title><rect x="37.1745%" y="837" width="0.0141%" height="15" fill="rgb(206,133,23)" fg:x="256476311875" fg:w="97186061"/><text x="37.4245%" y="847.50"></text></g><g><title>asm_exc_page_fault (106,410,888 samples, 0.02%)</title><rect x="37.1737%" y="885" width="0.0154%" height="15" fill="rgb(243,173,15)" fg:x="256470556047" fg:w="106410888"/><text x="37.4237%" y="895.50"></text></g><g><title>exc_page_fault (105,262,997 samples, 0.02%)</title><rect x="37.1738%" y="869" width="0.0153%" height="15" fill="rgb(228,69,28)" fg:x="256471703938" fg:w="105262997"/><text x="37.4238%" y="879.50"></text></g><g><title>do_user_addr_fault (105,262,997 samples, 0.02%)</title><rect x="37.1738%" y="853" width="0.0153%" height="15" fill="rgb(212,51,22)" fg:x="256471703938" fg:w="105262997"/><text x="37.4238%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (856,968,593 samples, 0.12%)</title><rect x="37.0658%" y="917" width="0.1242%" height="15" fill="rgb(227,113,0)" fg:x="255726623000" fg:w="856968593"/><text x="37.3158%" y="927.50"></text></g><g><title>core::ptr::write (153,513,777 samples, 0.02%)</title><rect x="37.1678%" y="901" width="0.0223%" height="15" fill="rgb(252,84,27)" fg:x="256430077816" fg:w="153513777"/><text x="37.4178%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (71,317,568 samples, 0.01%)</title><rect x="37.1908%" y="885" width="0.0103%" height="15" fill="rgb(223,145,39)" fg:x="256589136967" fg:w="71317568"/><text x="37.4408%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (96,726,022 samples, 0.01%)</title><rect x="37.2023%" y="821" width="0.0140%" height="15" fill="rgb(239,219,30)" fg:x="256668147349" fg:w="96726022"/><text x="37.4523%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (96,726,022 samples, 0.01%)</title><rect x="37.2023%" y="805" width="0.0140%" height="15" fill="rgb(224,196,39)" fg:x="256668147349" fg:w="96726022"/><text x="37.4523%" y="815.50"></text></g><g><title>alloc::alloc::alloc (96,726,022 samples, 0.01%)</title><rect x="37.2023%" y="789" width="0.0140%" height="15" fill="rgb(205,35,43)" fg:x="256668147349" fg:w="96726022"/><text x="37.4523%" y="799.50"></text></g><g><title>malloc (87,969,482 samples, 0.01%)</title><rect x="37.2036%" y="773" width="0.0128%" height="15" fill="rgb(228,201,21)" fg:x="256676903889" fg:w="87969482"/><text x="37.4536%" y="783.50"></text></g><g><title>alloc::vec::from_elem (182,312,076 samples, 0.03%)</title><rect x="37.1904%" y="917" width="0.0264%" height="15" fill="rgb(237,118,16)" fg:x="256585841739" fg:w="182312076"/><text x="37.4404%" y="927.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (182,312,076 samples, 0.03%)</title><rect x="37.1904%" y="901" width="0.0264%" height="15" fill="rgb(241,17,19)" fg:x="256585841739" fg:w="182312076"/><text x="37.4404%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (107,699,280 samples, 0.02%)</title><rect x="37.2012%" y="885" width="0.0156%" height="15" fill="rgb(214,10,25)" fg:x="256660454535" fg:w="107699280"/><text x="37.4512%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (107,699,280 samples, 0.02%)</title><rect x="37.2012%" y="869" width="0.0156%" height="15" fill="rgb(238,37,29)" fg:x="256660454535" fg:w="107699280"/><text x="37.4512%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (107,699,280 samples, 0.02%)</title><rect x="37.2012%" y="853" width="0.0156%" height="15" fill="rgb(253,83,25)" fg:x="256660454535" fg:w="107699280"/><text x="37.4512%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (102,228,357 samples, 0.01%)</title><rect x="37.2020%" y="837" width="0.0148%" height="15" fill="rgb(234,192,12)" fg:x="256665925458" fg:w="102228357"/><text x="37.4520%" y="847.50"></text></g><g><title>[unknown] (70,115,867 samples, 0.01%)</title><rect x="37.2806%" y="821" width="0.0102%" height="15" fill="rgb(241,216,45)" fg:x="257208732951" fg:w="70115867"/><text x="37.5306%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (77,758,808 samples, 0.01%)</title><rect x="37.3001%" y="789" width="0.0113%" height="15" fill="rgb(242,22,33)" fg:x="257342756784" fg:w="77758808"/><text x="37.5501%" y="799.50"></text></g><g><title>[unknown] (106,372,241 samples, 0.02%)</title><rect x="37.2974%" y="805" width="0.0154%" height="15" fill="rgb(231,105,49)" fg:x="257324125681" fg:w="106372241"/><text x="37.5474%" y="815.50"></text></g><g><title>charge_memcg (73,421,455 samples, 0.01%)</title><rect x="37.3290%" y="661" width="0.0106%" height="15" fill="rgb(218,204,15)" fg:x="257542482376" fg:w="73421455"/><text x="37.5790%" y="671.50"></text></g><g><title>__mem_cgroup_charge (104,301,084 samples, 0.02%)</title><rect x="37.3275%" y="677" width="0.0151%" height="15" fill="rgb(235,138,41)" fg:x="257532204336" fg:w="104301084"/><text x="37.5775%" y="687.50"></text></g><g><title>__alloc_frozen_pages_noprof (70,620,584 samples, 0.01%)</title><rect x="37.3435%" y="629" width="0.0102%" height="15" fill="rgb(246,0,9)" fg:x="257642130707" fg:w="70620584"/><text x="37.5935%" y="639.50"></text></g><g><title>folio_alloc_mpol_noprof (73,865,361 samples, 0.01%)</title><rect x="37.3433%" y="661" width="0.0107%" height="15" fill="rgb(210,74,4)" fg:x="257641102364" fg:w="73865361"/><text x="37.5933%" y="671.50"></text></g><g><title>alloc_pages_mpol (73,865,361 samples, 0.01%)</title><rect x="37.3433%" y="645" width="0.0107%" height="15" fill="rgb(250,60,41)" fg:x="257641102364" fg:w="73865361"/><text x="37.5933%" y="655.50"></text></g><g><title>alloc_anon_folio (193,945,610 samples, 0.03%)</title><rect x="37.3266%" y="693" width="0.0281%" height="15" fill="rgb(220,115,12)" fg:x="257525492857" fg:w="193945610"/><text x="37.5766%" y="703.50"></text></g><g><title>vma_alloc_folio_noprof (81,813,737 samples, 0.01%)</title><rect x="37.3428%" y="677" width="0.0119%" height="15" fill="rgb(237,100,13)" fg:x="257637624730" fg:w="81813737"/><text x="37.5928%" y="687.50"></text></g><g><title>do_anonymous_page (251,552,790 samples, 0.04%)</title><rect x="37.3205%" y="709" width="0.0365%" height="15" fill="rgb(213,55,26)" fg:x="257483440678" fg:w="251552790"/><text x="37.5705%" y="719.50"></text></g><g><title>__handle_mm_fault (284,964,718 samples, 0.04%)</title><rect x="37.3178%" y="725" width="0.0413%" height="15" fill="rgb(216,17,4)" fg:x="257465281805" fg:w="284964718"/><text x="37.5678%" y="735.50"></text></g><g><title>handle_mm_fault (292,919,907 samples, 0.04%)</title><rect x="37.3173%" y="741" width="0.0425%" height="15" fill="rgb(220,153,47)" fg:x="257461899839" fg:w="292919907"/><text x="37.5673%" y="751.50"></text></g><g><title>do_user_addr_fault (321,324,091 samples, 0.05%)</title><rect x="37.3155%" y="757" width="0.0466%" height="15" fill="rgb(215,131,9)" fg:x="257449429724" fg:w="321324091"/><text x="37.5655%" y="767.50"></text></g><g><title>exc_page_fault (323,533,087 samples, 0.05%)</title><rect x="37.3154%" y="773" width="0.0469%" height="15" fill="rgb(233,46,42)" fg:x="257448387208" fg:w="323533087"/><text x="37.5654%" y="783.50"></text></g><g><title>asm_exc_page_fault (328,056,025 samples, 0.05%)</title><rect x="37.3152%" y="789" width="0.0475%" height="15" fill="rgb(226,86,7)" fg:x="257447259030" fg:w="328056025"/><text x="37.5652%" y="799.50"></text></g><g><title>_int_malloc (371,695,137 samples, 0.05%)</title><rect x="37.3128%" y="805" width="0.0539%" height="15" fill="rgb(239,226,21)" fg:x="257430497922" fg:w="371695137"/><text x="37.5628%" y="815.50"></text></g><g><title>malloc (551,904,889 samples, 0.08%)</title><rect x="37.2953%" y="821" width="0.0800%" height="15" fill="rgb(244,137,22)" fg:x="257309783738" fg:w="551904889"/><text x="37.5453%" y="831.50"></text></g><g><title>do_anonymous_page (90,136,425 samples, 0.01%)</title><rect x="37.3867%" y="709" width="0.0131%" height="15" fill="rgb(211,139,35)" fg:x="257940315116" fg:w="90136425"/><text x="37.6367%" y="719.50"></text></g><g><title>__handle_mm_fault (94,722,123 samples, 0.01%)</title><rect x="37.3862%" y="725" width="0.0137%" height="15" fill="rgb(214,62,50)" fg:x="257936857216" fg:w="94722123"/><text x="37.6362%" y="735.50"></text></g><g><title>handle_mm_fault (99,117,546 samples, 0.01%)</title><rect x="37.3860%" y="741" width="0.0144%" height="15" fill="rgb(212,113,44)" fg:x="257935727524" fg:w="99117546"/><text x="37.6360%" y="751.50"></text></g><g><title>asm_exc_page_fault (119,373,435 samples, 0.02%)</title><rect x="37.3849%" y="789" width="0.0173%" height="15" fill="rgb(226,150,43)" fg:x="257927918163" fg:w="119373435"/><text x="37.6349%" y="799.50"></text></g><g><title>exc_page_fault (119,373,435 samples, 0.02%)</title><rect x="37.3849%" y="773" width="0.0173%" height="15" fill="rgb(250,71,37)" fg:x="257927918163" fg:w="119373435"/><text x="37.6349%" y="783.50"></text></g><g><title>do_user_addr_fault (118,274,504 samples, 0.02%)</title><rect x="37.3850%" y="757" width="0.0171%" height="15" fill="rgb(219,76,19)" fg:x="257929017094" fg:w="118274504"/><text x="37.6350%" y="767.50"></text></g><g><title>_int_realloc (188,702,221 samples, 0.03%)</title><rect x="37.3763%" y="805" width="0.0274%" height="15" fill="rgb(250,39,11)" fg:x="257868374722" fg:w="188702221"/><text x="37.6263%" y="815.50"></text></g><g><title>realloc (202,919,915 samples, 0.03%)</title><rect x="37.3753%" y="821" width="0.0294%" height="15" fill="rgb(230,64,31)" fg:x="257861688627" fg:w="202919915"/><text x="37.6253%" y="831.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h4813e28088395dc8E.llvm.6412023112901746188 (863,686,379 samples, 0.13%)</title><rect x="37.2797%" y="837" width="0.1252%" height="15" fill="rgb(208,222,23)" fg:x="257202063926" fg:w="863686379"/><text x="37.5297%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (886,753,168 samples, 0.13%)</title><rect x="37.2787%" y="885" width="0.1285%" height="15" fill="rgb(227,125,18)" fg:x="257195434285" fg:w="886753168"/><text x="37.5287%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (883,480,962 samples, 0.13%)</title><rect x="37.2792%" y="869" width="0.1281%" height="15" fill="rgb(234,210,9)" fg:x="257198706491" fg:w="883480962"/><text x="37.5292%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (883,480,962 samples, 0.13%)</title><rect x="37.2792%" y="853" width="0.1281%" height="15" fill="rgb(217,127,24)" fg:x="257198706491" fg:w="883480962"/><text x="37.5292%" y="863.50"></text></g><g><title>core::ptr::write (123,322,291 samples, 0.02%)</title><rect x="37.4098%" y="885" width="0.0179%" height="15" fill="rgb(239,141,48)" fg:x="258099740269" fg:w="123322291"/><text x="37.6598%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,147,420,781 samples, 0.17%)</title><rect x="37.2617%" y="901" width="0.1663%" height="15" fill="rgb(227,109,8)" fg:x="257077814916" fg:w="1147420781"/><text x="37.5117%" y="911.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::parse_mapping_regions (1,924,973,917 samples, 0.28%)</title><rect x="37.2300%" y="917" width="0.2790%" height="15" fill="rgb(235,184,23)" fg:x="256859483240" fg:w="1924973917"/><text x="37.4800%" y="927.50"></text></g><g><title>llvm_profparser::util::parse_leb128 (508,337,703 samples, 0.07%)</title><rect x="37.4354%" y="901" width="0.0737%" height="15" fill="rgb(227,226,48)" fg:x="258276119454" fg:w="508337703"/><text x="37.6854%" y="911.50"></text></g><g><title>leb128::read::unsigned (508,337,703 samples, 0.07%)</title><rect x="37.4354%" y="885" width="0.0737%" height="15" fill="rgb(206,150,11)" fg:x="258276119454" fg:w="508337703"/><text x="37.6854%" y="895.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (277,920,870 samples, 0.04%)</title><rect x="37.4688%" y="869" width="0.0403%" height="15" fill="rgb(254,2,33)" fg:x="258506536287" fg:w="277920870"/><text x="37.7188%" y="879.50"></text></g><g><title>llvm_profparser::util::parse_leb128 (70,095,371 samples, 0.01%)</title><rect x="37.5090%" y="917" width="0.0102%" height="15" fill="rgb(243,160,20)" fg:x="258784457157" fg:w="70095371"/><text x="37.7590%" y="927.50"></text></g><g><title>leb128::read::unsigned (70,095,371 samples, 0.01%)</title><rect x="37.5090%" y="901" width="0.0102%" height="15" fill="rgb(218,208,30)" fg:x="258784457157" fg:w="70095371"/><text x="37.7590%" y="911.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::parse_coverage_functions (3,278,473,988 samples, 0.48%)</title><rect x="37.0471%" y="933" width="0.4752%" height="15" fill="rgb(224,120,49)" fg:x="255597112681" fg:w="3278473988"/><text x="37.2971%" y="943.50"></text></g><g><title>__memset_avx512_unaligned_erms (89,312,995 samples, 0.01%)</title><rect x="37.5295%" y="757" width="0.0129%" height="15" fill="rgb(246,12,2)" fg:x="258925838482" fg:w="89312995"/><text x="37.7795%" y="767.50"></text></g><g><title>alloc::vec::from_elem (95,782,970 samples, 0.01%)</title><rect x="37.5290%" y="885" width="0.0139%" height="15" fill="rgb(236,117,3)" fg:x="258922515192" fg:w="95782970"/><text x="37.7790%" y="895.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (95,782,970 samples, 0.01%)</title><rect x="37.5290%" y="869" width="0.0139%" height="15" fill="rgb(216,128,52)" fg:x="258922515192" fg:w="95782970"/><text x="37.7790%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (95,782,970 samples, 0.01%)</title><rect x="37.5290%" y="853" width="0.0139%" height="15" fill="rgb(246,145,19)" fg:x="258922515192" fg:w="95782970"/><text x="37.7790%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (95,782,970 samples, 0.01%)</title><rect x="37.5290%" y="837" width="0.0139%" height="15" fill="rgb(222,11,46)" fg:x="258922515192" fg:w="95782970"/><text x="37.7790%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (95,782,970 samples, 0.01%)</title><rect x="37.5290%" y="821" width="0.0139%" height="15" fill="rgb(245,82,36)" fg:x="258922515192" fg:w="95782970"/><text x="37.7790%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (95,782,970 samples, 0.01%)</title><rect x="37.5290%" y="805" width="0.0139%" height="15" fill="rgb(250,73,51)" fg:x="258922515192" fg:w="95782970"/><text x="37.7790%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (95,782,970 samples, 0.01%)</title><rect x="37.5290%" y="789" width="0.0139%" height="15" fill="rgb(221,189,23)" fg:x="258922515192" fg:w="95782970"/><text x="37.7790%" y="799.50"></text></g><g><title>alloc::alloc::alloc_zeroed (95,782,970 samples, 0.01%)</title><rect x="37.5290%" y="773" width="0.0139%" height="15" fill="rgb(210,33,7)" fg:x="258922515192" fg:w="95782970"/><text x="37.7790%" y="783.50"></text></g><g><title>__memset_avx512_unaligned_erms (129,859,627 samples, 0.02%)</title><rect x="37.5433%" y="757" width="0.0188%" height="15" fill="rgb(210,107,22)" fg:x="259020505450" fg:w="129859627"/><text x="37.7933%" y="767.50"></text></g><g><title>flate2::zlib::read::ZlibDecoder&lt;R&gt;::new (228,920,665 samples, 0.03%)</title><rect x="37.5290%" y="901" width="0.0332%" height="15" fill="rgb(222,116,37)" fg:x="258922515192" fg:w="228920665"/><text x="37.7790%" y="911.50"></text></g><g><title>flate2::zlib::read::ZlibDecoder&lt;R&gt;::new_with_buf (133,137,695 samples, 0.02%)</title><rect x="37.5429%" y="885" width="0.0193%" height="15" fill="rgb(254,17,48)" fg:x="259018298162" fg:w="133137695"/><text x="37.7929%" y="895.50"></text></g><g><title>flate2::zlib::bufread::ZlibDecoder&lt;R&gt;::new (133,137,695 samples, 0.02%)</title><rect x="37.5429%" y="869" width="0.0193%" height="15" fill="rgb(224,36,32)" fg:x="259018298162" fg:w="133137695"/><text x="37.7929%" y="879.50"></text></g><g><title>flate2::mem::Decompress::new (133,137,695 samples, 0.02%)</title><rect x="37.5429%" y="853" width="0.0193%" height="15" fill="rgb(232,90,46)" fg:x="259018298162" fg:w="133137695"/><text x="37.7929%" y="863.50"></text></g><g><title>&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::make (133,137,695 samples, 0.02%)</title><rect x="37.5429%" y="837" width="0.0193%" height="15" fill="rgb(241,66,40)" fg:x="259018298162" fg:w="133137695"/><text x="37.7929%" y="847.50"></text></g><g><title>miniz_oxide::inflate::stream::InflateState::new_boxed (133,137,695 samples, 0.02%)</title><rect x="37.5429%" y="821" width="0.0193%" height="15" fill="rgb(249,184,29)" fg:x="259018298162" fg:w="133137695"/><text x="37.7929%" y="831.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::default::Default&gt;::default (133,137,695 samples, 0.02%)</title><rect x="37.5429%" y="805" width="0.0193%" height="15" fill="rgb(231,181,1)" fg:x="259018298162" fg:w="133137695"/><text x="37.7929%" y="815.50"></text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::write (130,930,407 samples, 0.02%)</title><rect x="37.5433%" y="789" width="0.0190%" height="15" fill="rgb(224,94,2)" fg:x="259020505450" fg:w="130930407"/><text x="37.7933%" y="799.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (130,930,407 samples, 0.02%)</title><rect x="37.5433%" y="773" width="0.0190%" height="15" fill="rgb(229,170,15)" fg:x="259020505450" fg:w="130930407"/><text x="37.7933%" y="783.50"></text></g><g><title>llvm_profparser::util::parse_path_list (338,640,123 samples, 0.05%)</title><rect x="37.5222%" y="917" width="0.0491%" height="15" fill="rgb(240,127,35)" fg:x="258875586669" fg:w="338640123"/><text x="37.7722%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3,665,443,061 samples, 0.53%)</title><rect x="37.0471%" y="965" width="0.5313%" height="15" fill="rgb(248,196,34)" fg:x="255597112681" fg:w="3665443061"/><text x="37.2971%" y="975.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::read_object_file::_{{closure}} (3,665,443,061 samples, 0.53%)</title><rect x="37.0471%" y="949" width="0.5313%" height="15" fill="rgb(236,137,7)" fg:x="255597112681" fg:w="3665443061"/><text x="37.2971%" y="959.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::parse_coverage_mapping (386,969,073 samples, 0.06%)</title><rect x="37.5222%" y="933" width="0.0561%" height="15" fill="rgb(235,127,16)" fg:x="258875586669" fg:w="386969073"/><text x="37.7722%" y="943.50"></text></g><g><title>tlb_finish_mmu (122,482,144 samples, 0.02%)</title><rect x="37.5788%" y="709" width="0.0178%" height="15" fill="rgb(250,192,54)" fg:x="259265998180" fg:w="122482144"/><text x="37.8288%" y="719.50"></text></g><g><title>__tlb_batch_free_encoded_pages (122,482,144 samples, 0.02%)</title><rect x="37.5788%" y="693" width="0.0178%" height="15" fill="rgb(218,98,20)" fg:x="259265998180" fg:w="122482144"/><text x="37.8288%" y="703.50"></text></g><g><title>free_pages_and_swap_cache (122,482,144 samples, 0.02%)</title><rect x="37.5788%" y="677" width="0.0178%" height="15" fill="rgb(230,176,47)" fg:x="259265998180" fg:w="122482144"/><text x="37.8288%" y="687.50"></text></g><g><title>folios_put_refs (115,600,486 samples, 0.02%)</title><rect x="37.5798%" y="661" width="0.0168%" height="15" fill="rgb(244,2,33)" fg:x="259272879838" fg:w="115600486"/><text x="37.8298%" y="671.50"></text></g><g><title>__rcu_read_unlock (238,861,307 samples, 0.03%)</title><rect x="37.8983%" y="549" width="0.0346%" height="15" fill="rgb(231,100,17)" fg:x="261470265589" fg:w="238861307"/><text x="38.1483%" y="559.50"></text></g><g><title>memcg1_uncharge_batch (119,220,136 samples, 0.02%)</title><rect x="37.9377%" y="533" width="0.0173%" height="15" fill="rgb(245,23,12)" fg:x="261742069588" fg:w="119220136"/><text x="38.1877%" y="543.50"></text></g><g><title>page_counter_uncharge (107,819,534 samples, 0.02%)</title><rect x="37.9550%" y="533" width="0.0156%" height="15" fill="rgb(249,55,22)" fg:x="261861289724" fg:w="107819534"/><text x="38.2050%" y="543.50"></text></g><g><title>uncharge_batch (256,538,312 samples, 0.04%)</title><rect x="37.9336%" y="549" width="0.0372%" height="15" fill="rgb(207,134,9)" fg:x="261713687380" fg:w="256538312"/><text x="38.1836%" y="559.50"></text></g><g><title>__rcu_read_lock (101,670,262 samples, 0.01%)</title><rect x="38.0410%" y="533" width="0.0147%" height="15" fill="rgb(218,134,0)" fg:x="262454417670" fg:w="101670262"/><text x="38.2910%" y="543.50"></text></g><g><title>__mem_cgroup_uncharge_folios (1,184,369,460 samples, 0.17%)</title><rect x="37.8852%" y="565" width="0.1717%" height="15" fill="rgb(213,212,33)" fg:x="261379545892" fg:w="1184369460"/><text x="38.1352%" y="575.50"></text></g><g><title>uncharge_folio (593,689,660 samples, 0.09%)</title><rect x="37.9708%" y="549" width="0.0861%" height="15" fill="rgb(252,106,18)" fg:x="261970225692" fg:w="593689660"/><text x="38.2208%" y="559.50"></text></g><g><title>folio_lruvec_lock_irqsave (71,806,531 samples, 0.01%)</title><rect x="38.1304%" y="549" width="0.0104%" height="15" fill="rgb(208,126,42)" fg:x="263071098150" fg:w="71806531"/><text x="38.3804%" y="559.50"></text></g><g><title>__list_del_entry_valid_or_report (80,025,969 samples, 0.01%)</title><rect x="38.4816%" y="533" width="0.0116%" height="15" fill="rgb(246,175,29)" fg:x="265494228700" fg:w="80025969"/><text x="38.7316%" y="543.50"></text></g><g><title>__mod_node_page_state (143,262,150 samples, 0.02%)</title><rect x="38.5113%" y="517" width="0.0208%" height="15" fill="rgb(215,13,50)" fg:x="265699484430" fg:w="143262150"/><text x="38.7613%" y="527.50"></text></g><g><title>__mod_lruvec_state (277,633,585 samples, 0.04%)</title><rect x="38.4932%" y="533" width="0.0402%" height="15" fill="rgb(216,172,15)" fg:x="265574254669" fg:w="277633585"/><text x="38.7432%" y="543.50"></text></g><g><title>__mod_memcg_lruvec_state (233,727,372 samples, 0.03%)</title><rect x="38.5334%" y="533" width="0.0339%" height="15" fill="rgb(212,103,13)" fg:x="265851888254" fg:w="233727372"/><text x="38.7834%" y="543.50"></text></g><g><title>__mod_zone_page_state (361,071,295 samples, 0.05%)</title><rect x="38.5673%" y="533" width="0.0523%" height="15" fill="rgb(231,171,36)" fg:x="266085615626" fg:w="361071295"/><text x="38.8173%" y="543.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (3,319,525,310 samples, 0.48%)</title><rect x="38.1408%" y="549" width="0.4811%" height="15" fill="rgb(250,123,20)" fg:x="263142904681" fg:w="3319525310"/><text x="38.3908%" y="559.50"></text></g><g><title>__page_cache_release.part.0 (3,904,215,838 samples, 0.57%)</title><rect x="38.0568%" y="565" width="0.5659%" height="15" fill="rgb(212,53,50)" fg:x="262563915352" fg:w="3904215838"/><text x="38.3068%" y="575.50"></text></g><g><title>__list_add_valid_or_report (221,028,059 samples, 0.03%)</title><rect x="38.8191%" y="533" width="0.0320%" height="15" fill="rgb(243,54,12)" fg:x="267822729388" fg:w="221028059"/><text x="39.0691%" y="543.50"></text></g><g><title>__mod_zone_page_state (234,394,819 samples, 0.03%)</title><rect x="39.3329%" y="501" width="0.0340%" height="15" fill="rgb(234,101,34)" fg:x="271367640325" fg:w="234394819"/><text x="39.5829%" y="511.50"></text></g><g><title>__free_one_page (2,433,440,006 samples, 0.35%)</title><rect x="39.0196%" y="517" width="0.3527%" height="15" fill="rgb(254,67,22)" fg:x="269206270361" fg:w="2433440006"/><text x="39.2696%" y="527.50"></text></g><g><title>__list_del_entry_valid_or_report (395,714,355 samples, 0.06%)</title><rect x="39.3723%" y="517" width="0.0574%" height="15" fill="rgb(250,35,47)" fg:x="271639710367" fg:w="395714355"/><text x="39.6223%" y="527.50"></text></g><g><title>free_pcppages_bulk (3,976,610,547 samples, 0.58%)</title><rect x="38.8572%" y="533" width="0.5764%" height="15" fill="rgb(226,126,38)" fg:x="268085554188" fg:w="3976610547"/><text x="39.1072%" y="543.50"></text></g><g><title>free_frozen_page_commit (4,854,463,227 samples, 0.70%)</title><rect x="38.7353%" y="549" width="0.7036%" height="15" fill="rgb(216,138,53)" fg:x="267245055768" fg:w="4854463227"/><text x="38.9853%" y="559.50"></text></g><g><title>get_pfnblock_flags_mask (160,655,390 samples, 0.02%)</title><rect x="39.4390%" y="549" width="0.0233%" height="15" fill="rgb(246,199,43)" fg:x="272099518995" fg:w="160655390"/><text x="39.6890%" y="559.50"></text></g><g><title>free_unref_folios (5,804,681,364 samples, 0.84%)</title><rect x="38.6282%" y="565" width="0.8413%" height="15" fill="rgb(232,125,11)" fg:x="266506152026" fg:w="5804681364"/><text x="38.8782%" y="575.50"></text></g><g><title>folios_put_refs (11,169,888,502 samples, 1.62%)</title><rect x="37.8511%" y="581" width="1.6190%" height="15" fill="rgb(218,219,45)" fg:x="261144371084" fg:w="11169888502"/><text x="38.1011%" y="591.50"></text></g><g><title>tlb_flush_mmu (11,831,728,237 samples, 1.71%)</title><rect x="37.7697%" y="629" width="1.7149%" height="15" fill="rgb(216,102,54)" fg:x="260583034175" fg:w="11831728237"/><text x="38.0197%" y="639.50"></text></g><g><title>__tlb_batch_free_encoded_pages (11,830,616,896 samples, 1.71%)</title><rect x="37.7699%" y="613" width="1.7148%" height="15" fill="rgb(250,228,7)" fg:x="260584145516" fg:w="11830616896"/><text x="38.0199%" y="623.50"></text></g><g><title>free_pages_and_swap_cache (11,826,070,583 samples, 1.71%)</title><rect x="37.7705%" y="597" width="1.7141%" height="15" fill="rgb(226,125,25)" fg:x="260588691829" fg:w="11826070583"/><text x="38.0205%" y="607.50"></text></g><g><title>__tlb_remove_folio_pages (208,094,261 samples, 0.03%)</title><rect x="39.9843%" y="613" width="0.0302%" height="15" fill="rgb(224,165,27)" fg:x="275861680576" fg:w="208094261"/><text x="40.2343%" y="623.50"></text></g><g><title>__mod_memcg_lruvec_state (241,709,640 samples, 0.04%)</title><rect x="40.3990%" y="581" width="0.0350%" height="15" fill="rgb(233,86,3)" fg:x="278723218168" fg:w="241709640"/><text x="40.6490%" y="591.50"></text></g><g><title>__mod_node_page_state (120,065,276 samples, 0.02%)</title><rect x="40.4341%" y="581" width="0.0174%" height="15" fill="rgb(228,116,20)" fg:x="278964927808" fg:w="120065276"/><text x="40.6841%" y="591.50"></text></g><g><title>__lruvec_stat_mod_folio (1,354,143,874 samples, 0.20%)</title><rect x="40.2718%" y="597" width="0.1963%" height="15" fill="rgb(209,192,17)" fg:x="277845811985" fg:w="1354143874"/><text x="40.5218%" y="607.50"></text></g><g><title>srso_alias_return_thunk (92,698,204 samples, 0.01%)</title><rect x="40.4547%" y="581" width="0.0134%" height="15" fill="rgb(224,88,34)" fg:x="279107257655" fg:w="92698204"/><text x="40.7047%" y="591.50"></text></g><g><title>folio_remove_rmap_ptes (3,151,010,338 samples, 0.46%)</title><rect x="40.0201%" y="613" width="0.4567%" height="15" fill="rgb(233,38,6)" fg:x="276109040909" fg:w="3151010338"/><text x="40.2701%" y="623.50"></text></g><g><title>vms_complete_munmap_vmas (20,490,666,671 samples, 2.97%)</title><rect x="37.5783%" y="741" width="2.9700%" height="15" fill="rgb(212,59,30)" fg:x="259262555742" fg:w="20490666671"/><text x="37.8283%" y="751.50">vms..</text></g><g><title>vms_clear_ptes (20,490,666,671 samples, 2.97%)</title><rect x="37.5783%" y="725" width="2.9700%" height="15" fill="rgb(213,80,3)" fg:x="259262555742" fg:w="20490666671"/><text x="37.8283%" y="735.50">vms..</text></g><g><title>unmap_vmas (20,364,742,089 samples, 2.95%)</title><rect x="37.5966%" y="709" width="2.9517%" height="15" fill="rgb(251,178,7)" fg:x="259388480324" fg:w="20364742089"/><text x="37.8466%" y="719.50">unm..</text></g><g><title>unmap_page_range (20,364,742,089 samples, 2.95%)</title><rect x="37.5966%" y="693" width="2.9517%" height="15" fill="rgb(213,154,26)" fg:x="259388480324" fg:w="20364742089"/><text x="37.8466%" y="703.50">unm..</text></g><g><title>zap_pud_range.isra.0 (20,364,742,089 samples, 2.95%)</title><rect x="37.5966%" y="677" width="2.9517%" height="15" fill="rgb(238,165,49)" fg:x="259388480324" fg:w="20364742089"/><text x="37.8466%" y="687.50">zap..</text></g><g><title>zap_pmd_range.isra.0 (20,364,742,089 samples, 2.95%)</title><rect x="37.5966%" y="661" width="2.9517%" height="15" fill="rgb(248,91,46)" fg:x="259388480324" fg:w="20364742089"/><text x="37.8466%" y="671.50">zap..</text></g><g><title>zap_pte_range (20,363,597,387 samples, 2.95%)</title><rect x="37.5968%" y="645" width="2.9516%" height="15" fill="rgb(244,21,52)" fg:x="259389625026" fg:w="20363597387"/><text x="37.8468%" y="655.50">zap..</text></g><g><title>zap_present_ptes.constprop.0 (7,338,460,001 samples, 1.06%)</title><rect x="39.4847%" y="629" width="1.0637%" height="15" fill="rgb(247,122,20)" fg:x="272414762412" fg:w="7338460001"/><text x="39.7347%" y="639.50"></text></g><g><title>vm_normal_page (459,948,339 samples, 0.07%)</title><rect x="40.4816%" y="613" width="0.0667%" height="15" fill="rgb(218,27,9)" fg:x="279293274074" fg:w="459948339"/><text x="40.7316%" y="623.50"></text></g><g><title>do_vmi_align_munmap (20,491,740,879 samples, 2.97%)</title><rect x="37.5783%" y="757" width="2.9701%" height="15" fill="rgb(246,7,6)" fg:x="259262555742" fg:w="20491740879"/><text x="37.8283%" y="767.50">do_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (20,492,759,031 samples, 2.97%)</title><rect x="37.5783%" y="965" width="2.9703%" height="15" fill="rgb(227,135,54)" fg:x="259262555742" fg:w="20492759031"/><text x="37.8283%" y="975.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (20,492,759,031 samples, 2.97%)</title><rect x="37.5783%" y="949" width="2.9703%" height="15" fill="rgb(247,14,11)" fg:x="259262555742" fg:w="20492759031"/><text x="37.8283%" y="959.50">cor..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20,492,759,031 samples, 2.97%)</title><rect x="37.5783%" y="933" width="2.9703%" height="15" fill="rgb(206,149,34)" fg:x="259262555742" fg:w="20492759031"/><text x="37.8283%" y="943.50">&lt;al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (20,492,759,031 samples, 2.97%)</title><rect x="37.5783%" y="917" width="2.9703%" height="15" fill="rgb(227,228,4)" fg:x="259262555742" fg:w="20492759031"/><text x="37.8283%" y="927.50">all..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20,492,759,031 samples, 2.97%)</title><rect x="37.5783%" y="901" width="2.9703%" height="15" fill="rgb(238,218,28)" fg:x="259262555742" fg:w="20492759031"/><text x="37.8283%" y="911.50">&lt;al..</text></g><g><title>alloc::alloc::dealloc (20,492,759,031 samples, 2.97%)</title><rect x="37.5783%" y="885" width="2.9703%" height="15" fill="rgb(252,86,40)" fg:x="259262555742" fg:w="20492759031"/><text x="37.8283%" y="895.50">all..</text></g><g><title>cfree@GLIBC_2.2.5 (20,492,759,031 samples, 2.97%)</title><rect x="37.5783%" y="869" width="2.9703%" height="15" fill="rgb(251,225,11)" fg:x="259262555742" fg:w="20492759031"/><text x="37.8283%" y="879.50">cfr..</text></g><g><title>__munmap (20,492,759,031 samples, 2.97%)</title><rect x="37.5783%" y="853" width="2.9703%" height="15" fill="rgb(206,46,49)" fg:x="259262555742" fg:w="20492759031"/><text x="37.8283%" y="863.50">__m..</text></g><g><title>entry_SYSCALL_64_after_hwframe (20,492,759,031 samples, 2.97%)</title><rect x="37.5783%" y="837" width="2.9703%" height="15" fill="rgb(245,128,24)" fg:x="259262555742" fg:w="20492759031"/><text x="37.8283%" y="847.50">ent..</text></g><g><title>do_syscall_64 (20,492,759,031 samples, 2.97%)</title><rect x="37.5783%" y="821" width="2.9703%" height="15" fill="rgb(219,177,34)" fg:x="259262555742" fg:w="20492759031"/><text x="37.8283%" y="831.50">do_..</text></g><g><title>__x64_sys_munmap (20,492,759,031 samples, 2.97%)</title><rect x="37.5783%" y="805" width="2.9703%" height="15" fill="rgb(218,60,48)" fg:x="259262555742" fg:w="20492759031"/><text x="37.8283%" y="815.50">__x..</text></g><g><title>__vm_munmap (20,492,759,031 samples, 2.97%)</title><rect x="37.5783%" y="789" width="2.9703%" height="15" fill="rgb(221,11,5)" fg:x="259262555742" fg:w="20492759031"/><text x="37.8283%" y="799.50">__v..</text></g><g><title>do_vmi_munmap (20,492,759,031 samples, 2.97%)</title><rect x="37.5783%" y="773" width="2.9703%" height="15" fill="rgb(220,148,13)" fg:x="259262555742" fg:w="20492759031"/><text x="37.8283%" y="783.50">do_..</text></g><g><title>blk_complete_request.constprop.0 (112,710,419 samples, 0.02%)</title><rect x="44.1511%" y="597" width="0.0163%" height="15" fill="rgb(210,16,3)" fg:x="304609776854" fg:w="112710419"/><text x="44.4011%" y="607.50"></text></g><g><title>queue_work_on (75,644,464 samples, 0.01%)</title><rect x="44.1565%" y="581" width="0.0110%" height="15" fill="rgb(236,80,2)" fg:x="304646842809" fg:w="75644464"/><text x="44.4065%" y="591.50"></text></g><g><title>__queue_work (72,230,552 samples, 0.01%)</title><rect x="44.1570%" y="565" width="0.0105%" height="15" fill="rgb(239,129,19)" fg:x="304650256721" fg:w="72230552"/><text x="44.4070%" y="575.50"></text></g><g><title>blk_mq_end_request_batch (196,756,355 samples, 0.03%)</title><rect x="44.1437%" y="613" width="0.0285%" height="15" fill="rgb(220,106,35)" fg:x="304558848130" fg:w="196756355"/><text x="44.3937%" y="623.50"></text></g><g><title>amd_iommu_unmap_pages (89,302,616 samples, 0.01%)</title><rect x="44.1892%" y="549" width="0.0129%" height="15" fill="rgb(252,139,45)" fg:x="304872850173" fg:w="89302616"/><text x="44.4392%" y="559.50"></text></g><g><title>__iommu_unmap (104,863,675 samples, 0.02%)</title><rect x="44.1876%" y="565" width="0.0152%" height="15" fill="rgb(229,8,36)" fg:x="304861589656" fg:w="104863675"/><text x="44.4376%" y="575.50"></text></g><g><title>__iommu_dma_unmap (136,048,775 samples, 0.02%)</title><rect x="44.1857%" y="581" width="0.0197%" height="15" fill="rgb(230,126,33)" fg:x="304848315293" fg:w="136048775"/><text x="44.4357%" y="591.50"></text></g><g><title>nvme_pci_complete_batch (257,483,572 samples, 0.04%)</title><rect x="44.1722%" y="613" width="0.0373%" height="15" fill="rgb(239,140,21)" fg:x="304755604485" fg:w="257483572"/><text x="44.4222%" y="623.50"></text></g><g><title>nvme_unmap_data (172,658,091 samples, 0.03%)</title><rect x="44.1845%" y="597" width="0.0250%" height="15" fill="rgb(254,104,9)" fg:x="304840429966" fg:w="172658091"/><text x="44.4345%" y="607.50"></text></g><g><title>__handle_irq_event_percpu (545,276,235 samples, 0.08%)</title><rect x="44.1354%" y="645" width="0.0790%" height="15" fill="rgb(239,52,14)" fg:x="304501102565" fg:w="545276235"/><text x="44.3854%" y="655.50"></text></g><g><title>nvme_irq (497,502,707 samples, 0.07%)</title><rect x="44.1423%" y="629" width="0.0721%" height="15" fill="rgb(208,227,44)" fg:x="304548876093" fg:w="497502707"/><text x="44.3923%" y="639.50"></text></g><g><title>handle_irq_event (576,597,787 samples, 0.08%)</title><rect x="44.1329%" y="661" width="0.0836%" height="15" fill="rgb(246,18,19)" fg:x="304484393597" fg:w="576597787"/><text x="44.3829%" y="671.50"></text></g><g><title>__common_interrupt (601,864,871 samples, 0.09%)</title><rect x="44.1304%" y="693" width="0.0872%" height="15" fill="rgb(235,228,25)" fg:x="304466903177" fg:w="601864871"/><text x="44.3804%" y="703.50"></text></g><g><title>handle_edge_irq (596,580,272 samples, 0.09%)</title><rect x="44.1312%" y="677" width="0.0865%" height="15" fill="rgb(240,156,20)" fg:x="304472187776" fg:w="596580272"/><text x="44.3812%" y="687.50"></text></g><g><title>common_interrupt (672,977,897 samples, 0.10%)</title><rect x="44.1278%" y="709" width="0.0975%" height="15" fill="rgb(224,8,20)" fg:x="304449229258" fg:w="672977897"/><text x="44.3778%" y="719.50"></text></g><g><title>asm_common_interrupt (674,092,533 samples, 0.10%)</title><rect x="44.1278%" y="725" width="0.0977%" height="15" fill="rgb(214,12,52)" fg:x="304449229258" fg:w="674092533"/><text x="44.3778%" y="735.50"></text></g><g><title>__pkru_allows_pkey (169,498,886 samples, 0.02%)</title><rect x="45.7546%" y="677" width="0.0246%" height="15" fill="rgb(211,220,47)" fg:x="315672578025" fg:w="169498886"/><text x="46.0046%" y="687.50"></text></g><g><title>blk_mq_end_request_batch (94,814,050 samples, 0.01%)</title><rect x="45.7851%" y="565" width="0.0137%" height="15" fill="rgb(250,173,5)" fg:x="315883401892" fg:w="94814050"/><text x="46.0351%" y="575.50"></text></g><g><title>__iommu_dma_unmap (81,003,268 samples, 0.01%)</title><rect x="45.8031%" y="533" width="0.0117%" height="15" fill="rgb(250,125,52)" fg:x="316007238397" fg:w="81003268"/><text x="46.0531%" y="543.50"></text></g><g><title>nvme_pci_complete_batch (117,790,598 samples, 0.02%)</title><rect x="45.7989%" y="565" width="0.0171%" height="15" fill="rgb(209,133,18)" fg:x="315978215942" fg:w="117790598"/><text x="46.0489%" y="575.50"></text></g><g><title>nvme_unmap_data (89,923,157 samples, 0.01%)</title><rect x="45.8029%" y="549" width="0.0130%" height="15" fill="rgb(216,173,22)" fg:x="316006083383" fg:w="89923157"/><text x="46.0529%" y="559.50"></text></g><g><title>__handle_irq_event_percpu (242,816,683 samples, 0.04%)</title><rect x="45.7820%" y="597" width="0.0352%" height="15" fill="rgb(205,3,22)" fg:x="315862044557" fg:w="242816683"/><text x="46.0320%" y="607.50"></text></g><g><title>nvme_irq (224,832,591 samples, 0.03%)</title><rect x="45.7846%" y="581" width="0.0326%" height="15" fill="rgb(248,22,20)" fg:x="315880028649" fg:w="224832591"/><text x="46.0346%" y="591.50"></text></g><g><title>handle_irq_event (250,772,644 samples, 0.04%)</title><rect x="45.7814%" y="613" width="0.0363%" height="15" fill="rgb(233,6,29)" fg:x="315857499493" fg:w="250772644"/><text x="46.0314%" y="623.50"></text></g><g><title>__common_interrupt (266,226,921 samples, 0.04%)</title><rect x="45.7795%" y="645" width="0.0386%" height="15" fill="rgb(240,22,54)" fg:x="315844357048" fg:w="266226921"/><text x="46.0295%" y="655.50"></text></g><g><title>handle_edge_irq (260,852,887 samples, 0.04%)</title><rect x="45.7803%" y="629" width="0.0378%" height="15" fill="rgb(231,133,32)" fg:x="315849731082" fg:w="260852887"/><text x="46.0303%" y="639.50"></text></g><g><title>asm_common_interrupt (300,767,419 samples, 0.04%)</title><rect x="45.7791%" y="677" width="0.0436%" height="15" fill="rgb(248,193,4)" fg:x="315842076911" fg:w="300767419"/><text x="46.0291%" y="687.50"></text></g><g><title>common_interrupt (300,767,419 samples, 0.04%)</title><rect x="45.7791%" y="661" width="0.0436%" height="15" fill="rgb(211,178,46)" fg:x="315842076911" fg:w="300767419"/><text x="46.0291%" y="671.50"></text></g><g><title>__hrtimer_run_queues (75,624,819 samples, 0.01%)</title><rect x="45.8257%" y="613" width="0.0110%" height="15" fill="rgb(224,5,42)" fg:x="316163040813" fg:w="75624819"/><text x="46.0757%" y="623.50"></text></g><g><title>tick_nohz_handler (72,324,262 samples, 0.01%)</title><rect x="45.8261%" y="597" width="0.0105%" height="15" fill="rgb(239,176,25)" fg:x="316166341370" fg:w="72324262"/><text x="46.0761%" y="607.50"></text></g><g><title>__sysvec_apic_timer_interrupt (83,472,426 samples, 0.01%)</title><rect x="45.8252%" y="645" width="0.0121%" height="15" fill="rgb(245,187,50)" fg:x="316159734126" fg:w="83472426"/><text x="46.0752%" y="655.50"></text></g><g><title>hrtimer_interrupt (82,370,664 samples, 0.01%)</title><rect x="45.8253%" y="629" width="0.0119%" height="15" fill="rgb(248,24,15)" fg:x="316160835888" fg:w="82370664"/><text x="46.0753%" y="639.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (102,608,768 samples, 0.01%)</title><rect x="45.8227%" y="677" width="0.0149%" height="15" fill="rgb(205,166,13)" fg:x="316142844330" fg:w="102608768"/><text x="46.0727%" y="687.50"></text></g><g><title>sysvec_apic_timer_interrupt (102,608,768 samples, 0.01%)</title><rect x="45.8227%" y="661" width="0.0149%" height="15" fill="rgb(208,114,23)" fg:x="316142844330" fg:w="102608768"/><text x="46.0727%" y="671.50"></text></g><g><title>asm_common_interrupt (74,344,703 samples, 0.01%)</title><rect x="46.5052%" y="645" width="0.0108%" height="15" fill="rgb(239,127,18)" fg:x="320851305804" fg:w="74344703"/><text x="46.7552%" y="655.50"></text></g><g><title>common_interrupt (74,344,703 samples, 0.01%)</title><rect x="46.5052%" y="629" width="0.0108%" height="15" fill="rgb(219,154,28)" fg:x="320851305804" fg:w="74344703"/><text x="46.7552%" y="639.50"></text></g><g><title>__handle_irq_event_percpu (118,144,798 samples, 0.02%)</title><rect x="47.0932%" y="501" width="0.0171%" height="15" fill="rgb(225,157,23)" fg:x="324908198621" fg:w="118144798"/><text x="47.3432%" y="511.50"></text></g><g><title>nvme_irq (104,925,068 samples, 0.02%)</title><rect x="47.0951%" y="485" width="0.0152%" height="15" fill="rgb(219,8,6)" fg:x="324921418351" fg:w="104925068"/><text x="47.3451%" y="495.50"></text></g><g><title>handle_irq_event (124,903,806 samples, 0.02%)</title><rect x="47.0927%" y="517" width="0.0181%" height="15" fill="rgb(212,47,6)" fg:x="324904816659" fg:w="124903806"/><text x="47.3427%" y="527.50"></text></g><g><title>__common_interrupt (128,145,521 samples, 0.02%)</title><rect x="47.0924%" y="549" width="0.0186%" height="15" fill="rgb(224,190,4)" fg:x="324902570974" fg:w="128145521"/><text x="47.3424%" y="559.50"></text></g><g><title>handle_edge_irq (128,145,521 samples, 0.02%)</title><rect x="47.0924%" y="533" width="0.0186%" height="15" fill="rgb(239,183,29)" fg:x="324902570974" fg:w="128145521"/><text x="47.3424%" y="543.50"></text></g><g><title>common_interrupt (144,905,965 samples, 0.02%)</title><rect x="47.0923%" y="565" width="0.0210%" height="15" fill="rgb(213,57,7)" fg:x="324901520930" fg:w="144905965"/><text x="47.3423%" y="575.50"></text></g><g><title>asm_common_interrupt (145,865,147 samples, 0.02%)</title><rect x="47.0923%" y="581" width="0.0211%" height="15" fill="rgb(216,148,1)" fg:x="324901520930" fg:w="145865147"/><text x="47.3423%" y="591.50"></text></g><g><title>_raw_spin_unlock_irqrestore (207,078,150 samples, 0.03%)</title><rect x="47.0893%" y="597" width="0.0300%" height="15" fill="rgb(236,182,29)" fg:x="324881224821" fg:w="207078150"/><text x="47.3393%" y="607.50"></text></g><g><title>__raw_spin_lock_irqsave (421,513,180 samples, 0.06%)</title><rect x="47.1218%" y="581" width="0.0611%" height="15" fill="rgb(244,120,48)" fg:x="325105159797" fg:w="421513180"/><text x="47.3718%" y="591.50"></text></g><g><title>native_queued_spin_lock_slowpath (400,591,913 samples, 0.06%)</title><rect x="47.1248%" y="565" width="0.0581%" height="15" fill="rgb(206,71,34)" fg:x="325126081064" fg:w="400591913"/><text x="47.3748%" y="575.50"></text></g><g><title>folio_lruvec_lock_irqsave (438,378,090 samples, 0.06%)</title><rect x="47.1197%" y="597" width="0.0635%" height="15" fill="rgb(242,32,6)" fg:x="325090581006" fg:w="438378090"/><text x="47.3697%" y="607.50"></text></g><g><title>folios_put_refs (188,585,332 samples, 0.03%)</title><rect x="47.1832%" y="597" width="0.0273%" height="15" fill="rgb(241,35,3)" fg:x="325528959096" fg:w="188585332"/><text x="47.4332%" y="607.50"></text></g><g><title>__rcu_read_lock (233,326,854 samples, 0.03%)</title><rect x="47.4945%" y="581" width="0.0338%" height="15" fill="rgb(222,62,19)" fg:x="327676993447" fg:w="233326854"/><text x="47.7445%" y="591.50"></text></g><g><title>__rcu_read_unlock (106,727,334 samples, 0.02%)</title><rect x="47.5284%" y="581" width="0.0155%" height="15" fill="rgb(223,110,41)" fg:x="327910320301" fg:w="106727334"/><text x="47.7784%" y="591.50"></text></g><g><title>folio_mapping (250,114,974 samples, 0.04%)</title><rect x="47.5438%" y="581" width="0.0363%" height="15" fill="rgb(208,224,4)" fg:x="328017047635" fg:w="250114974"/><text x="47.7938%" y="591.50"></text></g><g><title>__mod_lruvec_state (166,624,983 samples, 0.02%)</title><rect x="47.7661%" y="565" width="0.0242%" height="15" fill="rgb(241,137,19)" fg:x="329550828612" fg:w="166624983"/><text x="48.0161%" y="575.50"></text></g><g><title>cgroup_rstat_updated (107,837,471 samples, 0.02%)</title><rect x="47.8933%" y="549" width="0.0156%" height="15" fill="rgb(244,24,17)" fg:x="330428124747" fg:w="107837471"/><text x="48.1433%" y="559.50"></text></g><g><title>__mod_memcg_lruvec_state (828,444,559 samples, 0.12%)</title><rect x="47.7903%" y="565" width="0.1201%" height="15" fill="rgb(245,178,49)" fg:x="329717453595" fg:w="828444559"/><text x="48.0403%" y="575.50"></text></g><g><title>__mod_zone_page_state (210,615,428 samples, 0.03%)</title><rect x="47.9104%" y="565" width="0.0305%" height="15" fill="rgb(219,160,38)" fg:x="330545898154" fg:w="210615428"/><text x="48.1604%" y="575.50"></text></g><g><title>lru_gen_add_folio (2,518,353,318 samples, 0.37%)</title><rect x="47.5801%" y="581" width="0.3650%" height="15" fill="rgb(228,137,14)" fg:x="328267162609" fg:w="2518353318"/><text x="47.8301%" y="591.50"></text></g><g><title>srso_alias_return_thunk (172,968,332 samples, 0.03%)</title><rect x="47.9451%" y="581" width="0.0251%" height="15" fill="rgb(237,134,11)" fg:x="330785515927" fg:w="172968332"/><text x="48.1951%" y="591.50"></text></g><g><title>srso_alias_safe_ret (123,898,008 samples, 0.02%)</title><rect x="47.9522%" y="565" width="0.0180%" height="15" fill="rgb(211,126,44)" fg:x="330834586251" fg:w="123898008"/><text x="48.2022%" y="575.50"></text></g><g><title>lru_add (5,325,780,187 samples, 0.77%)</title><rect x="47.2105%" y="597" width="0.7719%" height="15" fill="rgb(226,171,33)" fg:x="325717544428" fg:w="5325780187"/><text x="47.4605%" y="607.50"></text></g><g><title>srso_alias_safe_ret (84,840,356 samples, 0.01%)</title><rect x="47.9702%" y="581" width="0.0123%" height="15" fill="rgb(253,99,13)" fg:x="330958484259" fg:w="84840356"/><text x="48.2202%" y="591.50"></text></g><g><title>__folio_batch_add_and_move (7,513,117,823 samples, 1.09%)</title><rect x="46.8990%" y="629" width="1.0890%" height="15" fill="rgb(244,48,7)" fg:x="323568156170" fg:w="7513117823"/><text x="47.1490%" y="639.50"></text></g><g><title>folio_batch_move_lru (6,566,951,024 samples, 0.95%)</title><rect x="47.0361%" y="613" width="0.9518%" height="15" fill="rgb(244,217,54)" fg:x="324514322969" fg:w="6566951024"/><text x="47.2861%" y="623.50"></text></g><g><title>__alloc_frozen_pages_noprof (134,084,532 samples, 0.02%)</title><rect x="47.9922%" y="565" width="0.0194%" height="15" fill="rgb(224,15,18)" fg:x="331110377807" fg:w="134084532"/><text x="48.2422%" y="575.50"></text></g><g><title>alloc_pages_mpol (138,618,856 samples, 0.02%)</title><rect x="47.9919%" y="581" width="0.0201%" height="15" fill="rgb(244,99,12)" fg:x="331108120456" fg:w="138618856"/><text x="48.2419%" y="591.50"></text></g><g><title>alloc_pages_noprof (146,525,782 samples, 0.02%)</title><rect x="47.9909%" y="597" width="0.0212%" height="15" fill="rgb(233,226,8)" fg:x="331101357226" fg:w="146525782"/><text x="48.2409%" y="607.50"></text></g><g><title>__pte_alloc (180,694,298 samples, 0.03%)</title><rect x="47.9883%" y="629" width="0.0262%" height="15" fill="rgb(229,211,3)" fg:x="331083502320" fg:w="180694298"/><text x="48.2383%" y="639.50"></text></g><g><title>pte_alloc_one (167,379,579 samples, 0.02%)</title><rect x="47.9902%" y="613" width="0.0243%" height="15" fill="rgb(216,140,21)" fg:x="331096817039" fg:w="167379579"/><text x="48.2402%" y="623.50"></text></g><g><title>__rcu_read_lock (123,000,649 samples, 0.02%)</title><rect x="48.2906%" y="597" width="0.0178%" height="15" fill="rgb(234,122,30)" fg:x="333169194635" fg:w="123000649"/><text x="48.5406%" y="607.50"></text></g><g><title>___pte_offset_map (690,341,952 samples, 0.10%)</title><rect x="48.2103%" y="613" width="0.1001%" height="15" fill="rgb(236,25,46)" fg:x="332615495045" fg:w="690341952"/><text x="48.4603%" y="623.50"></text></g><g><title>_raw_spin_lock (753,376,489 samples, 0.11%)</title><rect x="48.3104%" y="613" width="0.1092%" height="15" fill="rgb(217,52,54)" fg:x="333305836997" fg:w="753376489"/><text x="48.5604%" y="623.50"></text></g><g><title>__pte_offset_map_lock (2,847,907,173 samples, 0.41%)</title><rect x="48.0145%" y="629" width="0.4128%" height="15" fill="rgb(222,29,26)" fg:x="331264196618" fg:w="2847907173"/><text x="48.2645%" y="639.50"></text></g><g><title>__rcu_read_unlock (103,378,734 samples, 0.01%)</title><rect x="48.4273%" y="629" width="0.0150%" height="15" fill="rgb(216,177,29)" fg:x="334112103791" fg:w="103378734"/><text x="48.6773%" y="639.50"></text></g><g><title>__vmf_anon_prepare (78,326,874 samples, 0.01%)</title><rect x="48.4422%" y="629" width="0.0114%" height="15" fill="rgb(247,136,51)" fg:x="334215482525" fg:w="78326874"/><text x="48.6922%" y="639.50"></text></g><g><title>__rcu_read_lock (203,381,392 samples, 0.03%)</title><rect x="48.8758%" y="581" width="0.0295%" height="15" fill="rgb(231,47,47)" fg:x="337206668523" fg:w="203381392"/><text x="49.1258%" y="591.50"></text></g><g><title>kthread_blkcg (305,829,909 samples, 0.04%)</title><rect x="48.9201%" y="581" width="0.0443%" height="15" fill="rgb(211,192,36)" fg:x="337512644943" fg:w="305829909"/><text x="49.1701%" y="591.50"></text></g><g><title>blk_cgroup_congested (1,574,371,292 samples, 0.23%)</title><rect x="48.7407%" y="597" width="0.2282%" height="15" fill="rgb(229,156,32)" fg:x="336274410590" fg:w="1574371292"/><text x="48.9907%" y="607.50"></text></g><g><title>__folio_throttle_swaprate (2,082,789,684 samples, 0.30%)</title><rect x="48.6689%" y="613" width="0.3019%" height="15" fill="rgb(248,213,20)" fg:x="335779015596" fg:w="2082789684"/><text x="48.9189%" y="623.50"></text></g><g><title>__rcu_read_lock (192,404,687 samples, 0.03%)</title><rect x="49.4998%" y="581" width="0.0279%" height="15" fill="rgb(217,64,7)" fg:x="341512040887" fg:w="192404687"/><text x="49.7498%" y="591.50"></text></g><g><title>__rcu_read_unlock (155,293,571 samples, 0.02%)</title><rect x="49.5277%" y="581" width="0.0225%" height="15" fill="rgb(232,142,8)" fg:x="341704445574" fg:w="155293571"/><text x="49.7777%" y="591.50"></text></g><g><title>cgroup_rstat_updated (224,610,535 samples, 0.03%)</title><rect x="49.9639%" y="549" width="0.0326%" height="15" fill="rgb(224,92,44)" fg:x="344713822516" fg:w="224610535"/><text x="50.2139%" y="559.50"></text></g><g><title>__count_memcg_events (1,425,423,177 samples, 0.21%)</title><rect x="49.7910%" y="565" width="0.2066%" height="15" fill="rgb(214,169,17)" fg:x="343520578689" fg:w="1425423177"/><text x="50.0410%" y="575.50"></text></g><g><title>memcg1_check_events (123,329,396 samples, 0.02%)</title><rect x="50.0081%" y="565" width="0.0179%" height="15" fill="rgb(210,59,37)" fg:x="345018769241" fg:w="123329396"/><text x="50.2581%" y="575.50"></text></g><g><title>memcg1_commit_charge (3,271,387,538 samples, 0.47%)</title><rect x="49.5570%" y="581" width="0.4742%" height="15" fill="rgb(214,116,48)" fg:x="341906395963" fg:w="3271387538"/><text x="49.8070%" y="591.50"></text></g><g><title>consume_stock (1,300,522,841 samples, 0.19%)</title><rect x="50.2775%" y="565" width="0.1885%" height="15" fill="rgb(244,191,6)" fg:x="346877161309" fg:w="1300522841"/><text x="50.5275%" y="575.50"></text></g><g><title>page_counter_try_charge (114,243,891 samples, 0.02%)</title><rect x="50.4661%" y="565" width="0.0166%" height="15" fill="rgb(241,50,52)" fg:x="348178757018" fg:w="114243891"/><text x="50.7161%" y="575.50"></text></g><g><title>charge_memcg (9,321,750,940 samples, 1.35%)</title><rect x="49.1341%" y="597" width="1.3511%" height="15" fill="rgb(236,75,39)" fg:x="338988989410" fg:w="9321750940"/><text x="49.3841%" y="607.50"></text></g><g><title>try_charge_memcg (3,107,027,828 samples, 0.45%)</title><rect x="50.0349%" y="581" width="0.4503%" height="15" fill="rgb(236,99,0)" fg:x="345203712522" fg:w="3107027828"/><text x="50.2849%" y="591.50"></text></g><g><title>__rcu_read_lock (243,222,100 samples, 0.04%)</title><rect x="50.8574%" y="581" width="0.0353%" height="15" fill="rgb(207,202,15)" fg:x="350877952229" fg:w="243222100"/><text x="51.1074%" y="591.50"></text></g><g><title>__rcu_read_unlock (1,665,190,538 samples, 0.24%)</title><rect x="50.8926%" y="581" width="0.2414%" height="15" fill="rgb(233,207,14)" fg:x="351121174329" fg:w="1665190538"/><text x="51.1426%" y="591.50"></text></g><g><title>srso_alias_return_thunk (138,325,447 samples, 0.02%)</title><rect x="51.1393%" y="581" width="0.0200%" height="15" fill="rgb(226,27,51)" fg:x="352823108706" fg:w="138325447"/><text x="51.3893%" y="591.50"></text></g><g><title>srso_alias_safe_ret (97,047,228 samples, 0.01%)</title><rect x="51.1453%" y="565" width="0.0141%" height="15" fill="rgb(206,104,42)" fg:x="352864386925" fg:w="97047228"/><text x="51.3953%" y="575.50"></text></g><g><title>get_mem_cgroup_from_mm (4,704,687,916 samples, 0.68%)</title><rect x="50.4853%" y="597" width="0.6819%" height="15" fill="rgb(212,225,4)" fg:x="348310740350" fg:w="4704687916"/><text x="50.7353%" y="607.50"></text></g><g><title>__mem_cgroup_charge (15,203,741,320 samples, 2.20%)</title><rect x="48.9709%" y="613" width="2.2037%" height="15" fill="rgb(233,96,42)" fg:x="337862921842" fg:w="15203741320"/><text x="49.2209%" y="623.50">_..</text></g><g><title>srso_alias_return_thunk (94,194,127 samples, 0.01%)</title><rect x="51.1803%" y="613" width="0.0137%" height="15" fill="rgb(229,21,32)" fg:x="353105899766" fg:w="94194127"/><text x="51.4303%" y="623.50"></text></g><g><title>srso_alias_safe_ret (90,920,087 samples, 0.01%)</title><rect x="51.1808%" y="597" width="0.0132%" height="15" fill="rgb(226,216,24)" fg:x="353109173806" fg:w="90920087"/><text x="51.4308%" y="607.50"></text></g><g><title>get_page_from_freelist (91,025,357 samples, 0.01%)</title><rect x="52.2160%" y="533" width="0.0132%" height="15" fill="rgb(221,163,17)" fg:x="360251810898" fg:w="91025357"/><text x="52.4660%" y="543.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (175,385,409 samples, 0.03%)</title><rect x="52.2113%" y="549" width="0.0254%" height="15" fill="rgb(216,216,42)" fg:x="360219411998" fg:w="175385409"/><text x="52.4613%" y="559.50"></text></g><g><title>cond_accept_memory (95,663,233 samples, 0.01%)</title><rect x="52.4004%" y="533" width="0.0139%" height="15" fill="rgb(240,118,7)" fg:x="361523648825" fg:w="95663233"/><text x="52.6504%" y="543.50"></text></g><g><title>blk_mq_end_request_batch (112,350,558 samples, 0.02%)</title><rect x="53.2252%" y="389" width="0.0163%" height="15" fill="rgb(221,67,37)" fg:x="367214559408" fg:w="112350558"/><text x="53.4752%" y="399.50"></text></g><g><title>amd_iommu_unmap_pages (90,384,770 samples, 0.01%)</title><rect x="53.2519%" y="325" width="0.0131%" height="15" fill="rgb(241,32,44)" fg:x="367398218017" fg:w="90384770"/><text x="53.5019%" y="335.50"></text></g><g><title>__iommu_unmap (101,463,249 samples, 0.01%)</title><rect x="53.2506%" y="341" width="0.0147%" height="15" fill="rgb(235,204,43)" fg:x="367389423674" fg:w="101463249"/><text x="53.5006%" y="351.50"></text></g><g><title>__iommu_dma_unmap (128,614,848 samples, 0.02%)</title><rect x="53.2489%" y="357" width="0.0186%" height="15" fill="rgb(213,116,10)" fg:x="367378129761" fg:w="128614848"/><text x="53.4989%" y="367.50"></text></g><g><title>nvme_pci_complete_batch (193,997,220 samples, 0.03%)</title><rect x="53.2415%" y="389" width="0.0281%" height="15" fill="rgb(239,15,48)" fg:x="367326909966" fg:w="193997220"/><text x="53.4915%" y="399.50"></text></g><g><title>nvme_unmap_data (150,560,080 samples, 0.02%)</title><rect x="53.2478%" y="373" width="0.0218%" height="15" fill="rgb(207,123,36)" fg:x="367370347106" fg:w="150560080"/><text x="53.4978%" y="383.50"></text></g><g><title>__handle_irq_event_percpu (338,593,792 samples, 0.05%)</title><rect x="53.2219%" y="421" width="0.0491%" height="15" fill="rgb(209,103,30)" fg:x="367191255513" fg:w="338593792"/><text x="53.4719%" y="431.50"></text></g><g><title>nvme_irq (318,623,974 samples, 0.05%)</title><rect x="53.2248%" y="405" width="0.0462%" height="15" fill="rgb(238,100,19)" fg:x="367211225331" fg:w="318623974"/><text x="53.4748%" y="415.50"></text></g><g><title>handle_irq_event (350,705,563 samples, 0.05%)</title><rect x="53.2211%" y="437" width="0.0508%" height="15" fill="rgb(244,30,14)" fg:x="367185709570" fg:w="350705563"/><text x="53.4711%" y="447.50"></text></g><g><title>__common_interrupt (368,288,739 samples, 0.05%)</title><rect x="53.2196%" y="469" width="0.0534%" height="15" fill="rgb(249,174,6)" fg:x="367175726591" fg:w="368288739"/><text x="53.4696%" y="479.50"></text></g><g><title>handle_edge_irq (368,288,739 samples, 0.05%)</title><rect x="53.2196%" y="453" width="0.0534%" height="15" fill="rgb(235,213,41)" fg:x="367175726591" fg:w="368288739"/><text x="53.4696%" y="463.50"></text></g><g><title>common_interrupt (434,329,760 samples, 0.06%)</title><rect x="53.2185%" y="485" width="0.0630%" height="15" fill="rgb(213,118,6)" fg:x="367167891482" fg:w="434329760"/><text x="53.4685%" y="495.50"></text></g><g><title>asm_common_interrupt (436,588,533 samples, 0.06%)</title><rect x="53.2185%" y="501" width="0.0633%" height="15" fill="rgb(235,44,51)" fg:x="367167891482" fg:w="436588533"/><text x="53.4685%" y="511.50"></text></g><g><title>update_process_times (79,215,525 samples, 0.01%)</title><rect x="53.2859%" y="405" width="0.0115%" height="15" fill="rgb(217,9,53)" fg:x="367633133124" fg:w="79215525"/><text x="53.5359%" y="415.50"></text></g><g><title>tick_nohz_handler (89,422,299 samples, 0.01%)</title><rect x="53.2857%" y="421" width="0.0130%" height="15" fill="rgb(237,172,34)" fg:x="367631985368" fg:w="89422299"/><text x="53.5357%" y="431.50"></text></g><g><title>__hrtimer_run_queues (94,917,839 samples, 0.01%)</title><rect x="53.2854%" y="437" width="0.0138%" height="15" fill="rgb(206,206,11)" fg:x="367629926672" fg:w="94917839"/><text x="53.5354%" y="447.50"></text></g><g><title>__sysvec_apic_timer_interrupt (99,119,743 samples, 0.01%)</title><rect x="53.2854%" y="469" width="0.0144%" height="15" fill="rgb(214,149,29)" fg:x="367629926672" fg:w="99119743"/><text x="53.5354%" y="479.50"></text></g><g><title>hrtimer_interrupt (99,119,743 samples, 0.01%)</title><rect x="53.2854%" y="453" width="0.0144%" height="15" fill="rgb(208,123,3)" fg:x="367629926672" fg:w="99119743"/><text x="53.5354%" y="463.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (128,614,093 samples, 0.02%)</title><rect x="53.2818%" y="501" width="0.0186%" height="15" fill="rgb(229,126,4)" fg:x="367604480015" fg:w="128614093"/><text x="53.5318%" y="511.50"></text></g><g><title>sysvec_apic_timer_interrupt (125,291,967 samples, 0.02%)</title><rect x="53.2822%" y="485" width="0.0182%" height="15" fill="rgb(222,92,36)" fg:x="367607802141" fg:w="125291967"/><text x="53.5322%" y="495.50"></text></g><g><title>clear_page_erms (5,711,191,447 samples, 0.83%)</title><rect x="52.4728%" y="517" width="0.8278%" height="15" fill="rgb(216,39,41)" fg:x="362023041725" fg:w="5711191447"/><text x="52.7228%" y="527.50"></text></g><g><title>post_alloc_hook (6,160,030,779 samples, 0.89%)</title><rect x="52.4144%" y="533" width="0.8929%" height="15" fill="rgb(253,127,28)" fg:x="361620463328" fg:w="6160030779"/><text x="52.6644%" y="543.50"></text></g><g><title>__list_del_entry_valid_or_report (479,307,222 samples, 0.07%)</title><rect x="53.5426%" y="485" width="0.0695%" height="15" fill="rgb(249,152,51)" fg:x="369404410630" fg:w="479307222"/><text x="53.7926%" y="495.50"></text></g><g><title>__list_add_valid_or_report (163,136,199 samples, 0.02%)</title><rect x="53.9376%" y="469" width="0.0236%" height="15" fill="rgb(209,123,42)" fg:x="372129034863" fg:w="163136199"/><text x="54.1876%" y="479.50"></text></g><g><title>__list_del_entry_valid_or_report (1,004,258,692 samples, 0.15%)</title><rect x="53.9612%" y="469" width="0.1456%" height="15" fill="rgb(241,118,22)" fg:x="372292171062" fg:w="1004258692"/><text x="54.2112%" y="479.50"></text></g><g><title>__mod_zone_page_state (142,115,711 samples, 0.02%)</title><rect x="54.1068%" y="469" width="0.0206%" height="15" fill="rgb(208,25,7)" fg:x="373296429754" fg:w="142115711"/><text x="54.3568%" y="479.50"></text></g><g><title>_raw_spin_unlock_irqrestore (105,855,225 samples, 0.02%)</title><rect x="54.1355%" y="469" width="0.0153%" height="15" fill="rgb(243,144,39)" fg:x="373494443083" fg:w="105855225"/><text x="54.3855%" y="479.50"></text></g><g><title>rmqueue_bulk (3,755,502,983 samples, 0.54%)</title><rect x="53.6129%" y="485" width="0.5443%" height="15" fill="rgb(250,50,5)" fg:x="369889229296" fg:w="3755502983"/><text x="53.8629%" y="495.50"></text></g><g><title>__rmqueue_pcplist (4,539,830,672 samples, 0.66%)</title><rect x="53.5006%" y="501" width="0.6580%" height="15" fill="rgb(207,67,11)" fg:x="369114467926" fg:w="4539830672"/><text x="53.7506%" y="511.50"></text></g><g><title>_raw_spin_trylock (416,356,551 samples, 0.06%)</title><rect x="54.1586%" y="501" width="0.0603%" height="15" fill="rgb(245,204,40)" fg:x="373654298598" fg:w="416356551"/><text x="54.4086%" y="511.50"></text></g><g><title>_raw_spin_unlock (98,385,200 samples, 0.01%)</title><rect x="54.2190%" y="501" width="0.0143%" height="15" fill="rgb(238,228,24)" fg:x="374070655149" fg:w="98385200"/><text x="54.4690%" y="511.50"></text></g><g><title>srso_alias_return_thunk (70,727,263 samples, 0.01%)</title><rect x="54.2371%" y="501" width="0.0103%" height="15" fill="rgb(217,116,22)" fg:x="374195459133" fg:w="70727263"/><text x="54.4871%" y="511.50"></text></g><g><title>rmqueue_pcplist (5,934,602,291 samples, 0.86%)</title><rect x="53.3875%" y="517" width="0.8602%" height="15" fill="rgb(234,98,12)" fg:x="368333877056" fg:w="5934602291"/><text x="53.6375%" y="527.50"></text></g><g><title>rmqueue.isra.0 (6,493,554,590 samples, 0.94%)</title><rect x="53.3073%" y="533" width="0.9412%" height="15" fill="rgb(242,170,50)" fg:x="367780494107" fg:w="6493554590"/><text x="53.5573%" y="543.50"></text></g><g><title>get_page_from_freelist (13,879,133,561 samples, 2.01%)</title><rect x="52.2427%" y="549" width="2.0117%" height="15" fill="rgb(235,7,5)" fg:x="360435705352" fg:w="13879133561"/><text x="52.4927%" y="559.50">g..</text></g><g><title>__alloc_frozen_pages_noprof (16,166,633,029 samples, 2.34%)</title><rect x="51.9165%" y="565" width="2.3432%" height="15" fill="rgb(241,114,28)" fg:x="358185447570" fg:w="16166633029"/><text x="52.1665%" y="575.50">_..</text></g><g><title>_find_first_bit (130,541,172 samples, 0.02%)</title><rect x="54.3417%" y="549" width="0.0189%" height="15" fill="rgb(246,112,42)" fg:x="374917540421" fg:w="130541172"/><text x="54.5917%" y="559.50"></text></g><g><title>policy_nodemask (757,760,234 samples, 0.11%)</title><rect x="54.2622%" y="565" width="0.1098%" height="15" fill="rgb(248,228,14)" fg:x="374368745221" fg:w="757760234"/><text x="54.5122%" y="575.50"></text></g><g><title>srso_alias_return_thunk (101,313,965 samples, 0.01%)</title><rect x="54.3720%" y="565" width="0.0147%" height="15" fill="rgb(208,133,18)" fg:x="375126505455" fg:w="101313965"/><text x="54.6220%" y="575.50"></text></g><g><title>srso_alias_safe_ret (97,933,357 samples, 0.01%)</title><rect x="54.3725%" y="549" width="0.0142%" height="15" fill="rgb(207,35,49)" fg:x="375129886063" fg:w="97933357"/><text x="54.6225%" y="559.50"></text></g><g><title>alloc_pages_mpol (20,338,713,600 samples, 2.95%)</title><rect x="51.4393%" y="581" width="2.9480%" height="15" fill="rgb(205,68,36)" fg:x="354893234660" fg:w="20338713600"/><text x="51.6893%" y="591.50">al..</text></g><g><title>folio_alloc_mpol_noprof (21,662,932,465 samples, 3.14%)</title><rect x="51.3067%" y="597" width="3.1399%" height="15" fill="rgb(245,62,40)" fg:x="353978278721" fg:w="21662932465"/><text x="51.5567%" y="607.50">fol..</text></g><g><title>srso_alias_return_thunk (400,955,804 samples, 0.06%)</title><rect x="54.3885%" y="581" width="0.0581%" height="15" fill="rgb(228,27,24)" fg:x="375240255382" fg:w="400955804"/><text x="54.6385%" y="591.50"></text></g><g><title>srso_alias_safe_ret (400,955,804 samples, 0.06%)</title><rect x="54.3885%" y="565" width="0.0581%" height="15" fill="rgb(253,19,12)" fg:x="375240255382" fg:w="400955804"/><text x="54.6385%" y="575.50"></text></g><g><title>get_vma_policy (471,562,412 samples, 0.07%)</title><rect x="54.4466%" y="597" width="0.0683%" height="15" fill="rgb(232,28,20)" fg:x="375641211186" fg:w="471562412"/><text x="54.6966%" y="607.50"></text></g><g><title>srso_alias_return_thunk (72,045,202 samples, 0.01%)</title><rect x="54.5150%" y="597" width="0.0104%" height="15" fill="rgb(218,35,51)" fg:x="376112773598" fg:w="72045202"/><text x="54.7650%" y="607.50"></text></g><g><title>srso_alias_safe_ret (72,045,202 samples, 0.01%)</title><rect x="54.5150%" y="581" width="0.0104%" height="15" fill="rgb(212,90,40)" fg:x="376112773598" fg:w="72045202"/><text x="54.7650%" y="591.50"></text></g><g><title>alloc_anon_folio (41,840,189,050 samples, 6.06%)</title><rect x="48.4618%" y="629" width="6.0644%" height="15" fill="rgb(220,172,12)" fg:x="334350315424" fg:w="41840189050"/><text x="48.7118%" y="639.50">alloc_an..</text></g><g><title>vma_alloc_folio_noprof (22,987,171,960 samples, 3.33%)</title><rect x="51.1944%" y="613" width="3.3318%" height="15" fill="rgb(226,159,20)" fg:x="353203332514" fg:w="22987171960"/><text x="51.4444%" y="623.50">vma..</text></g><g><title>asm_common_interrupt (72,873,532 samples, 0.01%)</title><rect x="54.5262%" y="629" width="0.0106%" height="15" fill="rgb(234,205,16)" fg:x="376190504474" fg:w="72873532"/><text x="54.7762%" y="639.50"></text></g><g><title>common_interrupt (72,873,532 samples, 0.01%)</title><rect x="54.5262%" y="613" width="0.0106%" height="15" fill="rgb(207,9,39)" fg:x="376190504474" fg:w="72873532"/><text x="54.7762%" y="623.50"></text></g><g><title>folio_add_lru (279,981,210 samples, 0.04%)</title><rect x="54.5410%" y="629" width="0.0406%" height="15" fill="rgb(249,143,15)" fg:x="376292348379" fg:w="279981210"/><text x="54.7910%" y="639.50"></text></g><g><title>folio_add_lru_vma (177,278,631 samples, 0.03%)</title><rect x="54.5816%" y="629" width="0.0257%" height="15" fill="rgb(253,133,29)" fg:x="376572329589" fg:w="177278631"/><text x="54.8316%" y="639.50"></text></g><g><title>__mod_memcg_lruvec_state (266,708,104 samples, 0.04%)</title><rect x="55.0784%" y="581" width="0.0387%" height="15" fill="rgb(221,187,0)" fg:x="380000223613" fg:w="266708104"/><text x="55.3284%" y="591.50"></text></g><g><title>srso_alias_return_thunk (90,066,248 samples, 0.01%)</title><rect x="55.1218%" y="581" width="0.0131%" height="15" fill="rgb(205,204,26)" fg:x="380299234547" fg:w="90066248"/><text x="55.3718%" y="591.50"></text></g><g><title>__lruvec_stat_mod_folio (2,293,773,828 samples, 0.33%)</title><rect x="54.8028%" y="597" width="0.3325%" height="15" fill="rgb(224,68,54)" fg:x="378098774231" fg:w="2293773828"/><text x="55.0528%" y="607.50"></text></g><g><title>__folio_mod_stat (2,656,144,933 samples, 0.38%)</title><rect x="54.7619%" y="613" width="0.3850%" height="15" fill="rgb(209,67,4)" fg:x="377816075617" fg:w="2656144933"/><text x="55.0119%" y="623.50"></text></g><g><title>folio_add_new_anon_rmap (3,758,408,165 samples, 0.54%)</title><rect x="54.6073%" y="629" width="0.5448%" height="15" fill="rgb(228,229,18)" fg:x="376749608220" fg:w="3758408165"/><text x="54.8573%" y="639.50"></text></g><g><title>percpu_counter_add_batch (311,998,632 samples, 0.05%)</title><rect x="55.1615%" y="629" width="0.0452%" height="15" fill="rgb(231,89,13)" fg:x="380573467880" fg:w="311998632"/><text x="55.4115%" y="639.50"></text></g><g><title>pte_mkwrite (158,594,566 samples, 0.02%)</title><rect x="55.2115%" y="629" width="0.0230%" height="15" fill="rgb(210,182,18)" fg:x="380918221529" fg:w="158594566"/><text x="55.4615%" y="639.50"></text></g><g><title>srso_alias_return_thunk (143,754,962 samples, 0.02%)</title><rect x="55.2756%" y="613" width="0.0208%" height="15" fill="rgb(240,105,2)" fg:x="381360837650" fg:w="143754962"/><text x="55.5256%" y="623.50"></text></g><g><title>srso_alias_safe_ret (143,754,962 samples, 0.02%)</title><rect x="55.2756%" y="597" width="0.0208%" height="15" fill="rgb(207,170,50)" fg:x="381360837650" fg:w="143754962"/><text x="55.5256%" y="607.50"></text></g><g><title>set_ptes.isra.0 (428,896,970 samples, 0.06%)</title><rect x="55.2345%" y="629" width="0.0622%" height="15" fill="rgb(232,133,24)" fg:x="381076816095" fg:w="428896970"/><text x="55.4845%" y="639.50"></text></g><g><title>srso_alias_return_thunk (257,843,219 samples, 0.04%)</title><rect x="55.2966%" y="629" width="0.0374%" height="15" fill="rgb(235,166,27)" fg:x="381505713065" fg:w="257843219"/><text x="55.5466%" y="639.50"></text></g><g><title>srso_alias_safe_ret (239,064,900 samples, 0.03%)</title><rect x="55.2994%" y="613" width="0.0347%" height="15" fill="rgb(209,19,13)" fg:x="381524491384" fg:w="239064900"/><text x="55.5494%" y="623.50"></text></g><g><title>do_anonymous_page (60,812,343,254 samples, 8.81%)</title><rect x="46.5211%" y="645" width="8.8143%" height="15" fill="rgb(226,79,39)" fg:x="320961161149" fg:w="60812343254"/><text x="46.7711%" y="655.50">do_anonymous..</text></g><g><title>__rcu_read_unlock (155,085,001 samples, 0.02%)</title><rect x="55.4523%" y="629" width="0.0225%" height="15" fill="rgb(222,163,10)" fg:x="382579621511" fg:w="155085001"/><text x="55.7023%" y="639.50"></text></g><g><title>___pte_offset_map (646,749,105 samples, 0.09%)</title><rect x="55.6082%" y="613" width="0.0937%" height="15" fill="rgb(214,44,19)" fg:x="383655265545" fg:w="646749105"/><text x="55.8582%" y="623.50"></text></g><g><title>pte_offset_map_rw_nolock (1,573,312,554 samples, 0.23%)</title><rect x="55.4785%" y="629" width="0.2280%" height="15" fill="rgb(210,217,13)" fg:x="382760321625" fg:w="1573312554"/><text x="55.7285%" y="639.50"></text></g><g><title>handle_pte_fault (2,741,242,224 samples, 0.40%)</title><rect x="55.3355%" y="645" width="0.3973%" height="15" fill="rgb(237,61,54)" fg:x="381773504403" fg:w="2741242224"/><text x="55.5855%" y="655.50"></text></g><g><title>srso_alias_safe_ret (116,702,162 samples, 0.02%)</title><rect x="55.7159%" y="629" width="0.0169%" height="15" fill="rgb(226,184,24)" fg:x="384398044465" fg:w="116702162"/><text x="55.9659%" y="639.50"></text></g><g><title>p4d_offset (70,479,903 samples, 0.01%)</title><rect x="55.7328%" y="645" width="0.0102%" height="15" fill="rgb(223,226,4)" fg:x="384514746627" fg:w="70479903"/><text x="55.9828%" y="655.50"></text></g><g><title>pud_val (169,200,921 samples, 0.02%)</title><rect x="55.7460%" y="645" width="0.0245%" height="15" fill="rgb(210,26,41)" fg:x="384606248068" fg:w="169200921"/><text x="55.9960%" y="655.50"></text></g><g><title>srso_alias_return_thunk (172,498,244 samples, 0.03%)</title><rect x="55.7707%" y="645" width="0.0250%" height="15" fill="rgb(220,221,6)" fg:x="384776581429" fg:w="172498244"/><text x="56.0207%" y="655.50"></text></g><g><title>srso_alias_safe_ret (162,725,106 samples, 0.02%)</title><rect x="55.7721%" y="629" width="0.0236%" height="15" fill="rgb(225,89,49)" fg:x="384786354567" fg:w="162725106"/><text x="56.0221%" y="639.50"></text></g><g><title>__handle_mm_fault (67,478,739,285 samples, 9.78%)</title><rect x="46.0275%" y="661" width="9.7806%" height="15" fill="rgb(218,70,45)" fg:x="317555520616" fg:w="67478739285"/><text x="46.2775%" y="671.50">__handle_mm_fa..</text></g><g><title>srso_alias_safe_ret (85,180,228 samples, 0.01%)</title><rect x="55.7957%" y="645" width="0.0123%" height="15" fill="rgb(238,166,21)" fg:x="384949079673" fg:w="85180228"/><text x="56.0457%" y="655.50"></text></g><g><title>__pkru_allows_pkey (209,157,572 samples, 0.03%)</title><rect x="55.8089%" y="661" width="0.0303%" height="15" fill="rgb(224,141,44)" fg:x="385039828613" fg:w="209157572"/><text x="56.0589%" y="671.50"></text></g><g><title>__rcu_read_unlock (221,069,460 samples, 0.03%)</title><rect x="55.8464%" y="661" width="0.0320%" height="15" fill="rgb(230,12,49)" fg:x="385298327405" fg:w="221069460"/><text x="56.0964%" y="671.50"></text></g><g><title>cgroup_rstat_updated (174,019,513 samples, 0.03%)</title><rect x="56.1701%" y="629" width="0.0252%" height="15" fill="rgb(212,174,12)" fg:x="387531744365" fg:w="174019513"/><text x="56.4201%" y="639.50"></text></g><g><title>__count_memcg_events (935,012,656 samples, 0.14%)</title><rect x="56.0632%" y="645" width="0.1355%" height="15" fill="rgb(246,67,9)" fg:x="386794157682" fg:w="935012656"/><text x="56.3132%" y="655.50"></text></g><g><title>count_memcg_events.constprop.0 (2,228,047,212 samples, 0.32%)</title><rect x="55.8840%" y="661" width="0.3229%" height="15" fill="rgb(239,35,23)" fg:x="385558303513" fg:w="2228047212"/><text x="56.1340%" y="671.50"></text></g><g><title>mem_cgroup_from_task (111,243,151 samples, 0.02%)</title><rect x="56.2070%" y="661" width="0.0161%" height="15" fill="rgb(211,167,0)" fg:x="387786350725" fg:w="111243151"/><text x="56.4570%" y="671.50"></text></g><g><title>handle_mm_fault (71,655,317,476 samples, 10.39%)</title><rect x="45.8386%" y="677" width="10.3859%" height="15" fill="rgb(225,119,45)" fg:x="316252093265" fg:w="71655317476"/><text x="46.0886%" y="687.50">handle_mm_fault</text></g><g><title>down_read_trylock (2,679,889,422 samples, 0.39%)</title><rect x="56.4616%" y="661" width="0.3884%" height="15" fill="rgb(210,162,6)" fg:x="389542839987" fg:w="2679889422"/><text x="56.7116%" y="671.50"></text></g><g><title>__rcu_read_lock (80,892,019 samples, 0.01%)</title><rect x="57.3910%" y="629" width="0.0117%" height="15" fill="rgb(208,118,35)" fg:x="395955032726" fg:w="80892019"/><text x="57.6410%" y="639.50"></text></g><g><title>mt_find (3,455,784,440 samples, 0.50%)</title><rect x="56.9249%" y="645" width="0.5009%" height="15" fill="rgb(239,4,53)" fg:x="392739203850" fg:w="3455784440"/><text x="57.1749%" y="655.50"></text></g><g><title>srso_alias_return_thunk (69,891,985 samples, 0.01%)</title><rect x="57.4156%" y="629" width="0.0101%" height="15" fill="rgb(213,130,21)" fg:x="396125096305" fg:w="69891985"/><text x="57.6656%" y="639.50"></text></g><g><title>find_vma (3,974,247,999 samples, 0.58%)</title><rect x="56.8500%" y="661" width="0.5760%" height="15" fill="rgb(235,148,0)" fg:x="392222729409" fg:w="3974247999"/><text x="57.1000%" y="671.50"></text></g><g><title>lock_mm_and_find_vma (8,339,955,613 samples, 1.21%)</title><rect x="56.2245%" y="677" width="1.2088%" height="15" fill="rgb(244,224,18)" fg:x="387907410741" fg:w="8339955613"/><text x="56.4745%" y="687.50"></text></g><g><title>srso_alias_return_thunk (71,644,294 samples, 0.01%)</title><rect x="57.4337%" y="677" width="0.0104%" height="15" fill="rgb(211,214,4)" fg:x="396249565112" fg:w="71644294"/><text x="57.6837%" y="687.50"></text></g><g><title>srso_alias_safe_ret (70,510,022 samples, 0.01%)</title><rect x="57.4338%" y="661" width="0.0102%" height="15" fill="rgb(206,119,25)" fg:x="396250699384" fg:w="70510022"/><text x="57.6838%" y="671.50"></text></g><g><title>do_user_addr_fault (86,144,953,319 samples, 12.49%)</title><rect x="44.9883%" y="693" width="12.4861%" height="15" fill="rgb(243,93,47)" fg:x="310385678484" fg:w="86144953319"/><text x="45.2383%" y="703.50">do_user_addr_fault</text></g><g><title>up_read (206,054,226 samples, 0.03%)</title><rect x="57.4445%" y="677" width="0.0299%" height="15" fill="rgb(224,194,6)" fg:x="396324577577" fg:w="206054226"/><text x="57.6945%" y="687.50"></text></g><g><title>irqentry_enter (131,600,088 samples, 0.02%)</title><rect x="57.4744%" y="693" width="0.0191%" height="15" fill="rgb(243,229,6)" fg:x="396530631803" fg:w="131600088"/><text x="57.7244%" y="703.50"></text></g><g><title>exc_page_fault (87,543,883,037 samples, 12.69%)</title><rect x="44.8100%" y="709" width="12.6889%" height="15" fill="rgb(207,23,50)" fg:x="309155392766" fg:w="87543883037"/><text x="45.0600%" y="719.50">exc_page_fault</text></g><g><title>irqentry_exit (70,225,402 samples, 0.01%)</title><rect x="57.4988%" y="709" width="0.0102%" height="15" fill="rgb(253,192,32)" fg:x="396699275803" fg:w="70225402"/><text x="57.7488%" y="719.50"></text></g><g><title>raw_irqentry_exit_cond_resched (158,180,473 samples, 0.02%)</title><rect x="57.5093%" y="709" width="0.0229%" height="15" fill="rgb(213,21,6)" fg:x="396771625902" fg:w="158180473"/><text x="57.7593%" y="719.50"></text></g><g><title>asm_exc_page_fault (91,809,747,369 samples, 13.31%)</title><rect x="44.2255%" y="725" width="13.3072%" height="15" fill="rgb(243,151,13)" fg:x="305123321791" fg:w="91809747369"/><text x="44.4755%" y="735.50">asm_exc_page_fault</text></g><g><title>sched_tick (79,739,773 samples, 0.01%)</title><rect x="57.5465%" y="613" width="0.0116%" height="15" fill="rgb(233,165,41)" fg:x="397027926009" fg:w="79739773"/><text x="57.7965%" y="623.50"></text></g><g><title>update_process_times (117,544,937 samples, 0.02%)</title><rect x="57.5425%" y="629" width="0.0170%" height="15" fill="rgb(246,176,45)" fg:x="397000220392" fg:w="117544937"/><text x="57.7925%" y="639.50"></text></g><g><title>tick_nohz_handler (133,779,988 samples, 0.02%)</title><rect x="57.5418%" y="645" width="0.0194%" height="15" fill="rgb(217,170,52)" fg:x="396995821778" fg:w="133779988"/><text x="57.7918%" y="655.50"></text></g><g><title>__hrtimer_run_queues (140,396,487 samples, 0.02%)</title><rect x="57.5410%" y="661" width="0.0203%" height="15" fill="rgb(214,203,54)" fg:x="396990284931" fg:w="140396487"/><text x="57.7910%" y="671.50"></text></g><g><title>__sysvec_apic_timer_interrupt (156,072,971 samples, 0.02%)</title><rect x="57.5402%" y="693" width="0.0226%" height="15" fill="rgb(248,215,49)" fg:x="396984811488" fg:w="156072971"/><text x="57.7902%" y="703.50"></text></g><g><title>hrtimer_interrupt (153,873,611 samples, 0.02%)</title><rect x="57.5406%" y="677" width="0.0223%" height="15" fill="rgb(208,46,10)" fg:x="396987010848" fg:w="153873611"/><text x="57.7906%" y="687.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (211,149,853 samples, 0.03%)</title><rect x="57.5327%" y="725" width="0.0306%" height="15" fill="rgb(254,5,31)" fg:x="396933069160" fg:w="211149853"/><text x="57.7827%" y="735.50"></text></g><g><title>sysvec_apic_timer_interrupt (204,552,766 samples, 0.03%)</title><rect x="57.5337%" y="709" width="0.0296%" height="15" fill="rgb(222,104,33)" fg:x="396939666247" fg:w="204552766"/><text x="57.7837%" y="719.50"></text></g><g><title>error_return (335,081,510 samples, 0.05%)</title><rect x="57.5719%" y="725" width="0.0486%" height="15" fill="rgb(248,49,16)" fg:x="397203289702" fg:w="335081510"/><text x="57.8219%" y="735.50"></text></g><g><title>_copy_to_iter (116,446,918,514 samples, 16.88%)</title><rect x="40.7604%" y="741" width="16.8782%" height="15" fill="rgb(232,198,41)" fg:x="281216475087" fg:w="116446918514"/><text x="41.0104%" y="751.50">_copy_to_iter</text></g><g><title>restore_regs_and_return_to_kernel (118,380,230 samples, 0.02%)</title><rect x="57.6214%" y="725" width="0.0172%" height="15" fill="rgb(214,125,3)" fg:x="397545013371" fg:w="118380230"/><text x="57.8714%" y="735.50"></text></g><g><title>copy_page_to_iter (117,078,849,132 samples, 16.97%)</title><rect x="40.6725%" y="757" width="16.9698%" height="15" fill="rgb(229,220,28)" fg:x="280609791103" fg:w="117078849132"/><text x="40.9225%" y="767.50">copy_page_to_iter</text></g><g><title>filemap_get_read_batch (2,738,594,453 samples, 0.40%)</title><rect x="57.6480%" y="741" width="0.3969%" height="15" fill="rgb(222,64,37)" fg:x="397728129389" fg:w="2738594453"/><text x="57.8980%" y="751.50"></text></g><g><title>xas_load (85,258,348 samples, 0.01%)</title><rect x="58.0326%" y="725" width="0.0124%" height="15" fill="rgb(249,184,13)" fg:x="400381465494" fg:w="85258348"/><text x="58.2826%" y="735.50"></text></g><g><title>cgroup_rstat_updated (86,552,830 samples, 0.01%)</title><rect x="58.8319%" y="645" width="0.0125%" height="15" fill="rgb(252,176,6)" fg:x="405896200229" fg:w="86552830"/><text x="59.0819%" y="655.50"></text></g><g><title>__mod_memcg_lruvec_state (786,405,781 samples, 0.11%)</title><rect x="58.7313%" y="661" width="0.1140%" height="15" fill="rgb(228,153,7)" fg:x="405202092694" fg:w="786405781"/><text x="58.9813%" y="671.50"></text></g><g><title>__lruvec_stat_mod_folio (1,902,289,865 samples, 0.28%)</title><rect x="58.5846%" y="677" width="0.2757%" height="15" fill="rgb(242,193,5)" fg:x="404189950150" fg:w="1902289865"/><text x="58.8346%" y="687.50"></text></g><g><title>__rcu_read_unlock (106,772,432 samples, 0.02%)</title><rect x="58.8603%" y="677" width="0.0155%" height="15" fill="rgb(232,140,9)" fg:x="406092240015" fg:w="106772432"/><text x="59.1103%" y="687.50"></text></g><g><title>_raw_spin_lock_irq (1,926,755,230 samples, 0.28%)</title><rect x="58.8758%" y="677" width="0.2793%" height="15" fill="rgb(213,222,16)" fg:x="406199012447" fg:w="1926755230"/><text x="59.1258%" y="687.50"></text></g><g><title>_raw_spin_unlock_irq (328,393,513 samples, 0.05%)</title><rect x="59.1550%" y="677" width="0.0476%" height="15" fill="rgb(222,75,50)" fg:x="408125767677" fg:w="328393513"/><text x="59.4050%" y="687.50"></text></g><g><title>srso_alias_return_thunk (156,758,347 samples, 0.02%)</title><rect x="59.2071%" y="677" width="0.0227%" height="15" fill="rgb(205,180,2)" fg:x="408484865376" fg:w="156758347"/><text x="59.4571%" y="687.50"></text></g><g><title>srso_alias_safe_ret (155,609,311 samples, 0.02%)</title><rect x="59.2073%" y="661" width="0.0226%" height="15" fill="rgb(216,34,7)" fg:x="408486014412" fg:w="155609311"/><text x="59.4573%" y="671.50"></text></g><g><title>xas_find_conflict (425,907,655 samples, 0.06%)</title><rect x="59.2326%" y="677" width="0.0617%" height="15" fill="rgb(253,16,32)" fg:x="408660547535" fg:w="425907655"/><text x="59.4826%" y="687.50"></text></g><g><title>xas_get_order (160,635,734 samples, 0.02%)</title><rect x="59.2943%" y="677" width="0.0233%" height="15" fill="rgb(208,97,28)" fg:x="409086455190" fg:w="160635734"/><text x="59.5443%" y="687.50"></text></g><g><title>xas_nomem (126,797,934 samples, 0.02%)</title><rect x="59.3176%" y="677" width="0.0184%" height="15" fill="rgb(225,92,11)" fg:x="409247090924" fg:w="126797934"/><text x="59.5676%" y="687.50"></text></g><g><title>list_lru_del (138,020,317 samples, 0.02%)</title><rect x="59.4379%" y="629" width="0.0200%" height="15" fill="rgb(243,38,12)" fg:x="410077011653" fg:w="138020317"/><text x="59.6879%" y="639.50"></text></g><g><title>workingset_update_node (384,829,962 samples, 0.06%)</title><rect x="59.4069%" y="661" width="0.0558%" height="15" fill="rgb(208,139,16)" fg:x="409863236229" fg:w="384829962"/><text x="59.6569%" y="671.50"></text></g><g><title>list_lru_del_obj (210,220,321 samples, 0.03%)</title><rect x="59.4322%" y="645" width="0.0305%" height="15" fill="rgb(227,24,9)" fg:x="410037845870" fg:w="210220321"/><text x="59.6822%" y="655.50"></text></g><g><title>__filemap_add_folio (8,106,750,666 samples, 1.18%)</title><rect x="58.3001%" y="693" width="1.1750%" height="15" fill="rgb(206,62,11)" fg:x="402227105478" fg:w="8106750666"/><text x="58.5501%" y="703.50"></text></g><g><title>xas_store (959,967,286 samples, 0.14%)</title><rect x="59.3359%" y="677" width="0.1391%" height="15" fill="rgb(228,134,27)" fg:x="409373888858" fg:w="959967286"/><text x="59.5859%" y="687.50"></text></g><g><title>xas_create (85,789,953 samples, 0.01%)</title><rect x="59.4627%" y="661" width="0.0124%" height="15" fill="rgb(205,55,33)" fg:x="410248066191" fg:w="85789953"/><text x="59.7127%" y="671.50"></text></g><g><title>__raw_spin_lock_irqsave (513,152,167 samples, 0.07%)</title><rect x="59.5648%" y="645" width="0.0744%" height="15" fill="rgb(243,75,43)" fg:x="410952745131" fg:w="513152167"/><text x="59.8148%" y="655.50"></text></g><g><title>native_queued_spin_lock_slowpath (485,811,322 samples, 0.07%)</title><rect x="59.5688%" y="629" width="0.0704%" height="15" fill="rgb(223,27,42)" fg:x="410980085976" fg:w="485811322"/><text x="59.8188%" y="639.50"></text></g><g><title>folio_lruvec_lock_irqsave (532,827,634 samples, 0.08%)</title><rect x="59.5623%" y="661" width="0.0772%" height="15" fill="rgb(232,189,33)" fg:x="410935285282" fg:w="532827634"/><text x="59.8123%" y="671.50"></text></g><g><title>folios_put_refs (103,592,392 samples, 0.02%)</title><rect x="59.6395%" y="661" width="0.0150%" height="15" fill="rgb(210,9,39)" fg:x="411468112916" fg:w="103592392"/><text x="59.8895%" y="671.50"></text></g><g><title>__rcu_read_lock (160,500,118 samples, 0.02%)</title><rect x="59.8964%" y="645" width="0.0233%" height="15" fill="rgb(242,85,26)" fg:x="413240477227" fg:w="160500118"/><text x="60.1464%" y="655.50"></text></g><g><title>__rcu_read_unlock (77,579,065 samples, 0.01%)</title><rect x="59.9196%" y="645" width="0.0112%" height="15" fill="rgb(248,44,4)" fg:x="413400977345" fg:w="77579065"/><text x="60.1696%" y="655.50"></text></g><g><title>folio_mapping (190,900,449 samples, 0.03%)</title><rect x="59.9309%" y="645" width="0.0277%" height="15" fill="rgb(250,96,46)" fg:x="413478556410" fg:w="190900449"/><text x="60.1809%" y="655.50"></text></g><g><title>__mod_lruvec_state (112,167,768 samples, 0.02%)</title><rect x="60.1158%" y="629" width="0.0163%" height="15" fill="rgb(229,116,26)" fg:x="414754556197" fg:w="112167768"/><text x="60.3658%" y="639.50"></text></g><g><title>__mod_memcg_lruvec_state (620,401,017 samples, 0.09%)</title><rect x="60.1321%" y="629" width="0.0899%" height="15" fill="rgb(246,94,34)" fg:x="414866723965" fg:w="620401017"/><text x="60.3821%" y="639.50"></text></g><g><title>__mod_zone_page_state (140,345,442 samples, 0.02%)</title><rect x="60.2220%" y="629" width="0.0203%" height="15" fill="rgb(251,73,21)" fg:x="415487124982" fg:w="140345442"/><text x="60.4720%" y="639.50"></text></g><g><title>lru_gen_add_folio (1,975,811,090 samples, 0.29%)</title><rect x="59.9586%" y="645" width="0.2864%" height="15" fill="rgb(254,121,25)" fg:x="413669456859" fg:w="1975811090"/><text x="60.2086%" y="655.50"></text></g><g><title>srso_alias_return_thunk (134,791,723 samples, 0.02%)</title><rect x="60.2449%" y="645" width="0.0195%" height="15" fill="rgb(215,161,49)" fg:x="415645267949" fg:w="134791723"/><text x="60.4949%" y="655.50"></text></g><g><title>srso_alias_safe_ret (81,270,908 samples, 0.01%)</title><rect x="60.2527%" y="629" width="0.0118%" height="15" fill="rgb(221,43,13)" fg:x="415698788764" fg:w="81270908"/><text x="60.5027%" y="639.50"></text></g><g><title>lru_add (4,211,726,315 samples, 0.61%)</title><rect x="59.6545%" y="661" width="0.6105%" height="15" fill="rgb(249,5,37)" fg:x="411571705308" fg:w="4211726315"/><text x="59.9045%" y="671.50"></text></g><g><title>folio_batch_move_lru (5,245,690,454 samples, 0.76%)</title><rect x="59.5101%" y="677" width="0.7603%" height="15" fill="rgb(226,25,44)" fg:x="410575758005" fg:w="5245690454"/><text x="59.7601%" y="687.50"></text></g><g><title>__folio_batch_add_and_move (5,488,749,154 samples, 0.80%)</title><rect x="59.4751%" y="693" width="0.7956%" height="15" fill="rgb(238,189,16)" fg:x="410333856144" fg:w="5488749154"/><text x="59.7251%" y="703.50"></text></g><g><title>__rcu_read_lock (74,284,754 samples, 0.01%)</title><rect x="60.6206%" y="661" width="0.0108%" height="15" fill="rgb(251,186,8)" fg:x="418237196643" fg:w="74284754"/><text x="60.8706%" y="671.50"></text></g><g><title>__rcu_read_unlock (124,526,012 samples, 0.02%)</title><rect x="60.6314%" y="661" width="0.0180%" height="15" fill="rgb(254,34,31)" fg:x="418311481397" fg:w="124526012"/><text x="60.8814%" y="671.50"></text></g><g><title>cgroup_rstat_updated (189,043,713 samples, 0.03%)</title><rect x="60.9635%" y="629" width="0.0274%" height="15" fill="rgb(225,215,27)" fg:x="420602956048" fg:w="189043713"/><text x="61.2135%" y="639.50"></text></g><g><title>__count_memcg_events (993,171,064 samples, 0.14%)</title><rect x="60.8482%" y="645" width="0.1440%" height="15" fill="rgb(221,192,48)" fg:x="419807503863" fg:w="993171064"/><text x="61.0982%" y="655.50"></text></g><g><title>memcg1_check_events (78,709,305 samples, 0.01%)</title><rect x="60.9950%" y="645" width="0.0114%" height="15" fill="rgb(219,137,20)" fg:x="420820414920" fg:w="78709305"/><text x="61.2450%" y="655.50"></text></g><g><title>memcg1_commit_charge (2,475,495,410 samples, 0.36%)</title><rect x="60.6512%" y="661" width="0.3588%" height="15" fill="rgb(219,84,11)" fg:x="418448213611" fg:w="2475495410"/><text x="60.9012%" y="671.50"></text></g><g><title>consume_stock (822,793,005 samples, 0.12%)</title><rect x="61.1365%" y="645" width="0.1193%" height="15" fill="rgb(224,10,23)" fg:x="421796503622" fg:w="822793005"/><text x="61.3865%" y="655.50"></text></g><g><title>charge_memcg (6,065,640,472 samples, 0.88%)</title><rect x="60.3877%" y="677" width="0.8792%" height="15" fill="rgb(248,22,39)" fg:x="416630304198" fg:w="6065640472"/><text x="60.6377%" y="687.50"></text></g><g><title>try_charge_memcg (1,736,859,607 samples, 0.25%)</title><rect x="61.0151%" y="661" width="0.2517%" height="15" fill="rgb(212,154,20)" fg:x="420959085063" fg:w="1736859607"/><text x="61.2651%" y="671.50"></text></g><g><title>__rcu_read_lock (104,988,003 samples, 0.02%)</title><rect x="61.5344%" y="661" width="0.0152%" height="15" fill="rgb(236,199,50)" fg:x="424541286945" fg:w="104988003"/><text x="61.7844%" y="671.50"></text></g><g><title>__rcu_read_unlock (1,429,214,598 samples, 0.21%)</title><rect x="61.5496%" y="661" width="0.2072%" height="15" fill="rgb(211,9,17)" fg:x="424646274948" fg:w="1429214598"/><text x="61.7996%" y="671.50"></text></g><g><title>srso_alias_return_thunk (85,096,476 samples, 0.01%)</title><rect x="61.7590%" y="661" width="0.0123%" height="15" fill="rgb(243,216,36)" fg:x="426091495965" fg:w="85096476"/><text x="62.0090%" y="671.50"></text></g><g><title>get_mem_cgroup_from_mm (3,534,135,562 samples, 0.51%)</title><rect x="61.2669%" y="677" width="0.5122%" height="15" fill="rgb(250,2,10)" fg:x="422695944670" fg:w="3534135562"/><text x="61.5169%" y="687.50"></text></g><g><title>__mem_cgroup_charge (10,472,848,357 samples, 1.52%)</title><rect x="60.2708%" y="693" width="1.5180%" height="15" fill="rgb(226,50,48)" fg:x="415823734766" fg:w="10472848357"/><text x="60.5208%" y="703.50"></text></g><g><title>folio_add_lru (147,554,452 samples, 0.02%)</title><rect x="61.7904%" y="693" width="0.0214%" height="15" fill="rgb(243,81,16)" fg:x="426307798998" fg:w="147554452"/><text x="62.0404%" y="703.50"></text></g><g><title>__rcu_read_unlock (106,329,053 samples, 0.02%)</title><rect x="61.9239%" y="677" width="0.0154%" height="15" fill="rgb(250,14,2)" fg:x="427229007313" fg:w="106329053"/><text x="62.1739%" y="687.50"></text></g><g><title>__rcu_read_lock (126,789,100 samples, 0.02%)</title><rect x="62.1624%" y="645" width="0.0184%" height="15" fill="rgb(233,135,29)" fg:x="428874610854" fg:w="126789100"/><text x="62.4124%" y="655.50"></text></g><g><title>__rcu_read_unlock (88,611,495 samples, 0.01%)</title><rect x="62.1808%" y="645" width="0.0128%" height="15" fill="rgb(224,64,43)" fg:x="429001399954" fg:w="88611495"/><text x="62.4308%" y="655.50"></text></g><g><title>lru_gen_test_recent (2,531,566,539 samples, 0.37%)</title><rect x="61.9410%" y="677" width="0.3669%" height="15" fill="rgb(238,84,13)" fg:x="427346727480" fg:w="2531566539"/><text x="62.1910%" y="687.50"></text></g><g><title>xa_load (1,937,598,409 samples, 0.28%)</title><rect x="62.0271%" y="661" width="0.2808%" height="15" fill="rgb(253,48,26)" fg:x="427940695610" fg:w="1937598409"/><text x="62.2771%" y="671.50"></text></g><g><title>xas_load (755,753,482 samples, 0.11%)</title><rect x="62.1984%" y="645" width="0.1095%" height="15" fill="rgb(205,223,31)" fg:x="429122540537" fg:w="755753482"/><text x="62.4484%" y="655.50"></text></g><g><title>xas_start (163,405,011 samples, 0.02%)</title><rect x="62.2842%" y="629" width="0.0237%" height="15" fill="rgb(221,41,32)" fg:x="429714889008" fg:w="163405011"/><text x="62.5342%" y="639.50"></text></g><g><title>__mod_node_page_state (120,383,083 samples, 0.02%)</title><rect x="62.4324%" y="645" width="0.0174%" height="15" fill="rgb(213,158,31)" fg:x="430737173255" fg:w="120383083"/><text x="62.6824%" y="655.50"></text></g><g><title>__mod_lruvec_state (339,075,200 samples, 0.05%)</title><rect x="62.4022%" y="661" width="0.0491%" height="15" fill="rgb(245,126,43)" fg:x="430528548406" fg:w="339075200"/><text x="62.6522%" y="671.50"></text></g><g><title>cgroup_rstat_updated (82,797,843 samples, 0.01%)</title><rect x="62.5430%" y="645" width="0.0120%" height="15" fill="rgb(227,7,22)" fg:x="431500448608" fg:w="82797843"/><text x="62.7930%" y="655.50"></text></g><g><title>__mod_memcg_lruvec_state (741,619,532 samples, 0.11%)</title><rect x="62.4513%" y="661" width="0.1075%" height="15" fill="rgb(252,90,44)" fg:x="430867623606" fg:w="741619532"/><text x="62.7013%" y="671.50"></text></g><g><title>mod_lruvec_state (1,754,544,667 samples, 0.25%)</title><rect x="62.3079%" y="677" width="0.2543%" height="15" fill="rgb(253,91,0)" fg:x="429878294019" fg:w="1754544667"/><text x="62.5579%" y="687.50"></text></g><g><title>lru_gen_refault (5,194,274,656 samples, 0.75%)</title><rect x="61.8118%" y="693" width="0.7529%" height="15" fill="rgb(252,175,49)" fg:x="426455353450" fg:w="5194274656"/><text x="62.0618%" y="703.50"></text></g><g><title>filemap_add_folio (30,664,372,707 samples, 4.44%)</title><rect x="58.1482%" y="709" width="4.4446%" height="15" fill="rgb(246,150,1)" fg:x="401179262286" fg:w="30664372707"/><text x="58.3982%" y="719.50">filem..</text></g><g><title>workingset_refault (145,236,916 samples, 0.02%)</title><rect x="62.5717%" y="693" width="0.0211%" height="15" fill="rgb(241,192,25)" fg:x="431698398077" fg:w="145236916"/><text x="62.8217%" y="703.50"></text></g><g><title>filemap_alloc_folio_noprof (313,734,502 samples, 0.05%)</title><rect x="62.5928%" y="709" width="0.0455%" height="15" fill="rgb(239,187,11)" fg:x="431843634993" fg:w="313734502"/><text x="62.8428%" y="719.50"></text></g><g><title>alloc_frozen_pages_noprof (75,520,510 samples, 0.01%)</title><rect x="62.7487%" y="693" width="0.0109%" height="15" fill="rgb(218,202,51)" fg:x="432919320346" fg:w="75520510"/><text x="62.9987%" y="703.50"></text></g><g><title>get_page_from_freelist (71,474,184 samples, 0.01%)</title><rect x="63.3350%" y="645" width="0.0104%" height="15" fill="rgb(225,176,8)" fg:x="436964661689" fg:w="71474184"/><text x="63.5850%" y="655.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (111,490,084 samples, 0.02%)</title><rect x="63.3323%" y="661" width="0.0162%" height="15" fill="rgb(219,122,41)" fg:x="436945717072" fg:w="111490084"/><text x="63.5823%" y="671.50"></text></g><g><title>clear_page_erms (3,494,144,892 samples, 0.51%)</title><rect x="63.5635%" y="629" width="0.5065%" height="15" fill="rgb(248,140,20)" fg:x="438540895740" fg:w="3494144892"/><text x="63.8135%" y="639.50"></text></g><g><title>post_alloc_hook (3,874,983,092 samples, 0.56%)</title><rect x="63.5125%" y="645" width="0.5617%" height="15" fill="rgb(245,41,37)" fg:x="438188982948" fg:w="3874983092"/><text x="63.7625%" y="655.50"></text></g><g><title>__list_del_entry_valid_or_report (269,881,675 samples, 0.04%)</title><rect x="64.2220%" y="597" width="0.0391%" height="15" fill="rgb(235,82,39)" fg:x="443084305011" fg:w="269881675"/><text x="64.4720%" y="607.50"></text></g><g><title>__list_add_valid_or_report (106,932,052 samples, 0.02%)</title><rect x="64.5216%" y="581" width="0.0155%" height="15" fill="rgb(230,108,42)" fg:x="445151046804" fg:w="106932052"/><text x="64.7716%" y="591.50"></text></g><g><title>__list_del_entry_valid_or_report (849,978,081 samples, 0.12%)</title><rect x="64.5371%" y="581" width="0.1232%" height="15" fill="rgb(215,150,50)" fg:x="445257978856" fg:w="849978081"/><text x="64.7871%" y="591.50"></text></g><g><title>__mod_zone_page_state (113,200,696 samples, 0.02%)</title><rect x="64.6603%" y="581" width="0.0164%" height="15" fill="rgb(233,212,5)" fg:x="446107956937" fg:w="113200696"/><text x="64.9103%" y="591.50"></text></g><g><title>rmqueue_bulk (2,959,855,663 samples, 0.43%)</title><rect x="64.2614%" y="597" width="0.4290%" height="15" fill="rgb(245,80,22)" fg:x="443356187770" fg:w="2959855663"/><text x="64.5114%" y="607.50"></text></g><g><title>__rmqueue_pcplist (3,421,186,155 samples, 0.50%)</title><rect x="64.1947%" y="613" width="0.4959%" height="15" fill="rgb(238,129,16)" fg:x="442895980111" fg:w="3421186155"/><text x="64.4447%" y="623.50"></text></g><g><title>_raw_spin_trylock (202,932,914 samples, 0.03%)</title><rect x="64.6906%" y="613" width="0.0294%" height="15" fill="rgb(240,19,0)" fg:x="446317166266" fg:w="202932914"/><text x="64.9406%" y="623.50"></text></g><g><title>_raw_spin_unlock (182,816,643 samples, 0.03%)</title><rect x="64.7200%" y="613" width="0.0265%" height="15" fill="rgb(232,42,35)" fg:x="446520099180" fg:w="182816643"/><text x="64.9700%" y="623.50"></text></g><g><title>rmqueue_pcplist (4,310,910,115 samples, 0.62%)</title><rect x="64.1289%" y="629" width="0.6248%" height="15" fill="rgb(223,130,24)" fg:x="442442019536" fg:w="4310910115"/><text x="64.3789%" y="639.50"></text></g><g><title>rmqueue.isra.0 (4,690,125,226 samples, 0.68%)</title><rect x="64.0741%" y="645" width="0.6798%" height="15" fill="rgb(237,16,22)" fg:x="442063966040" fg:w="4690125226"/><text x="64.3241%" y="655.50"></text></g><g><title>get_page_from_freelist (9,753,046,552 samples, 1.41%)</title><rect x="63.3497%" y="661" width="1.4136%" height="15" fill="rgb(248,192,20)" fg:x="437065998739" fg:w="9753046552"/><text x="63.5997%" y="671.50"></text></g><g><title>__alloc_frozen_pages_noprof (11,848,148,450 samples, 1.72%)</title><rect x="63.0497%" y="677" width="1.7173%" height="15" fill="rgb(233,167,2)" fg:x="434995957770" fg:w="11848148450"/><text x="63.2997%" y="687.50"></text></g><g><title>policy_nodemask (258,929,602 samples, 0.04%)</title><rect x="64.7675%" y="677" width="0.0375%" height="15" fill="rgb(252,71,44)" fg:x="446847420487" fg:w="258929602"/><text x="65.0175%" y="687.50"></text></g><g><title>alloc_pages_mpol (14,147,465,142 samples, 2.05%)</title><rect x="62.7596%" y="693" width="2.0506%" height="15" fill="rgb(238,37,47)" fg:x="432994840856" fg:w="14147465142"/><text x="63.0096%" y="703.50">a..</text></g><g><title>folio_alloc_noprof (15,303,890,296 samples, 2.22%)</title><rect x="62.6383%" y="709" width="2.2182%" height="15" fill="rgb(214,202,54)" fg:x="432157369495" fg:w="15303890296"/><text x="62.8883%" y="719.50">f..</text></g><g><title>srso_alias_return_thunk (314,741,893 samples, 0.05%)</title><rect x="64.8108%" y="693" width="0.0456%" height="15" fill="rgb(254,165,40)" fg:x="447146517898" fg:w="314741893"/><text x="65.0608%" y="703.50"></text></g><g><title>srso_alias_safe_ret (314,741,893 samples, 0.05%)</title><rect x="64.8108%" y="677" width="0.0456%" height="15" fill="rgb(246,173,38)" fg:x="447146517898" fg:w="314741893"/><text x="65.0608%" y="687.50"></text></g><g><title>blk_mq_start_request (90,680,852 samples, 0.01%)</title><rect x="64.8763%" y="613" width="0.0131%" height="15" fill="rgb(215,3,27)" fg:x="447598166820" fg:w="90680852"/><text x="65.1263%" y="623.50"></text></g><g><title>blk_map_iter_next (112,724,241 samples, 0.02%)</title><rect x="64.9163%" y="581" width="0.0163%" height="15" fill="rgb(239,169,51)" fg:x="447873934447" fg:w="112724241"/><text x="65.1663%" y="591.50"></text></g><g><title>__blk_rq_map_sg (252,429,417 samples, 0.04%)</title><rect x="64.8983%" y="597" width="0.0366%" height="15" fill="rgb(212,5,25)" fg:x="447749941129" fg:w="252429417"/><text x="65.1483%" y="607.50"></text></g><g><title>alloc_pte.constprop.0 (107,916,096 samples, 0.02%)</title><rect x="65.0466%" y="501" width="0.0156%" height="15" fill="rgb(243,45,17)" fg:x="448773046101" fg:w="107916096"/><text x="65.2966%" y="511.50"></text></g><g><title>iommu_v1_map_pages (348,704,790 samples, 0.05%)</title><rect x="65.0152%" y="517" width="0.0505%" height="15" fill="rgb(242,97,9)" fg:x="448556801343" fg:w="348704790"/><text x="65.2652%" y="527.50"></text></g><g><title>__iommu_map (486,679,021 samples, 0.07%)</title><rect x="64.9956%" y="533" width="0.0705%" height="15" fill="rgb(228,71,31)" fg:x="448421085883" fg:w="486679021"/><text x="65.2456%" y="543.50"></text></g><g><title>iommu_map_sg (656,567,375 samples, 0.10%)</title><rect x="64.9745%" y="549" width="0.0952%" height="15" fill="rgb(252,184,16)" fg:x="448275814074" fg:w="656567375"/><text x="65.2245%" y="559.50"></text></g><g><title>dma_map_sgtable (888,748,727 samples, 0.13%)</title><rect x="64.9423%" y="597" width="0.1288%" height="15" fill="rgb(236,169,46)" fg:x="448053598147" fg:w="888748727"/><text x="65.1923%" y="607.50"></text></g><g><title>__dma_map_sg_attrs (884,505,302 samples, 0.13%)</title><rect x="64.9429%" y="581" width="0.1282%" height="15" fill="rgb(207,17,47)" fg:x="448057841572" fg:w="884505302"/><text x="65.1929%" y="591.50"></text></g><g><title>iommu_dma_map_sg (872,168,228 samples, 0.13%)</title><rect x="64.9447%" y="565" width="0.1264%" height="15" fill="rgb(206,201,28)" fg:x="448070178646" fg:w="872168228"/><text x="65.1947%" y="575.50"></text></g><g><title>__memset (72,576,034 samples, 0.01%)</title><rect x="65.0815%" y="565" width="0.0105%" height="15" fill="rgb(224,184,23)" fg:x="449013740091" fg:w="72576034"/><text x="65.3315%" y="575.50"></text></g><g><title>__kmalloc_noprof (129,482,790 samples, 0.02%)</title><rect x="65.0735%" y="581" width="0.0188%" height="15" fill="rgb(208,139,48)" fg:x="448959023832" fg:w="129482790"/><text x="65.3235%" y="591.50"></text></g><g><title>mempool_alloc_noprof (168,725,903 samples, 0.02%)</title><rect x="65.0711%" y="597" width="0.0245%" height="15" fill="rgb(208,130,10)" fg:x="448942346874" fg:w="168725903"/><text x="65.3211%" y="607.50"></text></g><g><title>sg_init_table (105,715,738 samples, 0.02%)</title><rect x="65.1016%" y="597" width="0.0153%" height="15" fill="rgb(211,213,45)" fg:x="449152728980" fg:w="105715738"/><text x="65.3516%" y="607.50"></text></g><g><title>nvme_map_data (1,571,840,124 samples, 0.23%)</title><rect x="64.8894%" y="613" width="0.2278%" height="15" fill="rgb(235,100,30)" fg:x="447688847672" fg:w="1571840124"/><text x="65.1394%" y="623.50"></text></g><g><title>nvme_prep_rq.part.0 (1,684,778,397 samples, 0.24%)</title><rect x="64.8732%" y="629" width="0.2442%" height="15" fill="rgb(206,144,31)" fg:x="447577057012" fg:w="1684778397"/><text x="65.1232%" y="639.50"></text></g><g><title>blk_finish_plug (1,838,820,049 samples, 0.27%)</title><rect x="64.8598%" y="693" width="0.2665%" height="15" fill="rgb(224,200,26)" fg:x="447484711654" fg:w="1838820049"/><text x="65.1098%" y="703.50"></text></g><g><title>__blk_flush_plug (1,836,588,608 samples, 0.27%)</title><rect x="64.8602%" y="677" width="0.2662%" height="15" fill="rgb(247,104,53)" fg:x="447486943095" fg:w="1836588608"/><text x="65.1102%" y="687.50"></text></g><g><title>blk_mq_flush_plug_list (1,835,532,287 samples, 0.27%)</title><rect x="64.8603%" y="661" width="0.2660%" height="15" fill="rgb(220,14,17)" fg:x="447487999416" fg:w="1835532287"/><text x="65.1103%" y="671.50"></text></g><g><title>nvme_queue_rqs (1,805,473,883 samples, 0.26%)</title><rect x="64.8647%" y="645" width="0.2617%" height="15" fill="rgb(230,140,40)" fg:x="447518057820" fg:w="1805473883"/><text x="65.1147%" y="655.50"></text></g><g><title>rb_next (87,847,808 samples, 0.01%)</title><rect x="65.3930%" y="629" width="0.0127%" height="15" fill="rgb(229,2,41)" fg:x="451163306746" fg:w="87847808"/><text x="65.6430%" y="639.50"></text></g><g><title>__lookup_extent_mapping (193,222,547 samples, 0.03%)</title><rect x="65.3781%" y="645" width="0.0280%" height="15" fill="rgb(232,89,16)" fg:x="451060206751" fg:w="193222547"/><text x="65.6281%" y="655.50"></text></g><g><title>alloc_extent_map (114,193,731 samples, 0.02%)</title><rect x="65.4093%" y="645" width="0.0166%" height="15" fill="rgb(247,59,52)" fg:x="451275716682" fg:w="114193731"/><text x="65.6593%" y="655.50"></text></g><g><title>kmem_cache_alloc_noprof (84,904,660 samples, 0.01%)</title><rect x="65.4136%" y="629" width="0.0123%" height="15" fill="rgb(226,110,21)" fg:x="451305005753" fg:w="84904660"/><text x="65.6636%" y="639.50"></text></g><g><title>btrfs_add_extent_mapping (179,973,957 samples, 0.03%)</title><rect x="65.4267%" y="645" width="0.0261%" height="15" fill="rgb(224,176,43)" fg:x="451395406167" fg:w="179973957"/><text x="65.6767%" y="655.50"></text></g><g><title>add_extent_mapping (166,566,891 samples, 0.02%)</title><rect x="65.4286%" y="629" width="0.0241%" height="15" fill="rgb(221,73,6)" fg:x="451408813233" fg:w="166566891"/><text x="65.6786%" y="639.50"></text></g><g><title>btrfs_file_extent_end (84,201,293 samples, 0.01%)</title><rect x="65.4643%" y="629" width="0.0122%" height="15" fill="rgb(232,78,19)" fg:x="451655175783" fg:w="84201293"/><text x="65.7143%" y="639.50"></text></g><g><title>btrfs_extent_item_to_extent_map (304,826,911 samples, 0.04%)</title><rect x="65.4528%" y="645" width="0.0442%" height="15" fill="rgb(233,112,48)" fg:x="451575380124" fg:w="304826911"/><text x="65.7028%" y="655.50"></text></g><g><title>btrfs_file_extent_end (87,295,559 samples, 0.01%)</title><rect x="65.4969%" y="645" width="0.0127%" height="15" fill="rgb(243,131,47)" fg:x="451880207035" fg:w="87295559"/><text x="65.7469%" y="655.50"></text></g><g><title>btrfs_bin_search (196,515,537 samples, 0.03%)</title><rect x="65.5534%" y="613" width="0.0285%" height="15" fill="rgb(226,51,1)" fg:x="452269664738" fg:w="196515537"/><text x="65.8034%" y="623.50"></text></g><g><title>btrfs_tree_read_lock_nested (94,404,408 samples, 0.01%)</title><rect x="65.5868%" y="597" width="0.0137%" height="15" fill="rgb(247,58,7)" fg:x="452500230706" fg:w="94404408"/><text x="65.8368%" y="607.50"></text></g><g><title>btrfs_read_lock_root_node (130,616,818 samples, 0.02%)</title><rect x="65.5819%" y="613" width="0.0189%" height="15" fill="rgb(209,7,32)" fg:x="452466180275" fg:w="130616818"/><text x="65.8319%" y="623.50"></text></g><g><title>alloc_extent_buffer (74,700,208 samples, 0.01%)</title><rect x="65.6242%" y="597" width="0.0108%" height="15" fill="rgb(209,39,41)" fg:x="452758184869" fg:w="74700208"/><text x="65.8742%" y="607.50"></text></g><g><title>btrfs_verify_level_key (139,077,674 samples, 0.02%)</title><rect x="65.6504%" y="597" width="0.0202%" height="15" fill="rgb(226,182,46)" fg:x="452938872902" fg:w="139077674"/><text x="65.9004%" y="607.50"></text></g><g><title>__radix_tree_lookup (176,245,783 samples, 0.03%)</title><rect x="65.6845%" y="565" width="0.0255%" height="15" fill="rgb(230,219,10)" fg:x="453173944582" fg:w="176245783"/><text x="65.9345%" y="575.50"></text></g><g><title>find_extent_buffer_nolock (218,749,535 samples, 0.03%)</title><rect x="65.6804%" y="581" width="0.0317%" height="15" fill="rgb(227,175,30)" fg:x="453145807948" fg:w="218749535"/><text x="65.9304%" y="591.50"></text></g><g><title>find_extent_buffer (346,267,539 samples, 0.05%)</title><rect x="65.6705%" y="597" width="0.0502%" height="15" fill="rgb(217,2,50)" fg:x="453077950576" fg:w="346267539"/><text x="65.9205%" y="607.50"></text></g><g><title>read_block_for_search (864,669,479 samples, 0.13%)</title><rect x="65.6056%" y="613" width="0.1253%" height="15" fill="rgb(229,160,0)" fg:x="452629864197" fg:w="864669479"/><text x="65.8556%" y="623.50"></text></g><g><title>btrfs_lookup_file_extent (1,520,611,936 samples, 0.22%)</title><rect x="65.5230%" y="645" width="0.2204%" height="15" fill="rgb(207,78,37)" fg:x="452060285118" fg:w="1520611936"/><text x="65.7730%" y="655.50"></text></g><g><title>btrfs_search_slot (1,508,421,921 samples, 0.22%)</title><rect x="65.5248%" y="629" width="0.2186%" height="15" fill="rgb(225,57,0)" fg:x="452072475133" fg:w="1508421921"/><text x="65.7748%" y="639.50"></text></g><g><title>free_extent_buffer (92,220,987 samples, 0.01%)</title><rect x="65.7512%" y="629" width="0.0134%" height="15" fill="rgb(232,154,2)" fg:x="453634247224" fg:w="92220987"/><text x="66.0012%" y="639.50"></text></g><g><title>release_extent_buffer (73,056,946 samples, 0.01%)</title><rect x="65.7645%" y="629" width="0.0106%" height="15" fill="rgb(241,212,25)" fg:x="453726468211" fg:w="73056946"/><text x="66.0145%" y="639.50"></text></g><g><title>btrfs_release_path (223,187,118 samples, 0.03%)</title><rect x="65.7434%" y="645" width="0.0323%" height="15" fill="rgb(226,69,20)" fg:x="453580897054" fg:w="223187118"/><text x="65.9934%" y="655.50"></text></g><g><title>btrfs_get_extent (2,931,830,869 samples, 0.42%)</title><rect x="65.3617%" y="661" width="0.4249%" height="15" fill="rgb(247,184,54)" fg:x="450947022580" fg:w="2931830869"/><text x="65.6117%" y="671.50"></text></g><g><title>free_extent_map (74,507,436 samples, 0.01%)</title><rect x="65.7866%" y="661" width="0.0108%" height="15" fill="rgb(210,145,0)" fg:x="453878853449" fg:w="74507436"/><text x="66.0366%" y="671.50"></text></g><g><title>set_folio_extent_mapped (1,154,316,458 samples, 0.17%)</title><rect x="65.7974%" y="661" width="0.1673%" height="15" fill="rgb(253,82,12)" fg:x="453953360885" fg:w="1154316458"/><text x="66.0474%" y="671.50"></text></g><g><title>bio_add_folio (187,865,630 samples, 0.03%)</title><rect x="66.0126%" y="645" width="0.0272%" height="15" fill="rgb(245,42,11)" fg:x="455438027261" fg:w="187865630"/><text x="66.2626%" y="655.50"></text></g><g><title>___slab_alloc (81,551,777 samples, 0.01%)</title><rect x="66.0976%" y="581" width="0.0118%" height="15" fill="rgb(219,147,32)" fg:x="456024084888" fg:w="81551777"/><text x="66.3476%" y="591.50"></text></g><g><title>__memset (132,527,604 samples, 0.02%)</title><rect x="66.1094%" y="581" width="0.0192%" height="15" fill="rgb(246,12,7)" fg:x="456105636665" fg:w="132527604"/><text x="66.3594%" y="591.50"></text></g><g><title>kmem_cache_alloc_noprof (343,074,806 samples, 0.05%)</title><rect x="66.0798%" y="597" width="0.0497%" height="15" fill="rgb(243,50,9)" fg:x="455901590859" fg:w="343074806"/><text x="66.3298%" y="607.50"></text></g><g><title>mempool_alloc_noprof (375,452,101 samples, 0.05%)</title><rect x="66.0770%" y="613" width="0.0544%" height="15" fill="rgb(219,149,6)" fg:x="455882476995" fg:w="375452101"/><text x="66.3270%" y="623.50"></text></g><g><title>bio_alloc_bioset (588,771,970 samples, 0.09%)</title><rect x="66.0463%" y="629" width="0.0853%" height="15" fill="rgb(241,51,42)" fg:x="455670260505" fg:w="588771970"/><text x="66.2963%" y="639.50"></text></g><g><title>btrfs_bio_init (75,116,273 samples, 0.01%)</title><rect x="66.1316%" y="629" width="0.0109%" height="15" fill="rgb(226,128,27)" fg:x="456259032475" fg:w="75116273"/><text x="66.3816%" y="639.50"></text></g><g><title>btrfs_bio_alloc (716,129,384 samples, 0.10%)</title><rect x="66.0399%" y="645" width="0.1038%" height="15" fill="rgb(244,144,4)" fg:x="455625892891" fg:w="716129384"/><text x="66.2899%" y="655.50"></text></g><g><title>btrfs_search_slot (83,995,378 samples, 0.01%)</title><rect x="66.1491%" y="549" width="0.0122%" height="15" fill="rgb(221,4,13)" fg:x="456379380280" fg:w="83995378"/><text x="66.3991%" y="559.50"></text></g><g><title>btrfs_lookup_csum (88,381,038 samples, 0.01%)</title><rect x="66.1486%" y="565" width="0.0128%" height="15" fill="rgb(208,170,28)" fg:x="456376028834" fg:w="88381038"/><text x="66.3986%" y="575.50"></text></g><g><title>btrfs_lookup_bio_sums (111,468,978 samples, 0.02%)</title><rect x="66.1457%" y="597" width="0.0162%" height="15" fill="rgb(226,131,13)" fg:x="456356315405" fg:w="111468978"/><text x="66.3957%" y="607.50"></text></g><g><title>search_csum_tree (101,549,336 samples, 0.01%)</title><rect x="66.1472%" y="581" width="0.0147%" height="15" fill="rgb(215,72,41)" fg:x="456366235047" fg:w="101549336"/><text x="66.3972%" y="591.50"></text></g><g><title>__iommu_map (97,775,170 samples, 0.01%)</title><rect x="66.1977%" y="405" width="0.0142%" height="15" fill="rgb(243,108,20)" fg:x="456714792811" fg:w="97775170"/><text x="66.4477%" y="415.50"></text></g><g><title>dma_map_sgtable (165,121,202 samples, 0.02%)</title><rect x="66.1884%" y="469" width="0.0239%" height="15" fill="rgb(230,189,17)" fg:x="456650841757" fg:w="165121202"/><text x="66.4384%" y="479.50"></text></g><g><title>__dma_map_sg_attrs (165,121,202 samples, 0.02%)</title><rect x="66.1884%" y="453" width="0.0239%" height="15" fill="rgb(220,50,17)" fg:x="456650841757" fg:w="165121202"/><text x="66.4384%" y="463.50"></text></g><g><title>iommu_dma_map_sg (163,972,938 samples, 0.02%)</title><rect x="66.1886%" y="437" width="0.0238%" height="15" fill="rgb(248,152,48)" fg:x="456651990021" fg:w="163972938"/><text x="66.4386%" y="447.50"></text></g><g><title>iommu_map_sg (128,121,517 samples, 0.02%)</title><rect x="66.1938%" y="421" width="0.0186%" height="15" fill="rgb(244,91,11)" fg:x="456687841442" fg:w="128121517"/><text x="66.4438%" y="431.50"></text></g><g><title>nvme_prep_rq.part.0 (230,850,484 samples, 0.03%)</title><rect x="66.1823%" y="501" width="0.0335%" height="15" fill="rgb(220,157,5)" fg:x="456608856900" fg:w="230850484"/><text x="66.4323%" y="511.50"></text></g><g><title>nvme_map_data (225,217,170 samples, 0.03%)</title><rect x="66.1831%" y="485" width="0.0326%" height="15" fill="rgb(253,137,8)" fg:x="456614490214" fg:w="225217170"/><text x="66.4331%" y="495.50"></text></g><g><title>__submit_bio (350,806,939 samples, 0.05%)</title><rect x="66.1653%" y="581" width="0.0508%" height="15" fill="rgb(217,137,51)" fg:x="456491121482" fg:w="350806939"/><text x="66.4153%" y="591.50"></text></g><g><title>blk_mq_submit_bio (350,806,939 samples, 0.05%)</title><rect x="66.1653%" y="565" width="0.0508%" height="15" fill="rgb(218,209,53)" fg:x="456491121482" fg:w="350806939"/><text x="66.4153%" y="575.50"></text></g><g><title>blk_add_rq_to_plug (242,118,499 samples, 0.04%)</title><rect x="66.1810%" y="549" width="0.0351%" height="15" fill="rgb(249,137,25)" fg:x="456599809922" fg:w="242118499"/><text x="66.4310%" y="559.50"></text></g><g><title>blk_mq_flush_plug_list (240,983,167 samples, 0.03%)</title><rect x="66.1812%" y="533" width="0.0349%" height="15" fill="rgb(239,155,26)" fg:x="456600945254" fg:w="240983167"/><text x="66.4312%" y="543.50"></text></g><g><title>nvme_queue_rqs (236,478,794 samples, 0.03%)</title><rect x="66.1818%" y="517" width="0.0343%" height="15" fill="rgb(227,85,46)" fg:x="456605449627" fg:w="236478794"/><text x="66.4318%" y="527.50"></text></g><g><title>submit_extent_folio (1,703,000,628 samples, 0.25%)</title><rect x="65.9694%" y="661" width="0.2468%" height="15" fill="rgb(251,107,43)" fg:x="455140048066" fg:w="1703000628"/><text x="66.2194%" y="671.50"></text></g><g><title>submit_one_bio (488,982,356 samples, 0.07%)</title><rect x="66.1454%" y="645" width="0.0709%" height="15" fill="rgb(234,170,33)" fg:x="456354066338" fg:w="488982356"/><text x="66.3954%" y="655.50"></text></g><g><title>btrfs_submit_bbio (488,982,356 samples, 0.07%)</title><rect x="66.1454%" y="629" width="0.0709%" height="15" fill="rgb(206,29,35)" fg:x="456354066338" fg:w="488982356"/><text x="66.3954%" y="639.50"></text></g><g><title>btrfs_submit_chunk (488,982,356 samples, 0.07%)</title><rect x="66.1454%" y="613" width="0.0709%" height="15" fill="rgb(227,138,25)" fg:x="456354066338" fg:w="488982356"/><text x="66.3954%" y="623.50"></text></g><g><title>submit_bio_noacct_nocheck (358,535,375 samples, 0.05%)</title><rect x="66.1643%" y="597" width="0.0520%" height="15" fill="rgb(249,131,35)" fg:x="456484513319" fg:w="358535375"/><text x="66.4143%" y="607.50"></text></g><g><title>btrfs_submit_bbio (70,109,163 samples, 0.01%)</title><rect x="66.2192%" y="645" width="0.0102%" height="15" fill="rgb(239,6,40)" fg:x="456863043216" fg:w="70109163"/><text x="66.4692%" y="655.50"></text></g><g><title>btrfs_submit_chunk (70,109,163 samples, 0.01%)</title><rect x="66.2192%" y="629" width="0.0102%" height="15" fill="rgb(246,136,47)" fg:x="456863043216" fg:w="70109163"/><text x="66.4692%" y="639.50"></text></g><g><title>__kmalloc_noprof (132,240,129 samples, 0.02%)</title><rect x="66.2550%" y="629" width="0.0192%" height="15" fill="rgb(253,58,26)" fg:x="457110197123" fg:w="132240129"/><text x="66.5050%" y="639.50"></text></g><g><title>bio_add_folio (188,161,090 samples, 0.03%)</title><rect x="66.2855%" y="629" width="0.0273%" height="15" fill="rgb(237,141,10)" fg:x="457320773760" fg:w="188161090"/><text x="66.5355%" y="639.50"></text></g><g><title>bio_alloc_bioset (130,409,242 samples, 0.02%)</title><rect x="66.3128%" y="629" width="0.0189%" height="15" fill="rgb(234,156,12)" fg:x="457508934850" fg:w="130409242"/><text x="66.5628%" y="639.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (71,915,681 samples, 0.01%)</title><rect x="66.5146%" y="565" width="0.0104%" height="15" fill="rgb(243,224,36)" fg:x="458901360739" fg:w="71915681"/><text x="66.7646%" y="575.50"></text></g><g><title>clear_page_erms (718,527,508 samples, 0.10%)</title><rect x="66.5659%" y="533" width="0.1041%" height="15" fill="rgb(205,229,51)" fg:x="459255411008" fg:w="718527508"/><text x="66.8159%" y="543.50"></text></g><g><title>post_alloc_hook (741,994,957 samples, 0.11%)</title><rect x="66.5638%" y="549" width="0.1075%" height="15" fill="rgb(223,189,4)" fg:x="459240874142" fg:w="741994957"/><text x="66.8138%" y="559.50"></text></g><g><title>__list_del_entry_valid_or_report (161,760,903 samples, 0.02%)</title><rect x="66.7023%" y="501" width="0.0234%" height="15" fill="rgb(249,167,54)" fg:x="460195936418" fg:w="161760903"/><text x="66.9523%" y="511.50"></text></g><g><title>__list_del_entry_valid_or_report (320,539,556 samples, 0.05%)</title><rect x="66.7647%" y="485" width="0.0465%" height="15" fill="rgb(218,34,28)" fg:x="460627016467" fg:w="320539556"/><text x="67.0147%" y="495.50"></text></g><g><title>__rmqueue_pcplist (811,613,091 samples, 0.12%)</title><rect x="66.6976%" y="517" width="0.1176%" height="15" fill="rgb(232,109,42)" fg:x="460163822970" fg:w="811613091"/><text x="66.9476%" y="527.50"></text></g><g><title>rmqueue_bulk (617,738,740 samples, 0.09%)</title><rect x="66.7257%" y="501" width="0.0895%" height="15" fill="rgb(248,214,46)" fg:x="460357697321" fg:w="617738740"/><text x="66.9757%" y="511.50"></text></g><g><title>_raw_spin_trylock (116,946,571 samples, 0.02%)</title><rect x="66.8152%" y="517" width="0.0170%" height="15" fill="rgb(244,216,40)" fg:x="460975436061" fg:w="116946571"/><text x="67.0652%" y="527.50"></text></g><g><title>rmqueue.isra.0 (1,130,944,724 samples, 0.16%)</title><rect x="66.6714%" y="549" width="0.1639%" height="15" fill="rgb(231,226,31)" fg:x="459982869099" fg:w="1130944724"/><text x="66.9214%" y="559.50"></text></g><g><title>rmqueue_pcplist (1,041,574,134 samples, 0.15%)</title><rect x="66.6843%" y="533" width="0.1510%" height="15" fill="rgb(238,38,43)" fg:x="460072239689" fg:w="1041574134"/><text x="66.9343%" y="543.50"></text></g><g><title>get_page_from_freelist (2,150,648,852 samples, 0.31%)</title><rect x="66.5250%" y="565" width="0.3117%" height="15" fill="rgb(208,88,43)" fg:x="458973276420" fg:w="2150648852"/><text x="66.7750%" y="575.50"></text></g><g><title>__alloc_frozen_pages_noprof (2,828,103,381 samples, 0.41%)</title><rect x="66.4288%" y="581" width="0.4099%" height="15" fill="rgb(205,136,37)" fg:x="458309139016" fg:w="2828103381"/><text x="66.6788%" y="591.50"></text></g><g><title>policy_nodemask (136,400,219 samples, 0.02%)</title><rect x="66.8387%" y="581" width="0.0198%" height="15" fill="rgb(237,34,14)" fg:x="461137242397" fg:w="136400219"/><text x="67.0887%" y="591.50"></text></g><g><title>alloc_pages_mpol (3,422,114,574 samples, 0.50%)</title><rect x="66.3652%" y="597" width="0.4960%" height="15" fill="rgb(236,193,44)" fg:x="457870380978" fg:w="3422114574"/><text x="66.6152%" y="607.50"></text></g><g><title>folio_alloc_noprof (3,648,479,221 samples, 0.53%)</title><rect x="66.3393%" y="613" width="0.5288%" height="15" fill="rgb(231,48,10)" fg:x="457691787814" fg:w="3648479221"/><text x="66.5893%" y="623.50"></text></g><g><title>btrfs_alloc_folio_array (3,708,734,976 samples, 0.54%)</title><rect x="66.3317%" y="629" width="0.5376%" height="15" fill="rgb(213,141,34)" fg:x="457639344092" fg:w="3708734976"/><text x="66.5817%" y="639.50"></text></g><g><title>btrfs_release_path (226,760,087 samples, 0.03%)</title><rect x="66.8904%" y="565" width="0.0329%" height="15" fill="rgb(249,130,34)" fg:x="461494262007" fg:w="226760087"/><text x="67.1404%" y="575.50"></text></g><g><title>btrfs_free_path (235,763,197 samples, 0.03%)</title><rect x="66.8901%" y="581" width="0.0342%" height="15" fill="rgb(219,42,41)" fg:x="461492039716" fg:w="235763197"/><text x="67.1401%" y="591.50"></text></g><g><title>btrfs_csum_root (71,378,638 samples, 0.01%)</title><rect x="66.9381%" y="565" width="0.0103%" height="15" fill="rgb(224,100,54)" fg:x="461823424144" fg:w="71378638"/><text x="67.1881%" y="575.50"></text></g><g><title>btrfs_bin_search (233,896,206 samples, 0.03%)</title><rect x="66.9825%" y="533" width="0.0339%" height="15" fill="rgb(229,200,27)" fg:x="462129710715" fg:w="233896206"/><text x="67.2325%" y="543.50"></text></g><g><title>btrfs_read_lock_root_node (85,190,012 samples, 0.01%)</title><rect x="67.0164%" y="533" width="0.0123%" height="15" fill="rgb(217,118,10)" fg:x="462363606921" fg:w="85190012"/><text x="67.2664%" y="543.50"></text></g><g><title>alloc_extent_buffer (88,570,359 samples, 0.01%)</title><rect x="67.0484%" y="517" width="0.0128%" height="15" fill="rgb(206,22,3)" fg:x="462583800611" fg:w="88570359"/><text x="67.2984%" y="527.50"></text></g><g><title>btrfs_buffer_uptodate (78,003,520 samples, 0.01%)</title><rect x="67.0617%" y="517" width="0.0113%" height="15" fill="rgb(232,163,46)" fg:x="462675611754" fg:w="78003520"/><text x="67.3117%" y="527.50"></text></g><g><title>btrfs_verify_level_key (156,880,819 samples, 0.02%)</title><rect x="67.0831%" y="517" width="0.0227%" height="15" fill="rgb(206,95,13)" fg:x="462823342433" fg:w="156880819"/><text x="67.3331%" y="527.50"></text></g><g><title>__radix_tree_lookup (104,518,534 samples, 0.02%)</title><rect x="67.1160%" y="485" width="0.0151%" height="15" fill="rgb(253,154,18)" fg:x="463050389852" fg:w="104518534"/><text x="67.3660%" y="495.50"></text></g><g><title>find_extent_buffer_nolock (151,087,472 samples, 0.02%)</title><rect x="67.1108%" y="501" width="0.0219%" height="15" fill="rgb(219,32,23)" fg:x="463014811067" fg:w="151087472"/><text x="67.3608%" y="511.50"></text></g><g><title>find_extent_buffer (225,017,010 samples, 0.03%)</title><rect x="67.1058%" y="517" width="0.0326%" height="15" fill="rgb(230,191,45)" fg:x="462980223252" fg:w="225017010"/><text x="67.3558%" y="527.50"></text></g><g><title>read_block_for_search (760,386,276 samples, 0.11%)</title><rect x="67.0348%" y="533" width="0.1102%" height="15" fill="rgb(229,64,36)" fg:x="462490080699" fg:w="760386276"/><text x="67.2848%" y="543.50"></text></g><g><title>btrfs_search_slot (1,350,290,197 samples, 0.20%)</title><rect x="66.9596%" y="549" width="0.1957%" height="15" fill="rgb(205,129,25)" fg:x="461971238797" fg:w="1350290197"/><text x="67.2096%" y="559.50"></text></g><g><title>btrfs_lookup_csum (1,377,688,682 samples, 0.20%)</title><rect x="66.9573%" y="565" width="0.1997%" height="15" fill="rgb(254,112,7)" fg:x="461955834222" fg:w="1377688682"/><text x="67.2073%" y="575.50"></text></g><g><title>btrfs_lookup_bio_sums (1,937,632,524 samples, 0.28%)</title><rect x="66.8849%" y="597" width="0.2808%" height="15" fill="rgb(226,53,48)" fg:x="461456342189" fg:w="1937632524"/><text x="67.1349%" y="607.50"></text></g><g><title>search_csum_tree (1,632,991,906 samples, 0.24%)</title><rect x="66.9291%" y="581" width="0.2367%" height="15" fill="rgb(214,153,38)" fg:x="461760982807" fg:w="1632991906"/><text x="67.1791%" y="591.50"></text></g><g><title>btrfs_get_chunk_map (105,904,072 samples, 0.02%)</title><rect x="67.1746%" y="581" width="0.0154%" height="15" fill="rgb(243,101,7)" fg:x="463454567121" fg:w="105904072"/><text x="67.4246%" y="591.50"></text></g><g><title>btrfs_find_chunk_map_nolock (75,679,070 samples, 0.01%)</title><rect x="67.1789%" y="565" width="0.0110%" height="15" fill="rgb(240,140,22)" fg:x="463484792123" fg:w="75679070"/><text x="67.4289%" y="575.50"></text></g><g><title>btrfs_map_block (199,657,940 samples, 0.03%)</title><rect x="67.1658%" y="597" width="0.0289%" height="15" fill="rgb(235,114,2)" fg:x="463393974713" fg:w="199657940"/><text x="67.4158%" y="607.50"></text></g><g><title>btrfs_submit_dev_bio (118,676,263 samples, 0.02%)</title><rect x="67.1954%" y="597" width="0.0172%" height="15" fill="rgb(242,59,12)" fg:x="463598083116" fg:w="118676263"/><text x="67.4454%" y="607.50"></text></g><g><title>bio_associate_blkg (89,953,421 samples, 0.01%)</title><rect x="67.1995%" y="581" width="0.0130%" height="15" fill="rgb(252,134,9)" fg:x="463626805958" fg:w="89953421"/><text x="67.4495%" y="591.50"></text></g><g><title>blk_mq_get_tag (72,504,857 samples, 0.01%)</title><rect x="67.2493%" y="533" width="0.0105%" height="15" fill="rgb(236,4,44)" fg:x="463969983125" fg:w="72504857"/><text x="67.4993%" y="543.50"></text></g><g><title>__blk_mq_alloc_requests (155,800,339 samples, 0.02%)</title><rect x="67.2419%" y="549" width="0.0226%" height="15" fill="rgb(254,172,41)" fg:x="463918860770" fg:w="155800339"/><text x="67.4919%" y="559.50"></text></g><g><title>nvme_prep_rq.part.0 (101,555,821 samples, 0.01%)</title><rect x="67.2991%" y="501" width="0.0147%" height="15" fill="rgb(244,63,20)" fg:x="464313872133" fg:w="101555821"/><text x="67.5491%" y="511.50"></text></g><g><title>nvme_map_data (87,198,325 samples, 0.01%)</title><rect x="67.3012%" y="485" width="0.0126%" height="15" fill="rgb(250,73,31)" fg:x="464328229629" fg:w="87198325"/><text x="67.5512%" y="495.50"></text></g><g><title>blk_add_rq_to_plug (124,335,241 samples, 0.02%)</title><rect x="67.2961%" y="549" width="0.0180%" height="15" fill="rgb(241,38,36)" fg:x="464293178678" fg:w="124335241"/><text x="67.5461%" y="559.50"></text></g><g><title>blk_mq_flush_plug_list (107,951,903 samples, 0.02%)</title><rect x="67.2985%" y="533" width="0.0156%" height="15" fill="rgb(245,211,2)" fg:x="464309562016" fg:w="107951903"/><text x="67.5485%" y="543.50"></text></g><g><title>nvme_queue_rqs (104,765,482 samples, 0.02%)</title><rect x="67.2990%" y="517" width="0.0152%" height="15" fill="rgb(206,120,28)" fg:x="464312748437" fg:w="104765482"/><text x="67.5490%" y="527.50"></text></g><g><title>blk_attempt_plug_merge (86,048,493 samples, 0.01%)</title><rect x="67.3141%" y="549" width="0.0125%" height="15" fill="rgb(211,59,34)" fg:x="464417513919" fg:w="86048493"/><text x="67.5641%" y="559.50"></text></g><g><title>__submit_bio (719,564,992 samples, 0.10%)</title><rect x="67.2256%" y="581" width="0.1043%" height="15" fill="rgb(233,168,5)" fg:x="463806867563" fg:w="719564992"/><text x="67.4756%" y="591.50"></text></g><g><title>blk_mq_submit_bio (695,515,527 samples, 0.10%)</title><rect x="67.2291%" y="565" width="0.1008%" height="15" fill="rgb(234,33,13)" fg:x="463830917028" fg:w="695515527"/><text x="67.4791%" y="575.50"></text></g><g><title>btrfs_submit_chunk (3,189,272,721 samples, 0.46%)</title><rect x="66.8727%" y="613" width="0.4623%" height="15" fill="rgb(231,150,26)" fg:x="461371850659" fg:w="3189272721"/><text x="67.1227%" y="623.50"></text></g><g><title>submit_bio_noacct_nocheck (786,572,090 samples, 0.11%)</title><rect x="67.2209%" y="597" width="0.1140%" height="15" fill="rgb(217,191,4)" fg:x="463774551290" fg:w="786572090"/><text x="67.4709%" y="607.50"></text></g><g><title>btrfs_submit_bbio (3,202,881,348 samples, 0.46%)</title><rect x="66.8710%" y="629" width="0.4642%" height="15" fill="rgb(246,198,38)" fg:x="461360502059" fg:w="3202881348"/><text x="67.1210%" y="639.50"></text></g><g><title>btrfs_do_readpage (14,568,541,871 samples, 2.11%)</title><rect x="65.2301%" y="677" width="2.1116%" height="15" fill="rgb(245,64,37)" fg:x="450039335255" fg:w="14568541871"/><text x="65.4801%" y="687.50">b..</text></g><g><title>submit_one_bio (7,764,828,432 samples, 1.13%)</title><rect x="66.2163%" y="661" width="1.1255%" height="15" fill="rgb(250,30,36)" fg:x="456843048694" fg:w="7764828432"/><text x="66.4663%" y="671.50"></text></g><g><title>btrfs_submit_compressed_read (7,674,724,747 samples, 1.11%)</title><rect x="66.2293%" y="645" width="1.1124%" height="15" fill="rgb(217,86,53)" fg:x="456933152379" fg:w="7674724747"/><text x="66.4793%" y="655.50"></text></g><g><title>btrfs_lock_and_flush_ordered_range (73,310,454 samples, 0.01%)</title><rect x="67.3417%" y="677" width="0.0106%" height="15" fill="rgb(228,157,16)" fg:x="464607877126" fg:w="73310454"/><text x="67.5917%" y="687.50"></text></g><g><title>__iommu_map (85,990,823 samples, 0.01%)</title><rect x="67.3995%" y="437" width="0.0125%" height="15" fill="rgb(217,59,31)" fg:x="465006242119" fg:w="85990823"/><text x="67.6495%" y="447.50"></text></g><g><title>iommu_v1_map_pages (71,292,253 samples, 0.01%)</title><rect x="67.4016%" y="421" width="0.0103%" height="15" fill="rgb(237,138,41)" fg:x="465020940689" fg:w="71292253"/><text x="67.6516%" y="431.50"></text></g><g><title>dma_map_sgtable (117,401,089 samples, 0.02%)</title><rect x="67.3951%" y="501" width="0.0170%" height="15" fill="rgb(227,91,49)" fg:x="464975948689" fg:w="117401089"/><text x="67.6451%" y="511.50"></text></g><g><title>__dma_map_sg_attrs (116,277,483 samples, 0.02%)</title><rect x="67.3952%" y="485" width="0.0169%" height="15" fill="rgb(247,21,44)" fg:x="464977072295" fg:w="116277483"/><text x="67.6452%" y="495.50"></text></g><g><title>iommu_dma_map_sg (115,134,793 samples, 0.02%)</title><rect x="67.3954%" y="469" width="0.0167%" height="15" fill="rgb(219,210,51)" fg:x="464978214985" fg:w="115134793"/><text x="67.6454%" y="479.50"></text></g><g><title>iommu_map_sg (100,595,495 samples, 0.01%)</title><rect x="67.3975%" y="453" width="0.0146%" height="15" fill="rgb(209,140,6)" fg:x="464992754283" fg:w="100595495"/><text x="67.6475%" y="463.50"></text></g><g><title>nvme_prep_rq.part.0 (189,534,891 samples, 0.03%)</title><rect x="67.3897%" y="533" width="0.0275%" height="15" fill="rgb(221,188,24)" fg:x="464938948907" fg:w="189534891"/><text x="67.6397%" y="543.50"></text></g><g><title>nvme_map_data (182,680,181 samples, 0.03%)</title><rect x="67.3907%" y="517" width="0.0265%" height="15" fill="rgb(232,154,20)" fg:x="464945803617" fg:w="182680181"/><text x="67.6407%" y="527.50"></text></g><g><title>blk_add_rq_to_plug (206,408,091 samples, 0.03%)</title><rect x="67.3884%" y="581" width="0.0299%" height="15" fill="rgb(244,137,50)" fg:x="464929846913" fg:w="206408091"/><text x="67.6384%" y="591.50"></text></g><g><title>blk_mq_flush_plug_list (204,132,730 samples, 0.03%)</title><rect x="67.3887%" y="565" width="0.0296%" height="15" fill="rgb(225,185,43)" fg:x="464932122274" fg:w="204132730"/><text x="67.6387%" y="575.50"></text></g><g><title>nvme_queue_rqs (200,710,716 samples, 0.03%)</title><rect x="67.3892%" y="549" width="0.0291%" height="15" fill="rgb(213,205,38)" fg:x="464935544288" fg:w="200710716"/><text x="67.6392%" y="559.50"></text></g><g><title>__submit_bio (309,688,231 samples, 0.04%)</title><rect x="67.3738%" y="613" width="0.0449%" height="15" fill="rgb(236,73,12)" fg:x="464828813980" fg:w="309688231"/><text x="67.6238%" y="623.50"></text></g><g><title>blk_mq_submit_bio (307,533,029 samples, 0.04%)</title><rect x="67.3741%" y="597" width="0.0446%" height="15" fill="rgb(235,219,13)" fg:x="464830969182" fg:w="307533029"/><text x="67.6241%" y="607.50"></text></g><g><title>btrfs_submit_bbio (390,438,168 samples, 0.06%)</title><rect x="67.3622%" y="661" width="0.0566%" height="15" fill="rgb(218,59,36)" fg:x="464749217997" fg:w="390438168"/><text x="67.6122%" y="671.50"></text></g><g><title>btrfs_submit_chunk (389,280,659 samples, 0.06%)</title><rect x="67.3624%" y="645" width="0.0564%" height="15" fill="rgb(205,110,39)" fg:x="464750375506" fg:w="389280659"/><text x="67.6124%" y="655.50"></text></g><g><title>submit_bio_noacct_nocheck (310,842,185 samples, 0.05%)</title><rect x="67.3738%" y="629" width="0.0451%" height="15" fill="rgb(218,206,42)" fg:x="464828813980" fg:w="310842185"/><text x="67.6238%" y="639.50"></text></g><g><title>filemap_add_folio (129,395,174 samples, 0.02%)</title><rect x="67.4406%" y="629" width="0.0188%" height="15" fill="rgb(248,125,24)" fg:x="465289695113" fg:w="129395174"/><text x="67.6906%" y="639.50"></text></g><g><title>alloc_pages_mpol (77,019,482 samples, 0.01%)</title><rect x="67.4593%" y="613" width="0.0112%" height="15" fill="rgb(242,28,27)" fg:x="465419090287" fg:w="77019482"/><text x="67.7093%" y="623.50"></text></g><g><title>folio_alloc_noprof (78,144,298 samples, 0.01%)</title><rect x="67.4593%" y="629" width="0.0113%" height="15" fill="rgb(216,228,15)" fg:x="465419090287" fg:w="78144298"/><text x="67.7093%" y="639.50"></text></g><g><title>add_ra_bio_pages.constprop.0.isra.0 (342,244,707 samples, 0.05%)</title><rect x="67.4221%" y="645" width="0.0496%" height="15" fill="rgb(235,116,46)" fg:x="465162683552" fg:w="342244707"/><text x="67.6721%" y="655.50"></text></g><g><title>get_page_from_freelist (149,006,114 samples, 0.02%)</title><rect x="67.4868%" y="581" width="0.0216%" height="15" fill="rgb(224,18,32)" fg:x="465608874709" fg:w="149006114"/><text x="67.7368%" y="591.50"></text></g><g><title>rmqueue.isra.0 (71,628,298 samples, 0.01%)</title><rect x="67.4980%" y="565" width="0.0104%" height="15" fill="rgb(252,5,12)" fg:x="465686252525" fg:w="71628298"/><text x="67.7480%" y="575.50"></text></g><g><title>__alloc_frozen_pages_noprof (188,834,218 samples, 0.03%)</title><rect x="67.4812%" y="597" width="0.0274%" height="15" fill="rgb(251,36,5)" fg:x="465570179677" fg:w="188834218"/><text x="67.7312%" y="607.50"></text></g><g><title>alloc_pages_mpol (222,082,084 samples, 0.03%)</title><rect x="67.4772%" y="613" width="0.0322%" height="15" fill="rgb(217,53,14)" fg:x="465542385056" fg:w="222082084"/><text x="67.7272%" y="623.50"></text></g><g><title>folio_alloc_noprof (242,150,470 samples, 0.04%)</title><rect x="67.4751%" y="629" width="0.0351%" height="15" fill="rgb(215,86,45)" fg:x="465527903451" fg:w="242150470"/><text x="67.7251%" y="639.50"></text></g><g><title>btrfs_alloc_folio_array (248,747,335 samples, 0.04%)</title><rect x="67.4743%" y="645" width="0.0361%" height="15" fill="rgb(242,169,11)" fg:x="465522395841" fg:w="248747335"/><text x="67.7243%" y="655.50"></text></g><g><title>btrfs_lookup_csum (104,856,342 samples, 0.02%)</title><rect x="67.5151%" y="581" width="0.0152%" height="15" fill="rgb(211,213,45)" fg:x="465803918280" fg:w="104856342"/><text x="67.7651%" y="591.50"></text></g><g><title>btrfs_search_slot (100,412,371 samples, 0.01%)</title><rect x="67.5157%" y="565" width="0.0146%" height="15" fill="rgb(205,88,11)" fg:x="465808362251" fg:w="100412371"/><text x="67.7657%" y="575.50"></text></g><g><title>btrfs_lookup_bio_sums (140,985,734 samples, 0.02%)</title><rect x="67.5105%" y="613" width="0.0204%" height="15" fill="rgb(252,69,26)" fg:x="465772230580" fg:w="140985734"/><text x="67.7605%" y="623.50"></text></g><g><title>search_csum_tree (120,118,853 samples, 0.02%)</title><rect x="67.5135%" y="597" width="0.0174%" height="15" fill="rgb(246,123,37)" fg:x="465793097461" fg:w="120118853"/><text x="67.7635%" y="607.50"></text></g><g><title>btrfs_submit_chunk (234,872,431 samples, 0.03%)</title><rect x="67.5105%" y="629" width="0.0340%" height="15" fill="rgb(212,205,5)" fg:x="465772230580" fg:w="234872431"/><text x="67.7605%" y="639.50"></text></g><g><title>btrfs_submit_bbio (236,011,033 samples, 0.03%)</title><rect x="67.5105%" y="645" width="0.0342%" height="15" fill="rgb(253,148,0)" fg:x="465772230580" fg:w="236011033"/><text x="67.7605%" y="655.50"></text></g><g><title>submit_one_bio (1,262,427,146 samples, 0.18%)</title><rect x="67.3622%" y="677" width="0.1830%" height="15" fill="rgb(239,22,4)" fg:x="464749217997" fg:w="1262427146"/><text x="67.6122%" y="687.50"></text></g><g><title>btrfs_submit_compressed_read (871,988,978 samples, 0.13%)</title><rect x="67.4188%" y="661" width="0.1264%" height="15" fill="rgb(226,26,53)" fg:x="465139656165" fg:w="871988978"/><text x="67.6688%" y="671.50"></text></g><g><title>__rcu_read_lock (100,337,573 samples, 0.01%)</title><rect x="67.6480%" y="661" width="0.0145%" height="15" fill="rgb(225,229,45)" fg:x="466721061048" fg:w="100337573"/><text x="67.8980%" y="671.50"></text></g><g><title>read_pages (20,434,763,057 samples, 2.96%)</title><rect x="64.8564%" y="709" width="2.9619%" height="15" fill="rgb(220,60,37)" fg:x="447461259791" fg:w="20434763057"/><text x="65.1064%" y="719.50">rea..</text></g><g><title>btrfs_readahead (18,570,376,359 samples, 2.69%)</title><rect x="65.1267%" y="693" width="2.6916%" height="15" fill="rgb(217,180,35)" fg:x="449325646489" fg:w="18570376359"/><text x="65.3767%" y="703.50">bt..</text></g><g><title>xa_load (1,884,377,705 samples, 0.27%)</title><rect x="67.5452%" y="677" width="0.2731%" height="15" fill="rgb(229,7,53)" fg:x="466011645143" fg:w="1884377705"/><text x="67.7952%" y="687.50"></text></g><g><title>xas_load (1,038,960,914 samples, 0.15%)</title><rect x="67.6677%" y="661" width="0.1506%" height="15" fill="rgb(254,137,3)" fg:x="466857061934" fg:w="1038960914"/><text x="67.9177%" y="671.50"></text></g><g><title>xas_start (209,391,780 samples, 0.03%)</title><rect x="67.7880%" y="645" width="0.0303%" height="15" fill="rgb(215,140,41)" fg:x="467686631068" fg:w="209391780"/><text x="68.0380%" y="655.50"></text></g><g><title>srso_alias_return_thunk (78,889,883 samples, 0.01%)</title><rect x="67.8183%" y="709" width="0.0114%" height="15" fill="rgb(250,80,15)" fg:x="467896022848" fg:w="78889883"/><text x="68.0683%" y="719.50"></text></g><g><title>srso_alias_safe_ret (75,446,785 samples, 0.01%)</title><rect x="67.8188%" y="693" width="0.0109%" height="15" fill="rgb(252,191,6)" fg:x="467899465946" fg:w="75446785"/><text x="68.0688%" y="703.50"></text></g><g><title>__rcu_read_lock (83,727,672 samples, 0.01%)</title><rect x="67.9559%" y="693" width="0.0121%" height="15" fill="rgb(246,217,18)" fg:x="468845391271" fg:w="83727672"/><text x="68.2059%" y="703.50"></text></g><g><title>filemap_readahead.isra.0 (69,493,007,764 samples, 10.07%)</title><rect x="58.0449%" y="741" width="10.0725%" height="15" fill="rgb(223,93,7)" fg:x="400466723842" fg:w="69493007764"/><text x="58.2949%" y="751.50">filemap_readahe..</text></g><g><title>page_cache_ra_unbounded (69,465,054,131 samples, 10.07%)</title><rect x="58.0490%" y="725" width="10.0685%" height="15" fill="rgb(225,55,52)" fg:x="400494677475" fg:w="69465054131"/><text x="58.2990%" y="735.50">page_cache_ra_u..</text></g><g><title>xa_load (1,982,719,776 samples, 0.29%)</title><rect x="67.8301%" y="709" width="0.2874%" height="15" fill="rgb(240,31,24)" fg:x="467977011830" fg:w="1982719776"/><text x="68.0801%" y="719.50"></text></g><g><title>xas_load (944,021,403 samples, 0.14%)</title><rect x="67.9806%" y="693" width="0.1368%" height="15" fill="rgb(205,56,52)" fg:x="469015710203" fg:w="944021403"/><text x="68.2306%" y="703.50"></text></g><g><title>xas_start (231,288,212 samples, 0.03%)</title><rect x="68.0839%" y="677" width="0.0335%" height="15" fill="rgb(246,146,12)" fg:x="469728443394" fg:w="231288212"/><text x="68.3339%" y="687.50"></text></g><g><title>__lruvec_stat_mod_folio (131,087,691 samples, 0.02%)</title><rect x="68.1663%" y="693" width="0.0190%" height="15" fill="rgb(239,84,36)" fg:x="470296684036" fg:w="131087691"/><text x="68.4163%" y="703.50"></text></g><g><title>_raw_spin_lock_irq (120,653,459 samples, 0.02%)</title><rect x="68.1863%" y="693" width="0.0175%" height="15" fill="rgb(207,41,40)" fg:x="470434580547" fg:w="120653459"/><text x="68.4363%" y="703.50"></text></g><g><title>__filemap_add_folio (560,361,725 samples, 0.08%)</title><rect x="68.1472%" y="709" width="0.0812%" height="15" fill="rgb(241,179,25)" fg:x="470164962024" fg:w="560361725"/><text x="68.3972%" y="719.50"></text></g><g><title>xas_store (72,429,736 samples, 0.01%)</title><rect x="68.2179%" y="693" width="0.0105%" height="15" fill="rgb(210,0,34)" fg:x="470652894013" fg:w="72429736"/><text x="68.4679%" y="703.50"></text></g><g><title>lru_gen_add_folio (137,705,619 samples, 0.02%)</title><rect x="68.2603%" y="661" width="0.0200%" height="15" fill="rgb(225,217,29)" fg:x="470945514408" fg:w="137705619"/><text x="68.5103%" y="671.50"></text></g><g><title>lru_add (287,211,877 samples, 0.04%)</title><rect x="68.2395%" y="677" width="0.0416%" height="15" fill="rgb(216,191,38)" fg:x="470801467356" fg:w="287211877"/><text x="68.4895%" y="687.50"></text></g><g><title>__folio_batch_add_and_move (364,496,389 samples, 0.05%)</title><rect x="68.2284%" y="709" width="0.0528%" height="15" fill="rgb(232,140,52)" fg:x="470725323749" fg:w="364496389"/><text x="68.4784%" y="719.50"></text></g><g><title>folio_batch_move_lru (350,321,319 samples, 0.05%)</title><rect x="68.2305%" y="693" width="0.0508%" height="15" fill="rgb(223,158,51)" fg:x="470739498819" fg:w="350321319"/><text x="68.4805%" y="703.50"></text></g><g><title>__count_memcg_events (81,103,355 samples, 0.01%)</title><rect x="68.3218%" y="661" width="0.0118%" height="15" fill="rgb(235,29,51)" fg:x="471369572485" fg:w="81103355"/><text x="68.5718%" y="671.50"></text></g><g><title>memcg1_commit_charge (171,587,877 samples, 0.02%)</title><rect x="68.3098%" y="677" width="0.0249%" height="15" fill="rgb(215,181,18)" fg:x="471286818091" fg:w="171587877"/><text x="68.5598%" y="687.50"></text></g><g><title>consume_stock (72,515,084 samples, 0.01%)</title><rect x="68.3424%" y="661" width="0.0105%" height="15" fill="rgb(227,125,34)" fg:x="471511495874" fg:w="72515084"/><text x="68.5924%" y="671.50"></text></g><g><title>charge_memcg (443,993,419 samples, 0.06%)</title><rect x="68.2893%" y="693" width="0.0644%" height="15" fill="rgb(230,197,49)" fg:x="471145606776" fg:w="443993419"/><text x="68.5393%" y="703.50"></text></g><g><title>try_charge_memcg (127,871,335 samples, 0.02%)</title><rect x="68.3352%" y="677" width="0.0185%" height="15" fill="rgb(239,141,16)" fg:x="471461728860" fg:w="127871335"/><text x="68.5852%" y="687.50"></text></g><g><title>__rcu_read_unlock (119,160,559 samples, 0.02%)</title><rect x="68.3754%" y="677" width="0.0173%" height="15" fill="rgb(225,105,43)" fg:x="471739123454" fg:w="119160559"/><text x="68.6254%" y="687.50"></text></g><g><title>get_mem_cgroup_from_mm (284,023,287 samples, 0.04%)</title><rect x="68.3537%" y="693" width="0.0412%" height="15" fill="rgb(214,131,14)" fg:x="471589600195" fg:w="284023287"/><text x="68.6037%" y="703.50"></text></g><g><title>__mem_cgroup_charge (786,016,002 samples, 0.11%)</title><rect x="68.2812%" y="709" width="0.1139%" height="15" fill="rgb(229,177,11)" fg:x="471089820138" fg:w="786016002"/><text x="68.5312%" y="719.50"></text></g><g><title>lru_gen_test_recent (167,227,429 samples, 0.02%)</title><rect x="68.4062%" y="693" width="0.0242%" height="15" fill="rgb(231,180,14)" fg:x="471952200035" fg:w="167227429"/><text x="68.6562%" y="703.50"></text></g><g><title>xa_load (127,107,780 samples, 0.02%)</title><rect x="68.4121%" y="677" width="0.0184%" height="15" fill="rgb(232,88,2)" fg:x="471992319684" fg:w="127107780"/><text x="68.6621%" y="687.50"></text></g><g><title>mod_lruvec_state (103,908,081 samples, 0.02%)</title><rect x="68.4305%" y="693" width="0.0151%" height="15" fill="rgb(205,220,8)" fg:x="472119427464" fg:w="103908081"/><text x="68.6805%" y="703.50"></text></g><g><title>lru_gen_refault (338,783,459 samples, 0.05%)</title><rect x="68.3969%" y="709" width="0.0491%" height="15" fill="rgb(225,23,53)" fg:x="471887872212" fg:w="338783459"/><text x="68.6469%" y="719.50"></text></g><g><title>filemap_add_folio (2,161,875,935 samples, 0.31%)</title><rect x="68.1345%" y="725" width="0.3133%" height="15" fill="rgb(213,62,29)" fg:x="470077043824" fg:w="2161875935"/><text x="68.3845%" y="735.50"></text></g><g><title>clear_page_erms (256,781,614 samples, 0.04%)</title><rect x="68.5202%" y="645" width="0.0372%" height="15" fill="rgb(227,75,7)" fg:x="472738268643" fg:w="256781614"/><text x="68.7702%" y="655.50"></text></g><g><title>post_alloc_hook (272,122,279 samples, 0.04%)</title><rect x="68.5183%" y="661" width="0.0394%" height="15" fill="rgb(207,105,14)" fg:x="472725138511" fg:w="272122279"/><text x="68.7683%" y="671.50"></text></g><g><title>rmqueue_bulk (239,014,550 samples, 0.03%)</title><rect x="68.5714%" y="613" width="0.0346%" height="15" fill="rgb(245,62,29)" fg:x="473091644039" fg:w="239014550"/><text x="68.8214%" y="623.50"></text></g><g><title>__rmqueue_pcplist (284,591,251 samples, 0.04%)</title><rect x="68.5651%" y="629" width="0.0412%" height="15" fill="rgb(236,202,4)" fg:x="473048286193" fg:w="284591251"/><text x="68.8151%" y="639.50"></text></g><g><title>rmqueue.isra.0 (363,484,164 samples, 0.05%)</title><rect x="68.5577%" y="661" width="0.0527%" height="15" fill="rgb(250,67,1)" fg:x="472997260790" fg:w="363484164"/><text x="68.8077%" y="671.50"></text></g><g><title>rmqueue_pcplist (343,481,685 samples, 0.05%)</title><rect x="68.5606%" y="645" width="0.0498%" height="15" fill="rgb(253,115,44)" fg:x="473017263269" fg:w="343481685"/><text x="68.8106%" y="655.50"></text></g><g><title>__alloc_frozen_pages_noprof (892,077,837 samples, 0.13%)</title><rect x="68.4819%" y="693" width="0.1293%" height="15" fill="rgb(251,139,18)" fg:x="472474099966" fg:w="892077837"/><text x="68.7319%" y="703.50"></text></g><g><title>get_page_from_freelist (727,160,295 samples, 0.11%)</title><rect x="68.5058%" y="677" width="0.1054%" height="15" fill="rgb(218,22,32)" fg:x="472639017508" fg:w="727160295"/><text x="68.7558%" y="687.50"></text></g><g><title>alloc_pages_mpol (1,056,626,296 samples, 0.15%)</title><rect x="68.4601%" y="709" width="0.1532%" height="15" fill="rgb(243,53,5)" fg:x="472324073770" fg:w="1056626296"/><text x="68.7101%" y="719.50"></text></g><g><title>folio_alloc_noprof (1,134,973,424 samples, 0.16%)</title><rect x="68.4522%" y="725" width="0.1645%" height="15" fill="rgb(227,56,16)" fg:x="472269104473" fg:w="1134973424"/><text x="68.7022%" y="735.50"></text></g><g><title>__iommu_map (152,014,836 samples, 0.02%)</title><rect x="68.6550%" y="549" width="0.0220%" height="15" fill="rgb(245,53,0)" fg:x="473668507650" fg:w="152014836"/><text x="68.9050%" y="559.50"></text></g><g><title>iommu_v1_map_pages (95,642,083 samples, 0.01%)</title><rect x="68.6632%" y="533" width="0.0139%" height="15" fill="rgb(216,170,35)" fg:x="473724880403" fg:w="95642083"/><text x="68.9132%" y="543.50"></text></g><g><title>dma_map_sgtable (216,186,254 samples, 0.03%)</title><rect x="68.6462%" y="613" width="0.0313%" height="15" fill="rgb(211,200,8)" fg:x="473607686477" fg:w="216186254"/><text x="68.8962%" y="623.50"></text></g><g><title>__dma_map_sg_attrs (215,051,164 samples, 0.03%)</title><rect x="68.6464%" y="597" width="0.0312%" height="15" fill="rgb(228,204,44)" fg:x="473608821567" fg:w="215051164"/><text x="68.8964%" y="607.50"></text></g><g><title>iommu_dma_map_sg (212,806,303 samples, 0.03%)</title><rect x="68.6467%" y="581" width="0.0308%" height="15" fill="rgb(214,121,17)" fg:x="473611066428" fg:w="212806303"/><text x="68.8967%" y="591.50"></text></g><g><title>iommu_map_sg (176,374,436 samples, 0.03%)</title><rect x="68.6520%" y="565" width="0.0256%" height="15" fill="rgb(233,64,38)" fg:x="473647498295" fg:w="176374436"/><text x="68.9020%" y="575.50"></text></g><g><title>nvme_prep_rq.part.0 (403,116,776 samples, 0.06%)</title><rect x="68.6290%" y="645" width="0.0584%" height="15" fill="rgb(253,54,19)" fg:x="473489060008" fg:w="403116776"/><text x="68.8790%" y="655.50"></text></g><g><title>nvme_map_data (370,110,340 samples, 0.05%)</title><rect x="68.6338%" y="629" width="0.0536%" height="15" fill="rgb(253,94,18)" fg:x="473522066444" fg:w="370110340"/><text x="68.8838%" y="639.50"></text></g><g><title>__blk_flush_plug (448,651,342 samples, 0.07%)</title><rect x="68.6245%" y="693" width="0.0650%" height="15" fill="rgb(227,57,52)" fg:x="473458012270" fg:w="448651342"/><text x="68.8745%" y="703.50"></text></g><g><title>blk_mq_flush_plug_list (443,006,917 samples, 0.06%)</title><rect x="68.6253%" y="677" width="0.0642%" height="15" fill="rgb(230,228,50)" fg:x="473463656695" fg:w="443006917"/><text x="68.8753%" y="687.50"></text></g><g><title>nvme_queue_rqs (428,649,340 samples, 0.06%)</title><rect x="68.6274%" y="661" width="0.0621%" height="15" fill="rgb(217,205,27)" fg:x="473478014272" fg:w="428649340"/><text x="68.8774%" y="671.50"></text></g><g><title>blk_finish_plug (451,820,943 samples, 0.07%)</title><rect x="68.6242%" y="709" width="0.0655%" height="15" fill="rgb(252,71,50)" fg:x="473455784387" fg:w="451820943"/><text x="68.8742%" y="719.50"></text></g><g><title>__clear_extent_bit (77,383,386 samples, 0.01%)</title><rect x="68.6980%" y="693" width="0.0112%" height="15" fill="rgb(209,86,4)" fg:x="473964838431" fg:w="77383386"/><text x="68.9480%" y="703.50"></text></g><g><title>read_block_for_search (151,312,413 samples, 0.02%)</title><rect x="68.7681%" y="629" width="0.0219%" height="15" fill="rgb(229,94,0)" fg:x="474448480359" fg:w="151312413"/><text x="69.0181%" y="639.50"></text></g><g><title>btrfs_lookup_file_extent (264,638,941 samples, 0.04%)</title><rect x="68.7537%" y="661" width="0.0384%" height="15" fill="rgb(252,223,21)" fg:x="474349651948" fg:w="264638941"/><text x="69.0037%" y="671.50"></text></g><g><title>btrfs_search_slot (263,519,826 samples, 0.04%)</title><rect x="68.7539%" y="645" width="0.0382%" height="15" fill="rgb(230,210,4)" fg:x="474350771063" fg:w="263519826"/><text x="69.0039%" y="655.50"></text></g><g><title>btrfs_get_extent (543,493,572 samples, 0.08%)</title><rect x="68.7200%" y="677" width="0.0788%" height="15" fill="rgb(240,149,38)" fg:x="474116945314" fg:w="543493572"/><text x="68.9700%" y="687.50"></text></g><g><title>set_folio_extent_mapped (84,726,569 samples, 0.01%)</title><rect x="68.8002%" y="677" width="0.0123%" height="15" fill="rgb(254,105,20)" fg:x="474670374850" fg:w="84726569"/><text x="69.0502%" y="687.50"></text></g><g><title>kmem_cache_alloc_noprof (82,757,145 samples, 0.01%)</title><rect x="68.8297%" y="613" width="0.0120%" height="15" fill="rgb(253,87,46)" fg:x="474873748829" fg:w="82757145"/><text x="69.0797%" y="623.50"></text></g><g><title>bio_alloc_bioset (125,829,937 samples, 0.02%)</title><rect x="68.8238%" y="645" width="0.0182%" height="15" fill="rgb(253,116,33)" fg:x="474832810250" fg:w="125829937"/><text x="69.0738%" y="655.50"></text></g><g><title>mempool_alloc_noprof (89,351,466 samples, 0.01%)</title><rect x="68.8291%" y="629" width="0.0130%" height="15" fill="rgb(229,198,5)" fg:x="474869288721" fg:w="89351466"/><text x="69.0791%" y="639.50"></text></g><g><title>btrfs_bio_alloc (152,728,851 samples, 0.02%)</title><rect x="68.8225%" y="661" width="0.0221%" height="15" fill="rgb(242,38,37)" fg:x="474823832050" fg:w="152728851"/><text x="69.0725%" y="671.50"></text></g><g><title>submit_extent_folio (230,302,959 samples, 0.03%)</title><rect x="68.8128%" y="677" width="0.0334%" height="15" fill="rgb(242,69,53)" fg:x="474757338273" fg:w="230302959"/><text x="69.0628%" y="687.50"></text></g><g><title>post_alloc_hook (72,080,204 samples, 0.01%)</title><rect x="68.8816%" y="565" width="0.0104%" height="15" fill="rgb(249,80,16)" fg:x="475232022626" fg:w="72080204"/><text x="69.1316%" y="575.50"></text></g><g><title>rmqueue_bulk (83,504,505 samples, 0.01%)</title><rect x="68.8974%" y="517" width="0.0121%" height="15" fill="rgb(206,128,11)" fg:x="475341105258" fg:w="83504505"/><text x="69.1474%" y="527.50"></text></g><g><title>__rmqueue_pcplist (100,083,647 samples, 0.01%)</title><rect x="68.8952%" y="533" width="0.0145%" height="15" fill="rgb(212,35,20)" fg:x="475325630052" fg:w="100083647"/><text x="69.1452%" y="543.50"></text></g><g><title>rmqueue.isra.0 (130,476,674 samples, 0.02%)</title><rect x="68.8921%" y="565" width="0.0189%" height="15" fill="rgb(236,79,13)" fg:x="475304102830" fg:w="130476674"/><text x="69.1421%" y="575.50"></text></g><g><title>rmqueue_pcplist (118,031,968 samples, 0.02%)</title><rect x="68.8939%" y="549" width="0.0171%" height="15" fill="rgb(233,123,3)" fg:x="475316547536" fg:w="118031968"/><text x="69.1439%" y="559.50"></text></g><g><title>get_page_from_freelist (219,188,082 samples, 0.03%)</title><rect x="68.8795%" y="581" width="0.0318%" height="15" fill="rgb(214,93,52)" fg:x="475217610646" fg:w="219188082"/><text x="69.1295%" y="591.50"></text></g><g><title>__alloc_frozen_pages_noprof (290,983,428 samples, 0.04%)</title><rect x="68.8693%" y="597" width="0.0422%" height="15" fill="rgb(251,37,40)" fg:x="475146946684" fg:w="290983428"/><text x="69.1193%" y="607.50"></text></g><g><title>alloc_pages_mpol (341,020,225 samples, 0.05%)</title><rect x="68.8637%" y="613" width="0.0494%" height="15" fill="rgb(227,80,54)" fg:x="475108035475" fg:w="341020225"/><text x="69.1137%" y="623.50"></text></g><g><title>folio_alloc_noprof (357,579,640 samples, 0.05%)</title><rect x="68.8619%" y="629" width="0.0518%" height="15" fill="rgb(254,48,11)" fg:x="475095972428" fg:w="357579640"/><text x="69.1119%" y="639.50"></text></g><g><title>btrfs_alloc_folio_array (369,951,437 samples, 0.05%)</title><rect x="68.8604%" y="645" width="0.0536%" height="15" fill="rgb(235,193,26)" fg:x="475085794102" fg:w="369951437"/><text x="69.1104%" y="655.50"></text></g><g><title>read_block_for_search (85,826,799 samples, 0.01%)</title><rect x="68.9334%" y="549" width="0.0124%" height="15" fill="rgb(229,99,21)" fg:x="475589036772" fg:w="85826799"/><text x="69.1834%" y="559.50"></text></g><g><title>btrfs_search_slot (148,091,560 samples, 0.02%)</title><rect x="68.9253%" y="565" width="0.0215%" height="15" fill="rgb(211,140,41)" fg:x="475533500005" fg:w="148091560"/><text x="69.1753%" y="575.50"></text></g><g><title>btrfs_lookup_csum (151,054,423 samples, 0.02%)</title><rect x="68.9253%" y="581" width="0.0219%" height="15" fill="rgb(240,227,30)" fg:x="475533500005" fg:w="151054423"/><text x="69.1753%" y="591.50"></text></g><g><title>btrfs_lookup_bio_sums (213,186,008 samples, 0.03%)</title><rect x="68.9171%" y="613" width="0.0309%" height="15" fill="rgb(215,224,45)" fg:x="475476872138" fg:w="213186008"/><text x="69.1671%" y="623.50"></text></g><g><title>search_csum_tree (176,399,347 samples, 0.03%)</title><rect x="68.9225%" y="597" width="0.0256%" height="15" fill="rgb(206,123,31)" fg:x="475513658799" fg:w="176399347"/><text x="69.1725%" y="607.50"></text></g><g><title>__submit_bio (109,380,547 samples, 0.02%)</title><rect x="68.9529%" y="597" width="0.0159%" height="15" fill="rgb(210,138,16)" fg:x="475723394175" fg:w="109380547"/><text x="69.2029%" y="607.50"></text></g><g><title>blk_mq_submit_bio (107,125,157 samples, 0.02%)</title><rect x="68.9532%" y="581" width="0.0155%" height="15" fill="rgb(228,57,28)" fg:x="475725649565" fg:w="107125157"/><text x="69.2032%" y="591.50"></text></g><g><title>btrfs_submit_bbio (373,676,626 samples, 0.05%)</title><rect x="68.9147%" y="645" width="0.0542%" height="15" fill="rgb(242,170,10)" fg:x="475460219833" fg:w="373676626"/><text x="69.1647%" y="655.50"></text></g><g><title>btrfs_submit_chunk (372,569,871 samples, 0.05%)</title><rect x="68.9149%" y="629" width="0.0540%" height="15" fill="rgb(228,214,39)" fg:x="475461326588" fg:w="372569871"/><text x="69.1649%" y="639.50"></text></g><g><title>submit_bio_noacct_nocheck (112,713,236 samples, 0.02%)</title><rect x="68.9525%" y="613" width="0.0163%" height="15" fill="rgb(218,179,33)" fg:x="475721183223" fg:w="112713236"/><text x="69.2025%" y="623.50"></text></g><g><title>btrfs_do_readpage (1,793,747,222 samples, 0.26%)</title><rect x="68.7095%" y="693" width="0.2600%" height="15" fill="rgb(235,193,39)" fg:x="474044495747" fg:w="1793747222"/><text x="68.9595%" y="703.50"></text></g><g><title>submit_one_bio (850,601,737 samples, 0.12%)</title><rect x="68.8462%" y="677" width="0.1233%" height="15" fill="rgb(219,221,36)" fg:x="474987641232" fg:w="850601737"/><text x="69.0962%" y="687.50"></text></g><g><title>btrfs_submit_compressed_read (824,149,535 samples, 0.12%)</title><rect x="68.8500%" y="661" width="0.1195%" height="15" fill="rgb(248,218,19)" fg:x="475014093434" fg:w="824149535"/><text x="69.1000%" y="671.50"></text></g><g><title>btrfs_submit_bbio (83,335,464 samples, 0.01%)</title><rect x="68.9814%" y="677" width="0.0121%" height="15" fill="rgb(205,50,9)" fg:x="475920551573" fg:w="83335464"/><text x="69.2314%" y="687.50"></text></g><g><title>btrfs_submit_chunk (82,178,270 samples, 0.01%)</title><rect x="68.9816%" y="661" width="0.0119%" height="15" fill="rgb(238,81,28)" fg:x="475921708767" fg:w="82178270"/><text x="69.2316%" y="671.50"></text></g><g><title>__filemap_get_folio (127,938,901 samples, 0.02%)</title><rect x="69.0148%" y="645" width="0.0185%" height="15" fill="rgb(235,110,19)" fg:x="476150500874" fg:w="127938901"/><text x="69.2648%" y="655.50"></text></g><g><title>filemap_get_entry (115,806,625 samples, 0.02%)</title><rect x="69.0165%" y="629" width="0.0168%" height="15" fill="rgb(214,7,14)" fg:x="476162633150" fg:w="115806625"/><text x="69.2665%" y="639.50"></text></g><g><title>filemap_add_folio (207,818,044 samples, 0.03%)</title><rect x="69.0405%" y="645" width="0.0301%" height="15" fill="rgb(211,77,3)" fg:x="476328007974" fg:w="207818044"/><text x="69.2905%" y="655.50"></text></g><g><title>__alloc_frozen_pages_noprof (94,482,607 samples, 0.01%)</title><rect x="69.0743%" y="613" width="0.0137%" height="15" fill="rgb(229,5,9)" fg:x="476561138539" fg:w="94482607"/><text x="69.3243%" y="623.50"></text></g><g><title>get_page_from_freelist (79,137,005 samples, 0.01%)</title><rect x="69.0765%" y="597" width="0.0115%" height="15" fill="rgb(225,90,11)" fg:x="476576484141" fg:w="79137005"/><text x="69.3265%" y="607.50"></text></g><g><title>alloc_pages_mpol (117,522,088 samples, 0.02%)</title><rect x="69.0716%" y="629" width="0.0170%" height="15" fill="rgb(242,56,8)" fg:x="476542447569" fg:w="117522088"/><text x="69.3216%" y="639.50"></text></g><g><title>folio_alloc_noprof (123,065,954 samples, 0.02%)</title><rect x="69.0709%" y="645" width="0.0178%" height="15" fill="rgb(249,212,39)" fg:x="476538048349" fg:w="123065954"/><text x="69.3209%" y="655.50"></text></g><g><title>add_ra_bio_pages.constprop.0.isra.0 (609,541,291 samples, 0.09%)</title><rect x="69.0017%" y="661" width="0.0883%" height="15" fill="rgb(236,90,9)" fg:x="476060245555" fg:w="609541291"/><text x="69.2517%" y="671.50"></text></g><g><title>post_alloc_hook (166,235,038 samples, 0.02%)</title><rect x="69.1325%" y="581" width="0.0241%" height="15" fill="rgb(206,88,35)" fg:x="476962829410" fg:w="166235038"/><text x="69.3825%" y="591.50"></text></g><g><title>clear_page_erms (159,735,907 samples, 0.02%)</title><rect x="69.1334%" y="565" width="0.0232%" height="15" fill="rgb(205,126,30)" fg:x="476969328541" fg:w="159735907"/><text x="69.3834%" y="575.50"></text></g><g><title>__rmqueue_pcplist (140,722,031 samples, 0.02%)</title><rect x="69.1603%" y="549" width="0.0204%" height="15" fill="rgb(230,176,12)" fg:x="477154581678" fg:w="140722031"/><text x="69.4103%" y="559.50"></text></g><g><title>rmqueue_bulk (88,952,712 samples, 0.01%)</title><rect x="69.1678%" y="533" width="0.0129%" height="15" fill="rgb(243,19,9)" fg:x="477206350997" fg:w="88952712"/><text x="69.4178%" y="543.50"></text></g><g><title>rmqueue.isra.0 (171,761,492 samples, 0.02%)</title><rect x="69.1566%" y="581" width="0.0249%" height="15" fill="rgb(245,171,17)" fg:x="477129064448" fg:w="171761492"/><text x="69.4066%" y="591.50"></text></g><g><title>rmqueue_pcplist (158,400,262 samples, 0.02%)</title><rect x="69.1585%" y="565" width="0.0230%" height="15" fill="rgb(227,52,21)" fg:x="477142425678" fg:w="158400262"/><text x="69.4085%" y="575.50"></text></g><g><title>get_page_from_freelist (377,478,369 samples, 0.05%)</title><rect x="69.1269%" y="597" width="0.0547%" height="15" fill="rgb(238,69,14)" fg:x="476924456670" fg:w="377478369"/><text x="69.3769%" y="607.50"></text></g><g><title>__alloc_frozen_pages_noprof (477,032,826 samples, 0.07%)</title><rect x="69.1130%" y="613" width="0.0691%" height="15" fill="rgb(241,156,39)" fg:x="476828261503" fg:w="477032826"/><text x="69.3630%" y="623.50"></text></g><g><title>alloc_pages_mpol (574,470,986 samples, 0.08%)</title><rect x="69.1017%" y="629" width="0.0833%" height="15" fill="rgb(212,227,28)" fg:x="476750593731" fg:w="574470986"/><text x="69.3517%" y="639.50"></text></g><g><title>folio_alloc_noprof (608,153,247 samples, 0.09%)</title><rect x="69.0978%" y="645" width="0.0881%" height="15" fill="rgb(209,118,27)" fg:x="476723575409" fg:w="608153247"/><text x="69.3478%" y="655.50"></text></g><g><title>btrfs_alloc_folio_array (623,668,951 samples, 0.09%)</title><rect x="69.0957%" y="661" width="0.0904%" height="15" fill="rgb(226,102,5)" fg:x="476709189687" fg:w="623668951"/><text x="69.3457%" y="671.50"></text></g><g><title>read_block_for_search (134,546,580 samples, 0.02%)</title><rect x="69.2136%" y="565" width="0.0195%" height="15" fill="rgb(223,34,3)" fg:x="477522164079" fg:w="134546580"/><text x="69.4636%" y="575.50"></text></g><g><title>btrfs_search_slot (225,696,779 samples, 0.03%)</title><rect x="69.2016%" y="581" width="0.0327%" height="15" fill="rgb(221,81,38)" fg:x="477439813579" fg:w="225696779"/><text x="69.4516%" y="591.50"></text></g><g><title>btrfs_lookup_csum (238,919,030 samples, 0.03%)</title><rect x="69.2004%" y="597" width="0.0346%" height="15" fill="rgb(236,219,28)" fg:x="477430970569" fg:w="238919030"/><text x="69.4504%" y="607.50"></text></g><g><title>btrfs_lookup_bio_sums (317,264,516 samples, 0.05%)</title><rect x="69.1901%" y="629" width="0.0460%" height="15" fill="rgb(213,200,14)" fg:x="477360364630" fg:w="317264516"/><text x="69.4401%" y="639.50"></text></g><g><title>search_csum_tree (269,878,769 samples, 0.04%)</title><rect x="69.1970%" y="613" width="0.0391%" height="15" fill="rgb(240,33,19)" fg:x="477407750377" fg:w="269878769"/><text x="69.4470%" y="623.50"></text></g><g><title>__submit_bio (120,349,921 samples, 0.02%)</title><rect x="69.2462%" y="613" width="0.0174%" height="15" fill="rgb(233,113,27)" fg:x="477747496029" fg:w="120349921"/><text x="69.4962%" y="623.50"></text></g><g><title>blk_mq_submit_bio (110,311,185 samples, 0.02%)</title><rect x="69.2477%" y="597" width="0.0160%" height="15" fill="rgb(220,221,18)" fg:x="477757534765" fg:w="110311185"/><text x="69.4977%" y="607.50"></text></g><g><title>btrfs_submit_bbio (542,945,596 samples, 0.08%)</title><rect x="69.1871%" y="661" width="0.0787%" height="15" fill="rgb(238,92,8)" fg:x="477339456199" fg:w="542945596"/><text x="69.4371%" y="671.50"></text></g><g><title>btrfs_submit_chunk (540,795,131 samples, 0.08%)</title><rect x="69.1874%" y="645" width="0.0784%" height="15" fill="rgb(222,164,16)" fg:x="477341606664" fg:w="540795131"/><text x="69.4374%" y="655.50"></text></g><g><title>submit_bio_noacct_nocheck (138,313,700 samples, 0.02%)</title><rect x="69.2457%" y="629" width="0.0200%" height="15" fill="rgb(241,119,3)" fg:x="477744088095" fg:w="138313700"/><text x="69.4957%" y="639.50"></text></g><g><title>submit_one_bio (1,972,041,342 samples, 0.29%)</title><rect x="68.9809%" y="693" width="0.2858%" height="15" fill="rgb(241,44,8)" fg:x="475917148893" fg:w="1972041342"/><text x="69.2309%" y="703.50"></text></g><g><title>btrfs_submit_compressed_read (1,885,303,198 samples, 0.27%)</title><rect x="68.9935%" y="677" width="0.2733%" height="15" fill="rgb(230,36,40)" fg:x="476003887037" fg:w="1885303198"/><text x="69.2435%" y="687.50"></text></g><g><title>read_pages (4,617,716,641 samples, 0.67%)</title><rect x="68.6167%" y="725" width="0.6693%" height="15" fill="rgb(243,16,36)" fg:x="473404077897" fg:w="4617716641"/><text x="68.8667%" y="735.50"></text></g><g><title>btrfs_readahead (4,114,189,208 samples, 0.60%)</title><rect x="68.6897%" y="709" width="0.5963%" height="15" fill="rgb(231,4,26)" fg:x="473907605330" fg:w="4114189208"/><text x="68.9397%" y="719.50"></text></g><g><title>xa_load (132,604,303 samples, 0.02%)</title><rect x="69.2668%" y="693" width="0.0192%" height="15" fill="rgb(240,9,31)" fg:x="477889190235" fg:w="132604303"/><text x="69.5168%" y="703.50"></text></g><g><title>xas_load (72,692,631 samples, 0.01%)</title><rect x="69.2755%" y="677" width="0.0105%" height="15" fill="rgb(207,173,15)" fg:x="477949101907" fg:w="72692631"/><text x="69.5255%" y="687.50"></text></g><g><title>filemap_get_pages (80,667,775,331 samples, 11.69%)</title><rect x="57.6422%" y="757" width="11.6922%" height="15" fill="rgb(224,192,53)" fg:x="397688640235" fg:w="80667775331"/><text x="57.8922%" y="767.50">filemap_get_pages</text></g><g><title>page_cache_ra_unbounded (8,370,124,905 samples, 1.21%)</title><rect x="68.1213%" y="741" width="1.2132%" height="15" fill="rgb(223,67,28)" fg:x="469986290661" fg:w="8370124905"/><text x="68.3713%" y="751.50"></text></g><g><title>xa_load (322,492,234 samples, 0.05%)</title><rect x="69.2877%" y="725" width="0.0467%" height="15" fill="rgb(211,20,47)" fg:x="478033923332" fg:w="322492234"/><text x="69.5377%" y="735.50"></text></g><g><title>xas_load (172,287,914 samples, 0.02%)</title><rect x="69.3095%" y="709" width="0.0250%" height="15" fill="rgb(240,228,2)" fg:x="478184127652" fg:w="172287914"/><text x="69.5595%" y="719.50"></text></g><g><title>folio_mark_accessed (286,410,660 samples, 0.04%)</title><rect x="69.3345%" y="757" width="0.0415%" height="15" fill="rgb(248,151,12)" fg:x="478356415566" fg:w="286410660"/><text x="69.5845%" y="767.50"></text></g><g><title>filemap_read (198,899,058,827 samples, 28.83%)</title><rect x="40.5514%" y="773" width="28.8291%" height="15" fill="rgb(244,8,39)" fg:x="279774446127" fg:w="198899058827"/><text x="40.8014%" y="783.50">filemap_read</text></g><g><title>ksys_read (198,900,180,612 samples, 28.83%)</title><rect x="40.5514%" y="805" width="28.8292%" height="15" fill="rgb(222,26,8)" fg:x="279774446127" fg:w="198900180612"/><text x="40.8014%" y="815.50">ksys_read</text></g><g><title>vfs_read (198,900,180,612 samples, 28.83%)</title><rect x="40.5514%" y="789" width="28.8292%" height="15" fill="rgb(213,106,44)" fg:x="279774446127" fg:w="198900180612"/><text x="40.8014%" y="799.50">vfs_read</text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (198,911,115,642 samples, 28.83%)</title><rect x="40.5501%" y="917" width="28.8308%" height="15" fill="rgb(214,129,20)" fg:x="279765761674" fg:w="198911115642"/><text x="40.8001%" y="927.50">&lt;std::fs::File as std::io::Read&gt;::read_buf</text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read_buf (198,911,115,642 samples, 28.83%)</title><rect x="40.5501%" y="901" width="28.8308%" height="15" fill="rgb(212,32,13)" fg:x="279765761674" fg:w="198911115642"/><text x="40.8001%" y="911.50">&lt;&amp;std::fs::File as std::io::Read&gt;::read_buf</text></g><g><title>std::sys::pal::unix::fs::File::read_buf (198,911,115,642 samples, 28.83%)</title><rect x="40.5501%" y="885" width="28.8308%" height="15" fill="rgb(208,168,33)" fg:x="279765761674" fg:w="198911115642"/><text x="40.8001%" y="895.50">std::sys::pal::unix::fs::File::read_buf</text></g><g><title>std::sys::pal::unix::fd::FileDesc::read_buf (198,911,115,642 samples, 28.83%)</title><rect x="40.5501%" y="869" width="28.8308%" height="15" fill="rgb(231,207,8)" fg:x="279765761674" fg:w="198911115642"/><text x="40.8001%" y="879.50">std::sys::pal::unix::fd::FileDesc::read_buf</text></g><g><title>read (198,911,115,642 samples, 28.83%)</title><rect x="40.5501%" y="853" width="28.8308%" height="15" fill="rgb(235,219,23)" fg:x="279765761674" fg:w="198911115642"/><text x="40.8001%" y="863.50">read</text></g><g><title>entry_SYSCALL_64_after_hwframe (198,902,431,189 samples, 28.83%)</title><rect x="40.5514%" y="837" width="28.8295%" height="15" fill="rgb(226,216,26)" fg:x="279774446127" fg:w="198902431189"/><text x="40.8014%" y="847.50">entry_SYSCALL_64_after_hwframe</text></g><g><title>do_syscall_64 (198,902,431,189 samples, 28.83%)</title><rect x="40.5514%" y="821" width="28.8295%" height="15" fill="rgb(239,137,16)" fg:x="279774446127" fg:w="198902431189"/><text x="40.8014%" y="831.50">do_syscall_64</text></g><g><title>llvm_profparser::coverage::coverage_mapping::CoverageMapping::new (223,202,995,689 samples, 32.35%)</title><rect x="37.0293%" y="997" width="32.3517%" height="15" fill="rgb(207,12,36)" fg:x="255474763256" fg:w="223202995689"/><text x="37.2793%" y="1007.50">llvm_profparser::coverage::coverage_mapping::Coverag..</text></g><g><title>llvm_profparser::coverage::coverage_mapping::read_object_file (223,202,995,689 samples, 32.35%)</title><rect x="37.0293%" y="981" width="32.3517%" height="15" fill="rgb(210,214,24)" fg:x="255474763256" fg:w="223202995689"/><text x="37.2793%" y="991.50">llvm_profparser::coverage::coverage_mapping::read_ob..</text></g><g><title>std::fs::read (198,921,313,527 samples, 28.83%)</title><rect x="40.5488%" y="965" width="28.8323%" height="15" fill="rgb(206,56,30)" fg:x="279756445418" fg:w="198921313527"/><text x="40.7988%" y="975.50">std::fs::read</text></g><g><title>std::fs::read::inner (198,921,313,527 samples, 28.83%)</title><rect x="40.5488%" y="949" width="28.8323%" height="15" fill="rgb(228,143,26)" fg:x="279756445418" fg:w="198921313527"/><text x="40.7988%" y="959.50">std::fs::read::inner</text></g><g><title>std::io::default_read_to_end (198,911,997,271 samples, 28.83%)</title><rect x="40.5501%" y="933" width="28.8309%" height="15" fill="rgb(216,218,46)" fg:x="279765761674" fg:w="198911997271"/><text x="40.8001%" y="943.50">std::io::default_read_to_end</text></g><g><title>core::slice::memchr::memchr_aligned (88,690,529 samples, 0.01%)</title><rect x="69.4151%" y="677" width="0.0129%" height="15" fill="rgb(206,6,19)" fg:x="478912296752" fg:w="88690529"/><text x="69.6651%" y="687.50"></text></g><g><title>core::slice::memchr::memchr_aligned::runtime (88,690,529 samples, 0.01%)</title><rect x="69.4151%" y="661" width="0.0129%" height="15" fill="rgb(239,177,51)" fg:x="478912296752" fg:w="88690529"/><text x="69.6651%" y="671.50"></text></g><g><title>handle_mm_fault (70,173,009 samples, 0.01%)</title><rect x="69.4329%" y="597" width="0.0102%" height="15" fill="rgb(216,55,25)" fg:x="479035548139" fg:w="70173009"/><text x="69.6829%" y="607.50"></text></g><g><title>asm_exc_page_fault (72,425,505 samples, 0.01%)</title><rect x="69.4329%" y="645" width="0.0105%" height="15" fill="rgb(231,163,29)" fg:x="479035548139" fg:w="72425505"/><text x="69.6829%" y="655.50"></text></g><g><title>exc_page_fault (72,425,505 samples, 0.01%)</title><rect x="69.4329%" y="629" width="0.0105%" height="15" fill="rgb(232,149,50)" fg:x="479035548139" fg:w="72425505"/><text x="69.6829%" y="639.50"></text></g><g><title>do_user_addr_fault (72,425,505 samples, 0.01%)</title><rect x="69.4329%" y="613" width="0.0105%" height="15" fill="rgb(223,142,48)" fg:x="479035548139" fg:w="72425505"/><text x="69.6829%" y="623.50"></text></g><g><title>_int_malloc (108,075,984 samples, 0.02%)</title><rect x="69.4297%" y="661" width="0.0157%" height="15" fill="rgb(245,83,23)" fg:x="479013446391" fg:w="108075984"/><text x="69.6797%" y="671.50"></text></g><g><title>core::slice::memchr::contains_zero_byte (81,142,610 samples, 0.01%)</title><rect x="69.4658%" y="629" width="0.0118%" height="15" fill="rgb(224,63,2)" fg:x="479262278107" fg:w="81142610"/><text x="69.7158%" y="639.50"></text></g><g><title>core::slice::memchr::memchr_aligned (248,152,686 samples, 0.04%)</title><rect x="69.4457%" y="661" width="0.0360%" height="15" fill="rgb(218,65,53)" fg:x="479123858486" fg:w="248152686"/><text x="69.6957%" y="671.50"></text></g><g><title>core::slice::memchr::memchr_aligned::runtime (243,888,182 samples, 0.04%)</title><rect x="69.4463%" y="645" width="0.0353%" height="15" fill="rgb(221,84,29)" fg:x="479128122990" fg:w="243888182"/><text x="69.6963%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (483,297,153 samples, 0.07%)</title><rect x="69.4151%" y="789" width="0.0701%" height="15" fill="rgb(234,0,32)" fg:x="478912296752" fg:w="483297153"/><text x="69.6651%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (483,297,153 samples, 0.07%)</title><rect x="69.4151%" y="773" width="0.0701%" height="15" fill="rgb(206,20,16)" fg:x="478912296752" fg:w="483297153"/><text x="69.6651%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (483,297,153 samples, 0.07%)</title><rect x="69.4151%" y="757" width="0.0701%" height="15" fill="rgb(244,172,18)" fg:x="478912296752" fg:w="483297153"/><text x="69.6651%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (483,297,153 samples, 0.07%)</title><rect x="69.4151%" y="741" width="0.0701%" height="15" fill="rgb(254,133,1)" fg:x="478912296752" fg:w="483297153"/><text x="69.6651%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (483,297,153 samples, 0.07%)</title><rect x="69.4151%" y="725" width="0.0701%" height="15" fill="rgb(222,206,41)" fg:x="478912296752" fg:w="483297153"/><text x="69.6651%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (483,297,153 samples, 0.07%)</title><rect x="69.4151%" y="709" width="0.0701%" height="15" fill="rgb(212,3,42)" fg:x="478912296752" fg:w="483297153"/><text x="69.6651%" y="719.50"></text></g><g><title>alloc::alloc::alloc (483,297,153 samples, 0.07%)</title><rect x="69.4151%" y="693" width="0.0701%" height="15" fill="rgb(241,11,4)" fg:x="478912296752" fg:w="483297153"/><text x="69.6651%" y="703.50"></text></g><g><title>malloc (385,570,222 samples, 0.06%)</title><rect x="69.4292%" y="677" width="0.0559%" height="15" fill="rgb(205,19,26)" fg:x="479010023683" fg:w="385570222"/><text x="69.6792%" y="687.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (524,403,185 samples, 0.08%)</title><rect x="69.4151%" y="933" width="0.0760%" height="15" fill="rgb(210,179,32)" fg:x="478912296752" fg:w="524403185"/><text x="69.6651%" y="943.50"></text></g><g><title>&lt;str as alloc::string::SpecToString&gt;::spec_to_string (524,403,185 samples, 0.08%)</title><rect x="69.4151%" y="917" width="0.0760%" height="15" fill="rgb(227,116,49)" fg:x="478912296752" fg:w="524403185"/><text x="69.6651%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (524,403,185 samples, 0.08%)</title><rect x="69.4151%" y="901" width="0.0760%" height="15" fill="rgb(211,146,6)" fg:x="478912296752" fg:w="524403185"/><text x="69.6651%" y="911.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (524,403,185 samples, 0.08%)</title><rect x="69.4151%" y="885" width="0.0760%" height="15" fill="rgb(219,44,39)" fg:x="478912296752" fg:w="524403185"/><text x="69.6651%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (524,403,185 samples, 0.08%)</title><rect x="69.4151%" y="869" width="0.0760%" height="15" fill="rgb(234,128,11)" fg:x="478912296752" fg:w="524403185"/><text x="69.6651%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (524,403,185 samples, 0.08%)</title><rect x="69.4151%" y="853" width="0.0760%" height="15" fill="rgb(220,183,53)" fg:x="478912296752" fg:w="524403185"/><text x="69.6651%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (524,403,185 samples, 0.08%)</title><rect x="69.4151%" y="837" width="0.0760%" height="15" fill="rgb(213,219,32)" fg:x="478912296752" fg:w="524403185"/><text x="69.6651%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (524,403,185 samples, 0.08%)</title><rect x="69.4151%" y="821" width="0.0760%" height="15" fill="rgb(232,156,16)" fg:x="478912296752" fg:w="524403185"/><text x="69.6651%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (524,403,185 samples, 0.08%)</title><rect x="69.4151%" y="805" width="0.0760%" height="15" fill="rgb(246,135,34)" fg:x="478912296752" fg:w="524403185"/><text x="69.6651%" y="815.50"></text></g><g><title>core::slice::memchr::contains_zero_byte (134,554,000 samples, 0.02%)</title><rect x="69.5303%" y="837" width="0.0195%" height="15" fill="rgb(241,99,0)" fg:x="479707134050" fg:w="134554000"/><text x="69.7803%" y="847.50"></text></g><g><title>core::slice::memchr::memchr_aligned (341,521,724 samples, 0.05%)</title><rect x="69.5028%" y="869" width="0.0495%" height="15" fill="rgb(222,103,45)" fg:x="479517768914" fg:w="341521724"/><text x="69.7528%" y="879.50"></text></g><g><title>core::slice::memchr::memchr_aligned::runtime (340,376,628 samples, 0.05%)</title><rect x="69.5030%" y="853" width="0.0493%" height="15" fill="rgb(212,57,4)" fg:x="479518914010" fg:w="340376628"/><text x="69.7530%" y="863.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (369,447,616 samples, 0.05%)</title><rect x="69.4999%" y="901" width="0.0535%" height="15" fill="rgb(215,68,47)" fg:x="479497684916" fg:w="369447616"/><text x="69.7499%" y="911.50"></text></g><g><title>core::slice::memchr::memchr (366,147,286 samples, 0.05%)</title><rect x="69.5004%" y="885" width="0.0531%" height="15" fill="rgb(230,84,2)" fg:x="479500985246" fg:w="366147286"/><text x="69.7504%" y="895.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (371,691,401 samples, 0.05%)</title><rect x="69.4997%" y="933" width="0.0539%" height="15" fill="rgb(220,102,14)" fg:x="479496523201" fg:w="371691401"/><text x="69.7497%" y="943.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (370,529,686 samples, 0.05%)</title><rect x="69.4999%" y="917" width="0.0537%" height="15" fill="rgb(240,10,32)" fg:x="479497684916" fg:w="370529686"/><text x="69.7499%" y="927.50"></text></g><g><title>__memmove_avx512_unaligned_erms (88,363,455 samples, 0.01%)</title><rect x="69.5547%" y="933" width="0.0128%" height="15" fill="rgb(215,47,27)" fg:x="479875934583" fg:w="88363455"/><text x="69.8047%" y="943.50"></text></g><g><title>__memmove_avx512_unaligned_erms (446,878,556 samples, 0.06%)</title><rect x="69.5714%" y="821" width="0.0648%" height="15" fill="rgb(233,188,43)" fg:x="479990603578" fg:w="446878556"/><text x="69.8214%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (465,570,289 samples, 0.07%)</title><rect x="69.5714%" y="917" width="0.0675%" height="15" fill="rgb(253,190,1)" fg:x="479990603578" fg:w="465570289"/><text x="69.8214%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (465,570,289 samples, 0.07%)</title><rect x="69.5714%" y="901" width="0.0675%" height="15" fill="rgb(206,114,52)" fg:x="479990603578" fg:w="465570289"/><text x="69.8214%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (465,570,289 samples, 0.07%)</title><rect x="69.5714%" y="885" width="0.0675%" height="15" fill="rgb(233,120,37)" fg:x="479990603578" fg:w="465570289"/><text x="69.8214%" y="895.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h4813e28088395dc8E.llvm.6412023112901746188 (465,570,289 samples, 0.07%)</title><rect x="69.5714%" y="869" width="0.0675%" height="15" fill="rgb(214,52,39)" fg:x="479990603578" fg:w="465570289"/><text x="69.8214%" y="879.50"></text></g><g><title>realloc (465,570,289 samples, 0.07%)</title><rect x="69.5714%" y="853" width="0.0675%" height="15" fill="rgb(223,80,29)" fg:x="479990603578" fg:w="465570289"/><text x="69.8214%" y="863.50"></text></g><g><title>_int_realloc (465,570,289 samples, 0.07%)</title><rect x="69.5714%" y="837" width="0.0675%" height="15" fill="rgb(230,101,40)" fg:x="479990603578" fg:w="465570289"/><text x="69.8214%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (640,030,952 samples, 0.09%)</title><rect x="69.5681%" y="933" width="0.0928%" height="15" fill="rgb(219,211,8)" fg:x="479968327343" fg:w="640030952"/><text x="69.8181%" y="943.50"></text></g><g><title>core::ptr::write (112,368,881 samples, 0.02%)</title><rect x="69.6446%" y="917" width="0.0163%" height="15" fill="rgb(252,126,28)" fg:x="480495989414" fg:w="112368881"/><text x="69.8946%" y="927.50"></text></g><g><title>alloc_anon_folio (111,001,863 samples, 0.02%)</title><rect x="69.6824%" y="597" width="0.0161%" height="15" fill="rgb(215,56,38)" fg:x="480756988330" fg:w="111001863"/><text x="69.9324%" y="607.50"></text></g><g><title>do_anonymous_page (141,811,761 samples, 0.02%)</title><rect x="69.6790%" y="613" width="0.0206%" height="15" fill="rgb(249,55,44)" fg:x="480732996137" fg:w="141811761"/><text x="69.9290%" y="623.50"></text></g><g><title>__handle_mm_fault (155,230,509 samples, 0.02%)</title><rect x="69.6783%" y="629" width="0.0225%" height="15" fill="rgb(220,221,32)" fg:x="480728492458" fg:w="155230509"/><text x="69.9283%" y="639.50"></text></g><g><title>handle_mm_fault (163,079,814 samples, 0.02%)</title><rect x="69.6776%" y="645" width="0.0236%" height="15" fill="rgb(212,216,41)" fg:x="480723929520" fg:w="163079814"/><text x="69.9276%" y="655.50"></text></g><g><title>do_user_addr_fault (174,447,979 samples, 0.03%)</title><rect x="69.6767%" y="661" width="0.0253%" height="15" fill="rgb(228,213,43)" fg:x="480717133272" fg:w="174447979"/><text x="69.9267%" y="671.50"></text></g><g><title>asm_exc_page_fault (178,892,215 samples, 0.03%)</title><rect x="69.6762%" y="693" width="0.0259%" height="15" fill="rgb(211,31,26)" fg:x="480713773968" fg:w="178892215"/><text x="69.9262%" y="703.50"></text></g><g><title>exc_page_fault (177,859,577 samples, 0.03%)</title><rect x="69.6763%" y="677" width="0.0258%" height="15" fill="rgb(229,202,19)" fg:x="480714806606" fg:w="177859577"/><text x="69.9263%" y="687.50"></text></g><g><title>_int_malloc (217,170,473 samples, 0.03%)</title><rect x="69.6730%" y="709" width="0.0315%" height="15" fill="rgb(229,105,46)" fg:x="480691822536" fg:w="217170473"/><text x="69.9230%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (248,130,431 samples, 0.04%)</title><rect x="69.6686%" y="773" width="0.0360%" height="15" fill="rgb(235,108,1)" fg:x="480661720275" fg:w="248130431"/><text x="69.9186%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (248,130,431 samples, 0.04%)</title><rect x="69.6686%" y="757" width="0.0360%" height="15" fill="rgb(245,111,35)" fg:x="480661720275" fg:w="248130431"/><text x="69.9186%" y="767.50"></text></g><g><title>alloc::alloc::alloc (248,130,431 samples, 0.04%)</title><rect x="69.6686%" y="741" width="0.0360%" height="15" fill="rgb(219,185,31)" fg:x="480661720275" fg:w="248130431"/><text x="69.9186%" y="751.50"></text></g><g><title>malloc (228,243,562 samples, 0.03%)</title><rect x="69.6715%" y="725" width="0.0331%" height="15" fill="rgb(214,4,43)" fg:x="480681607144" fg:w="228243562"/><text x="69.9215%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (261,199,952 samples, 0.04%)</title><rect x="69.6680%" y="837" width="0.0379%" height="15" fill="rgb(235,227,40)" fg:x="480657321814" fg:w="261199952"/><text x="69.9180%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (261,199,952 samples, 0.04%)</title><rect x="69.6680%" y="821" width="0.0379%" height="15" fill="rgb(230,88,30)" fg:x="480657321814" fg:w="261199952"/><text x="69.9180%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (261,199,952 samples, 0.04%)</title><rect x="69.6680%" y="805" width="0.0379%" height="15" fill="rgb(216,217,1)" fg:x="480657321814" fg:w="261199952"/><text x="69.9180%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (261,199,952 samples, 0.04%)</title><rect x="69.6680%" y="789" width="0.0379%" height="15" fill="rgb(248,139,50)" fg:x="480657321814" fg:w="261199952"/><text x="69.9180%" y="799.50"></text></g><g><title>__memmove_avx512_unaligned_erms (108,430,538 samples, 0.02%)</title><rect x="69.7068%" y="805" width="0.0157%" height="15" fill="rgb(233,1,21)" fg:x="480924793159" fg:w="108430538"/><text x="69.9568%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (404,244,254 samples, 0.06%)</title><rect x="69.6680%" y="901" width="0.0586%" height="15" fill="rgb(215,183,12)" fg:x="480657321814" fg:w="404244254"/><text x="69.9180%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (404,244,254 samples, 0.06%)</title><rect x="69.6680%" y="885" width="0.0586%" height="15" fill="rgb(229,104,42)" fg:x="480657321814" fg:w="404244254"/><text x="69.9180%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (404,244,254 samples, 0.06%)</title><rect x="69.6680%" y="869" width="0.0586%" height="15" fill="rgb(243,34,48)" fg:x="480657321814" fg:w="404244254"/><text x="69.9180%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (404,244,254 samples, 0.06%)</title><rect x="69.6680%" y="853" width="0.0586%" height="15" fill="rgb(239,11,44)" fg:x="480657321814" fg:w="404244254"/><text x="69.9180%" y="863.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (143,044,302 samples, 0.02%)</title><rect x="69.7058%" y="837" width="0.0207%" height="15" fill="rgb(231,98,35)" fg:x="480918521766" fg:w="143044302"/><text x="69.9558%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (143,044,302 samples, 0.02%)</title><rect x="69.7058%" y="821" width="0.0207%" height="15" fill="rgb(233,28,25)" fg:x="480918521766" fg:w="143044302"/><text x="69.9558%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (416,286,163 samples, 0.06%)</title><rect x="69.6666%" y="917" width="0.0603%" height="15" fill="rgb(234,123,11)" fg:x="480647388642" fg:w="416286163"/><text x="69.9166%" y="927.50"></text></g><g><title>_int_malloc (316,945,216 samples, 0.05%)</title><rect x="69.7269%" y="917" width="0.0459%" height="15" fill="rgb(220,69,3)" fg:x="481063674805" fg:w="316945216"/><text x="69.9769%" y="927.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (846,237,793 samples, 0.12%)</title><rect x="69.6643%" y="933" width="0.1227%" height="15" fill="rgb(214,64,36)" fg:x="480632160895" fg:w="846237793"/><text x="69.9143%" y="943.50"></text></g><g><title>malloc (93,581,392 samples, 0.01%)</title><rect x="69.7734%" y="917" width="0.0136%" height="15" fill="rgb(211,138,32)" fg:x="481384817296" fg:w="93581392"/><text x="70.0234%" y="927.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (149,866,994 samples, 0.02%)</title><rect x="69.8191%" y="917" width="0.0217%" height="15" fill="rgb(213,118,47)" fg:x="481700045101" fg:w="149866994"/><text x="70.0691%" y="927.50"></text></g><g><title>llvm_profparser::instrumentation_profile::raw_profile::ProfileData&lt;T&gt;::parse (382,171,282 samples, 0.06%)</title><rect x="69.7904%" y="933" width="0.0554%" height="15" fill="rgb(243,124,49)" fg:x="481502182873" fg:w="382171282"/><text x="70.0404%" y="943.50"></text></g><g><title>llvm_profparser::instrumentation_profile::raw_profile::RawInstrProf&lt;T&gt;::read_raw_counts (195,805,453 samples, 0.03%)</title><rect x="69.8458%" y="933" width="0.0284%" height="15" fill="rgb(221,30,28)" fg:x="481884354155" fg:w="195805453"/><text x="70.0958%" y="943.50"></text></g><g><title>alloc_anon_folio (96,869,460 samples, 0.01%)</title><rect x="69.9403%" y="581" width="0.0140%" height="15" fill="rgb(246,37,13)" fg:x="482535923791" fg:w="96869460"/><text x="70.1903%" y="591.50"></text></g><g><title>do_anonymous_page (117,702,969 samples, 0.02%)</title><rect x="69.9383%" y="597" width="0.0171%" height="15" fill="rgb(249,66,14)" fg:x="482522071192" fg:w="117702969"/><text x="70.1883%" y="607.50"></text></g><g><title>__handle_mm_fault (124,087,221 samples, 0.02%)</title><rect x="69.9378%" y="613" width="0.0180%" height="15" fill="rgb(213,166,5)" fg:x="482518983806" fg:w="124087221"/><text x="70.1878%" y="623.50"></text></g><g><title>handle_mm_fault (126,309,513 samples, 0.02%)</title><rect x="69.9378%" y="629" width="0.0183%" height="15" fill="rgb(221,66,24)" fg:x="482518983806" fg:w="126309513"/><text x="70.1878%" y="639.50"></text></g><g><title>exc_page_fault (138,771,708 samples, 0.02%)</title><rect x="69.9370%" y="661" width="0.0201%" height="15" fill="rgb(210,132,17)" fg:x="482513211887" fg:w="138771708"/><text x="70.1870%" y="671.50"></text></g><g><title>do_user_addr_fault (138,771,708 samples, 0.02%)</title><rect x="69.9370%" y="645" width="0.0201%" height="15" fill="rgb(243,202,5)" fg:x="482513211887" fg:w="138771708"/><text x="70.1870%" y="655.50"></text></g><g><title>asm_exc_page_fault (141,042,392 samples, 0.02%)</title><rect x="69.9368%" y="677" width="0.0204%" height="15" fill="rgb(233,70,48)" fg:x="482512120404" fg:w="141042392"/><text x="70.1868%" y="687.50"></text></g><g><title>_int_malloc (183,680,503 samples, 0.03%)</title><rect x="69.9331%" y="693" width="0.0266%" height="15" fill="rgb(238,41,26)" fg:x="482486717883" fg:w="183680503"/><text x="70.1831%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (242,451,829 samples, 0.04%)</title><rect x="69.9258%" y="757" width="0.0351%" height="15" fill="rgb(241,19,31)" fg:x="482435759219" fg:w="242451829"/><text x="70.1758%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (242,451,829 samples, 0.04%)</title><rect x="69.9258%" y="741" width="0.0351%" height="15" fill="rgb(214,76,10)" fg:x="482435759219" fg:w="242451829"/><text x="70.1758%" y="751.50"></text></g><g><title>alloc::alloc::alloc (242,451,829 samples, 0.04%)</title><rect x="69.9258%" y="725" width="0.0351%" height="15" fill="rgb(254,202,22)" fg:x="482435759219" fg:w="242451829"/><text x="70.1758%" y="735.50"></text></g><g><title>malloc (225,383,677 samples, 0.03%)</title><rect x="69.9282%" y="709" width="0.0327%" height="15" fill="rgb(214,72,24)" fg:x="482452827371" fg:w="225383677"/><text x="70.1782%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (245,785,568 samples, 0.04%)</title><rect x="69.9254%" y="821" width="0.0356%" height="15" fill="rgb(221,92,46)" fg:x="482433514404" fg:w="245785568"/><text x="70.1754%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (245,785,568 samples, 0.04%)</title><rect x="69.9254%" y="805" width="0.0356%" height="15" fill="rgb(246,13,50)" fg:x="482433514404" fg:w="245785568"/><text x="70.1754%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (245,785,568 samples, 0.04%)</title><rect x="69.9254%" y="789" width="0.0356%" height="15" fill="rgb(240,165,38)" fg:x="482433514404" fg:w="245785568"/><text x="70.1754%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (245,785,568 samples, 0.04%)</title><rect x="69.9254%" y="773" width="0.0356%" height="15" fill="rgb(241,24,51)" fg:x="482433514404" fg:w="245785568"/><text x="70.1754%" y="783.50"></text></g><g><title>__memmove_avx512_unaligned_erms (305,082,061 samples, 0.04%)</title><rect x="69.9615%" y="789" width="0.0442%" height="15" fill="rgb(227,51,44)" fg:x="482682539357" fg:w="305082061"/><text x="70.2115%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (715,666,815 samples, 0.10%)</title><rect x="69.9061%" y="901" width="0.1037%" height="15" fill="rgb(231,121,3)" fg:x="482299931247" fg:w="715666815"/><text x="70.1561%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (582,083,658 samples, 0.08%)</title><rect x="69.9254%" y="885" width="0.0844%" height="15" fill="rgb(245,3,41)" fg:x="482433514404" fg:w="582083658"/><text x="70.1754%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (582,083,658 samples, 0.08%)</title><rect x="69.9254%" y="869" width="0.0844%" height="15" fill="rgb(214,13,26)" fg:x="482433514404" fg:w="582083658"/><text x="70.1754%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (582,083,658 samples, 0.08%)</title><rect x="69.9254%" y="853" width="0.0844%" height="15" fill="rgb(252,75,11)" fg:x="482433514404" fg:w="582083658"/><text x="70.1754%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (582,083,658 samples, 0.08%)</title><rect x="69.9254%" y="837" width="0.0844%" height="15" fill="rgb(218,226,17)" fg:x="482433514404" fg:w="582083658"/><text x="70.1754%" y="847.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (336,298,090 samples, 0.05%)</title><rect x="69.9611%" y="821" width="0.0487%" height="15" fill="rgb(248,89,38)" fg:x="482679299972" fg:w="336298090"/><text x="70.2111%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (336,298,090 samples, 0.05%)</title><rect x="69.9611%" y="805" width="0.0487%" height="15" fill="rgb(237,73,46)" fg:x="482679299972" fg:w="336298090"/><text x="70.2111%" y="815.50"></text></g><g><title>_int_malloc (85,791,382 samples, 0.01%)</title><rect x="70.0103%" y="901" width="0.0124%" height="15" fill="rgb(242,78,33)" fg:x="483018896420" fg:w="85791382"/><text x="70.2603%" y="911.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (978,263,825 samples, 0.14%)</title><rect x="69.8883%" y="917" width="0.1418%" height="15" fill="rgb(235,60,3)" fg:x="482177491404" fg:w="978263825"/><text x="70.1383%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (514,657,487 samples, 0.07%)</title><rect x="70.0301%" y="901" width="0.0746%" height="15" fill="rgb(216,172,19)" fg:x="483155755229" fg:w="514657487"/><text x="70.2801%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (514,657,487 samples, 0.07%)</title><rect x="70.0301%" y="885" width="0.0746%" height="15" fill="rgb(227,6,42)" fg:x="483155755229" fg:w="514657487"/><text x="70.2801%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (514,657,487 samples, 0.07%)</title><rect x="70.0301%" y="869" width="0.0746%" height="15" fill="rgb(223,207,42)" fg:x="483155755229" fg:w="514657487"/><text x="70.2801%" y="879.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h4813e28088395dc8E.llvm.6412023112901746188 (514,657,487 samples, 0.07%)</title><rect x="70.0301%" y="853" width="0.0746%" height="15" fill="rgb(246,138,30)" fg:x="483155755229" fg:w="514657487"/><text x="70.2801%" y="863.50"></text></g><g><title>realloc (513,532,553 samples, 0.07%)</title><rect x="70.0303%" y="837" width="0.0744%" height="15" fill="rgb(251,199,47)" fg:x="483156880163" fg:w="513532553"/><text x="70.2803%" y="847.50"></text></g><g><title>_int_realloc (513,532,553 samples, 0.07%)</title><rect x="70.0303%" y="821" width="0.0744%" height="15" fill="rgb(228,218,44)" fg:x="483156880163" fg:w="513532553"/><text x="70.2803%" y="831.50"></text></g><g><title>__memmove_avx512_unaligned_erms (513,532,553 samples, 0.07%)</title><rect x="70.0303%" y="805" width="0.0744%" height="15" fill="rgb(220,68,6)" fg:x="483156880163" fg:w="513532553"/><text x="70.2803%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (553,302,140 samples, 0.08%)</title><rect x="70.0301%" y="917" width="0.0802%" height="15" fill="rgb(240,60,26)" fg:x="483155755229" fg:w="553302140"/><text x="70.2801%" y="927.50"></text></g><g><title>__sysvec_apic_timer_interrupt (70,427,685 samples, 0.01%)</title><rect x="71.8291%" y="789" width="0.0102%" height="15" fill="rgb(211,200,19)" fg:x="495567286224" fg:w="70427685"/><text x="72.0791%" y="799.50"></text></g><g><title>hrtimer_interrupt (70,427,685 samples, 0.01%)</title><rect x="71.8291%" y="773" width="0.0102%" height="15" fill="rgb(242,145,30)" fg:x="495567286224" fg:w="70427685"/><text x="72.0791%" y="783.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (78,175,003 samples, 0.01%)</title><rect x="71.8281%" y="821" width="0.0113%" height="15" fill="rgb(225,64,13)" fg:x="495560704446" fg:w="78175003"/><text x="72.0781%" y="831.50"></text></g><g><title>sysvec_apic_timer_interrupt (78,175,003 samples, 0.01%)</title><rect x="71.8281%" y="805" width="0.0113%" height="15" fill="rgb(218,103,35)" fg:x="495560704446" fg:w="78175003"/><text x="72.0781%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (11,898,493,722 samples, 1.72%)</title><rect x="70.1153%" y="853" width="1.7246%" height="15" fill="rgb(216,93,46)" fg:x="483743698484" fg:w="11898493722"/><text x="70.3653%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11,895,118,880 samples, 1.72%)</title><rect x="70.1158%" y="837" width="1.7241%" height="15" fill="rgb(225,159,27)" fg:x="483747073326" fg:w="11895118880"/><text x="70.3658%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (11,950,686,634 samples, 1.73%)</title><rect x="70.1152%" y="885" width="1.7322%" height="15" fill="rgb(225,204,11)" fg:x="483742627820" fg:w="11950686634"/><text x="70.3652%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (11,950,686,634 samples, 1.73%)</title><rect x="70.1152%" y="869" width="1.7322%" height="15" fill="rgb(205,56,4)" fg:x="483742627820" fg:w="11950686634"/><text x="70.3652%" y="879.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (119,817,757 samples, 0.02%)</title><rect x="71.8687%" y="773" width="0.0174%" height="15" fill="rgb(206,6,35)" fg:x="495840387284" fg:w="119817757"/><text x="72.1187%" y="783.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (119,817,757 samples, 0.02%)</title><rect x="71.8687%" y="757" width="0.0174%" height="15" fill="rgb(247,73,52)" fg:x="495840387284" fg:w="119817757"/><text x="72.1187%" y="767.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (119,817,757 samples, 0.02%)</title><rect x="71.8687%" y="741" width="0.0174%" height="15" fill="rgb(246,97,4)" fg:x="495840387284" fg:w="119817757"/><text x="72.1187%" y="751.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (119,817,757 samples, 0.02%)</title><rect x="71.8687%" y="725" width="0.0174%" height="15" fill="rgb(212,37,15)" fg:x="495840387284" fg:w="119817757"/><text x="72.1187%" y="735.50"></text></g><g><title>&lt;usize as core::ops::bit::BitXor&gt;::bitxor (574,139,038 samples, 0.08%)</title><rect x="71.8860%" y="757" width="0.0832%" height="15" fill="rgb(208,130,40)" fg:x="495960205041" fg:w="574139038"/><text x="72.1360%" y="767.50"></text></g><g><title>core::num::&lt;impl usize&gt;::rotate_left (452,189,154 samples, 0.07%)</title><rect x="71.9693%" y="757" width="0.0655%" height="15" fill="rgb(236,55,29)" fg:x="496534344079" fg:w="452189154"/><text x="72.2193%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1,800,848,804 samples, 0.26%)</title><rect x="71.8487%" y="837" width="0.2610%" height="15" fill="rgb(209,156,45)" fg:x="495702876539" fg:w="1800848804"/><text x="72.0987%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1,800,848,804 samples, 0.26%)</title><rect x="71.8487%" y="821" width="0.2610%" height="15" fill="rgb(249,107,4)" fg:x="495702876539" fg:w="1800848804"/><text x="72.0987%" y="831.50"></text></g><g><title>core::hash::Hasher::write_str (1,800,848,804 samples, 0.26%)</title><rect x="71.8487%" y="805" width="0.2610%" height="15" fill="rgb(227,7,13)" fg:x="495702876539" fg:w="1800848804"/><text x="72.0987%" y="815.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (1,800,848,804 samples, 0.26%)</title><rect x="71.8487%" y="789" width="0.2610%" height="15" fill="rgb(250,129,14)" fg:x="495702876539" fg:w="1800848804"/><text x="72.0987%" y="799.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (1,543,520,302 samples, 0.22%)</title><rect x="71.8860%" y="773" width="0.2237%" height="15" fill="rgb(229,92,13)" fg:x="495960205041" fg:w="1543520302"/><text x="72.1360%" y="783.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_mul (517,192,110 samples, 0.07%)</title><rect x="72.0348%" y="757" width="0.0750%" height="15" fill="rgb(245,98,39)" fg:x="496986533233" fg:w="517192110"/><text x="72.2848%" y="767.50"></text></g><g><title>hashbrown::map::make_hash (1,811,447,415 samples, 0.26%)</title><rect x="71.8474%" y="885" width="0.2626%" height="15" fill="rgb(234,135,48)" fg:x="495693314454" fg:w="1811447415"/><text x="72.0974%" y="895.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,811,447,415 samples, 0.26%)</title><rect x="71.8474%" y="869" width="0.2626%" height="15" fill="rgb(230,98,28)" fg:x="495693314454" fg:w="1811447415"/><text x="72.0974%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,811,447,415 samples, 0.26%)</title><rect x="71.8474%" y="853" width="0.2626%" height="15" fill="rgb(223,121,0)" fg:x="495693314454" fg:w="1811447415"/><text x="72.0974%" y="863.50"></text></g><g><title>llvm_profparser::instrumentation_profile::types::InstrumentationProfile::push_record (15,426,178,036 samples, 2.24%)</title><rect x="69.8751%" y="933" width="2.2359%" height="15" fill="rgb(234,173,33)" fg:x="482086328999" fg:w="15426178036"/><text x="70.1251%" y="943.50">l..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (13,801,273,926 samples, 2.00%)</title><rect x="70.1106%" y="917" width="2.0004%" height="15" fill="rgb(245,47,8)" fg:x="483711233109" fg:w="13801273926"/><text x="70.3606%" y="927.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (13,801,273,926 samples, 2.00%)</title><rect x="70.1106%" y="901" width="2.0004%" height="15" fill="rgb(205,17,20)" fg:x="483711233109" fg:w="13801273926"/><text x="70.3606%" y="911.50">h..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (116,319,967 samples, 0.02%)</title><rect x="72.1809%" y="853" width="0.0169%" height="15" fill="rgb(232,151,16)" fg:x="497994591461" fg:w="116319967"/><text x="72.4309%" y="863.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (116,319,967 samples, 0.02%)</title><rect x="72.1809%" y="837" width="0.0169%" height="15" fill="rgb(208,30,32)" fg:x="497994591461" fg:w="116319967"/><text x="72.4309%" y="847.50"></text></g><g><title>md5::consume (668,312,237 samples, 0.10%)</title><rect x="72.1194%" y="869" width="0.0969%" height="15" fill="rgb(254,26,3)" fg:x="497569976287" fg:w="668312237"/><text x="72.3694%" y="879.50"></text></g><g><title>md5::transform (121,857,453 samples, 0.02%)</title><rect x="72.1986%" y="853" width="0.0177%" height="15" fill="rgb(240,177,30)" fg:x="498116431071" fg:w="121857453"/><text x="72.4486%" y="863.50"></text></g><g><title>md5::Context::compute (1,875,112,609 samples, 0.27%)</title><rect x="72.1181%" y="885" width="0.2718%" height="15" fill="rgb(248,76,44)" fg:x="497561008971" fg:w="1875112609"/><text x="72.3681%" y="895.50"></text></g><g><title>md5::transform (1,197,833,056 samples, 0.17%)</title><rect x="72.2162%" y="869" width="0.1736%" height="15" fill="rgb(241,186,54)" fg:x="498238288524" fg:w="1197833056"/><text x="72.4662%" y="879.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (566,006,580 samples, 0.08%)</title><rect x="72.3078%" y="853" width="0.0820%" height="15" fill="rgb(249,171,29)" fg:x="498870115000" fg:w="566006580"/><text x="72.5578%" y="863.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (201,202,585 samples, 0.03%)</title><rect x="72.5050%" y="853" width="0.0292%" height="15" fill="rgb(237,151,44)" fg:x="500230597469" fg:w="201202585"/><text x="72.7550%" y="863.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (201,202,585 samples, 0.03%)</title><rect x="72.5050%" y="837" width="0.0292%" height="15" fill="rgb(228,174,30)" fg:x="500230597469" fg:w="201202585"/><text x="72.7550%" y="847.50"></text></g><g><title>llvm_profparser::instrumentation_profile::types::Symtab::add_func_name (222,703,637 samples, 0.03%)</title><rect x="72.5407%" y="853" width="0.0323%" height="15" fill="rgb(252,14,37)" fg:x="500476817284" fg:w="222703637"/><text x="72.7907%" y="863.50"></text></g><g><title>md5::consume (12,040,442,303 samples, 1.75%)</title><rect x="72.3938%" y="869" width="1.7452%" height="15" fill="rgb(207,111,40)" fg:x="499463724284" fg:w="12040442303"/><text x="72.6438%" y="879.50"></text></g><g><title>md5::transform (10,790,896,903 samples, 1.56%)</title><rect x="72.5750%" y="853" width="1.5641%" height="15" fill="rgb(248,171,54)" fg:x="500713269684" fg:w="10790896903"/><text x="72.8250%" y="863.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (4,828,884,932 samples, 0.70%)</title><rect x="73.4391%" y="837" width="0.6999%" height="15" fill="rgb(211,127,2)" fg:x="506675281655" fg:w="4828884932"/><text x="73.6891%" y="847.50"></text></g><g><title>md5::Context::consume (12,142,720,692 samples, 1.76%)</title><rect x="72.3898%" y="885" width="1.7600%" height="15" fill="rgb(236,87,47)" fg:x="499436121580" fg:w="12142720692"/><text x="72.6398%" y="895.50"></text></g><g><title>md5::transform (74,675,685 samples, 0.01%)</title><rect x="74.1390%" y="869" width="0.0108%" height="15" fill="rgb(223,190,45)" fg:x="511504166587" fg:w="74675685"/><text x="74.3890%" y="879.50"></text></g><g><title>llvm_profparser::instrumentation_profile::types::compute_hash (14,065,597,668 samples, 2.04%)</title><rect x="72.1171%" y="917" width="2.0387%" height="15" fill="rgb(215,5,16)" fg:x="497554217439" fg:w="14065597668"/><text x="72.3671%" y="927.50">l..</text></g><g><title>md5::compute (14,059,950,562 samples, 2.04%)</title><rect x="72.1179%" y="901" width="2.0379%" height="15" fill="rgb(252,82,33)" fg:x="497559864545" fg:w="14059950562"/><text x="72.3679%" y="911.50">m..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (773,726,346 samples, 0.11%)</title><rect x="74.1584%" y="853" width="0.1121%" height="15" fill="rgb(247,213,44)" fg:x="511637927910" fg:w="773726346"/><text x="74.4084%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (772,571,875 samples, 0.11%)</title><rect x="74.1586%" y="837" width="0.1120%" height="15" fill="rgb(205,196,44)" fg:x="511639082381" fg:w="772571875"/><text x="74.4086%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (816,241,456 samples, 0.12%)</title><rect x="74.1583%" y="885" width="0.1183%" height="15" fill="rgb(237,96,54)" fg:x="511636782652" fg:w="816241456"/><text x="74.4083%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (816,241,456 samples, 0.12%)</title><rect x="74.1583%" y="869" width="0.1183%" height="15" fill="rgb(230,113,34)" fg:x="511636782652" fg:w="816241456"/><text x="74.4083%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (833,254,497 samples, 0.12%)</title><rect x="74.1563%" y="901" width="0.1208%" height="15" fill="rgb(221,224,12)" fg:x="511623196160" fg:w="833254497"/><text x="74.4063%" y="911.50"></text></g><g><title>llvm_profparser::instrumentation_profile::types::Symtab::add_func_name (14,945,099,150 samples, 2.17%)</title><rect x="72.1110%" y="933" width="2.1662%" height="15" fill="rgb(219,112,44)" fg:x="497512507035" fg:w="14945099150"/><text x="72.3610%" y="943.50">l..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (837,791,078 samples, 0.12%)</title><rect x="74.1558%" y="917" width="0.1214%" height="15" fill="rgb(210,31,13)" fg:x="511619815107" fg:w="837791078"/><text x="74.4058%" y="927.50"></text></g><g><title>core::str::converts::from_utf8 (496,321,197 samples, 0.07%)</title><rect x="74.2773%" y="901" width="0.0719%" height="15" fill="rgb(230,25,16)" fg:x="512458437392" fg:w="496321197"/><text x="74.5273%" y="911.50"></text></g><g><title>core::str::validations::run_utf8_validation (495,195,749 samples, 0.07%)</title><rect x="74.2775%" y="885" width="0.0718%" height="15" fill="rgb(246,108,53)" fg:x="512459562840" fg:w="495195749"/><text x="74.5275%" y="895.50"></text></g><g><title>alloc::string::String::from_utf8 (497,267,805 samples, 0.07%)</title><rect x="74.2773%" y="917" width="0.0721%" height="15" fill="rgb(241,172,50)" fg:x="512458437392" fg:w="497267805"/><text x="74.5273%" y="927.50"></text></g><g><title>__memset_avx512_unaligned_erms (115,717,826 samples, 0.02%)</title><rect x="74.3557%" y="773" width="0.0168%" height="15" fill="rgb(235,141,10)" fg:x="512999025363" fg:w="115717826"/><text x="74.6057%" y="783.50"></text></g><g><title>alloc::vec::from_elem (147,234,810 samples, 0.02%)</title><rect x="74.3518%" y="901" width="0.0213%" height="15" fill="rgb(220,174,43)" fg:x="512971973828" fg:w="147234810"/><text x="74.6018%" y="911.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (147,234,810 samples, 0.02%)</title><rect x="74.3518%" y="885" width="0.0213%" height="15" fill="rgb(215,181,40)" fg:x="512971973828" fg:w="147234810"/><text x="74.6018%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (147,234,810 samples, 0.02%)</title><rect x="74.3518%" y="869" width="0.0213%" height="15" fill="rgb(230,97,2)" fg:x="512971973828" fg:w="147234810"/><text x="74.6018%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (147,234,810 samples, 0.02%)</title><rect x="74.3518%" y="853" width="0.0213%" height="15" fill="rgb(211,25,27)" fg:x="512971973828" fg:w="147234810"/><text x="74.6018%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (147,234,810 samples, 0.02%)</title><rect x="74.3518%" y="837" width="0.0213%" height="15" fill="rgb(230,87,26)" fg:x="512971973828" fg:w="147234810"/><text x="74.6018%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (147,234,810 samples, 0.02%)</title><rect x="74.3518%" y="821" width="0.0213%" height="15" fill="rgb(227,160,17)" fg:x="512971973828" fg:w="147234810"/><text x="74.6018%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (147,234,810 samples, 0.02%)</title><rect x="74.3518%" y="805" width="0.0213%" height="15" fill="rgb(244,85,34)" fg:x="512971973828" fg:w="147234810"/><text x="74.6018%" y="815.50"></text></g><g><title>alloc::alloc::alloc_zeroed (147,234,810 samples, 0.02%)</title><rect x="74.3518%" y="789" width="0.0213%" height="15" fill="rgb(207,70,0)" fg:x="512971973828" fg:w="147234810"/><text x="74.6018%" y="799.50"></text></g><g><title>flate2::zlib::read::ZlibDecoder&lt;R&gt;::new (300,605,773 samples, 0.04%)</title><rect x="74.3518%" y="917" width="0.0436%" height="15" fill="rgb(223,129,7)" fg:x="512971973828" fg:w="300605773"/><text x="74.6018%" y="927.50"></text></g><g><title>flate2::zlib::read::ZlibDecoder&lt;R&gt;::new_with_buf (153,370,963 samples, 0.02%)</title><rect x="74.3731%" y="901" width="0.0222%" height="15" fill="rgb(246,105,7)" fg:x="513119208638" fg:w="153370963"/><text x="74.6231%" y="911.50"></text></g><g><title>flate2::zlib::bufread::ZlibDecoder&lt;R&gt;::new (153,370,963 samples, 0.02%)</title><rect x="74.3731%" y="885" width="0.0222%" height="15" fill="rgb(215,154,42)" fg:x="513119208638" fg:w="153370963"/><text x="74.6231%" y="895.50"></text></g><g><title>flate2::mem::Decompress::new (153,370,963 samples, 0.02%)</title><rect x="74.3731%" y="869" width="0.0222%" height="15" fill="rgb(220,215,30)" fg:x="513119208638" fg:w="153370963"/><text x="74.6231%" y="879.50"></text></g><g><title>&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::make (153,370,963 samples, 0.02%)</title><rect x="74.3731%" y="853" width="0.0222%" height="15" fill="rgb(228,81,51)" fg:x="513119208638" fg:w="153370963"/><text x="74.6231%" y="863.50"></text></g><g><title>miniz_oxide::inflate::stream::InflateState::new_boxed (153,370,963 samples, 0.02%)</title><rect x="74.3731%" y="837" width="0.0222%" height="15" fill="rgb(247,71,54)" fg:x="513119208638" fg:w="153370963"/><text x="74.6231%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::default::Default&gt;::default (153,370,963 samples, 0.02%)</title><rect x="74.3731%" y="821" width="0.0222%" height="15" fill="rgb(234,176,34)" fg:x="513119208638" fg:w="153370963"/><text x="74.6231%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::write (150,138,839 samples, 0.02%)</title><rect x="74.3736%" y="805" width="0.0218%" height="15" fill="rgb(241,103,54)" fg:x="513122440762" fg:w="150138839"/><text x="74.6236%" y="815.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (150,138,839 samples, 0.02%)</title><rect x="74.3736%" y="789" width="0.0218%" height="15" fill="rgb(228,22,34)" fg:x="513122440762" fg:w="150138839"/><text x="74.6236%" y="799.50"></text></g><g><title>__memset_avx512_unaligned_erms (150,138,839 samples, 0.02%)</title><rect x="74.3736%" y="773" width="0.0218%" height="15" fill="rgb(241,179,48)" fg:x="513122440762" fg:w="150138839"/><text x="74.6236%" y="783.50"></text></g><g><title>__memmove_avx512_unaligned_erms (1,086,904,854 samples, 0.16%)</title><rect x="74.3984%" y="773" width="0.1575%" height="15" fill="rgb(235,167,37)" fg:x="513293537231" fg:w="1086904854"/><text x="74.6484%" y="783.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h4813e28088395dc8E.llvm.6412023112901746188 (1,147,052,265 samples, 0.17%)</title><rect x="74.3953%" y="821" width="0.1663%" height="15" fill="rgb(213,109,30)" fg:x="513272579601" fg:w="1147052265"/><text x="74.6453%" y="831.50"></text></g><g><title>realloc (1,143,675,097 samples, 0.17%)</title><rect x="74.3958%" y="805" width="0.1658%" height="15" fill="rgb(222,172,16)" fg:x="513275956769" fg:w="1143675097"/><text x="74.6458%" y="815.50"></text></g><g><title>_int_realloc (1,133,790,754 samples, 0.16%)</title><rect x="74.3973%" y="789" width="0.1643%" height="15" fill="rgb(233,192,5)" fg:x="513285841112" fg:w="1133790754"/><text x="74.6473%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::try_reserve (1,150,363,515 samples, 0.17%)</title><rect x="74.3953%" y="885" width="0.1667%" height="15" fill="rgb(247,189,41)" fg:x="513272579601" fg:w="1150363515"/><text x="74.6453%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1,150,363,515 samples, 0.17%)</title><rect x="74.3953%" y="869" width="0.1667%" height="15" fill="rgb(218,134,47)" fg:x="513272579601" fg:w="1150363515"/><text x="74.6453%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_reserve (1,150,363,515 samples, 0.17%)</title><rect x="74.3953%" y="853" width="0.1667%" height="15" fill="rgb(216,29,3)" fg:x="513272579601" fg:w="1150363515"/><text x="74.6453%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,150,363,515 samples, 0.17%)</title><rect x="74.3953%" y="837" width="0.1667%" height="15" fill="rgb(246,140,12)" fg:x="513272579601" fg:w="1150363515"/><text x="74.6453%" y="847.50"></text></g><g><title>alloc_anon_folio (93,438,745 samples, 0.01%)</title><rect x="74.7048%" y="709" width="0.0135%" height="15" fill="rgb(230,136,11)" fg:x="515407526402" fg:w="93438745"/><text x="74.9548%" y="719.50"></text></g><g><title>do_anonymous_page (127,299,652 samples, 0.02%)</title><rect x="74.7013%" y="725" width="0.0185%" height="15" fill="rgb(247,22,47)" fg:x="515383656257" fg:w="127299652"/><text x="74.9513%" y="735.50"></text></g><g><title>__handle_mm_fault (130,746,581 samples, 0.02%)</title><rect x="74.7012%" y="741" width="0.0190%" height="15" fill="rgb(218,84,22)" fg:x="515382548615" fg:w="130746581"/><text x="74.9512%" y="751.50"></text></g><g><title>handle_mm_fault (131,885,871 samples, 0.02%)</title><rect x="74.7012%" y="757" width="0.0191%" height="15" fill="rgb(216,87,39)" fg:x="515382548615" fg:w="131885871"/><text x="74.9512%" y="767.50"></text></g><g><title>do_user_addr_fault (137,326,661 samples, 0.02%)</title><rect x="74.7007%" y="773" width="0.0199%" height="15" fill="rgb(221,178,8)" fg:x="515379304031" fg:w="137326661"/><text x="74.9507%" y="783.50"></text></g><g><title>asm_exc_page_fault (140,814,493 samples, 0.02%)</title><rect x="74.7005%" y="805" width="0.0204%" height="15" fill="rgb(230,42,11)" fg:x="515378136584" fg:w="140814493"/><text x="74.9505%" y="815.50"></text></g><g><title>exc_page_fault (140,814,493 samples, 0.02%)</title><rect x="74.7005%" y="789" width="0.0204%" height="15" fill="rgb(237,229,4)" fg:x="515378136584" fg:w="140814493"/><text x="74.9505%" y="799.50"></text></g><g><title>__memset_avx512_unaligned_erms (1,108,286,187 samples, 0.16%)</title><rect x="74.5627%" y="821" width="0.1606%" height="15" fill="rgb(222,31,33)" fg:x="514427290496" fg:w="1108286187"/><text x="74.8127%" y="831.50"></text></g><g><title>core::io::borrowed_buf::BorrowedCursor::ensure_init (1,113,789,221 samples, 0.16%)</title><rect x="74.5621%" y="853" width="0.1614%" height="15" fill="rgb(210,17,39)" fg:x="514422943116" fg:w="1113789221"/><text x="74.8121%" y="863.50"></text></g><g><title>core::intrinsics::write_bytes (1,113,789,221 samples, 0.16%)</title><rect x="74.5621%" y="837" width="0.1614%" height="15" fill="rgb(244,93,20)" fg:x="514422943116" fg:w="1113789221"/><text x="74.8121%" y="847.50"></text></g><g><title>__memmove_avx512_unaligned_erms (98,569,109 samples, 0.01%)</title><rect x="74.7778%" y="677" width="0.0143%" height="15" fill="rgb(210,40,47)" fg:x="515911188939" fg:w="98569109"/><text x="75.0278%" y="687.50"></text></g><g><title>miniz_oxide::inflate::core::HuffmanTable::fast_lookup (81,659,103 samples, 0.01%)</title><rect x="74.7967%" y="661" width="0.0118%" height="15" fill="rgb(239,211,47)" fg:x="516041809471" fg:w="81659103"/><text x="75.0467%" y="671.50"></text></g><g><title>miniz_oxide::inflate::core::HuffmanTable::lookup (107,263,895 samples, 0.02%)</title><rect x="74.7932%" y="677" width="0.0155%" height="15" fill="rgb(251,223,49)" fg:x="516017349772" fg:w="107263895"/><text x="75.0432%" y="687.50"></text></g><g><title>miniz_oxide::inflate::core::fill_bit_buffer (81,364,905 samples, 0.01%)</title><rect x="74.8127%" y="677" width="0.0118%" height="15" fill="rgb(221,149,5)" fg:x="516152143781" fg:w="81364905"/><text x="75.0627%" y="687.50"></text></g><g><title>miniz_oxide::inflate::core::decompress_fast (681,853,118 samples, 0.10%)</title><rect x="74.7338%" y="693" width="0.0988%" height="15" fill="rgb(219,224,51)" fg:x="515607583872" fg:w="681853118"/><text x="74.9838%" y="703.50"></text></g><g><title>&lt;adler2::algo::U32X4 as core::ops::arith::AddAssign&gt;::add_assign (1,489,450,510 samples, 0.22%)</title><rect x="74.8384%" y="645" width="0.2159%" height="15" fill="rgb(223,7,8)" fg:x="516329184580" fg:w="1489450510"/><text x="75.0884%" y="655.50"></text></g><g><title>&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (133,668,265 samples, 0.02%)</title><rect x="75.0544%" y="645" width="0.0194%" height="15" fill="rgb(241,217,22)" fg:x="517819769320" fg:w="133668265"/><text x="75.3044%" y="655.50"></text></g><g><title>miniz_oxide::inflate::core::decompress (2,987,466,653 samples, 0.43%)</title><rect x="74.7259%" y="709" width="0.4330%" height="15" fill="rgb(248,209,0)" fg:x="515553168471" fg:w="2987466653"/><text x="74.9759%" y="719.50"></text></g><g><title>miniz_oxide::shared::update_adler32 (2,212,540,562 samples, 0.32%)</title><rect x="74.8382%" y="693" width="0.3207%" height="15" fill="rgb(217,205,4)" fg:x="516328094562" fg:w="2212540562"/><text x="75.0882%" y="703.50"></text></g><g><title>adler2::Adler32::write_slice (2,212,540,562 samples, 0.32%)</title><rect x="74.8382%" y="677" width="0.3207%" height="15" fill="rgb(228,124,39)" fg:x="516328094562" fg:w="2212540562"/><text x="75.0882%" y="687.50"></text></g><g><title>adler2::algo::&lt;impl adler2::Adler32&gt;::compute (2,212,540,562 samples, 0.32%)</title><rect x="74.8382%" y="661" width="0.3207%" height="15" fill="rgb(250,116,42)" fg:x="516328094562" fg:w="2212540562"/><text x="75.0882%" y="671.50"></text></g><g><title>adler2::algo::U32X4::from (587,197,539 samples, 0.09%)</title><rect x="75.0738%" y="645" width="0.0851%" height="15" fill="rgb(223,202,9)" fg:x="517953437585" fg:w="587197539"/><text x="75.3238%" y="655.50"></text></g><g><title>miniz_oxide::inflate::stream::inflate_loop (3,218,754,549 samples, 0.47%)</title><rect x="74.7256%" y="725" width="0.4665%" height="15" fill="rgb(242,222,40)" fg:x="515550879678" fg:w="3218754549"/><text x="74.9756%" y="735.50"></text></g><g><title>miniz_oxide::inflate::stream::push_dict_out (228,999,103 samples, 0.03%)</title><rect x="75.1589%" y="709" width="0.0332%" height="15" fill="rgb(229,99,46)" fg:x="518540635124" fg:w="228999103"/><text x="75.4089%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (228,999,103 samples, 0.03%)</title><rect x="75.1589%" y="693" width="0.0332%" height="15" fill="rgb(225,56,46)" fg:x="518540635124" fg:w="228999103"/><text x="75.4089%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (228,999,103 samples, 0.03%)</title><rect x="75.1589%" y="677" width="0.0332%" height="15" fill="rgb(227,94,5)" fg:x="518540635124" fg:w="228999103"/><text x="75.4089%" y="687.50"></text></g><g><title>__memmove_avx512_unaligned_erms (228,999,103 samples, 0.03%)</title><rect x="75.1589%" y="661" width="0.0332%" height="15" fill="rgb(205,112,38)" fg:x="518540635124" fg:w="228999103"/><text x="75.4089%" y="671.50"></text></g><g><title>std::io::Read::read_buf (4,385,801,711 samples, 0.64%)</title><rect x="74.5621%" y="885" width="0.6357%" height="15" fill="rgb(231,133,46)" fg:x="514422943116" fg:w="4385801711"/><text x="74.8121%" y="895.50"></text></g><g><title>std::io::default_read_buf (4,385,801,711 samples, 0.64%)</title><rect x="74.5621%" y="869" width="0.6357%" height="15" fill="rgb(217,16,9)" fg:x="514422943116" fg:w="4385801711"/><text x="74.8121%" y="879.50"></text></g><g><title>std::io::Read::read_buf::_{{closure}} (3,272,012,490 samples, 0.47%)</title><rect x="74.7235%" y="853" width="0.4743%" height="15" fill="rgb(249,173,9)" fg:x="515536732337" fg:w="3272012490"/><text x="74.9735%" y="863.50"></text></g><g><title>&lt;flate2::zlib::read::ZlibDecoder&lt;R&gt; as std::io::Read&gt;::read (3,272,012,490 samples, 0.47%)</title><rect x="74.7235%" y="837" width="0.4743%" height="15" fill="rgb(205,163,53)" fg:x="515536732337" fg:w="3272012490"/><text x="74.9735%" y="847.50"></text></g><g><title>&lt;flate2::zlib::bufread::ZlibDecoder&lt;R&gt; as std::io::Read&gt;::read (3,272,012,490 samples, 0.47%)</title><rect x="74.7235%" y="821" width="0.4743%" height="15" fill="rgb(217,54,41)" fg:x="515536732337" fg:w="3272012490"/><text x="74.9735%" y="831.50"></text></g><g><title>flate2::zio::read (3,272,012,490 samples, 0.47%)</title><rect x="74.7235%" y="805" width="0.4743%" height="15" fill="rgb(228,216,12)" fg:x="515536732337" fg:w="3272012490"/><text x="74.9735%" y="815.50"></text></g><g><title>flate2::mem::Decompress::decompress (3,258,981,996 samples, 0.47%)</title><rect x="74.7254%" y="789" width="0.4724%" height="15" fill="rgb(244,228,15)" fg:x="515549762831" fg:w="3258981996"/><text x="74.9754%" y="799.50"></text></g><g><title>flate2::mem::Decompress::decompress (3,258,981,996 samples, 0.47%)</title><rect x="74.7254%" y="773" width="0.4724%" height="15" fill="rgb(221,176,53)" fg:x="515549762831" fg:w="3258981996"/><text x="74.9754%" y="783.50"></text></g><g><title>&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (3,258,981,996 samples, 0.47%)</title><rect x="74.7254%" y="757" width="0.4724%" height="15" fill="rgb(205,94,34)" fg:x="515549762831" fg:w="3258981996"/><text x="74.9754%" y="767.50"></text></g><g><title>miniz_oxide::inflate::stream::inflate (3,258,981,996 samples, 0.47%)</title><rect x="74.7254%" y="741" width="0.4724%" height="15" fill="rgb(213,110,48)" fg:x="515549762831" fg:w="3258981996"/><text x="74.9754%" y="751.50"></text></g><g><title>miniz_oxide::inflate::core::HuffmanTable::lookup (144,247,574 samples, 0.02%)</title><rect x="75.2678%" y="709" width="0.0209%" height="15" fill="rgb(236,142,28)" fg:x="519291929074" fg:w="144247574"/><text x="75.5178%" y="719.50"></text></g><g><title>miniz_oxide::inflate::core::HuffmanTable::fast_lookup (114,121,524 samples, 0.02%)</title><rect x="75.2722%" y="693" width="0.0165%" height="15" fill="rgb(225,135,29)" fg:x="519322055124" fg:w="114121524"/><text x="75.5222%" y="703.50"></text></g><g><title>miniz_oxide::inflate::core::fill_bit_buffer (90,814,975 samples, 0.01%)</title><rect x="75.2910%" y="709" width="0.0132%" height="15" fill="rgb(252,45,31)" fg:x="519451937035" fg:w="90814975"/><text x="75.5410%" y="719.50"></text></g><g><title>miniz_oxide::inflate::core::decompress_fast (645,898,672 samples, 0.09%)</title><rect x="75.2221%" y="725" width="0.0936%" height="15" fill="rgb(211,187,50)" fg:x="518976210211" fg:w="645898672"/><text x="75.4721%" y="735.50"></text></g><g><title>miniz_oxide::inflate::core::init_tree (835,970,865 samples, 0.12%)</title><rect x="75.3157%" y="725" width="0.1212%" height="15" fill="rgb(229,109,7)" fg:x="519622108883" fg:w="835970865"/><text x="75.5657%" y="735.50"></text></g><g><title>&lt;adler2::algo::U32X4 as core::ops::arith::AddAssign&gt;::add_assign (260,105,728 samples, 0.04%)</title><rect x="75.4469%" y="677" width="0.0377%" height="15" fill="rgb(251,131,51)" fg:x="520527631158" fg:w="260105728"/><text x="75.6969%" y="687.50"></text></g><g><title>adler2::algo::U32X4::from (126,514,700 samples, 0.02%)</title><rect x="75.4911%" y="677" width="0.0183%" height="15" fill="rgb(251,180,35)" fg:x="520832381323" fg:w="126514700"/><text x="75.7411%" y="687.50"></text></g><g><title>llvm_profparser::util::parse_string_ref (8,501,601,319 samples, 1.23%)</title><rect x="74.2773%" y="933" width="1.2322%" height="15" fill="rgb(211,46,32)" fg:x="512458437392" fg:w="8501601319"/><text x="74.5273%" y="943.50"></text></g><g><title>std::io::Read::read_to_end (7,687,459,110 samples, 1.11%)</title><rect x="74.3953%" y="917" width="1.1142%" height="15" fill="rgb(248,123,17)" fg:x="513272579601" fg:w="7687459110"/><text x="74.6453%" y="927.50"></text></g><g><title>std::io::default_read_to_end (7,687,459,110 samples, 1.11%)</title><rect x="74.3953%" y="901" width="1.1142%" height="15" fill="rgb(227,141,18)" fg:x="513272579601" fg:w="7687459110"/><text x="74.6453%" y="911.50"></text></g><g><title>std::io::default_read_to_end::small_probe_read (2,151,293,884 samples, 0.31%)</title><rect x="75.1978%" y="885" width="0.3118%" height="15" fill="rgb(216,102,9)" fg:x="518808744827" fg:w="2151293884"/><text x="75.4478%" y="895.50"></text></g><g><title>&lt;flate2::zlib::read::ZlibDecoder&lt;R&gt; as std::io::Read&gt;::read (2,151,293,884 samples, 0.31%)</title><rect x="75.1978%" y="869" width="0.3118%" height="15" fill="rgb(253,47,13)" fg:x="518808744827" fg:w="2151293884"/><text x="75.4478%" y="879.50"></text></g><g><title>&lt;flate2::zlib::bufread::ZlibDecoder&lt;R&gt; as std::io::Read&gt;::read (2,151,293,884 samples, 0.31%)</title><rect x="75.1978%" y="853" width="0.3118%" height="15" fill="rgb(226,93,23)" fg:x="518808744827" fg:w="2151293884"/><text x="75.4478%" y="863.50"></text></g><g><title>flate2::zio::read (2,151,293,884 samples, 0.31%)</title><rect x="75.1978%" y="837" width="0.3118%" height="15" fill="rgb(247,104,17)" fg:x="518808744827" fg:w="2151293884"/><text x="75.4478%" y="847.50"></text></g><g><title>flate2::mem::Decompress::decompress (2,121,034,403 samples, 0.31%)</title><rect x="75.2022%" y="821" width="0.3074%" height="15" fill="rgb(233,203,26)" fg:x="518839004308" fg:w="2121034403"/><text x="75.4522%" y="831.50"></text></g><g><title>flate2::mem::Decompress::decompress (2,121,034,403 samples, 0.31%)</title><rect x="75.2022%" y="805" width="0.3074%" height="15" fill="rgb(244,98,49)" fg:x="518839004308" fg:w="2121034403"/><text x="75.4522%" y="815.50"></text></g><g><title>&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (2,121,034,403 samples, 0.31%)</title><rect x="75.2022%" y="789" width="0.3074%" height="15" fill="rgb(235,134,22)" fg:x="518839004308" fg:w="2121034403"/><text x="75.4522%" y="799.50"></text></g><g><title>miniz_oxide::inflate::stream::inflate (2,121,034,403 samples, 0.31%)</title><rect x="75.2022%" y="773" width="0.3074%" height="15" fill="rgb(221,70,32)" fg:x="518839004308" fg:w="2121034403"/><text x="75.4522%" y="783.50"></text></g><g><title>miniz_oxide::inflate::stream::inflate_loop (2,121,034,403 samples, 0.31%)</title><rect x="75.2022%" y="757" width="0.3074%" height="15" fill="rgb(238,15,50)" fg:x="518839004308" fg:w="2121034403"/><text x="75.4522%" y="767.50"></text></g><g><title>miniz_oxide::inflate::core::decompress (2,121,034,403 samples, 0.31%)</title><rect x="75.2022%" y="741" width="0.3074%" height="15" fill="rgb(215,221,48)" fg:x="518839004308" fg:w="2121034403"/><text x="75.4522%" y="751.50"></text></g><g><title>miniz_oxide::shared::update_adler32 (433,435,226 samples, 0.06%)</title><rect x="75.4468%" y="725" width="0.0628%" height="15" fill="rgb(236,73,3)" fg:x="520526603485" fg:w="433435226"/><text x="75.6968%" y="735.50"></text></g><g><title>adler2::Adler32::write_slice (433,435,226 samples, 0.06%)</title><rect x="75.4468%" y="709" width="0.0628%" height="15" fill="rgb(250,107,11)" fg:x="520526603485" fg:w="433435226"/><text x="75.6968%" y="719.50"></text></g><g><title>adler2::algo::&lt;impl adler2::Adler32&gt;::compute (433,435,226 samples, 0.06%)</title><rect x="75.4468%" y="693" width="0.0628%" height="15" fill="rgb(242,39,14)" fg:x="520526603485" fg:w="433435226"/><text x="75.6968%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (165,872,420 samples, 0.02%)</title><rect x="75.5161%" y="933" width="0.0240%" height="15" fill="rgb(248,164,37)" fg:x="521005045659" fg:w="165872420"/><text x="75.7661%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (165,872,420 samples, 0.02%)</title><rect x="75.5161%" y="917" width="0.0240%" height="15" fill="rgb(217,60,12)" fg:x="521005045659" fg:w="165872420"/><text x="75.7661%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (161,533,791 samples, 0.02%)</title><rect x="75.5167%" y="901" width="0.0234%" height="15" fill="rgb(240,125,29)" fg:x="521009384288" fg:w="161533791"/><text x="75.7667%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (144,348,071 samples, 0.02%)</title><rect x="75.5192%" y="885" width="0.0209%" height="15" fill="rgb(208,207,28)" fg:x="521026570008" fg:w="144348071"/><text x="75.7692%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (144,348,071 samples, 0.02%)</title><rect x="75.5192%" y="869" width="0.0209%" height="15" fill="rgb(209,159,27)" fg:x="521026570008" fg:w="144348071"/><text x="75.7692%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (135,848,822 samples, 0.02%)</title><rect x="75.5205%" y="853" width="0.0197%" height="15" fill="rgb(251,176,53)" fg:x="521035069257" fg:w="135848822"/><text x="75.7705%" y="863.50"></text></g><g><title>cargo_tarpaulin::process_handling::collect_coverage (358,280,137,812 samples, 51.93%)</title><rect x="23.6123%" y="1061" width="51.9303%" height="15" fill="rgb(211,85,7)" fg:x="162907501342" fg:w="358280137812"/><text x="23.8623%" y="1071.50">cargo_tarpaulin::process_handling::collect_coverage</text></g><g><title>cargo_tarpaulin::statemachine::TestState::step (358,280,137,812 samples, 51.93%)</title><rect x="23.6123%" y="1045" width="51.9303%" height="15" fill="rgb(216,64,54)" fg:x="162907501342" fg:w="358280137812"/><text x="23.8623%" y="1055.50">cargo_tarpaulin::statemachine::TestState::step</text></g><g><title>&lt;alloc::boxed::Box&lt;dyn cargo_tarpaulin::statemachine::StateData&gt; as cargo_tarpaulin::statemachine::StateData&gt;::wait (358,280,137,812 samples, 51.93%)</title><rect x="23.6123%" y="1029" width="51.9303%" height="15" fill="rgb(217,54,24)" fg:x="162907501342" fg:w="358280137812"/><text x="23.8623%" y="1039.50">&lt;alloc::boxed::Box&lt;dyn cargo_tarpaulin::statemachine::StateData&gt; as cargo_tarpaulin::s..</text></g><g><title>&lt;cargo_tarpaulin::statemachine::instrumented::LlvmInstrumentedData as cargo_tarpaulin::statemachine::StateData&gt;::wait (358,280,137,812 samples, 51.93%)</title><rect x="23.6123%" y="1013" width="51.9303%" height="15" fill="rgb(208,206,53)" fg:x="162907501342" fg:w="358280137812"/><text x="23.8623%" y="1023.50">&lt;cargo_tarpaulin::statemachine::instrumented::LlvmInstrumentedData as cargo_tarpaulin:..</text></g><g><title>llvm_profparser::merge_profiles (42,509,880,209 samples, 6.16%)</title><rect x="69.3811%" y="997" width="6.1615%" height="15" fill="rgb(251,74,39)" fg:x="478677758945" fg:w="42509880209"/><text x="69.6311%" y="1007.50">llvm_pro..</text></g><g><title>llvm_profparser::instrumentation_profile::parse (42,509,880,209 samples, 6.16%)</title><rect x="69.3811%" y="981" width="6.1615%" height="15" fill="rgb(226,47,5)" fg:x="478677758945" fg:w="42509880209"/><text x="69.6311%" y="991.50">llvm_pro..</text></g><g><title>llvm_profparser::instrumentation_profile::parse_bytes (42,509,880,209 samples, 6.16%)</title><rect x="69.3811%" y="965" width="6.1615%" height="15" fill="rgb(234,111,33)" fg:x="478677758945" fg:w="42509880209"/><text x="69.6311%" y="975.50">llvm_pro..</text></g><g><title>&lt;llvm_profparser::instrumentation_profile::raw_profile::RawInstrProf&lt;T&gt; as llvm_profparser::instrumentation_profile::InstrProfReader&gt;::parse_bytes (42,509,880,209 samples, 6.16%)</title><rect x="69.3811%" y="949" width="6.1615%" height="15" fill="rgb(251,14,10)" fg:x="478677758945" fg:w="42509880209"/><text x="69.6311%" y="959.50">&lt;llvm_pr..</text></g><g><title>cargo_tarpaulin::process_handling::get_test_coverage (358,297,313,952 samples, 51.93%)</title><rect x="23.6123%" y="1077" width="51.9327%" height="15" fill="rgb(232,43,0)" fg:x="162907501342" fg:w="358297313952"/><text x="23.8623%" y="1087.50">cargo_tarpaulin::process_handling::get_test_coverage</text></g><g><title>&lt;T as syn::spanned::Spanned&gt;::span (80,855,764 samples, 0.01%)</title><rect x="75.5505%" y="1013" width="0.0117%" height="15" fill="rgb(222,68,43)" fg:x="521242558303" fg:w="80855764"/><text x="75.8005%" y="1023.50"></text></g><g><title>&lt;T as quote::spanned::Spanned&gt;::__span (80,855,764 samples, 0.01%)</title><rect x="75.5505%" y="997" width="0.0117%" height="15" fill="rgb(217,24,23)" fg:x="521242558303" fg:w="80855764"/><text x="75.8005%" y="1007.50"></text></g><g><title>cargo_tarpaulin::source_analysis::expressions::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::visit_methodcall (95,770,416 samples, 0.01%)</title><rect x="75.5854%" y="981" width="0.0139%" height="15" fill="rgb(229,209,14)" fg:x="521483219889" fg:w="95770416"/><text x="75.8354%" y="991.50"></text></g><g><title>cargo_tarpaulin::source_analysis::expressions::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::process_expr (156,283,232 samples, 0.02%)</title><rect x="75.5768%" y="997" width="0.0227%" height="15" fill="rgb(250,149,48)" fg:x="521423804210" fg:w="156283232"/><text x="75.8268%" y="1007.50"></text></g><g><title>cargo_tarpaulin::source_analysis::expressions::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::visit_methodcall (78,678,446 samples, 0.01%)</title><rect x="75.6049%" y="965" width="0.0114%" height="15" fill="rgb(210,120,37)" fg:x="521617609599" fg:w="78678446"/><text x="75.8549%" y="975.50"></text></g><g><title>cargo_tarpaulin::source_analysis::expressions::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::process_expr (103,394,840 samples, 0.01%)</title><rect x="75.6018%" y="981" width="0.0150%" height="15" fill="rgb(210,21,8)" fg:x="521596084806" fg:w="103394840"/><text x="75.8518%" y="991.50"></text></g><g><title>cargo_tarpaulin::source_analysis::statements::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::process_local (171,703,418 samples, 0.02%)</title><rect x="75.5995%" y="997" width="0.0249%" height="15" fill="rgb(243,145,7)" fg:x="521580087442" fg:w="171703418"/><text x="75.8495%" y="1007.50"></text></g><g><title>cargo_tarpaulin::source_analysis::statements::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::process_statements (335,234,332 samples, 0.05%)</title><rect x="75.5768%" y="1013" width="0.0486%" height="15" fill="rgb(238,178,32)" fg:x="521423804210" fg:w="335234332"/><text x="75.8268%" y="1023.50"></text></g><g><title>cargo_tarpaulin::source_analysis::items::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::visit_fn (551,467,129 samples, 0.08%)</title><rect x="75.5504%" y="1029" width="0.0799%" height="15" fill="rgb(222,4,10)" fg:x="521241571253" fg:w="551467129"/><text x="75.8004%" y="1039.50"></text></g><g><title>quote::spanned::join_spans (71,193,296 samples, 0.01%)</title><rect x="75.6331%" y="965" width="0.0103%" height="15" fill="rgb(239,7,37)" fg:x="521811886354" fg:w="71193296"/><text x="75.8831%" y="975.50"></text></g><g><title>&lt;T as syn::spanned::Spanned&gt;::span (107,439,920 samples, 0.02%)</title><rect x="75.6331%" y="997" width="0.0156%" height="15" fill="rgb(215,31,37)" fg:x="521811886354" fg:w="107439920"/><text x="75.8831%" y="1007.50"></text></g><g><title>&lt;T as quote::spanned::Spanned&gt;::__span (107,439,920 samples, 0.02%)</title><rect x="75.6331%" y="981" width="0.0156%" height="15" fill="rgb(224,83,33)" fg:x="521811886354" fg:w="107439920"/><text x="75.8831%" y="991.50"></text></g><g><title>cargo_tarpaulin::source_analysis::macros::get_line_range (112,999,941 samples, 0.02%)</title><rect x="75.6899%" y="949" width="0.0164%" height="15" fill="rgb(239,55,3)" fg:x="522203887070" fg:w="112999941"/><text x="75.9399%" y="959.50"></text></g><g><title>cargo_tarpaulin::source_analysis::expressions::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::visit_methodcall (194,683,495 samples, 0.03%)</title><rect x="75.6791%" y="965" width="0.0282%" height="15" fill="rgb(247,92,11)" fg:x="522129708360" fg:w="194683495"/><text x="75.9291%" y="975.50"></text></g><g><title>cargo_tarpaulin::source_analysis::expressions::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::process_expr (325,380,038 samples, 0.05%)</title><rect x="75.6616%" y="981" width="0.0472%" height="15" fill="rgb(239,200,7)" fg:x="522008739460" fg:w="325380038"/><text x="75.9116%" y="991.50"></text></g><g><title>cargo_tarpaulin::source_analysis::expressions::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::process_expr (73,233,414 samples, 0.01%)</title><rect x="75.7123%" y="965" width="0.0106%" height="15" fill="rgb(227,115,8)" fg:x="522358498195" fg:w="73233414"/><text x="75.9623%" y="975.50"></text></g><g><title>cargo_tarpaulin::source_analysis::statements::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::process_local (127,002,041 samples, 0.02%)</title><rect x="75.7088%" y="981" width="0.0184%" height="15" fill="rgb(215,189,27)" fg:x="522334119498" fg:w="127002041"/><text x="75.9588%" y="991.50"></text></g><g><title>cargo_tarpaulin::source_analysis::statements::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::process_statements (453,416,665 samples, 0.07%)</title><rect x="75.6616%" y="997" width="0.0657%" height="15" fill="rgb(251,216,39)" fg:x="522008739460" fg:w="453416665"/><text x="75.9116%" y="1007.50"></text></g><g><title>proc_macro2::Span::start (69,194,133 samples, 0.01%)</title><rect x="75.7310%" y="997" width="0.0100%" height="15" fill="rgb(207,29,47)" fg:x="522487694322" fg:w="69194133"/><text x="75.9810%" y="1007.50"></text></g><g><title>proc_macro2::imp::Span::start (69,194,133 samples, 0.01%)</title><rect x="75.7310%" y="981" width="0.0100%" height="15" fill="rgb(210,71,34)" fg:x="522487694322" fg:w="69194133"/><text x="75.9810%" y="991.50"></text></g><g><title>proc_macro2::fallback::Span::start (69,194,133 samples, 0.01%)</title><rect x="75.7310%" y="965" width="0.0100%" height="15" fill="rgb(253,217,51)" fg:x="522487694322" fg:w="69194133"/><text x="75.9810%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (69,194,133 samples, 0.01%)</title><rect x="75.7310%" y="949" width="0.0100%" height="15" fill="rgb(222,117,46)" fg:x="522487694322" fg:w="69194133"/><text x="75.9810%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (69,194,133 samples, 0.01%)</title><rect x="75.7310%" y="933" width="0.0100%" height="15" fill="rgb(226,132,6)" fg:x="522487694322" fg:w="69194133"/><text x="75.9810%" y="943.50"></text></g><g><title>proc_macro2::fallback::Span::start::_{{closure}} (69,194,133 samples, 0.01%)</title><rect x="75.7310%" y="917" width="0.0100%" height="15" fill="rgb(254,145,51)" fg:x="522487694322" fg:w="69194133"/><text x="75.9810%" y="927.50"></text></g><g><title>proc_macro2::fallback::SourceMap::fileinfo (69,194,133 samples, 0.01%)</title><rect x="75.7310%" y="901" width="0.0100%" height="15" fill="rgb(231,199,27)" fg:x="522487694322" fg:w="69194133"/><text x="75.9810%" y="911.50"></text></g><g><title>cargo_tarpaulin::source_analysis::items::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::visit_fn (755,577,626 samples, 0.11%)</title><rect x="75.6327%" y="1013" width="0.1095%" height="15" fill="rgb(245,158,14)" fg:x="521809635018" fg:w="755577626"/><text x="75.8827%" y="1023.50"></text></g><g><title>cargo_tarpaulin::source_analysis::items::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::visit_impl (797,510,047 samples, 0.12%)</title><rect x="75.6303%" y="1029" width="0.1156%" height="15" fill="rgb(240,113,14)" fg:x="521793038382" fg:w="797510047"/><text x="75.8803%" y="1039.50"></text></g><g><title>cargo_tarpaulin::source_analysis::items::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::process_items (1,471,020,778 samples, 0.21%)</title><rect x="75.5487%" y="1045" width="0.2132%" height="15" fill="rgb(210,20,13)" fg:x="521229898322" fg:w="1471020778"/><text x="75.7987%" y="1055.50"></text></g><g><title>&lt;F as syn::parse::Parser&gt;::parse2 (90,242,170 samples, 0.01%)</title><rect x="75.7619%" y="997" width="0.0131%" height="15" fill="rgb(241,144,13)" fg:x="522700919100" fg:w="90242170"/><text x="76.0119%" y="1007.50"></text></g><g><title>syn::buffer::TokenBuffer::new2 (78,348,614 samples, 0.01%)</title><rect x="75.7636%" y="981" width="0.0114%" height="15" fill="rgb(235,43,34)" fg:x="522712812656" fg:w="78348614"/><text x="76.0136%" y="991.50"></text></g><g><title>_ZN3syn6buffer11TokenBuffer13recursive_new17h3c293c345f34c797E.llvm.2958551065550442969 (78,348,614 samples, 0.01%)</title><rect x="75.7636%" y="965" width="0.0114%" height="15" fill="rgb(208,36,20)" fg:x="522712812656" fg:w="78348614"/><text x="76.0136%" y="975.50"></text></g><g><title>_ZN3syn6buffer11TokenBuffer13recursive_new17h3c293c345f34c797E.llvm.2958551065550442969 (78,348,614 samples, 0.01%)</title><rect x="75.7636%" y="949" width="0.0114%" height="15" fill="rgb(239,204,10)" fg:x="522712812656" fg:w="78348614"/><text x="76.0136%" y="959.50"></text></g><g><title>_ZN3syn6buffer11TokenBuffer13recursive_new17h3c293c345f34c797E.llvm.2958551065550442969 (78,348,614 samples, 0.01%)</title><rect x="75.7636%" y="933" width="0.0114%" height="15" fill="rgb(217,84,43)" fg:x="522712812656" fg:w="78348614"/><text x="76.0136%" y="943.50"></text></g><g><title>cargo_tarpaulin::collect_tracemap (359,899,775,249 samples, 52.17%)</title><rect x="23.6103%" y="1125" width="52.1650%" height="15" fill="rgb(241,170,50)" fg:x="162893371183" fg:w="359899775249"/><text x="23.8603%" y="1135.50">cargo_tarpaulin::collect_tracemap</text></g><g><title>cargo_tarpaulin::trace (359,899,775,249 samples, 52.17%)</title><rect x="23.6103%" y="1109" width="52.1650%" height="15" fill="rgb(226,205,29)" fg:x="162893371183" fg:w="359899775249"/><text x="23.8603%" y="1119.50">cargo_tarpaulin::trace</text></g><g><title>cargo_tarpaulin::launch_tarpaulin (359,899,775,249 samples, 52.17%)</title><rect x="23.6103%" y="1093" width="52.1650%" height="15" fill="rgb(233,113,1)" fg:x="162893371183" fg:w="359899775249"/><text x="23.8603%" y="1103.50">cargo_tarpaulin::launch_tarpaulin</text></g><g><title>cargo_tarpaulin::source_analysis::SourceAnalysis::get_analysis (1,588,331,138 samples, 0.23%)</title><rect x="75.5451%" y="1077" width="0.2302%" height="15" fill="rgb(253,98,13)" fg:x="521204815294" fg:w="1588331138"/><text x="75.7951%" y="1087.50"></text></g><g><title>cargo_tarpaulin::source_analysis::SourceAnalysis::analyse_package (1,565,526,863 samples, 0.23%)</title><rect x="75.5484%" y="1061" width="0.2269%" height="15" fill="rgb(211,115,12)" fg:x="521227619569" fg:w="1565526863"/><text x="75.7984%" y="1071.50"></text></g><g><title>syn::parse_file (92,227,332 samples, 0.01%)</title><rect x="75.7619%" y="1045" width="0.0134%" height="15" fill="rgb(208,12,16)" fg:x="522700919100" fg:w="92227332"/><text x="76.0119%" y="1055.50"></text></g><g><title>syn::parse_str (92,227,332 samples, 0.01%)</title><rect x="75.7619%" y="1029" width="0.0134%" height="15" fill="rgb(237,193,54)" fg:x="522700919100" fg:w="92227332"/><text x="76.0119%" y="1039.50"></text></g><g><title>syn::parse::Parser::parse_str (92,227,332 samples, 0.01%)</title><rect x="75.7619%" y="1013" width="0.0134%" height="15" fill="rgb(243,22,42)" fg:x="522700919100" fg:w="92227332"/><text x="76.0119%" y="1023.50"></text></g><g><title>cargo_tarpaulin::main (359,900,833,241 samples, 52.17%)</title><rect x="23.6103%" y="1157" width="52.1652%" height="15" fill="rgb(233,151,36)" fg:x="162893371183" fg:w="359900833241"/><text x="23.8603%" y="1167.50">cargo_tarpaulin::main</text></g><g><title>cargo_tarpaulin::run (359,900,833,241 samples, 52.17%)</title><rect x="23.6103%" y="1141" width="52.1652%" height="15" fill="rgb(237,57,45)" fg:x="162893371183" fg:w="359900833241"/><text x="23.8603%" y="1151.50">cargo_tarpaulin::run</text></g><g><title>miniz_oxide::inflate::core::decompress_fast (70,046,482 samples, 0.01%)</title><rect x="75.7894%" y="693" width="0.0102%" height="15" fill="rgb(221,88,17)" fg:x="522890817159" fg:w="70046482"/><text x="76.0394%" y="703.50"></text></g><g><title>miniz_oxide::inflate::core::init_tree (818,596,346 samples, 0.12%)</title><rect x="75.7996%" y="693" width="0.1186%" height="15" fill="rgb(230,79,15)" fg:x="522960863641" fg:w="818596346"/><text x="76.0496%" y="703.50"></text></g><g><title>std::io::Read::read_buf (1,011,510,600 samples, 0.15%)</title><rect x="75.7769%" y="885" width="0.1466%" height="15" fill="rgb(213,57,13)" fg:x="522804494022" fg:w="1011510600"/><text x="76.0269%" y="895.50"></text></g><g><title>std::io::default_read_buf (1,011,510,600 samples, 0.15%)</title><rect x="75.7769%" y="869" width="0.1466%" height="15" fill="rgb(222,116,39)" fg:x="522804494022" fg:w="1011510600"/><text x="76.0269%" y="879.50"></text></g><g><title>std::io::Read::read_buf::_{{closure}} (1,011,510,600 samples, 0.15%)</title><rect x="75.7769%" y="853" width="0.1466%" height="15" fill="rgb(245,107,2)" fg:x="522804494022" fg:w="1011510600"/><text x="76.0269%" y="863.50"></text></g><g><title>&lt;flate2::zlib::read::ZlibDecoder&lt;R&gt; as std::io::Read&gt;::read (1,011,510,600 samples, 0.15%)</title><rect x="75.7769%" y="837" width="0.1466%" height="15" fill="rgb(238,1,10)" fg:x="522804494022" fg:w="1011510600"/><text x="76.0269%" y="847.50"></text></g><g><title>&lt;flate2::zlib::bufread::ZlibDecoder&lt;R&gt; as std::io::Read&gt;::read (1,011,510,600 samples, 0.15%)</title><rect x="75.7769%" y="821" width="0.1466%" height="15" fill="rgb(249,4,48)" fg:x="522804494022" fg:w="1011510600"/><text x="76.0269%" y="831.50"></text></g><g><title>flate2::zio::read (1,011,510,600 samples, 0.15%)</title><rect x="75.7769%" y="805" width="0.1466%" height="15" fill="rgb(223,151,18)" fg:x="522804494022" fg:w="1011510600"/><text x="76.0269%" y="815.50"></text></g><g><title>flate2::mem::Decompress::decompress (1,011,510,600 samples, 0.15%)</title><rect x="75.7769%" y="789" width="0.1466%" height="15" fill="rgb(227,65,43)" fg:x="522804494022" fg:w="1011510600"/><text x="76.0269%" y="799.50"></text></g><g><title>flate2::mem::Decompress::decompress (1,011,510,600 samples, 0.15%)</title><rect x="75.7769%" y="773" width="0.1466%" height="15" fill="rgb(218,40,45)" fg:x="522804494022" fg:w="1011510600"/><text x="76.0269%" y="783.50"></text></g><g><title>&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (1,011,510,600 samples, 0.15%)</title><rect x="75.7769%" y="757" width="0.1466%" height="15" fill="rgb(252,121,31)" fg:x="522804494022" fg:w="1011510600"/><text x="76.0269%" y="767.50"></text></g><g><title>miniz_oxide::inflate::stream::inflate (1,011,510,600 samples, 0.15%)</title><rect x="75.7769%" y="741" width="0.1466%" height="15" fill="rgb(219,158,43)" fg:x="522804494022" fg:w="1011510600"/><text x="76.0269%" y="751.50"></text></g><g><title>miniz_oxide::inflate::stream::inflate_loop (1,011,510,600 samples, 0.15%)</title><rect x="75.7769%" y="725" width="0.1466%" height="15" fill="rgb(231,162,42)" fg:x="522804494022" fg:w="1011510600"/><text x="76.0269%" y="735.50"></text></g><g><title>miniz_oxide::inflate::core::decompress (1,011,510,600 samples, 0.15%)</title><rect x="75.7769%" y="709" width="0.1466%" height="15" fill="rgb(217,179,25)" fg:x="522804494022" fg:w="1011510600"/><text x="76.0269%" y="719.50"></text></g><g><title>cargo_tarpaulin::process_handling::get_test_coverage (1,012,601,427 samples, 0.15%)</title><rect x="75.7769%" y="1093" width="0.1468%" height="15" fill="rgb(206,212,31)" fg:x="522804494022" fg:w="1012601427"/><text x="76.0269%" y="1103.50"></text></g><g><title>cargo_tarpaulin::process_handling::collect_coverage (1,012,601,427 samples, 0.15%)</title><rect x="75.7769%" y="1077" width="0.1468%" height="15" fill="rgb(235,144,12)" fg:x="522804494022" fg:w="1012601427"/><text x="76.0269%" y="1087.50"></text></g><g><title>cargo_tarpaulin::statemachine::TestState::step (1,012,601,427 samples, 0.15%)</title><rect x="75.7769%" y="1061" width="0.1468%" height="15" fill="rgb(213,51,10)" fg:x="522804494022" fg:w="1012601427"/><text x="76.0269%" y="1071.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn cargo_tarpaulin::statemachine::StateData&gt; as cargo_tarpaulin::statemachine::StateData&gt;::wait (1,012,601,427 samples, 0.15%)</title><rect x="75.7769%" y="1045" width="0.1468%" height="15" fill="rgb(231,145,14)" fg:x="522804494022" fg:w="1012601427"/><text x="76.0269%" y="1055.50"></text></g><g><title>&lt;cargo_tarpaulin::statemachine::instrumented::LlvmInstrumentedData as cargo_tarpaulin::statemachine::StateData&gt;::wait (1,012,601,427 samples, 0.15%)</title><rect x="75.7769%" y="1029" width="0.1468%" height="15" fill="rgb(235,15,28)" fg:x="522804494022" fg:w="1012601427"/><text x="76.0269%" y="1039.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::CoverageMapping::new (1,012,601,427 samples, 0.15%)</title><rect x="75.7769%" y="1013" width="0.1468%" height="15" fill="rgb(237,206,10)" fg:x="522804494022" fg:w="1012601427"/><text x="76.0269%" y="1023.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::read_object_file (1,012,601,427 samples, 0.15%)</title><rect x="75.7769%" y="997" width="0.1468%" height="15" fill="rgb(236,227,27)" fg:x="522804494022" fg:w="1012601427"/><text x="76.0269%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,012,601,427 samples, 0.15%)</title><rect x="75.7769%" y="981" width="0.1468%" height="15" fill="rgb(246,83,35)" fg:x="522804494022" fg:w="1012601427"/><text x="76.0269%" y="991.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::read_object_file::_{{closure}} (1,012,601,427 samples, 0.15%)</title><rect x="75.7769%" y="965" width="0.1468%" height="15" fill="rgb(220,136,24)" fg:x="522804494022" fg:w="1012601427"/><text x="76.0269%" y="975.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::parse_coverage_mapping (1,012,601,427 samples, 0.15%)</title><rect x="75.7769%" y="949" width="0.1468%" height="15" fill="rgb(217,3,25)" fg:x="522804494022" fg:w="1012601427"/><text x="76.0269%" y="959.50"></text></g><g><title>llvm_profparser::util::parse_path_list (1,012,601,427 samples, 0.15%)</title><rect x="75.7769%" y="933" width="0.1468%" height="15" fill="rgb(239,24,14)" fg:x="522804494022" fg:w="1012601427"/><text x="76.0269%" y="943.50"></text></g><g><title>std::io::Read::read_to_end (1,012,601,427 samples, 0.15%)</title><rect x="75.7769%" y="917" width="0.1468%" height="15" fill="rgb(244,16,53)" fg:x="522804494022" fg:w="1012601427"/><text x="76.0269%" y="927.50"></text></g><g><title>std::io::default_read_to_end (1,012,601,427 samples, 0.15%)</title><rect x="75.7769%" y="901" width="0.1468%" height="15" fill="rgb(208,175,44)" fg:x="522804494022" fg:w="1012601427"/><text x="76.0269%" y="911.50"></text></g><g><title>cargo_tarpaulin::source_analysis::expressions::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::process_expr (80,481,034 samples, 0.01%)</title><rect x="75.9259%" y="1013" width="0.0117%" height="15" fill="rgb(252,18,48)" fg:x="523832065193" fg:w="80481034"/><text x="76.1759%" y="1023.50"></text></g><g><title>cargo_tarpaulin::source_analysis::items::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::visit_fn (174,067,879 samples, 0.03%)</title><rect x="75.9237%" y="1045" width="0.0252%" height="15" fill="rgb(234,199,32)" fg:x="523817095449" fg:w="174067879"/><text x="76.1737%" y="1055.50"></text></g><g><title>cargo_tarpaulin::source_analysis::statements::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::process_statements (159,098,135 samples, 0.02%)</title><rect x="75.9259%" y="1029" width="0.0231%" height="15" fill="rgb(225,77,54)" fg:x="523832065193" fg:w="159098135"/><text x="76.1759%" y="1039.50"></text></g><g><title>cargo_tarpaulin::source_analysis::expressions::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::process_expr (118,389,315 samples, 0.02%)</title><rect x="75.9507%" y="997" width="0.0172%" height="15" fill="rgb(225,42,25)" fg:x="524003250060" fg:w="118389315"/><text x="76.2007%" y="1007.50"></text></g><g><title>cargo_tarpaulin::source_analysis::items::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::visit_fn (188,830,608 samples, 0.03%)</title><rect x="75.9489%" y="1029" width="0.0274%" height="15" fill="rgb(242,227,46)" fg:x="523991163328" fg:w="188830608"/><text x="76.1989%" y="1039.50"></text></g><g><title>cargo_tarpaulin::source_analysis::statements::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::process_statements (176,743,876 samples, 0.03%)</title><rect x="75.9507%" y="1013" width="0.0256%" height="15" fill="rgb(246,197,35)" fg:x="524003250060" fg:w="176743876"/><text x="76.2007%" y="1023.50"></text></g><g><title>cargo_tarpaulin::source_analysis::items::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::visit_impl (193,723,407 samples, 0.03%)</title><rect x="75.9489%" y="1045" width="0.0281%" height="15" fill="rgb(215,159,26)" fg:x="523991163328" fg:w="193723407"/><text x="76.1989%" y="1055.50"></text></g><g><title>cargo_tarpaulin::source_analysis::items::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::process_items (398,429,110 samples, 0.06%)</title><rect x="75.9237%" y="1061" width="0.0577%" height="15" fill="rgb(212,194,50)" fg:x="523817095449" fg:w="398429110"/><text x="76.1737%" y="1071.50"></text></g><g><title>cargo_tarpaulin::collect_tracemap (1,415,916,463 samples, 0.21%)</title><rect x="75.7765%" y="1141" width="0.2052%" height="15" fill="rgb(246,132,1)" fg:x="522801551282" fg:w="1415916463"/><text x="76.0265%" y="1151.50"></text></g><g><title>cargo_tarpaulin::trace (1,414,757,046 samples, 0.21%)</title><rect x="75.7767%" y="1125" width="0.2051%" height="15" fill="rgb(217,71,7)" fg:x="522802710699" fg:w="1414757046"/><text x="76.0267%" y="1135.50"></text></g><g><title>cargo_tarpaulin::launch_tarpaulin (1,414,757,046 samples, 0.21%)</title><rect x="75.7767%" y="1109" width="0.2051%" height="15" fill="rgb(252,59,32)" fg:x="522802710699" fg:w="1414757046"/><text x="76.0267%" y="1119.50"></text></g><g><title>cargo_tarpaulin::source_analysis::SourceAnalysis::get_analysis (400,372,296 samples, 0.06%)</title><rect x="75.9237%" y="1093" width="0.0580%" height="15" fill="rgb(253,204,25)" fg:x="523817095449" fg:w="400372296"/><text x="76.1737%" y="1103.50"></text></g><g><title>cargo_tarpaulin::source_analysis::SourceAnalysis::analyse_package (400,372,296 samples, 0.06%)</title><rect x="75.9237%" y="1077" width="0.0580%" height="15" fill="rgb(232,21,16)" fg:x="523817095449" fg:w="400372296"/><text x="76.1737%" y="1087.50"></text></g><g><title>cargo_tarpaulin::run (1,418,179,229 samples, 0.21%)</title><rect x="75.7765%" y="1157" width="0.2056%" height="15" fill="rgb(248,90,29)" fg:x="522801551282" fg:w="1418179229"/><text x="76.0265%" y="1167.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (70,933,692 samples, 0.01%)</title><rect x="76.0038%" y="1029" width="0.0103%" height="15" fill="rgb(249,223,7)" fg:x="524369749926" fg:w="70933692"/><text x="76.2538%" y="1039.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (70,933,692 samples, 0.01%)</title><rect x="76.0038%" y="1013" width="0.0103%" height="15" fill="rgb(231,119,42)" fg:x="524369749926" fg:w="70933692"/><text x="76.2538%" y="1023.50"></text></g><g><title>cargo_tarpaulin::source_analysis::LineAnalysis::should_ignore (345,121,224 samples, 0.05%)</title><rect x="75.9833%" y="1157" width="0.0500%" height="15" fill="rgb(215,41,35)" fg:x="524227985311" fg:w="345121224"/><text x="76.2333%" y="1167.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (254,946,343 samples, 0.04%)</title><rect x="75.9963%" y="1141" width="0.0370%" height="15" fill="rgb(220,44,45)" fg:x="524318160192" fg:w="254946343"/><text x="76.2463%" y="1151.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (254,946,343 samples, 0.04%)</title><rect x="75.9963%" y="1125" width="0.0370%" height="15" fill="rgb(253,197,36)" fg:x="524318160192" fg:w="254946343"/><text x="76.2463%" y="1135.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (254,946,343 samples, 0.04%)</title><rect x="75.9963%" y="1109" width="0.0370%" height="15" fill="rgb(245,225,54)" fg:x="524318160192" fg:w="254946343"/><text x="76.2463%" y="1119.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (254,946,343 samples, 0.04%)</title><rect x="75.9963%" y="1093" width="0.0370%" height="15" fill="rgb(239,94,37)" fg:x="524318160192" fg:w="254946343"/><text x="76.2463%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (222,419,339 samples, 0.03%)</title><rect x="76.0010%" y="1077" width="0.0322%" height="15" fill="rgb(242,217,10)" fg:x="524350687196" fg:w="222419339"/><text x="76.2510%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (222,419,339 samples, 0.03%)</title><rect x="76.0010%" y="1061" width="0.0322%" height="15" fill="rgb(250,193,7)" fg:x="524350687196" fg:w="222419339"/><text x="76.2510%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (222,419,339 samples, 0.03%)</title><rect x="76.0010%" y="1045" width="0.0322%" height="15" fill="rgb(230,104,19)" fg:x="524350687196" fg:w="222419339"/><text x="76.2510%" y="1055.50"></text></g><g><title>cargo_tarpaulin::source_analysis::expressions::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::process_expr (80,721,979 samples, 0.01%)</title><rect x="76.0400%" y="1077" width="0.0117%" height="15" fill="rgb(230,181,4)" fg:x="524619469824" fg:w="80721979"/><text x="76.2900%" y="1087.50"></text></g><g><title>cargo_tarpaulin::source_analysis::items::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::visit_fn (132,041,941 samples, 0.02%)</title><rect x="76.0387%" y="1109" width="0.0191%" height="15" fill="rgb(216,219,49)" fg:x="524610141886" fg:w="132041941"/><text x="76.2887%" y="1119.50"></text></g><g><title>cargo_tarpaulin::source_analysis::statements::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::process_statements (122,714,003 samples, 0.02%)</title><rect x="76.0400%" y="1093" width="0.0178%" height="15" fill="rgb(254,144,0)" fg:x="524619469824" fg:w="122714003"/><text x="76.2900%" y="1103.50"></text></g><g><title>cargo_tarpaulin::source_analysis::expressions::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::process_expr (83,875,340 samples, 0.01%)</title><rect x="76.0584%" y="1061" width="0.0122%" height="15" fill="rgb(205,209,38)" fg:x="524746182990" fg:w="83875340"/><text x="76.3084%" y="1071.50"></text></g><g><title>cargo_tarpaulin::source_analysis::items::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::visit_fn (106,288,566 samples, 0.02%)</title><rect x="76.0578%" y="1093" width="0.0154%" height="15" fill="rgb(240,21,42)" fg:x="524742183827" fg:w="106288566"/><text x="76.3078%" y="1103.50"></text></g><g><title>cargo_tarpaulin::source_analysis::statements::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::process_statements (102,289,403 samples, 0.01%)</title><rect x="76.0584%" y="1077" width="0.0148%" height="15" fill="rgb(241,132,3)" fg:x="524746182990" fg:w="102289403"/><text x="76.3084%" y="1087.50"></text></g><g><title>cargo_tarpaulin::source_analysis::items::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::visit_impl (115,574,111 samples, 0.02%)</title><rect x="76.0578%" y="1109" width="0.0168%" height="15" fill="rgb(225,14,2)" fg:x="524742183827" fg:w="115574111"/><text x="76.3078%" y="1119.50"></text></g><g><title>cargo_tarpaulin::source_analysis::items::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::process_items (261,126,859 samples, 0.04%)</title><rect x="76.0387%" y="1125" width="0.0378%" height="15" fill="rgb(210,141,35)" fg:x="524610141886" fg:w="261126859"/><text x="76.2887%" y="1135.50"></text></g><g><title>cargo_tarpaulin::source_analysis::SourceAnalysis::get_analysis (313,906,319 samples, 0.05%)</title><rect x="76.0333%" y="1157" width="0.0455%" height="15" fill="rgb(251,14,44)" fg:x="524573106535" fg:w="313906319"/><text x="76.2833%" y="1167.50"></text></g><g><title>cargo_tarpaulin::source_analysis::SourceAnalysis::analyse_package (313,906,319 samples, 0.05%)</title><rect x="76.0333%" y="1141" width="0.0455%" height="15" fill="rgb(247,48,18)" fg:x="524573106535" fg:w="313906319"/><text x="76.2833%" y="1151.50"></text></g><g><title>cargo_tarpaulin::source_analysis::expressions::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::process_expr (101,893,769 samples, 0.01%)</title><rect x="76.0955%" y="1045" width="0.0148%" height="15" fill="rgb(225,0,40)" fg:x="525002110397" fg:w="101893769"/><text x="76.3455%" y="1055.50"></text></g><g><title>cargo_tarpaulin::source_analysis::items::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::visit_fn (142,448,752 samples, 0.02%)</title><rect x="76.0946%" y="1077" width="0.0206%" height="15" fill="rgb(221,31,33)" fg:x="524996056276" fg:w="142448752"/><text x="76.3446%" y="1087.50"></text></g><g><title>cargo_tarpaulin::source_analysis::statements::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::process_statements (136,394,631 samples, 0.02%)</title><rect x="76.0955%" y="1061" width="0.0198%" height="15" fill="rgb(237,42,40)" fg:x="525002110397" fg:w="136394631"/><text x="76.3455%" y="1071.50"></text></g><g><title>cargo_tarpaulin::source_analysis::expressions::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::process_expr (113,555,117 samples, 0.02%)</title><rect x="76.1160%" y="1029" width="0.0165%" height="15" fill="rgb(233,51,29)" fg:x="525143723826" fg:w="113555117"/><text x="76.3660%" y="1039.50"></text></g><g><title>cargo_tarpaulin::source_analysis::items::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::visit_fn (151,074,788 samples, 0.02%)</title><rect x="76.1152%" y="1061" width="0.0219%" height="15" fill="rgb(226,58,20)" fg:x="525138505028" fg:w="151074788"/><text x="76.3652%" y="1071.50"></text></g><g><title>cargo_tarpaulin::source_analysis::statements::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::process_statements (145,855,990 samples, 0.02%)</title><rect x="76.1160%" y="1045" width="0.0211%" height="15" fill="rgb(208,98,7)" fg:x="525143723826" fg:w="145855990"/><text x="76.3660%" y="1055.50"></text></g><g><title>cargo_tarpaulin::source_analysis::items::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::visit_impl (153,090,697 samples, 0.02%)</title><rect x="76.1152%" y="1077" width="0.0222%" height="15" fill="rgb(228,143,44)" fg:x="525138505028" fg:w="153090697"/><text x="76.3652%" y="1087.50"></text></g><g><title>cargo_tarpaulin::source_analysis::items::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::process_items (313,478,245 samples, 0.05%)</title><rect x="76.0946%" y="1093" width="0.0454%" height="15" fill="rgb(246,55,38)" fg:x="524996056276" fg:w="313478245"/><text x="76.3446%" y="1103.50"></text></g><g><title>cargo_tarpaulin::trace (321,668,668 samples, 0.05%)</title><rect x="76.0946%" y="1157" width="0.0466%" height="15" fill="rgb(247,87,16)" fg:x="524996056276" fg:w="321668668"/><text x="76.3446%" y="1167.50"></text></g><g><title>cargo_tarpaulin::launch_tarpaulin (321,668,668 samples, 0.05%)</title><rect x="76.0946%" y="1141" width="0.0466%" height="15" fill="rgb(234,129,42)" fg:x="524996056276" fg:w="321668668"/><text x="76.3446%" y="1151.50"></text></g><g><title>cargo_tarpaulin::source_analysis::SourceAnalysis::get_analysis (321,668,668 samples, 0.05%)</title><rect x="76.0946%" y="1125" width="0.0466%" height="15" fill="rgb(220,82,16)" fg:x="524996056276" fg:w="321668668"/><text x="76.3446%" y="1135.50"></text></g><g><title>cargo_tarpaulin::source_analysis::SourceAnalysis::analyse_package (321,668,668 samples, 0.05%)</title><rect x="76.0946%" y="1109" width="0.0466%" height="15" fill="rgb(211,88,4)" fg:x="524996056276" fg:w="321668668"/><text x="76.3446%" y="1119.50"></text></g><g><title>&lt;std::path::Path as core::cmp::Ord&gt;::cmp (538,544,552 samples, 0.08%)</title><rect x="76.1657%" y="1061" width="0.0781%" height="15" fill="rgb(248,151,21)" fg:x="525486764535" fg:w="538544552"/><text x="76.4157%" y="1071.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (694,196,027 samples, 0.10%)</title><rect x="76.1438%" y="1109" width="0.1006%" height="15" fill="rgb(238,163,6)" fg:x="525335502737" fg:w="694196027"/><text x="76.3938%" y="1119.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (680,903,341 samples, 0.10%)</title><rect x="76.1457%" y="1093" width="0.0987%" height="15" fill="rgb(209,183,11)" fg:x="525348795423" fg:w="680903341"/><text x="76.3957%" y="1103.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (680,903,341 samples, 0.10%)</title><rect x="76.1457%" y="1077" width="0.0987%" height="15" fill="rgb(219,37,20)" fg:x="525348795423" fg:w="680903341"/><text x="76.3957%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (696,422,989 samples, 0.10%)</title><rect x="76.1436%" y="1141" width="0.1009%" height="15" fill="rgb(210,158,4)" fg:x="525334369082" fg:w="696422989"/><text x="76.3936%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (696,422,989 samples, 0.10%)</title><rect x="76.1436%" y="1125" width="0.1009%" height="15" fill="rgb(221,167,53)" fg:x="525334369082" fg:w="696422989"/><text x="76.3936%" y="1135.50"></text></g><g><title>&lt;std::path::Path as core::cmp::Ord&gt;::cmp (480,152,699 samples, 0.07%)</title><rect x="76.2678%" y="1077" width="0.0696%" height="15" fill="rgb(237,151,45)" fg:x="526191211208" fg:w="480152699"/><text x="76.5178%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (645,070,484 samples, 0.09%)</title><rect x="76.2446%" y="1141" width="0.0935%" height="15" fill="rgb(231,39,3)" fg:x="526030792071" fg:w="645070484"/><text x="76.4946%" y="1151.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (645,070,484 samples, 0.09%)</title><rect x="76.2446%" y="1125" width="0.0935%" height="15" fill="rgb(212,167,28)" fg:x="526030792071" fg:w="645070484"/><text x="76.4946%" y="1135.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (622,790,052 samples, 0.09%)</title><rect x="76.2478%" y="1109" width="0.0903%" height="15" fill="rgb(232,178,8)" fg:x="526053072503" fg:w="622790052"/><text x="76.4978%" y="1119.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (622,790,052 samples, 0.09%)</title><rect x="76.2478%" y="1093" width="0.0903%" height="15" fill="rgb(225,151,20)" fg:x="526053072503" fg:w="622790052"/><text x="76.4978%" y="1103.50"></text></g><g><title>cargo_tarpaulin::traces::TraceMap::add_trace (1,359,313,375 samples, 0.20%)</title><rect x="76.1425%" y="1157" width="0.1970%" height="15" fill="rgb(238,3,37)" fg:x="525326577158" fg:w="1359313375"/><text x="76.3925%" y="1167.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (149,290,863 samples, 0.02%)</title><rect x="76.3410%" y="1141" width="0.0216%" height="15" fill="rgb(251,147,42)" fg:x="526695887024" fg:w="149290863"/><text x="76.5910%" y="1151.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (105,204,754 samples, 0.02%)</title><rect x="76.3626%" y="1125" width="0.0152%" height="15" fill="rgb(208,173,10)" fg:x="526845177887" fg:w="105204754"/><text x="76.6126%" y="1135.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (101,935,868 samples, 0.01%)</title><rect x="76.3631%" y="1109" width="0.0148%" height="15" fill="rgb(246,225,4)" fg:x="526848446773" fg:w="101935868"/><text x="76.6131%" y="1119.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (101,935,868 samples, 0.01%)</title><rect x="76.3631%" y="1093" width="0.0148%" height="15" fill="rgb(248,102,6)" fg:x="526848446773" fg:w="101935868"/><text x="76.6131%" y="1103.50"></text></g><g><title>cargo_tarpaulin::traces::TraceMap::contains_location (265,596,369 samples, 0.04%)</title><rect x="76.3395%" y="1157" width="0.0385%" height="15" fill="rgb(232,6,21)" fg:x="526685890533" fg:w="265596369"/><text x="76.5895%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (106,309,015 samples, 0.02%)</title><rect x="76.3626%" y="1141" width="0.0154%" height="15" fill="rgb(221,179,22)" fg:x="526845177887" fg:w="106309015"/><text x="76.6126%" y="1151.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1,204,055,291 samples, 0.17%)</title><rect x="76.3816%" y="1157" width="0.1745%" height="15" fill="rgb(252,50,20)" fg:x="526975955723" fg:w="1204055291"/><text x="76.6316%" y="1167.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (84,251,368 samples, 0.01%)</title><rect x="76.5675%" y="1141" width="0.0122%" height="15" fill="rgb(222,56,38)" fg:x="528258730700" fg:w="84251368"/><text x="76.8175%" y="1151.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (84,251,368 samples, 0.01%)</title><rect x="76.5675%" y="1125" width="0.0122%" height="15" fill="rgb(206,193,29)" fg:x="528258730700" fg:w="84251368"/><text x="76.8175%" y="1135.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (84,251,368 samples, 0.01%)</title><rect x="76.5675%" y="1109" width="0.0122%" height="15" fill="rgb(239,192,45)" fg:x="528258730700" fg:w="84251368"/><text x="76.8175%" y="1119.50"></text></g><g><title>core::hash::BuildHasher::hash_one (201,267,216 samples, 0.03%)</title><rect x="76.5589%" y="1157" width="0.0292%" height="15" fill="rgb(254,18,36)" fg:x="528199578273" fg:w="201267216"/><text x="76.8089%" y="1167.50"></text></g><g><title>core::slice::memchr::contains_zero_byte (832,955,768 samples, 0.12%)</title><rect x="76.7581%" y="1125" width="0.1207%" height="15" fill="rgb(221,127,11)" fg:x="529573969703" fg:w="832955768"/><text x="77.0081%" y="1135.50"></text></g><g><title>core::slice::memchr::memchr_aligned (2,418,808,032 samples, 0.35%)</title><rect x="76.5955%" y="1157" width="0.3506%" height="15" fill="rgb(234,146,35)" fg:x="528451660495" fg:w="2418808032"/><text x="76.8455%" y="1167.50"></text></g><g><title>core::slice::memchr::memchr_aligned::runtime (2,304,554,254 samples, 0.33%)</title><rect x="76.6120%" y="1141" width="0.3340%" height="15" fill="rgb(254,201,37)" fg:x="528565914273" fg:w="2304554254"/><text x="76.8620%" y="1151.50"></text></g><g><title>core::slice::memchr::memchr_naive (463,543,056 samples, 0.07%)</title><rect x="76.8789%" y="1125" width="0.0672%" height="15" fill="rgb(211,202,23)" fg:x="530406925471" fg:w="463543056"/><text x="77.1289%" y="1135.50"></text></g><g><title>core::slice::sort::unstable::ipnsort (442,508,387 samples, 0.06%)</title><rect x="76.9489%" y="1157" width="0.0641%" height="15" fill="rgb(237,91,2)" fg:x="530890515518" fg:w="442508387"/><text x="77.1989%" y="1167.50"></text></g><g><title>core::slice::sort::shared::find_existing_run (437,001,660 samples, 0.06%)</title><rect x="76.9497%" y="1141" width="0.0633%" height="15" fill="rgb(226,228,36)" fg:x="530896022245" fg:w="437001660"/><text x="77.1997%" y="1151.50"></text></g><g><title>core::ops::function::FnMut::call_mut (87,005,208 samples, 0.01%)</title><rect x="77.0005%" y="1125" width="0.0126%" height="15" fill="rgb(213,63,50)" fg:x="531246018697" fg:w="87005208"/><text x="77.2505%" y="1135.50"></text></g><g><title>core::cmp::PartialOrd::lt (87,005,208 samples, 0.01%)</title><rect x="77.0005%" y="1109" width="0.0126%" height="15" fill="rgb(235,194,19)" fg:x="531246018697" fg:w="87005208"/><text x="77.2505%" y="1119.50"></text></g><g><title>&lt;cargo_tarpaulin::traces::Trace as core::cmp::PartialOrd&gt;::partial_cmp (87,005,208 samples, 0.01%)</title><rect x="77.0005%" y="1093" width="0.0126%" height="15" fill="rgb(207,204,18)" fg:x="531246018697" fg:w="87005208"/><text x="77.2505%" y="1103.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u64&gt;::partial_cmp (87,005,208 samples, 0.01%)</title><rect x="77.0005%" y="1077" width="0.0126%" height="15" fill="rgb(248,8,7)" fg:x="531246018697" fg:w="87005208"/><text x="77.2505%" y="1087.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (88,159,894 samples, 0.01%)</title><rect x="77.0131%" y="1157" width="0.0128%" height="15" fill="rgb(223,145,47)" fg:x="531333023905" fg:w="88159894"/><text x="77.2631%" y="1167.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (88,750,428 samples, 0.01%)</title><rect x="77.0328%" y="1157" width="0.0129%" height="15" fill="rgb(228,84,11)" fg:x="531469366548" fg:w="88750428"/><text x="77.2828%" y="1167.50"></text></g><g><title>ksys_write (460,298,539 samples, 0.07%)</title><rect x="77.0653%" y="1125" width="0.0667%" height="15" fill="rgb(218,76,45)" fg:x="531693603108" fg:w="460298539"/><text x="77.3153%" y="1135.50"></text></g><g><title>vfs_write (390,918,613 samples, 0.06%)</title><rect x="77.0754%" y="1109" width="0.0567%" height="15" fill="rgb(223,80,15)" fg:x="531762983034" fg:w="390918613"/><text x="77.3254%" y="1119.50"></text></g><g><title>rw_verify_area (307,304,184 samples, 0.04%)</title><rect x="77.0875%" y="1093" width="0.0445%" height="15" fill="rgb(219,218,33)" fg:x="531846597463" fg:w="307304184"/><text x="77.3375%" y="1103.50"></text></g><g><title>security_file_permission (286,809,677 samples, 0.04%)</title><rect x="77.0905%" y="1077" width="0.0416%" height="15" fill="rgb(208,51,11)" fg:x="531867091970" fg:w="286809677"/><text x="77.3405%" y="1087.50"></text></g><g><title>selinux_file_permission (278,722,646 samples, 0.04%)</title><rect x="77.0917%" y="1061" width="0.0404%" height="15" fill="rgb(229,165,39)" fg:x="531875179001" fg:w="278722646"/><text x="77.3417%" y="1071.50"></text></g><g><title>__page_cache_release.part.0 (71,096,687 samples, 0.01%)</title><rect x="77.1390%" y="869" width="0.0103%" height="15" fill="rgb(241,100,24)" fg:x="532202023319" fg:w="71096687"/><text x="77.3890%" y="879.50"></text></g><g><title>free_frozen_page_commit (107,678,873 samples, 0.02%)</title><rect x="77.1508%" y="853" width="0.0156%" height="15" fill="rgb(228,14,23)" fg:x="532283446454" fg:w="107678873"/><text x="77.4008%" y="863.50"></text></g><g><title>free_pcppages_bulk (87,027,424 samples, 0.01%)</title><rect x="77.1538%" y="837" width="0.0126%" height="15" fill="rgb(247,116,52)" fg:x="532304097903" fg:w="87027424"/><text x="77.4038%" y="847.50"></text></g><g><title>tlb_flush_mmu (216,318,009 samples, 0.03%)</title><rect x="77.1353%" y="933" width="0.0314%" height="15" fill="rgb(216,149,33)" fg:x="532175953260" fg:w="216318009"/><text x="77.3853%" y="943.50"></text></g><g><title>__tlb_batch_free_encoded_pages (216,318,009 samples, 0.03%)</title><rect x="77.1353%" y="917" width="0.0314%" height="15" fill="rgb(238,142,29)" fg:x="532175953260" fg:w="216318009"/><text x="77.3853%" y="927.50"></text></g><g><title>free_pages_and_swap_cache (216,318,009 samples, 0.03%)</title><rect x="77.1353%" y="901" width="0.0314%" height="15" fill="rgb(224,83,40)" fg:x="532175953260" fg:w="216318009"/><text x="77.3853%" y="911.50"></text></g><g><title>folios_put_refs (204,913,205 samples, 0.03%)</title><rect x="77.1369%" y="885" width="0.0297%" height="15" fill="rgb(234,165,11)" fg:x="532187358064" fg:w="204913205"/><text x="77.3869%" y="895.50"></text></g><g><title>free_unref_folios (117,988,599 samples, 0.02%)</title><rect x="77.1495%" y="869" width="0.0171%" height="15" fill="rgb(215,96,23)" fg:x="532274282670" fg:w="117988599"/><text x="77.3995%" y="879.50"></text></g><g><title>do_syscall_64 (903,975,637 samples, 0.13%)</title><rect x="77.0586%" y="1141" width="0.1310%" height="15" fill="rgb(233,179,26)" fg:x="531647052043" fg:w="903975637"/><text x="77.3086%" y="1151.50"></text></g><g><title>x64_sys_call (397,126,033 samples, 0.06%)</title><rect x="77.1321%" y="1125" width="0.0576%" height="15" fill="rgb(225,129,33)" fg:x="532153901647" fg:w="397126033"/><text x="77.3821%" y="1135.50"></text></g><g><title>__x64_sys_exit_group (387,201,825 samples, 0.06%)</title><rect x="77.1335%" y="1109" width="0.0561%" height="15" fill="rgb(237,49,13)" fg:x="532163825855" fg:w="387201825"/><text x="77.3835%" y="1119.50"></text></g><g><title>do_group_exit (387,201,825 samples, 0.06%)</title><rect x="77.1335%" y="1093" width="0.0561%" height="15" fill="rgb(211,3,31)" fg:x="532163825855" fg:w="387201825"/><text x="77.3835%" y="1103.50"></text></g><g><title>do_exit (387,201,825 samples, 0.06%)</title><rect x="77.1335%" y="1077" width="0.0561%" height="15" fill="rgb(216,152,19)" fg:x="532163825855" fg:w="387201825"/><text x="77.3835%" y="1087.50"></text></g><g><title>exit_mm (387,201,825 samples, 0.06%)</title><rect x="77.1335%" y="1061" width="0.0561%" height="15" fill="rgb(251,121,35)" fg:x="532163825855" fg:w="387201825"/><text x="77.3835%" y="1071.50"></text></g><g><title>__mmput (387,201,825 samples, 0.06%)</title><rect x="77.1335%" y="1045" width="0.0561%" height="15" fill="rgb(210,217,47)" fg:x="532163825855" fg:w="387201825"/><text x="77.3835%" y="1055.50"></text></g><g><title>exit_mmap (387,201,825 samples, 0.06%)</title><rect x="77.1335%" y="1029" width="0.0561%" height="15" fill="rgb(244,116,22)" fg:x="532163825855" fg:w="387201825"/><text x="77.3835%" y="1039.50"></text></g><g><title>unmap_vmas (383,723,847 samples, 0.06%)</title><rect x="77.1340%" y="1013" width="0.0556%" height="15" fill="rgb(228,17,21)" fg:x="532167303833" fg:w="383723847"/><text x="77.3840%" y="1023.50"></text></g><g><title>unmap_page_range (383,723,847 samples, 0.06%)</title><rect x="77.1340%" y="997" width="0.0556%" height="15" fill="rgb(240,149,34)" fg:x="532167303833" fg:w="383723847"/><text x="77.3840%" y="1007.50"></text></g><g><title>zap_pud_range.isra.0 (383,723,847 samples, 0.06%)</title><rect x="77.1340%" y="981" width="0.0556%" height="15" fill="rgb(208,125,47)" fg:x="532167303833" fg:w="383723847"/><text x="77.3840%" y="991.50"></text></g><g><title>zap_pmd_range.isra.0 (383,723,847 samples, 0.06%)</title><rect x="77.1340%" y="965" width="0.0556%" height="15" fill="rgb(249,186,39)" fg:x="532167303833" fg:w="383723847"/><text x="77.3840%" y="975.50"></text></g><g><title>zap_pte_range (383,723,847 samples, 0.06%)</title><rect x="77.1340%" y="949" width="0.0556%" height="15" fill="rgb(240,220,33)" fg:x="532167303833" fg:w="383723847"/><text x="77.3840%" y="959.50"></text></g><g><title>zap_present_ptes.constprop.0 (158,756,411 samples, 0.02%)</title><rect x="77.1666%" y="933" width="0.0230%" height="15" fill="rgb(243,110,23)" fg:x="532392271269" fg:w="158756411"/><text x="77.4166%" y="943.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,027,183,525 samples, 0.15%)</title><rect x="77.0460%" y="1157" width="0.1489%" height="15" fill="rgb(219,163,46)" fg:x="531560098889" fg:w="1027183525"/><text x="77.2960%" y="1167.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (76,536,018 samples, 0.01%)</title><rect x="77.1949%" y="1157" width="0.0111%" height="15" fill="rgb(216,126,30)" fg:x="532587282414" fg:w="76536018"/><text x="77.4449%" y="1167.50"></text></g><g><title>hashbrown::control::tag::Tag::full (113,730,256 samples, 0.02%)</title><rect x="77.3215%" y="1093" width="0.0165%" height="15" fill="rgb(208,139,11)" fg:x="533460893724" fg:w="113730256"/><text x="77.5715%" y="1103.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (73,049,356 samples, 0.01%)</title><rect x="77.3486%" y="1077" width="0.0106%" height="15" fill="rgb(213,118,36)" fg:x="533647890467" fg:w="73049356"/><text x="77.5986%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (146,129,899 samples, 0.02%)</title><rect x="77.3410%" y="1093" width="0.0212%" height="15" fill="rgb(226,43,17)" fg:x="533595413818" fg:w="146129899"/><text x="77.5910%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (622,229,393 samples, 0.09%)</title><rect x="77.2771%" y="1141" width="0.0902%" height="15" fill="rgb(254,217,4)" fg:x="533154782956" fg:w="622229393"/><text x="77.5271%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (622,229,393 samples, 0.09%)</title><rect x="77.2771%" y="1125" width="0.0902%" height="15" fill="rgb(210,134,47)" fg:x="533154782956" fg:w="622229393"/><text x="77.5271%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (555,023,561 samples, 0.08%)</title><rect x="77.2869%" y="1109" width="0.0804%" height="15" fill="rgb(237,24,49)" fg:x="533221988788" fg:w="555023561"/><text x="77.5369%" y="1119.50"></text></g><g><title>&lt;usize as core::ops::bit::BitXor&gt;::bitxor (117,483,914 samples, 0.02%)</title><rect x="77.3882%" y="1013" width="0.0170%" height="15" fill="rgb(251,39,46)" fg:x="533920687908" fg:w="117483914"/><text x="77.6382%" y="1023.50"></text></g><g><title>core::num::&lt;impl usize&gt;::rotate_left (81,501,582 samples, 0.01%)</title><rect x="77.4052%" y="1013" width="0.0118%" height="15" fill="rgb(251,220,3)" fg:x="534038171822" fg:w="81501582"/><text x="77.6552%" y="1023.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (457,524,640 samples, 0.07%)</title><rect x="77.3677%" y="1093" width="0.0663%" height="15" fill="rgb(228,105,12)" fg:x="533779347346" fg:w="457524640"/><text x="77.6177%" y="1103.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (457,524,640 samples, 0.07%)</title><rect x="77.3677%" y="1077" width="0.0663%" height="15" fill="rgb(215,196,1)" fg:x="533779347346" fg:w="457524640"/><text x="77.6177%" y="1087.50"></text></g><g><title>core::hash::Hasher::write_str (457,524,640 samples, 0.07%)</title><rect x="77.3677%" y="1061" width="0.0663%" height="15" fill="rgb(214,33,39)" fg:x="533779347346" fg:w="457524640"/><text x="77.6177%" y="1071.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (457,524,640 samples, 0.07%)</title><rect x="77.3677%" y="1045" width="0.0663%" height="15" fill="rgb(220,19,52)" fg:x="533779347346" fg:w="457524640"/><text x="77.6177%" y="1055.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (316,184,078 samples, 0.05%)</title><rect x="77.3882%" y="1029" width="0.0458%" height="15" fill="rgb(221,78,38)" fg:x="533920687908" fg:w="316184078"/><text x="77.6382%" y="1039.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_mul (117,198,582 samples, 0.02%)</title><rect x="77.4170%" y="1013" width="0.0170%" height="15" fill="rgb(253,30,16)" fg:x="534119673404" fg:w="117198582"/><text x="77.6670%" y="1023.50"></text></g><g><title>&lt;llvm_profparser::coverage::CounterType as core::hash::Hash&gt;::hash (112,343,943 samples, 0.02%)</title><rect x="77.4340%" y="1077" width="0.0163%" height="15" fill="rgb(242,65,0)" fg:x="534236871986" fg:w="112343943"/><text x="77.6840%" y="1087.50"></text></g><g><title>hashbrown::map::make_hash (590,443,454 samples, 0.09%)</title><rect x="77.3673%" y="1141" width="0.0856%" height="15" fill="rgb(235,201,12)" fg:x="533777012349" fg:w="590443454"/><text x="77.6173%" y="1151.50"></text></g><g><title>core::hash::BuildHasher::hash_one (590,443,454 samples, 0.09%)</title><rect x="77.3673%" y="1125" width="0.0856%" height="15" fill="rgb(233,161,9)" fg:x="533777012349" fg:w="590443454"/><text x="77.6173%" y="1135.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (590,443,454 samples, 0.09%)</title><rect x="77.3673%" y="1109" width="0.0856%" height="15" fill="rgb(241,207,41)" fg:x="533777012349" fg:w="590443454"/><text x="77.6173%" y="1119.50"></text></g><g><title>&lt;llvm_profparser::coverage::Counter as core::hash::Hash&gt;::hash (130,583,817 samples, 0.02%)</title><rect x="77.4340%" y="1093" width="0.0189%" height="15" fill="rgb(212,69,46)" fg:x="534236871986" fg:w="130583817"/><text x="77.6840%" y="1103.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (214,333,390 samples, 0.03%)</title><rect x="77.4529%" y="1125" width="0.0311%" height="15" fill="rgb(239,69,45)" fg:x="534367455803" fg:w="214333390"/><text x="77.7029%" y="1135.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (214,333,390 samples, 0.03%)</title><rect x="77.4529%" y="1109" width="0.0311%" height="15" fill="rgb(242,117,48)" fg:x="534367455803" fg:w="214333390"/><text x="77.7029%" y="1119.50"></text></g><g><title>core::ptr::write (214,333,390 samples, 0.03%)</title><rect x="77.4529%" y="1093" width="0.0311%" height="15" fill="rgb(228,41,36)" fg:x="534367455803" fg:w="214333390"/><text x="77.7029%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (91,088,015 samples, 0.01%)</title><rect x="77.4840%" y="1125" width="0.0132%" height="15" fill="rgb(212,3,32)" fg:x="534581789193" fg:w="91088015"/><text x="77.7340%" y="1135.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (91,088,015 samples, 0.01%)</title><rect x="77.4840%" y="1109" width="0.0132%" height="15" fill="rgb(233,41,49)" fg:x="534581789193" fg:w="91088015"/><text x="77.7340%" y="1119.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (91,088,015 samples, 0.01%)</title><rect x="77.4840%" y="1093" width="0.0132%" height="15" fill="rgb(252,170,49)" fg:x="534581789193" fg:w="91088015"/><text x="77.7340%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2,251,040,954 samples, 0.33%)</title><rect x="77.2114%" y="1157" width="0.3263%" height="15" fill="rgb(229,53,26)" fg:x="532701222587" fg:w="2251040954"/><text x="77.4614%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (584,807,738 samples, 0.08%)</title><rect x="77.4529%" y="1141" width="0.0848%" height="15" fill="rgb(217,157,12)" fg:x="534367455803" fg:w="584807738"/><text x="77.7029%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner::record_item_insert_at (279,386,333 samples, 0.04%)</title><rect x="77.4972%" y="1125" width="0.0405%" height="15" fill="rgb(227,17,9)" fg:x="534672877208" fg:w="279386333"/><text x="77.7472%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner::set_ctrl_hash (157,444,553 samples, 0.02%)</title><rect x="77.5148%" y="1109" width="0.0228%" height="15" fill="rgb(218,84,12)" fg:x="534794818988" fg:w="157444553"/><text x="77.7648%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner::set_ctrl (157,444,553 samples, 0.02%)</title><rect x="77.5148%" y="1093" width="0.0228%" height="15" fill="rgb(212,79,24)" fg:x="534794818988" fg:w="157444553"/><text x="77.7648%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (394,177,367 samples, 0.06%)</title><rect x="77.5380%" y="1157" width="0.0571%" height="15" fill="rgb(217,222,37)" fg:x="534954392742" fg:w="394177367"/><text x="77.7880%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (83,292,791 samples, 0.01%)</title><rect x="77.7204%" y="1077" width="0.0121%" height="15" fill="rgb(246,208,8)" fg:x="536213111233" fg:w="83292791"/><text x="77.9704%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (83,292,791 samples, 0.01%)</title><rect x="77.7204%" y="1061" width="0.0121%" height="15" fill="rgb(244,133,10)" fg:x="536213111233" fg:w="83292791"/><text x="77.9704%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (652,021,211 samples, 0.09%)</title><rect x="77.7864%" y="965" width="0.0945%" height="15" fill="rgb(209,219,41)" fg:x="536667980903" fg:w="652021211"/><text x="78.0364%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (652,021,211 samples, 0.09%)</title><rect x="77.7864%" y="949" width="0.0945%" height="15" fill="rgb(253,175,45)" fg:x="536667980903" fg:w="652021211"/><text x="78.0364%" y="959.50"></text></g><g><title>alloc::alloc::alloc (652,021,211 samples, 0.09%)</title><rect x="77.7864%" y="933" width="0.0945%" height="15" fill="rgb(235,100,37)" fg:x="536667980903" fg:w="652021211"/><text x="78.0364%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,273,276,366 samples, 0.18%)</title><rect x="77.7325%" y="1029" width="0.1846%" height="15" fill="rgb(225,87,19)" fg:x="536296404024" fg:w="1273276366"/><text x="77.9825%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,273,276,366 samples, 0.18%)</title><rect x="77.7325%" y="1013" width="0.1846%" height="15" fill="rgb(217,152,17)" fg:x="536296404024" fg:w="1273276366"/><text x="77.9825%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,273,276,366 samples, 0.18%)</title><rect x="77.7325%" y="997" width="0.1846%" height="15" fill="rgb(235,72,13)" fg:x="536296404024" fg:w="1273276366"/><text x="77.9825%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,273,276,366 samples, 0.18%)</title><rect x="77.7325%" y="981" width="0.1846%" height="15" fill="rgb(233,140,18)" fg:x="536296404024" fg:w="1273276366"/><text x="77.9825%" y="991.50"></text></g><g><title>alloc::raw_vec::layout_array (249,678,276 samples, 0.04%)</title><rect x="77.8809%" y="965" width="0.0362%" height="15" fill="rgb(207,212,28)" fg:x="537320002114" fg:w="249678276"/><text x="78.1309%" y="975.50"></text></g><g><title>core::alloc::layout::Layout::repeat (249,678,276 samples, 0.04%)</title><rect x="77.8809%" y="949" width="0.0362%" height="15" fill="rgb(220,130,25)" fg:x="537320002114" fg:w="249678276"/><text x="78.1309%" y="959.50"></text></g><g><title>core::alloc::layout::Layout::repeat_packed (174,992,181 samples, 0.03%)</title><rect x="77.8917%" y="933" width="0.0254%" height="15" fill="rgb(205,55,34)" fg:x="537394688209" fg:w="174992181"/><text x="78.1417%" y="943.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (174,992,181 samples, 0.03%)</title><rect x="77.8917%" y="917" width="0.0254%" height="15" fill="rgb(237,54,35)" fg:x="537394688209" fg:w="174992181"/><text x="78.1417%" y="927.50"></text></g><g><title>core::intrinsics::unlikely (174,992,181 samples, 0.03%)</title><rect x="77.8917%" y="901" width="0.0254%" height="15" fill="rgb(208,67,23)" fg:x="537394688209" fg:w="174992181"/><text x="78.1417%" y="911.50"></text></g><g><title>&lt;std::path::PathBuf as core::clone::Clone&gt;::clone (2,313,630,376 samples, 0.34%)</title><rect x="77.7086%" y="1141" width="0.3353%" height="15" fill="rgb(206,207,50)" fg:x="536131605380" fg:w="2313630376"/><text x="77.9586%" y="1151.50"></text></g><g><title>&lt;std::ffi::os_str::OsString as core::clone::Clone&gt;::clone (2,313,630,376 samples, 0.34%)</title><rect x="77.7086%" y="1125" width="0.3353%" height="15" fill="rgb(213,211,42)" fg:x="536131605380" fg:w="2313630376"/><text x="77.9586%" y="1135.50"></text></g><g><title>&lt;std::sys::os_str::bytes::Buf as core::clone::Clone&gt;::clone (2,313,630,376 samples, 0.34%)</title><rect x="77.7086%" y="1109" width="0.3353%" height="15" fill="rgb(252,197,50)" fg:x="536131605380" fg:w="2313630376"/><text x="77.9586%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,313,630,376 samples, 0.34%)</title><rect x="77.7086%" y="1093" width="0.3353%" height="15" fill="rgb(251,211,41)" fg:x="536131605380" fg:w="2313630376"/><text x="77.9586%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,148,831,732 samples, 0.31%)</title><rect x="77.7325%" y="1077" width="0.3115%" height="15" fill="rgb(229,211,5)" fg:x="536296404024" fg:w="2148831732"/><text x="77.9825%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (2,148,831,732 samples, 0.31%)</title><rect x="77.7325%" y="1061" width="0.3115%" height="15" fill="rgb(239,36,31)" fg:x="536296404024" fg:w="2148831732"/><text x="77.9825%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,148,831,732 samples, 0.31%)</title><rect x="77.7325%" y="1045" width="0.3115%" height="15" fill="rgb(248,67,31)" fg:x="536296404024" fg:w="2148831732"/><text x="77.9825%" y="1055.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (875,555,366 samples, 0.13%)</title><rect x="77.9170%" y="1029" width="0.1269%" height="15" fill="rgb(249,55,44)" fg:x="537569680390" fg:w="875555366"/><text x="78.1670%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (875,555,366 samples, 0.13%)</title><rect x="77.9170%" y="1013" width="0.1269%" height="15" fill="rgb(216,82,12)" fg:x="537569680390" fg:w="875555366"/><text x="78.1670%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (214,101,528 samples, 0.03%)</title><rect x="78.0537%" y="1141" width="0.0310%" height="15" fill="rgb(242,174,1)" fg:x="538512227711" fg:w="214101528"/><text x="78.3037%" y="1151.50"></text></g><g><title>core::ptr::write (82,245,783 samples, 0.01%)</title><rect x="78.0728%" y="1125" width="0.0119%" height="15" fill="rgb(208,120,29)" fg:x="538644083456" fg:w="82245783"/><text x="78.3228%" y="1135.50"></text></g><g><title>hashbrown::control::tag::Tag::full (77,400,632 samples, 0.01%)</title><rect x="78.1163%" y="1045" width="0.0112%" height="15" fill="rgb(221,105,43)" fg:x="538944465756" fg:w="77400632"/><text x="78.3663%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (84,121,747 samples, 0.01%)</title><rect x="78.1275%" y="1045" width="0.0122%" height="15" fill="rgb(234,124,22)" fg:x="539021866388" fg:w="84121747"/><text x="78.3775%" y="1055.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (329,364,736 samples, 0.05%)</title><rect x="78.0977%" y="1141" width="0.0477%" height="15" fill="rgb(212,23,30)" fg:x="538815807173" fg:w="329364736"/><text x="78.3477%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (329,364,736 samples, 0.05%)</title><rect x="78.0977%" y="1125" width="0.0477%" height="15" fill="rgb(219,122,53)" fg:x="538815807173" fg:w="329364736"/><text x="78.3477%" y="1135.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (329,364,736 samples, 0.05%)</title><rect x="78.0977%" y="1109" width="0.0477%" height="15" fill="rgb(248,84,24)" fg:x="538815807173" fg:w="329364736"/><text x="78.3477%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (283,501,530 samples, 0.04%)</title><rect x="78.1043%" y="1093" width="0.0411%" height="15" fill="rgb(245,115,18)" fg:x="538861670379" fg:w="283501530"/><text x="78.3543%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (283,501,530 samples, 0.04%)</title><rect x="78.1043%" y="1077" width="0.0411%" height="15" fill="rgb(227,176,51)" fg:x="538861670379" fg:w="283501530"/><text x="78.3543%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (260,750,794 samples, 0.04%)</title><rect x="78.1076%" y="1061" width="0.0378%" height="15" fill="rgb(229,63,42)" fg:x="538884421115" fg:w="260750794"/><text x="78.3576%" y="1071.50"></text></g><g><title>llvm_profparser::coverage::CoverageMappingInfo::get_files_from_id (3,810,599,796 samples, 0.55%)</title><rect x="77.5954%" y="1157" width="0.5523%" height="15" fill="rgb(247,202,24)" fg:x="535350647488" fg:w="3810599796"/><text x="77.8454%" y="1167.50"></text></g><g><title>&lt;cargo_tarpaulin::statemachine::instrumented::LlvmInstrumentedData as cargo_tarpaulin::statemachine::StateData&gt;::wait::_{{closure}}::_{{closure}} (80,890,649 samples, 0.01%)</title><rect x="78.1724%" y="1109" width="0.0117%" height="15" fill="rgb(244,173,20)" fg:x="539331252957" fg:w="80890649"/><text x="78.4224%" y="1119.50"></text></g><g><title>std::path::Path::starts_with (80,890,649 samples, 0.01%)</title><rect x="78.1724%" y="1093" width="0.0117%" height="15" fill="rgb(242,81,47)" fg:x="539331252957" fg:w="80890649"/><text x="78.4224%" y="1103.50"></text></g><g><title>&lt;cargo_tarpaulin::statemachine::instrumented::LlvmInstrumentedData as cargo_tarpaulin::statemachine::StateData&gt;::wait::_{{closure}} (105,569,576 samples, 0.02%)</title><rect x="78.1703%" y="1141" width="0.0153%" height="15" fill="rgb(231,185,54)" fg:x="539317274470" fg:w="105569576"/><text x="78.4203%" y="1151.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (105,569,576 samples, 0.02%)</title><rect x="78.1703%" y="1125" width="0.0153%" height="15" fill="rgb(243,55,32)" fg:x="539317274470" fg:w="105569576"/><text x="78.4203%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (136,498,105 samples, 0.02%)</title><rect x="78.1980%" y="1125" width="0.0198%" height="15" fill="rgb(208,167,19)" fg:x="539508225283" fg:w="136498105"/><text x="78.4480%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;[std::path::PathBuf]&gt; (136,498,105 samples, 0.02%)</title><rect x="78.1980%" y="1109" width="0.0198%" height="15" fill="rgb(231,72,35)" fg:x="539508225283" fg:w="136498105"/><text x="78.4480%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::path::PathBuf&gt; (111,784,042 samples, 0.02%)</title><rect x="78.2016%" y="1093" width="0.0162%" height="15" fill="rgb(250,173,51)" fg:x="539532939346" fg:w="111784042"/><text x="78.4516%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::ffi::os_str::OsString&gt; (111,784,042 samples, 0.02%)</title><rect x="78.2016%" y="1077" width="0.0162%" height="15" fill="rgb(209,5,22)" fg:x="539532939346" fg:w="111784042"/><text x="78.4516%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::os_str::bytes::Buf&gt; (111,784,042 samples, 0.02%)</title><rect x="78.2016%" y="1061" width="0.0162%" height="15" fill="rgb(250,174,19)" fg:x="539532939346" fg:w="111784042"/><text x="78.4516%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (111,784,042 samples, 0.02%)</title><rect x="78.2016%" y="1045" width="0.0162%" height="15" fill="rgb(217,3,49)" fg:x="539532939346" fg:w="111784042"/><text x="78.4516%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (111,784,042 samples, 0.02%)</title><rect x="78.2016%" y="1029" width="0.0162%" height="15" fill="rgb(218,225,5)" fg:x="539532939346" fg:w="111784042"/><text x="78.4516%" y="1039.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (111,784,042 samples, 0.02%)</title><rect x="78.2016%" y="1013" width="0.0162%" height="15" fill="rgb(236,89,11)" fg:x="539532939346" fg:w="111784042"/><text x="78.4516%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (76,038,830 samples, 0.01%)</title><rect x="78.2068%" y="997" width="0.0110%" height="15" fill="rgb(206,33,28)" fg:x="539568684558" fg:w="76038830"/><text x="78.4568%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;std::path::PathBuf&gt;&gt; (140,753,609 samples, 0.02%)</title><rect x="78.1980%" y="1141" width="0.0204%" height="15" fill="rgb(241,56,42)" fg:x="539508225283" fg:w="140753609"/><text x="78.4480%" y="1151.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (148,297,338 samples, 0.02%)</title><rect x="78.2207%" y="1141" width="0.0215%" height="15" fill="rgb(222,44,11)" fg:x="539664347785" fg:w="148297338"/><text x="78.4707%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (148,297,338 samples, 0.02%)</title><rect x="78.2207%" y="1125" width="0.0215%" height="15" fill="rgb(234,111,20)" fg:x="539664347785" fg:w="148297338"/><text x="78.4707%" y="1135.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (135,376,544 samples, 0.02%)</title><rect x="78.2225%" y="1109" width="0.0196%" height="15" fill="rgb(237,77,6)" fg:x="539677268579" fg:w="135376544"/><text x="78.4725%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (107,575,471 samples, 0.02%)</title><rect x="78.2266%" y="1093" width="0.0156%" height="15" fill="rgb(235,111,23)" fg:x="539705069652" fg:w="107575471"/><text x="78.4766%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (93,345,169 samples, 0.01%)</title><rect x="78.2286%" y="1077" width="0.0135%" height="15" fill="rgb(251,135,29)" fg:x="539719299954" fg:w="93345169"/><text x="78.4786%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (89,161,530 samples, 0.01%)</title><rect x="78.2292%" y="1061" width="0.0129%" height="15" fill="rgb(217,57,1)" fg:x="539723483593" fg:w="89161530"/><text x="78.4792%" y="1071.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::CoverageMapping::generate_subreport (692,869,372 samples, 0.10%)</title><rect x="78.1477%" y="1157" width="0.1004%" height="15" fill="rgb(249,119,31)" fg:x="539161247284" fg:w="692869372"/><text x="78.3977%" y="1167.50"></text></g><g><title>llvm_profparser::instrumentation_profile::types::InstrumentationProfile::find_record_by_hash (113,377,452 samples, 0.02%)</title><rect x="78.2874%" y="1141" width="0.0164%" height="15" fill="rgb(233,164,33)" fg:x="540125070571" fg:w="113377452"/><text x="78.5374%" y="1151.50"></text></g><g><title>llvm_profparser::instrumentation_profile::types::Symtab::get (73,117,866 samples, 0.01%)</title><rect x="78.2933%" y="1125" width="0.0106%" height="15" fill="rgb(250,217,43)" fg:x="540165330157" fg:w="73117866"/><text x="78.5433%" y="1135.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (73,117,866 samples, 0.01%)</title><rect x="78.2933%" y="1109" width="0.0106%" height="15" fill="rgb(232,154,50)" fg:x="540165330157" fg:w="73117866"/><text x="78.5433%" y="1119.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (73,117,866 samples, 0.01%)</title><rect x="78.2933%" y="1093" width="0.0106%" height="15" fill="rgb(227,190,8)" fg:x="540165330157" fg:w="73117866"/><text x="78.5433%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (73,117,866 samples, 0.01%)</title><rect x="78.2933%" y="1077" width="0.0106%" height="15" fill="rgb(209,217,32)" fg:x="540165330157" fg:w="73117866"/><text x="78.5433%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (71,985,887 samples, 0.01%)</title><rect x="78.2934%" y="1061" width="0.0104%" height="15" fill="rgb(243,203,50)" fg:x="540166462136" fg:w="71985887"/><text x="78.5434%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (71,985,887 samples, 0.01%)</title><rect x="78.2934%" y="1045" width="0.0104%" height="15" fill="rgb(232,152,27)" fg:x="540166462136" fg:w="71985887"/><text x="78.5434%" y="1055.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::CoverageMapping::get_simple_counters (442,700,523 samples, 0.06%)</title><rect x="78.2482%" y="1157" width="0.0642%" height="15" fill="rgb(240,34,29)" fg:x="539854116656" fg:w="442700523"/><text x="78.4982%" y="1167.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::parse_counter (274,047,166 samples, 0.04%)</title><rect x="78.3123%" y="1157" width="0.0397%" height="15" fill="rgb(215,185,52)" fg:x="540296817179" fg:w="274047166"/><text x="78.5623%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (72,951,577 samples, 0.01%)</title><rect x="78.3938%" y="1077" width="0.0106%" height="15" fill="rgb(240,89,49)" fg:x="540859032094" fg:w="72951577"/><text x="78.6438%" y="1087.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::parse_mapping_regions (242,094,363 samples, 0.04%)</title><rect x="78.3851%" y="1093" width="0.0351%" height="15" fill="rgb(225,12,52)" fg:x="540798882107" fg:w="242094363"/><text x="78.6351%" y="1103.50"></text></g><g><title>llvm_profparser::util::parse_leb128 (97,155,666 samples, 0.01%)</title><rect x="78.4061%" y="1077" width="0.0141%" height="15" fill="rgb(239,128,45)" fg:x="540943820804" fg:w="97155666"/><text x="78.6561%" y="1087.50"></text></g><g><title>leb128::read::unsigned (97,155,666 samples, 0.01%)</title><rect x="78.4061%" y="1061" width="0.0141%" height="15" fill="rgb(211,78,47)" fg:x="540943820804" fg:w="97155666"/><text x="78.6561%" y="1071.50"></text></g><g><title>llvm_profparser::util::parse_leb128 (107,505,087 samples, 0.02%)</title><rect x="78.4202%" y="1093" width="0.0156%" height="15" fill="rgb(232,31,21)" fg:x="541040976470" fg:w="107505087"/><text x="78.6702%" y="1103.50"></text></g><g><title>leb128::read::unsigned (107,505,087 samples, 0.02%)</title><rect x="78.4202%" y="1077" width="0.0156%" height="15" fill="rgb(222,168,14)" fg:x="541040976470" fg:w="107505087"/><text x="78.6702%" y="1087.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::parse_coverage_functions (581,928,033 samples, 0.08%)</title><rect x="78.3522%" y="1109" width="0.0843%" height="15" fill="rgb(209,128,24)" fg:x="540571988835" fg:w="581928033"/><text x="78.6022%" y="1119.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::read_object_file (584,225,080 samples, 0.08%)</title><rect x="78.3520%" y="1157" width="0.0847%" height="15" fill="rgb(249,35,13)" fg:x="540570864345" fg:w="584225080"/><text x="78.6020%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (583,100,590 samples, 0.08%)</title><rect x="78.3522%" y="1141" width="0.0845%" height="15" fill="rgb(218,7,2)" fg:x="540571988835" fg:w="583100590"/><text x="78.6022%" y="1151.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::read_object_file::_{{closure}} (583,100,590 samples, 0.08%)</title><rect x="78.3522%" y="1125" width="0.0845%" height="15" fill="rgb(238,107,27)" fg:x="540571988835" fg:w="583100590"/><text x="78.6022%" y="1135.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (173,016,654 samples, 0.03%)</title><rect x="78.4705%" y="1013" width="0.0251%" height="15" fill="rgb(217,88,38)" fg:x="541387755872" fg:w="173016654"/><text x="78.7205%" y="1023.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (85,288,829 samples, 0.01%)</title><rect x="78.4832%" y="997" width="0.0124%" height="15" fill="rgb(230,207,0)" fg:x="541475483697" fg:w="85288829"/><text x="78.7332%" y="1007.50"></text></g><g><title>hashbrown::map::make_hash (181,452,373 samples, 0.03%)</title><rect x="78.4705%" y="1093" width="0.0263%" height="15" fill="rgb(249,64,54)" fg:x="541387755872" fg:w="181452373"/><text x="78.7205%" y="1103.50"></text></g><g><title>core::hash::BuildHasher::hash_one (181,452,373 samples, 0.03%)</title><rect x="78.4705%" y="1077" width="0.0263%" height="15" fill="rgb(231,7,11)" fg:x="541387755872" fg:w="181452373"/><text x="78.7205%" y="1087.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (181,452,373 samples, 0.03%)</title><rect x="78.4705%" y="1061" width="0.0263%" height="15" fill="rgb(205,149,21)" fg:x="541387755872" fg:w="181452373"/><text x="78.7205%" y="1071.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (181,452,373 samples, 0.03%)</title><rect x="78.4705%" y="1045" width="0.0263%" height="15" fill="rgb(215,126,34)" fg:x="541387755872" fg:w="181452373"/><text x="78.7205%" y="1055.50"></text></g><g><title>core::hash::Hasher::write_str (181,452,373 samples, 0.03%)</title><rect x="78.4705%" y="1029" width="0.0263%" height="15" fill="rgb(241,132,45)" fg:x="541387755872" fg:w="181452373"/><text x="78.7205%" y="1039.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (107,889,906 samples, 0.02%)</title><rect x="78.5015%" y="1045" width="0.0156%" height="15" fill="rgb(252,69,32)" fg:x="541602107353" fg:w="107889906"/><text x="78.7515%" y="1055.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (107,889,906 samples, 0.02%)</title><rect x="78.5015%" y="1029" width="0.0156%" height="15" fill="rgb(232,204,19)" fg:x="541602107353" fg:w="107889906"/><text x="78.7515%" y="1039.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (243,891,152 samples, 0.04%)</title><rect x="78.5292%" y="1029" width="0.0354%" height="15" fill="rgb(249,15,47)" fg:x="541793219981" fg:w="243891152"/><text x="78.7792%" y="1039.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (243,891,152 samples, 0.04%)</title><rect x="78.5292%" y="1013" width="0.0354%" height="15" fill="rgb(209,227,23)" fg:x="541793219981" fg:w="243891152"/><text x="78.7792%" y="1023.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (182,674,331 samples, 0.03%)</title><rect x="78.5381%" y="997" width="0.0265%" height="15" fill="rgb(248,92,24)" fg:x="541854436802" fg:w="182674331"/><text x="78.7881%" y="1007.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (182,674,331 samples, 0.03%)</title><rect x="78.5381%" y="981" width="0.0265%" height="15" fill="rgb(247,59,2)" fg:x="541854436802" fg:w="182674331"/><text x="78.7881%" y="991.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (182,674,331 samples, 0.03%)</title><rect x="78.5381%" y="965" width="0.0265%" height="15" fill="rgb(221,30,5)" fg:x="541854436802" fg:w="182674331"/><text x="78.7881%" y="975.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (182,674,331 samples, 0.03%)</title><rect x="78.5381%" y="949" width="0.0265%" height="15" fill="rgb(208,108,53)" fg:x="541854436802" fg:w="182674331"/><text x="78.7881%" y="959.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (182,674,331 samples, 0.03%)</title><rect x="78.5381%" y="933" width="0.0265%" height="15" fill="rgb(211,183,26)" fg:x="541854436802" fg:w="182674331"/><text x="78.7881%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (327,404,707 samples, 0.05%)</title><rect x="78.5292%" y="1045" width="0.0475%" height="15" fill="rgb(232,132,4)" fg:x="541793219981" fg:w="327404707"/><text x="78.7792%" y="1055.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (83,513,555 samples, 0.01%)</title><rect x="78.5646%" y="1029" width="0.0121%" height="15" fill="rgb(253,128,37)" fg:x="542037111133" fg:w="83513555"/><text x="78.8146%" y="1039.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (83,513,555 samples, 0.01%)</title><rect x="78.5646%" y="1013" width="0.0121%" height="15" fill="rgb(221,58,24)" fg:x="542037111133" fg:w="83513555"/><text x="78.8146%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (83,513,555 samples, 0.01%)</title><rect x="78.5646%" y="997" width="0.0121%" height="15" fill="rgb(230,54,45)" fg:x="542037111133" fg:w="83513555"/><text x="78.8146%" y="1007.50"></text></g><g><title>llvm_profparser::instrumentation_profile::types::InstrumentationProfile::find_record_by_name (917,806,236 samples, 0.13%)</title><rect x="78.4445%" y="1157" width="0.1330%" height="15" fill="rgb(254,21,18)" fg:x="541209020077" fg:w="917806236"/><text x="78.6945%" y="1167.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (752,232,351 samples, 0.11%)</title><rect x="78.4685%" y="1141" width="0.1090%" height="15" fill="rgb(221,108,0)" fg:x="541374593962" fg:w="752232351"/><text x="78.7185%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (752,232,351 samples, 0.11%)</title><rect x="78.4685%" y="1125" width="0.1090%" height="15" fill="rgb(206,95,1)" fg:x="541374593962" fg:w="752232351"/><text x="78.7185%" y="1135.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (752,232,351 samples, 0.11%)</title><rect x="78.4685%" y="1109" width="0.1090%" height="15" fill="rgb(237,52,5)" fg:x="541374593962" fg:w="752232351"/><text x="78.7185%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (557,618,068 samples, 0.08%)</title><rect x="78.4968%" y="1093" width="0.0808%" height="15" fill="rgb(218,150,34)" fg:x="541569208245" fg:w="557618068"/><text x="78.7468%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (557,618,068 samples, 0.08%)</title><rect x="78.4968%" y="1077" width="0.0808%" height="15" fill="rgb(235,194,28)" fg:x="541569208245" fg:w="557618068"/><text x="78.7468%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (537,858,150 samples, 0.08%)</title><rect x="78.4996%" y="1061" width="0.0780%" height="15" fill="rgb(245,92,18)" fg:x="541588968163" fg:w="537858150"/><text x="78.7496%" y="1071.50"></text></g><g><title>llvm_profparser::instrumentation_profile::types::InstrumentationProfile::push_record (292,322,516 samples, 0.04%)</title><rect x="78.5776%" y="1157" width="0.0424%" height="15" fill="rgb(253,203,53)" fg:x="542126826313" fg:w="292322516"/><text x="78.8276%" y="1167.50"></text></g><g><title>md5::Context::consume (228,456,313 samples, 0.03%)</title><rect x="78.6721%" y="1109" width="0.0331%" height="15" fill="rgb(249,185,47)" fg:x="542778781771" fg:w="228456313"/><text x="78.9221%" y="1119.50"></text></g><g><title>llvm_profparser::instrumentation_profile::types::compute_hash (267,492,289 samples, 0.04%)</title><rect x="78.6703%" y="1141" width="0.0388%" height="15" fill="rgb(252,194,52)" fg:x="542766443937" fg:w="267492289"/><text x="78.9203%" y="1151.50"></text></g><g><title>md5::compute (257,462,876 samples, 0.04%)</title><rect x="78.6717%" y="1125" width="0.0373%" height="15" fill="rgb(210,53,36)" fg:x="542776473350" fg:w="257462876"/><text x="78.9217%" y="1135.50"></text></g><g><title>llvm_profparser::instrumentation_profile::types::Symtab::add_func_name (618,096,769 samples, 0.09%)</title><rect x="78.6199%" y="1157" width="0.0896%" height="15" fill="rgb(237,37,25)" fg:x="542419148829" fg:w="618096769"/><text x="78.8699%" y="1167.50"></text></g><g><title>malloc (5,220,264,920 samples, 0.76%)</title><rect x="78.7148%" y="1157" width="0.7566%" height="15" fill="rgb(242,116,27)" fg:x="543073517604" fg:w="5220264920"/><text x="78.9648%" y="1167.50"></text></g><g><title>md5::Context::compute (128,086,030 samples, 0.02%)</title><rect x="79.4744%" y="1157" width="0.0186%" height="15" fill="rgb(213,185,26)" fg:x="548314299275" fg:w="128086030"/><text x="79.7244%" y="1167.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (297,614,217 samples, 0.04%)</title><rect x="79.6645%" y="1141" width="0.0431%" height="15" fill="rgb(225,204,8)" fg:x="549625505207" fg:w="297614217"/><text x="79.9145%" y="1151.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (297,614,217 samples, 0.04%)</title><rect x="79.6645%" y="1125" width="0.0431%" height="15" fill="rgb(254,111,37)" fg:x="549625505207" fg:w="297614217"/><text x="79.9145%" y="1135.50"></text></g><g><title>md5::consume (1,482,900,521 samples, 0.21%)</title><rect x="79.4930%" y="1157" width="0.2149%" height="15" fill="rgb(242,35,9)" fg:x="548442385305" fg:w="1482900521"/><text x="79.7430%" y="1167.50"></text></g><g><title>md5::transform (1,840,881,253 samples, 0.27%)</title><rect x="79.7079%" y="1157" width="0.2668%" height="15" fill="rgb(232,138,49)" fg:x="549925285826" fg:w="1840881253"/><text x="79.9579%" y="1167.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (767,857,737 samples, 0.11%)</title><rect x="79.8634%" y="1141" width="0.1113%" height="15" fill="rgb(247,56,4)" fg:x="550998309342" fg:w="767857737"/><text x="80.1134%" y="1151.50"></text></g><g><title>miniz_oxide::inflate::core::apply_match (188,477,038 samples, 0.03%)</title><rect x="79.9772%" y="1157" width="0.0273%" height="15" fill="rgb(226,179,17)" fg:x="551783270936" fg:w="188477038"/><text x="80.2272%" y="1167.50"></text></g><g><title>miniz_oxide::inflate::core::HuffmanTable::lookup (86,082,862 samples, 0.01%)</title><rect x="80.0455%" y="1125" width="0.0125%" height="15" fill="rgb(216,163,45)" fg:x="552254311454" fg:w="86082862"/><text x="80.2955%" y="1135.50"></text></g><g><title>miniz_oxide::inflate::core::fill_bit_buffer (78,230,143 samples, 0.01%)</title><rect x="80.0580%" y="1125" width="0.0113%" height="15" fill="rgb(211,157,3)" fg:x="552340394316" fg:w="78230143"/><text x="80.3080%" y="1135.50"></text></g><g><title>miniz_oxide::inflate::core::decompress_fast (401,963,931 samples, 0.06%)</title><rect x="80.0152%" y="1141" width="0.0583%" height="15" fill="rgb(234,44,20)" fg:x="552045623658" fg:w="401963931"/><text x="80.2652%" y="1151.50"></text></g><g><title>miniz_oxide::inflate::core::decompress (500,030,490 samples, 0.07%)</title><rect x="80.0045%" y="1157" width="0.0725%" height="15" fill="rgb(254,138,23)" fg:x="551971747974" fg:w="500030490"/><text x="80.2545%" y="1167.50"></text></g><g><title>miniz_oxide::inflate::core::init_tree (92,228,862 samples, 0.01%)</title><rect x="80.0770%" y="1157" width="0.0134%" height="15" fill="rgb(206,119,39)" fg:x="552471778464" fg:w="92228862"/><text x="80.3270%" y="1167.50"></text></g><g><title>realloc (198,965,887 samples, 0.03%)</title><rect x="80.1222%" y="1157" width="0.0288%" height="15" fill="rgb(231,105,52)" fg:x="552783790128" fg:w="198965887"/><text x="80.3722%" y="1167.50"></text></g><g><title>std::path::Path::to_path_buf (96,615,797 samples, 0.01%)</title><rect x="80.1759%" y="1141" width="0.0140%" height="15" fill="rgb(250,20,5)" fg:x="553154102682" fg:w="96615797"/><text x="80.4259%" y="1151.50"></text></g><g><title>std::ffi::os_str::OsStr::to_os_string (96,615,797 samples, 0.01%)</title><rect x="80.1759%" y="1125" width="0.0140%" height="15" fill="rgb(215,198,30)" fg:x="553154102682" fg:w="96615797"/><text x="80.4259%" y="1135.50"></text></g><g><title>std::sys::os_str::bytes::Slice::to_owned (96,615,797 samples, 0.01%)</title><rect x="80.1759%" y="1109" width="0.0140%" height="15" fill="rgb(246,142,8)" fg:x="553154102682" fg:w="96615797"/><text x="80.4259%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (96,615,797 samples, 0.01%)</title><rect x="80.1759%" y="1093" width="0.0140%" height="15" fill="rgb(243,26,38)" fg:x="553154102682" fg:w="96615797"/><text x="80.4259%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (96,615,797 samples, 0.01%)</title><rect x="80.1759%" y="1077" width="0.0140%" height="15" fill="rgb(205,133,28)" fg:x="553154102682" fg:w="96615797"/><text x="80.4259%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (96,615,797 samples, 0.01%)</title><rect x="80.1759%" y="1061" width="0.0140%" height="15" fill="rgb(212,34,0)" fg:x="553154102682" fg:w="96615797"/><text x="80.4259%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (96,615,797 samples, 0.01%)</title><rect x="80.1759%" y="1045" width="0.0140%" height="15" fill="rgb(251,226,22)" fg:x="553154102682" fg:w="96615797"/><text x="80.4259%" y="1055.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (90,294,206 samples, 0.01%)</title><rect x="80.1768%" y="1029" width="0.0131%" height="15" fill="rgb(252,119,9)" fg:x="553160424273" fg:w="90294206"/><text x="80.4268%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (90,294,206 samples, 0.01%)</title><rect x="80.1768%" y="1013" width="0.0131%" height="15" fill="rgb(213,150,50)" fg:x="553160424273" fg:w="90294206"/><text x="80.4268%" y="1023.50"></text></g><g><title>std::path::Path::_join (134,724,680 samples, 0.02%)</title><rect x="80.1734%" y="1157" width="0.0195%" height="15" fill="rgb(212,24,39)" fg:x="553136745012" fg:w="134724680"/><text x="80.4234%" y="1167.50"></text></g><g><title>std::path::Path::_starts_with (176,642,386 samples, 0.03%)</title><rect x="80.1929%" y="1157" width="0.0256%" height="15" fill="rgb(213,46,39)" fg:x="553271469692" fg:w="176642386"/><text x="80.4429%" y="1167.50"></text></g><g><title>std::path::iter_after (139,742,964 samples, 0.02%)</title><rect x="80.1983%" y="1141" width="0.0203%" height="15" fill="rgb(239,106,12)" fg:x="553308369114" fg:w="139742964"/><text x="80.4483%" y="1151.50"></text></g><g><title>std::path::Path::components (329,018,339 samples, 0.05%)</title><rect x="80.2185%" y="1157" width="0.0477%" height="15" fill="rgb(249,229,21)" fg:x="553448112078" fg:w="329018339"/><text x="80.4685%" y="1167.50"></text></g><g><title>std::path::Path::is_absolute (264,422,590 samples, 0.04%)</title><rect x="80.2665%" y="1157" width="0.0383%" height="15" fill="rgb(212,158,3)" fg:x="553779303556" fg:w="264422590"/><text x="80.5165%" y="1167.50"></text></g><g><title>std::sys::path::unix::is_absolute (113,946,582 samples, 0.02%)</title><rect x="80.2883%" y="1141" width="0.0165%" height="15" fill="rgb(253,26,48)" fg:x="553929779564" fg:w="113946582"/><text x="80.5383%" y="1151.50"></text></g><g><title>std::path::Path::has_root (113,946,582 samples, 0.02%)</title><rect x="80.2883%" y="1125" width="0.0165%" height="15" fill="rgb(238,178,20)" fg:x="553929779564" fg:w="113946582"/><text x="80.5383%" y="1135.50"></text></g><g><title>std::path::Path::components (113,946,582 samples, 0.02%)</title><rect x="80.2883%" y="1109" width="0.0165%" height="15" fill="rgb(208,86,15)" fg:x="553929779564" fg:w="113946582"/><text x="80.5383%" y="1119.50"></text></g><g><title>std::path::has_physical_root (113,946,582 samples, 0.02%)</title><rect x="80.2883%" y="1093" width="0.0165%" height="15" fill="rgb(239,42,53)" fg:x="553929779564" fg:w="113946582"/><text x="80.5383%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (190,242,687 samples, 0.03%)</title><rect x="80.4190%" y="1061" width="0.0276%" height="15" fill="rgb(245,226,8)" fg:x="554831064118" fg:w="190242687"/><text x="80.6690%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::iter_compare::compare::_{{closure}} (190,242,687 samples, 0.03%)</title><rect x="80.4190%" y="1045" width="0.0276%" height="15" fill="rgb(216,176,32)" fg:x="554831064118" fg:w="190242687"/><text x="80.6690%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp_by::compare::_{{closure}} (121,420,402 samples, 0.02%)</title><rect x="80.4289%" y="1029" width="0.0176%" height="15" fill="rgb(231,186,21)" fg:x="554899886403" fg:w="121420402"/><text x="80.6789%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp::_{{closure}} (118,220,496 samples, 0.02%)</title><rect x="80.4294%" y="1013" width="0.0171%" height="15" fill="rgb(205,95,49)" fg:x="554903086309" fg:w="118220496"/><text x="80.6794%" y="1023.50"></text></g><g><title>&lt;std::path::Component as core::cmp::Ord&gt;::cmp (118,220,496 samples, 0.02%)</title><rect x="80.4294%" y="997" width="0.0171%" height="15" fill="rgb(217,145,8)" fg:x="554903086309" fg:w="118220496"/><text x="80.6794%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp (418,310,283 samples, 0.06%)</title><rect x="80.3889%" y="1141" width="0.0606%" height="15" fill="rgb(239,144,48)" fg:x="554623675464" fg:w="418310283"/><text x="80.6389%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp_by (418,310,283 samples, 0.06%)</title><rect x="80.3889%" y="1125" width="0.0606%" height="15" fill="rgb(214,189,23)" fg:x="554623675464" fg:w="418310283"/><text x="80.6389%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::iter_compare (418,310,283 samples, 0.06%)</title><rect x="80.3889%" y="1109" width="0.0606%" height="15" fill="rgb(229,157,17)" fg:x="554623675464" fg:w="418310283"/><text x="80.6389%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (392,998,604 samples, 0.06%)</title><rect x="80.3926%" y="1093" width="0.0570%" height="15" fill="rgb(230,5,48)" fg:x="554648987143" fg:w="392998604"/><text x="80.6426%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (392,998,604 samples, 0.06%)</title><rect x="80.3926%" y="1077" width="0.0570%" height="15" fill="rgb(224,156,48)" fg:x="554648987143" fg:w="392998604"/><text x="80.6426%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,249,304,056 samples, 0.18%)</title><rect x="80.5084%" y="1109" width="0.1811%" height="15" fill="rgb(223,14,29)" fg:x="555447855649" fg:w="1249304056"/><text x="80.7584%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1,249,304,056 samples, 0.18%)</title><rect x="80.5084%" y="1093" width="0.1811%" height="15" fill="rgb(229,96,36)" fg:x="555447855649" fg:w="1249304056"/><text x="80.7584%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (2,497,309,647 samples, 0.36%)</title><rect x="80.4495%" y="1141" width="0.3620%" height="15" fill="rgb(231,102,53)" fg:x="555041985747" fg:w="2497309647"/><text x="80.6995%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,497,309,647 samples, 0.36%)</title><rect x="80.4495%" y="1125" width="0.3620%" height="15" fill="rgb(210,77,38)" fg:x="555041985747" fg:w="2497309647"/><text x="80.6995%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position::check::_{{closure}} (842,135,689 samples, 0.12%)</title><rect x="80.6894%" y="1109" width="0.1221%" height="15" fill="rgb(235,131,6)" fg:x="556697159705" fg:w="842135689"/><text x="80.9394%" y="1119.50"></text></g><g><title>std::path::compare_components::_{{closure}} (842,135,689 samples, 0.12%)</title><rect x="80.6894%" y="1093" width="0.1221%" height="15" fill="rgb(252,55,38)" fg:x="556697159705" fg:w="842135689"/><text x="80.9394%" y="1103.50"></text></g><g><title>std::path::compare_components (3,565,985,936 samples, 0.52%)</title><rect x="80.3073%" y="1157" width="0.5169%" height="15" fill="rgb(246,38,14)" fg:x="554060467063" fg:w="3565985936"/><text x="80.5573%" y="1167.50"></text></g><g><title>&lt;walkdir::FilterEntry&lt;walkdir::IntoIter,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (79,833,348 samples, 0.01%)</title><rect x="80.8247%" y="709" width="0.0116%" height="15" fill="rgb(242,27,5)" fg:x="557630465222" fg:w="79833348"/><text x="81.0747%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (164,251,519 samples, 0.02%)</title><rect x="80.8247%" y="805" width="0.0238%" height="15" fill="rgb(228,65,35)" fg:x="557630465222" fg:w="164251519"/><text x="81.0747%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (164,251,519 samples, 0.02%)</title><rect x="80.8247%" y="789" width="0.0238%" height="15" fill="rgb(245,93,11)" fg:x="557630465222" fg:w="164251519"/><text x="81.0747%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (164,251,519 samples, 0.02%)</title><rect x="80.8247%" y="773" width="0.0238%" height="15" fill="rgb(213,1,31)" fg:x="557630465222" fg:w="164251519"/><text x="81.0747%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (164,251,519 samples, 0.02%)</title><rect x="80.8247%" y="757" width="0.0238%" height="15" fill="rgb(237,205,14)" fg:x="557630465222" fg:w="164251519"/><text x="81.0747%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (164,251,519 samples, 0.02%)</title><rect x="80.8247%" y="741" width="0.0238%" height="15" fill="rgb(232,118,45)" fg:x="557630465222" fg:w="164251519"/><text x="81.0747%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (164,251,519 samples, 0.02%)</title><rect x="80.8247%" y="725" width="0.0238%" height="15" fill="rgb(218,5,6)" fg:x="557630465222" fg:w="164251519"/><text x="81.0747%" y="735.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_try_fold::_{{closure}} (84,418,171 samples, 0.01%)</title><rect x="80.8363%" y="709" width="0.0122%" height="15" fill="rgb(251,87,51)" fg:x="557710298570" fg:w="84418171"/><text x="81.0863%" y="719.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (84,418,171 samples, 0.01%)</title><rect x="80.8363%" y="693" width="0.0122%" height="15" fill="rgb(207,225,20)" fg:x="557710298570" fg:w="84418171"/><text x="81.0863%" y="703.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (69,210,773 samples, 0.01%)</title><rect x="80.8485%" y="725" width="0.0100%" height="15" fill="rgb(222,78,54)" fg:x="557794716741" fg:w="69210773"/><text x="81.0985%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (75,618,936 samples, 0.01%)</title><rect x="80.8756%" y="581" width="0.0110%" height="15" fill="rgb(232,85,16)" fg:x="557981700174" fg:w="75618936"/><text x="81.1256%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (75,618,936 samples, 0.01%)</title><rect x="80.8756%" y="565" width="0.0110%" height="15" fill="rgb(244,25,33)" fg:x="557981700174" fg:w="75618936"/><text x="81.1256%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (154,557,251 samples, 0.02%)</title><rect x="80.8713%" y="613" width="0.0224%" height="15" fill="rgb(233,24,36)" fg:x="557951828286" fg:w="154557251"/><text x="81.1213%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (154,557,251 samples, 0.02%)</title><rect x="80.8713%" y="597" width="0.0224%" height="15" fill="rgb(253,49,54)" fg:x="557951828286" fg:w="154557251"/><text x="81.1213%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp (191,341,307 samples, 0.03%)</title><rect x="80.8663%" y="709" width="0.0277%" height="15" fill="rgb(245,12,22)" fg:x="557917157519" fg:w="191341307"/><text x="81.1163%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp_by (191,341,307 samples, 0.03%)</title><rect x="80.8663%" y="693" width="0.0277%" height="15" fill="rgb(253,141,28)" fg:x="557917157519" fg:w="191341307"/><text x="81.1163%" y="703.50"></text></g><g><title>core::iter::traits::iterator::iter_compare (191,341,307 samples, 0.03%)</title><rect x="80.8663%" y="677" width="0.0277%" height="15" fill="rgb(225,207,27)" fg:x="557917157519" fg:w="191341307"/><text x="81.1163%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (189,089,570 samples, 0.03%)</title><rect x="80.8666%" y="661" width="0.0274%" height="15" fill="rgb(220,84,2)" fg:x="557919409256" fg:w="189089570"/><text x="81.1166%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (189,089,570 samples, 0.03%)</title><rect x="80.8666%" y="645" width="0.0274%" height="15" fill="rgb(224,37,37)" fg:x="557919409256" fg:w="189089570"/><text x="81.1166%" y="655.50"></text></g><g><title>std::path::compare_components (163,410,268 samples, 0.02%)</title><rect x="80.8703%" y="629" width="0.0237%" height="15" fill="rgb(220,143,18)" fg:x="557945088558" fg:w="163410268"/><text x="81.1203%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (351,489,738 samples, 0.05%)</title><rect x="80.8485%" y="805" width="0.0509%" height="15" fill="rgb(210,88,33)" fg:x="557794716741" fg:w="351489738"/><text x="81.0985%" y="815.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (351,489,738 samples, 0.05%)</title><rect x="80.8485%" y="789" width="0.0509%" height="15" fill="rgb(219,87,51)" fg:x="557794716741" fg:w="351489738"/><text x="81.0985%" y="799.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (351,489,738 samples, 0.05%)</title><rect x="80.8485%" y="773" width="0.0509%" height="15" fill="rgb(211,7,35)" fg:x="557794716741" fg:w="351489738"/><text x="81.0985%" y="783.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (351,489,738 samples, 0.05%)</title><rect x="80.8485%" y="757" width="0.0509%" height="15" fill="rgb(232,77,2)" fg:x="557794716741" fg:w="351489738"/><text x="81.0985%" y="767.50"></text></g><g><title>&lt;std::path::Path as core::cmp::Ord&gt;::cmp (351,489,738 samples, 0.05%)</title><rect x="80.8485%" y="741" width="0.0509%" height="15" fill="rgb(249,94,25)" fg:x="557794716741" fg:w="351489738"/><text x="81.0985%" y="751.50"></text></g><g><title>std::path::compare_components (274,653,067 samples, 0.04%)</title><rect x="80.8597%" y="725" width="0.0398%" height="15" fill="rgb(215,112,2)" fg:x="557871553412" fg:w="274653067"/><text x="81.1097%" y="735.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (107,299,457 samples, 0.02%)</title><rect x="81.2067%" y="677" width="0.0156%" height="15" fill="rgb(226,115,48)" fg:x="560265970174" fg:w="107299457"/><text x="81.4567%" y="687.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (107,299,457 samples, 0.02%)</title><rect x="81.2067%" y="661" width="0.0156%" height="15" fill="rgb(249,196,10)" fg:x="560265970174" fg:w="107299457"/><text x="81.4567%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (353,319,097 samples, 0.05%)</title><rect x="81.2927%" y="645" width="0.0512%" height="15" fill="rgb(237,109,14)" fg:x="560859450181" fg:w="353319097"/><text x="81.5427%" y="655.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (353,319,097 samples, 0.05%)</title><rect x="81.2927%" y="629" width="0.0512%" height="15" fill="rgb(217,103,53)" fg:x="560859450181" fg:w="353319097"/><text x="81.5427%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (1,673,519,563 samples, 0.24%)</title><rect x="81.2368%" y="661" width="0.2426%" height="15" fill="rgb(244,137,9)" fg:x="560473355355" fg:w="1673519563"/><text x="81.4868%" y="671.50"></text></g><g><title>std::path::Components::parse_next_component::_{{closure}} (934,105,640 samples, 0.14%)</title><rect x="81.3440%" y="645" width="0.1354%" height="15" fill="rgb(227,201,3)" fg:x="561212769278" fg:w="934105640"/><text x="81.5940%" y="655.50"></text></g><g><title>std::path::Components::is_sep_byte (934,105,640 samples, 0.14%)</title><rect x="81.3440%" y="629" width="0.1354%" height="15" fill="rgb(243,94,6)" fg:x="561212769278" fg:w="934105640"/><text x="81.5940%" y="639.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (4,305,474,042 samples, 0.62%)</title><rect x="80.8996%" y="693" width="0.6240%" height="15" fill="rgb(235,118,5)" fg:x="558147241760" fg:w="4305474042"/><text x="81.1496%" y="703.50"></text></g><g><title>std::path::Components::parse_next_component (2,039,247,393 samples, 0.30%)</title><rect x="81.2281%" y="677" width="0.2956%" height="15" fill="rgb(247,10,30)" fg:x="560413468409" fg:w="2039247393"/><text x="81.4781%" y="687.50"></text></g><g><title>std::path::Components::parse_single_component (305,840,884 samples, 0.04%)</title><rect x="81.4793%" y="661" width="0.0443%" height="15" fill="rgb(205,26,28)" fg:x="562146874918" fg:w="305840884"/><text x="81.7293%" y="671.50"></text></g><g><title>std::path::Path::components (112,773,076 samples, 0.02%)</title><rect x="81.5296%" y="693" width="0.0163%" height="15" fill="rgb(206,99,35)" fg:x="562493739610" fg:w="112773076"/><text x="81.7796%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::rposition (164,497,688 samples, 0.02%)</title><rect x="81.6532%" y="677" width="0.0238%" height="15" fill="rgb(238,130,40)" fg:x="563346181848" fg:w="164497688"/><text x="81.9032%" y="687.50"></text></g><g><title>std::path::compare_components::_{{closure}} (84,575,223 samples, 0.01%)</title><rect x="81.6648%" y="661" width="0.0123%" height="15" fill="rgb(224,126,31)" fg:x="563426104313" fg:w="84575223"/><text x="81.9148%" y="671.50"></text></g><g><title>std::path::Components::is_sep_byte (84,575,223 samples, 0.01%)</title><rect x="81.6648%" y="645" width="0.0123%" height="15" fill="rgb(254,105,17)" fg:x="563426104313" fg:w="84575223"/><text x="81.9148%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (270,276,098 samples, 0.04%)</title><rect x="81.7965%" y="565" width="0.0392%" height="15" fill="rgb(216,87,36)" fg:x="564335156804" fg:w="270276098"/><text x="82.0465%" y="575.50"></text></g><g><title>std::path::Components::parse_next_component::_{{closure}} (136,806,352 samples, 0.02%)</title><rect x="81.8159%" y="549" width="0.0198%" height="15" fill="rgb(240,21,12)" fg:x="564468626550" fg:w="136806352"/><text x="82.0659%" y="559.50"></text></g><g><title>std::path::Components::is_sep_byte (136,806,352 samples, 0.02%)</title><rect x="81.8159%" y="533" width="0.0198%" height="15" fill="rgb(245,192,34)" fg:x="564468626550" fg:w="136806352"/><text x="82.0659%" y="543.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (697,396,473 samples, 0.10%)</title><rect x="81.7443%" y="597" width="0.1011%" height="15" fill="rgb(226,100,49)" fg:x="563974752247" fg:w="697396473"/><text x="81.9943%" y="607.50"></text></g><g><title>std::path::Components::parse_next_component (351,465,562 samples, 0.05%)</title><rect x="81.7944%" y="581" width="0.0509%" height="15" fill="rgb(245,188,27)" fg:x="564320683158" fg:w="351465562"/><text x="82.0444%" y="591.50"></text></g><g><title>__memcmp_evex_movbe (140,193,002 samples, 0.02%)</title><rect x="81.8467%" y="581" width="0.0203%" height="15" fill="rgb(212,170,8)" fg:x="564681194358" fg:w="140193002"/><text x="82.0967%" y="591.50"></text></g><g><title>[unknown] (199,632,183 samples, 0.03%)</title><rect x="81.8454%" y="597" width="0.0289%" height="15" fill="rgb(217,113,29)" fg:x="564672148720" fg:w="199632183"/><text x="82.0954%" y="607.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (79,739,145 samples, 0.01%)</title><rect x="81.8977%" y="565" width="0.0116%" height="15" fill="rgb(237,30,3)" fg:x="565033103439" fg:w="79739145"/><text x="82.1477%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp_by::compare::_{{closure}} (341,328,999 samples, 0.05%)</title><rect x="81.9094%" y="565" width="0.0495%" height="15" fill="rgb(227,19,28)" fg:x="565113972663" fg:w="341328999"/><text x="82.1594%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp::_{{closure}} (330,222,956 samples, 0.05%)</title><rect x="81.9110%" y="549" width="0.0479%" height="15" fill="rgb(239,172,45)" fg:x="565125078706" fg:w="330222956"/><text x="82.1610%" y="559.50"></text></g><g><title>&lt;std::path::Component as core::cmp::Ord&gt;::cmp (330,222,956 samples, 0.05%)</title><rect x="81.9110%" y="533" width="0.0479%" height="15" fill="rgb(254,55,39)" fg:x="565125078706" fg:w="330222956"/><text x="82.1610%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (619,207,106 samples, 0.09%)</title><rect x="81.8770%" y="597" width="0.0897%" height="15" fill="rgb(249,208,12)" fg:x="564890679761" fg:w="619207106"/><text x="82.1270%" y="607.50"></text></g><g><title>core::iter::traits::iterator::iter_compare::compare::_{{closure}} (619,207,106 samples, 0.09%)</title><rect x="81.8770%" y="581" width="0.0897%" height="15" fill="rgb(240,52,13)" fg:x="564890679761" fg:w="619207106"/><text x="82.1270%" y="591.50"></text></g><g><title>std::path::Path::components (327,947,796 samples, 0.05%)</title><rect x="81.9668%" y="597" width="0.0475%" height="15" fill="rgb(252,149,13)" fg:x="565509886867" fg:w="327947796"/><text x="82.2168%" y="607.50"></text></g><g><title>std::path::has_physical_root (124,571,696 samples, 0.02%)</title><rect x="81.9963%" y="581" width="0.0181%" height="15" fill="rgb(232,81,48)" fg:x="565713262967" fg:w="124571696"/><text x="82.2463%" y="591.50"></text></g><g><title>std::sys::path::unix::is_sep_byte (100,322,614 samples, 0.01%)</title><rect x="81.9998%" y="565" width="0.0145%" height="15" fill="rgb(222,144,2)" fg:x="565737512049" fg:w="100322614"/><text x="82.2498%" y="575.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::rposition (200,824,230 samples, 0.03%)</title><rect x="82.0521%" y="581" width="0.0291%" height="15" fill="rgb(216,81,32)" fg:x="566098604117" fg:w="200824230"/><text x="82.3021%" y="591.50"></text></g><g><title>std::path::compare_components::_{{closure}} (90,572,677 samples, 0.01%)</title><rect x="82.0681%" y="565" width="0.0131%" height="15" fill="rgb(244,78,51)" fg:x="566208855670" fg:w="90572677"/><text x="82.3181%" y="575.50"></text></g><g><title>std::path::Components::is_sep_byte (90,572,677 samples, 0.01%)</title><rect x="82.0681%" y="549" width="0.0131%" height="15" fill="rgb(217,66,21)" fg:x="566208855670" fg:w="90572677"/><text x="82.3181%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp (349,646,260 samples, 0.05%)</title><rect x="82.0862%" y="581" width="0.0507%" height="15" fill="rgb(247,101,42)" fg:x="566333736926" fg:w="349646260"/><text x="82.3362%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp_by (349,646,260 samples, 0.05%)</title><rect x="82.0862%" y="565" width="0.0507%" height="15" fill="rgb(227,81,39)" fg:x="566333736926" fg:w="349646260"/><text x="82.3362%" y="575.50"></text></g><g><title>core::iter::traits::iterator::iter_compare (349,646,260 samples, 0.05%)</title><rect x="82.0862%" y="549" width="0.0507%" height="15" fill="rgb(220,223,44)" fg:x="566333736926" fg:w="349646260"/><text x="82.3362%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (349,646,260 samples, 0.05%)</title><rect x="82.0862%" y="533" width="0.0507%" height="15" fill="rgb(205,218,2)" fg:x="566333736926" fg:w="349646260"/><text x="82.3362%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (349,646,260 samples, 0.05%)</title><rect x="82.0862%" y="517" width="0.0507%" height="15" fill="rgb(212,207,28)" fg:x="566333736926" fg:w="349646260"/><text x="82.3362%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (347,415,839 samples, 0.05%)</title><rect x="82.0865%" y="501" width="0.0504%" height="15" fill="rgb(224,12,41)" fg:x="566335967347" fg:w="347415839"/><text x="82.3365%" y="511.50"></text></g><g><title>core::iter::traits::iterator::iter_compare::compare::_{{closure}} (347,415,839 samples, 0.05%)</title><rect x="82.0865%" y="485" width="0.0504%" height="15" fill="rgb(216,118,12)" fg:x="566335967347" fg:w="347415839"/><text x="82.3365%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp_by::compare::_{{closure}} (310,000,212 samples, 0.04%)</title><rect x="82.0919%" y="469" width="0.0449%" height="15" fill="rgb(252,97,46)" fg:x="566373382974" fg:w="310000212"/><text x="82.3419%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp::_{{closure}} (302,158,396 samples, 0.04%)</title><rect x="82.0931%" y="453" width="0.0438%" height="15" fill="rgb(244,206,19)" fg:x="566381224790" fg:w="302158396"/><text x="82.3431%" y="463.50"></text></g><g><title>&lt;std::path::Component as core::cmp::Ord&gt;::cmp (302,158,396 samples, 0.04%)</title><rect x="82.0931%" y="437" width="0.0438%" height="15" fill="rgb(231,84,31)" fg:x="566381224790" fg:w="302158396"/><text x="82.3431%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,673,963,347 samples, 0.53%)</title><rect x="82.3207%" y="549" width="0.5325%" height="15" fill="rgb(244,133,0)" fg:x="567951343829" fg:w="3673963347"/><text x="82.5707%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (3,673,963,347 samples, 0.53%)</title><rect x="82.3207%" y="533" width="0.5325%" height="15" fill="rgb(223,15,50)" fg:x="567951343829" fg:w="3673963347"/><text x="82.5707%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (7,354,908,545 samples, 1.07%)</title><rect x="82.1369%" y="581" width="1.0660%" height="15" fill="rgb(250,118,49)" fg:x="566683383186" fg:w="7354908545"/><text x="82.3869%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7,354,908,545 samples, 1.07%)</title><rect x="82.1369%" y="565" width="1.0660%" height="15" fill="rgb(248,25,38)" fg:x="566683383186" fg:w="7354908545"/><text x="82.3869%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position::check::_{{closure}} (2,412,984,555 samples, 0.35%)</title><rect x="82.8532%" y="549" width="0.3497%" height="15" fill="rgb(215,70,14)" fg:x="571625307176" fg:w="2412984555"/><text x="83.1032%" y="559.50"></text></g><g><title>std::path::compare_components::_{{closure}} (2,412,984,555 samples, 0.35%)</title><rect x="82.8532%" y="533" width="0.3497%" height="15" fill="rgb(215,28,15)" fg:x="571625307176" fg:w="2412984555"/><text x="83.1032%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (115,683,273 samples, 0.02%)</title><rect x="83.2077%" y="581" width="0.0168%" height="15" fill="rgb(243,6,28)" fg:x="574071389421" fg:w="115683273"/><text x="83.4577%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (115,683,273 samples, 0.02%)</title><rect x="83.2077%" y="565" width="0.0168%" height="15" fill="rgb(222,130,1)" fg:x="574071389421" fg:w="115683273"/><text x="83.4577%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp (10,668,424,975 samples, 1.55%)</title><rect x="81.6809%" y="677" width="1.5463%" height="15" fill="rgb(236,166,44)" fg:x="563537482322" fg:w="10668424975"/><text x="81.9309%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp_by (10,668,424,975 samples, 1.55%)</title><rect x="81.6809%" y="661" width="1.5463%" height="15" fill="rgb(221,108,14)" fg:x="563537482322" fg:w="10668424975"/><text x="81.9309%" y="671.50"></text></g><g><title>core::iter::traits::iterator::iter_compare (10,668,424,975 samples, 1.55%)</title><rect x="81.6809%" y="645" width="1.5463%" height="15" fill="rgb(252,3,45)" fg:x="563537482322" fg:w="10668424975"/><text x="81.9309%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (10,617,800,999 samples, 1.54%)</title><rect x="81.6882%" y="629" width="1.5390%" height="15" fill="rgb(237,68,30)" fg:x="563588106298" fg:w="10617800999"/><text x="81.9382%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10,617,800,999 samples, 1.54%)</title><rect x="81.6882%" y="613" width="1.5390%" height="15" fill="rgb(211,79,22)" fg:x="563588106298" fg:w="10617800999"/><text x="81.9382%" y="623.50"></text></g><g><title>std::path::compare_components (8,368,072,634 samples, 1.21%)</title><rect x="82.0143%" y="597" width="1.2129%" height="15" fill="rgb(252,185,21)" fg:x="565837834663" fg:w="8368072634"/><text x="82.2643%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (667,141,426 samples, 0.10%)</title><rect x="83.2573%" y="645" width="0.0967%" height="15" fill="rgb(225,189,26)" fg:x="574413137163" fg:w="667141426"/><text x="83.5073%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (667,141,426 samples, 0.10%)</title><rect x="83.2573%" y="629" width="0.0967%" height="15" fill="rgb(241,30,40)" fg:x="574413137163" fg:w="667141426"/><text x="83.5073%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (1,356,230,087 samples, 0.20%)</title><rect x="83.2272%" y="677" width="0.1966%" height="15" fill="rgb(235,215,44)" fg:x="574205907297" fg:w="1356230087"/><text x="83.4772%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,356,230,087 samples, 0.20%)</title><rect x="83.2272%" y="661" width="0.1966%" height="15" fill="rgb(205,8,29)" fg:x="574205907297" fg:w="1356230087"/><text x="83.4772%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position::check::_{{closure}} (481,858,795 samples, 0.07%)</title><rect x="83.3540%" y="645" width="0.0698%" height="15" fill="rgb(241,137,42)" fg:x="575080278589" fg:w="481858795"/><text x="83.6040%" y="655.50"></text></g><g><title>std::path::compare_components::_{{closure}} (448,483,123 samples, 0.07%)</title><rect x="83.3588%" y="629" width="0.0650%" height="15" fill="rgb(237,155,2)" fg:x="575113654261" fg:w="448483123"/><text x="83.6088%" y="639.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (105,833,226 samples, 0.02%)</title><rect x="83.4299%" y="661" width="0.0153%" height="15" fill="rgb(245,29,42)" fg:x="575604386211" fg:w="105833226"/><text x="83.6799%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (17,575,186,655 samples, 2.55%)</title><rect x="80.8996%" y="789" width="2.5474%" height="15" fill="rgb(234,101,35)" fg:x="558147241760" fg:w="17575186655"/><text x="81.1496%" y="799.50">al..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (17,575,186,655 samples, 2.55%)</title><rect x="80.8996%" y="773" width="2.5474%" height="15" fill="rgb(228,64,37)" fg:x="558147241760" fg:w="17575186655"/><text x="81.1496%" y="783.50">al..</text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (17,575,186,655 samples, 2.55%)</title><rect x="80.8996%" y="757" width="2.5474%" height="15" fill="rgb(217,214,36)" fg:x="558147241760" fg:w="17575186655"/><text x="81.1496%" y="767.50">al..</text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (17,575,186,655 samples, 2.55%)</title><rect x="80.8996%" y="741" width="2.5474%" height="15" fill="rgb(243,70,3)" fg:x="558147241760" fg:w="17575186655"/><text x="81.1496%" y="751.50">al..</text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (17,575,186,655 samples, 2.55%)</title><rect x="80.8996%" y="725" width="2.5474%" height="15" fill="rgb(253,158,52)" fg:x="558147241760" fg:w="17575186655"/><text x="81.1496%" y="735.50">al..</text></g><g><title>&lt;std::path::Path as core::cmp::Ord&gt;::cmp (17,575,186,655 samples, 2.55%)</title><rect x="80.8996%" y="709" width="2.5474%" height="15" fill="rgb(234,111,54)" fg:x="558147241760" fg:w="17575186655"/><text x="81.1496%" y="719.50">&lt;s..</text></g><g><title>std::path::compare_components (13,115,915,729 samples, 1.90%)</title><rect x="81.5460%" y="693" width="1.9011%" height="15" fill="rgb(217,70,32)" fg:x="562606512686" fg:w="13115915729"/><text x="81.7960%" y="703.50">s..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (118,042,204 samples, 0.02%)</title><rect x="83.4299%" y="677" width="0.0171%" height="15" fill="rgb(234,18,33)" fg:x="575604386211" fg:w="118042204"/><text x="83.6799%" y="687.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (125,022,634 samples, 0.02%)</title><rect x="83.7669%" y="693" width="0.0181%" height="15" fill="rgb(234,12,49)" fg:x="577929227196" fg:w="125022634"/><text x="84.0169%" y="703.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (125,022,634 samples, 0.02%)</title><rect x="83.7669%" y="677" width="0.0181%" height="15" fill="rgb(236,10,21)" fg:x="577929227196" fg:w="125022634"/><text x="84.0169%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (372,423,644 samples, 0.05%)</title><rect x="83.8579%" y="661" width="0.0540%" height="15" fill="rgb(248,182,45)" fg:x="578557278009" fg:w="372423644"/><text x="84.1079%" y="671.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (372,423,644 samples, 0.05%)</title><rect x="83.8579%" y="645" width="0.0540%" height="15" fill="rgb(217,95,36)" fg:x="578557278009" fg:w="372423644"/><text x="84.1079%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (1,658,330,106 samples, 0.24%)</title><rect x="83.8000%" y="677" width="0.2404%" height="15" fill="rgb(212,110,31)" fg:x="578157881523" fg:w="1658330106"/><text x="84.0500%" y="687.50"></text></g><g><title>std::path::Components::parse_next_component::_{{closure}} (886,509,976 samples, 0.13%)</title><rect x="83.9119%" y="661" width="0.1285%" height="15" fill="rgb(206,32,53)" fg:x="578929701653" fg:w="886509976"/><text x="84.1619%" y="671.50"></text></g><g><title>std::path::Components::is_sep_byte (886,509,976 samples, 0.13%)</title><rect x="83.9119%" y="645" width="0.1285%" height="15" fill="rgb(246,141,37)" fg:x="578929701653" fg:w="886509976"/><text x="84.1619%" y="655.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (4,417,368,469 samples, 0.64%)</title><rect x="83.4470%" y="709" width="0.6403%" height="15" fill="rgb(219,16,7)" fg:x="575722428415" fg:w="4417368469"/><text x="83.6970%" y="719.50"></text></g><g><title>std::path::Components::parse_next_component (2,048,608,449 samples, 0.30%)</title><rect x="83.7904%" y="693" width="0.2969%" height="15" fill="rgb(230,205,45)" fg:x="578091188435" fg:w="2048608449"/><text x="84.0404%" y="703.50"></text></g><g><title>std::path::Components::parse_single_component (323,585,255 samples, 0.05%)</title><rect x="84.0404%" y="677" width="0.0469%" height="15" fill="rgb(231,43,49)" fg:x="579816211629" fg:w="323585255"/><text x="84.2904%" y="687.50"></text></g><g><title>std::path::Path::components (119,228,507 samples, 0.02%)</title><rect x="84.0873%" y="709" width="0.0173%" height="15" fill="rgb(212,106,34)" fg:x="580139796884" fg:w="119228507"/><text x="84.3373%" y="719.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::rposition (209,688,153 samples, 0.03%)</title><rect x="84.2202%" y="693" width="0.0304%" height="15" fill="rgb(206,83,17)" fg:x="581056498775" fg:w="209688153"/><text x="84.4702%" y="703.50"></text></g><g><title>std::path::compare_components::_{{closure}} (102,970,176 samples, 0.01%)</title><rect x="84.2356%" y="677" width="0.0149%" height="15" fill="rgb(244,154,49)" fg:x="581163216752" fg:w="102970176"/><text x="84.4856%" y="687.50"></text></g><g><title>std::path::Components::is_sep_byte (102,970,176 samples, 0.01%)</title><rect x="84.2356%" y="661" width="0.0149%" height="15" fill="rgb(244,149,49)" fg:x="581163216752" fg:w="102970176"/><text x="84.4856%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (271,277,168 samples, 0.04%)</title><rect x="84.3679%" y="581" width="0.0393%" height="15" fill="rgb(227,134,18)" fg:x="582075562719" fg:w="271277168"/><text x="84.6179%" y="591.50"></text></g><g><title>std::path::Components::parse_next_component::_{{closure}} (143,855,482 samples, 0.02%)</title><rect x="84.3863%" y="565" width="0.0209%" height="15" fill="rgb(237,116,36)" fg:x="582202984405" fg:w="143855482"/><text x="84.6363%" y="575.50"></text></g><g><title>std::path::Components::is_sep_byte (143,855,482 samples, 0.02%)</title><rect x="84.3863%" y="549" width="0.0209%" height="15" fill="rgb(205,129,40)" fg:x="582202984405" fg:w="143855482"/><text x="84.6363%" y="559.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (663,253,864 samples, 0.10%)</title><rect x="84.3172%" y="613" width="0.0961%" height="15" fill="rgb(236,178,4)" fg:x="581725882073" fg:w="663253864"/><text x="84.5672%" y="623.50"></text></g><g><title>std::path::Components::parse_next_component (330,060,493 samples, 0.05%)</title><rect x="84.3655%" y="597" width="0.0478%" height="15" fill="rgb(251,76,53)" fg:x="582059075444" fg:w="330060493"/><text x="84.6155%" y="607.50"></text></g><g><title>__memcmp_evex_movbe (113,657,726 samples, 0.02%)</title><rect x="84.4133%" y="597" width="0.0165%" height="15" fill="rgb(242,92,40)" fg:x="582389135937" fg:w="113657726"/><text x="84.6633%" y="607.50"></text></g><g><title>[unknown] (159,322,670 samples, 0.02%)</title><rect x="84.4133%" y="613" width="0.0231%" height="15" fill="rgb(209,45,30)" fg:x="582389135937" fg:w="159322670"/><text x="84.6633%" y="623.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (82,889,735 samples, 0.01%)</title><rect x="84.4540%" y="581" width="0.0120%" height="15" fill="rgb(218,157,36)" fg:x="582669756640" fg:w="82889735"/><text x="84.7040%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp_by::compare::_{{closure}} (356,889,599 samples, 0.05%)</title><rect x="84.4663%" y="581" width="0.0517%" height="15" fill="rgb(222,186,16)" fg:x="582754850565" fg:w="356889599"/><text x="84.7163%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp::_{{closure}} (346,991,279 samples, 0.05%)</title><rect x="84.4678%" y="565" width="0.0503%" height="15" fill="rgb(254,72,35)" fg:x="582764748885" fg:w="346991279"/><text x="84.7178%" y="575.50"></text></g><g><title>&lt;std::path::Component as core::cmp::Ord&gt;::cmp (346,991,279 samples, 0.05%)</title><rect x="84.4678%" y="549" width="0.0503%" height="15" fill="rgb(224,25,35)" fg:x="582764748885" fg:w="346991279"/><text x="84.7178%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (623,279,742 samples, 0.09%)</title><rect x="84.4372%" y="613" width="0.0903%" height="15" fill="rgb(206,135,52)" fg:x="582554030442" fg:w="623279742"/><text x="84.6872%" y="623.50"></text></g><g><title>core::iter::traits::iterator::iter_compare::compare::_{{closure}} (623,279,742 samples, 0.09%)</title><rect x="84.4372%" y="597" width="0.0903%" height="15" fill="rgb(229,174,47)" fg:x="582554030442" fg:w="623279742"/><text x="84.6872%" y="607.50"></text></g><g><title>std::path::Path::components (267,463,570 samples, 0.04%)</title><rect x="84.5276%" y="613" width="0.0388%" height="15" fill="rgb(242,184,21)" fg:x="583177310184" fg:w="267463570"/><text x="84.7776%" y="623.50"></text></g><g><title>std::path::has_physical_root (73,807,529 samples, 0.01%)</title><rect x="84.5556%" y="597" width="0.0107%" height="15" fill="rgb(213,22,45)" fg:x="583370966225" fg:w="73807529"/><text x="84.8056%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::rposition (218,190,559 samples, 0.03%)</title><rect x="84.6036%" y="597" width="0.0316%" height="15" fill="rgb(237,81,54)" fg:x="583701782904" fg:w="218190559"/><text x="84.8536%" y="607.50"></text></g><g><title>std::path::compare_components::_{{closure}} (121,071,412 samples, 0.02%)</title><rect x="84.6177%" y="581" width="0.0175%" height="15" fill="rgb(248,177,18)" fg:x="583798902051" fg:w="121071412"/><text x="84.8677%" y="591.50"></text></g><g><title>std::path::Components::is_sep_byte (121,071,412 samples, 0.02%)</title><rect x="84.6177%" y="565" width="0.0175%" height="15" fill="rgb(254,31,16)" fg:x="583798902051" fg:w="121071412"/><text x="84.8677%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp (325,574,749 samples, 0.05%)</title><rect x="84.6399%" y="597" width="0.0472%" height="15" fill="rgb(235,20,31)" fg:x="583952357513" fg:w="325574749"/><text x="84.8899%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp_by (325,574,749 samples, 0.05%)</title><rect x="84.6399%" y="581" width="0.0472%" height="15" fill="rgb(240,56,43)" fg:x="583952357513" fg:w="325574749"/><text x="84.8899%" y="591.50"></text></g><g><title>core::iter::traits::iterator::iter_compare (325,574,749 samples, 0.05%)</title><rect x="84.6399%" y="565" width="0.0472%" height="15" fill="rgb(237,197,51)" fg:x="583952357513" fg:w="325574749"/><text x="84.8899%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (325,574,749 samples, 0.05%)</title><rect x="84.6399%" y="549" width="0.0472%" height="15" fill="rgb(241,162,44)" fg:x="583952357513" fg:w="325574749"/><text x="84.8899%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (325,574,749 samples, 0.05%)</title><rect x="84.6399%" y="533" width="0.0472%" height="15" fill="rgb(224,23,20)" fg:x="583952357513" fg:w="325574749"/><text x="84.8899%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (325,574,749 samples, 0.05%)</title><rect x="84.6399%" y="517" width="0.0472%" height="15" fill="rgb(250,109,34)" fg:x="583952357513" fg:w="325574749"/><text x="84.8899%" y="527.50"></text></g><g><title>core::iter::traits::iterator::iter_compare::compare::_{{closure}} (325,574,749 samples, 0.05%)</title><rect x="84.6399%" y="501" width="0.0472%" height="15" fill="rgb(214,175,50)" fg:x="583952357513" fg:w="325574749"/><text x="84.8899%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp_by::compare::_{{closure}} (277,722,716 samples, 0.04%)</title><rect x="84.6468%" y="485" width="0.0403%" height="15" fill="rgb(213,182,5)" fg:x="584000209546" fg:w="277722716"/><text x="84.8968%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp::_{{closure}} (270,014,430 samples, 0.04%)</title><rect x="84.6480%" y="469" width="0.0391%" height="15" fill="rgb(209,199,19)" fg:x="584007917832" fg:w="270014430"/><text x="84.8980%" y="479.50"></text></g><g><title>&lt;std::path::Component as core::cmp::Ord&gt;::cmp (270,014,430 samples, 0.04%)</title><rect x="84.6480%" y="453" width="0.0391%" height="15" fill="rgb(236,224,42)" fg:x="584007917832" fg:w="270014430"/><text x="84.8980%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,534,356,568 samples, 0.51%)</title><rect x="84.8684%" y="565" width="0.5123%" height="15" fill="rgb(246,226,29)" fg:x="585528697135" fg:w="3534356568"/><text x="85.1184%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (3,534,356,568 samples, 0.51%)</title><rect x="84.8684%" y="549" width="0.5123%" height="15" fill="rgb(227,223,11)" fg:x="585528697135" fg:w="3534356568"/><text x="85.1184%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (7,254,671,259 samples, 1.05%)</title><rect x="84.6871%" y="597" width="1.0515%" height="15" fill="rgb(219,7,51)" fg:x="584277932262" fg:w="7254671259"/><text x="84.9371%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7,254,671,259 samples, 1.05%)</title><rect x="84.6871%" y="581" width="1.0515%" height="15" fill="rgb(245,167,10)" fg:x="584277932262" fg:w="7254671259"/><text x="84.9371%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position::check::_{{closure}} (2,469,549,818 samples, 0.36%)</title><rect x="85.3807%" y="565" width="0.3579%" height="15" fill="rgb(237,224,16)" fg:x="589063053703" fg:w="2469549818"/><text x="85.6307%" y="575.50"></text></g><g><title>std::path::compare_components::_{{closure}} (2,469,549,818 samples, 0.36%)</title><rect x="85.3807%" y="549" width="0.3579%" height="15" fill="rgb(226,132,13)" fg:x="589063053703" fg:w="2469549818"/><text x="85.6307%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (136,778,686 samples, 0.02%)</title><rect x="85.7449%" y="597" width="0.0198%" height="15" fill="rgb(214,140,3)" fg:x="591575762076" fg:w="136778686"/><text x="85.9949%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (136,778,686 samples, 0.02%)</title><rect x="85.7449%" y="581" width="0.0198%" height="15" fill="rgb(221,177,4)" fg:x="591575762076" fg:w="136778686"/><text x="85.9949%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp (10,433,899,330 samples, 1.51%)</title><rect x="84.2548%" y="693" width="1.5123%" height="15" fill="rgb(238,139,3)" fg:x="581295205696" fg:w="10433899330"/><text x="84.5048%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp_by (10,433,899,330 samples, 1.51%)</title><rect x="84.2548%" y="677" width="1.5123%" height="15" fill="rgb(216,17,39)" fg:x="581295205696" fg:w="10433899330"/><text x="84.5048%" y="687.50"></text></g><g><title>core::iter::traits::iterator::iter_compare (10,433,899,330 samples, 1.51%)</title><rect x="84.2548%" y="661" width="1.5123%" height="15" fill="rgb(238,120,9)" fg:x="581295205696" fg:w="10433899330"/><text x="84.5048%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (10,367,034,815 samples, 1.50%)</title><rect x="84.2645%" y="645" width="1.5026%" height="15" fill="rgb(244,92,53)" fg:x="581362070211" fg:w="10367034815"/><text x="84.5145%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10,367,034,815 samples, 1.50%)</title><rect x="84.2645%" y="629" width="1.5026%" height="15" fill="rgb(224,148,33)" fg:x="581362070211" fg:w="10367034815"/><text x="84.5145%" y="639.50"></text></g><g><title>std::path::compare_components (8,284,331,272 samples, 1.20%)</title><rect x="84.5663%" y="613" width="1.2008%" height="15" fill="rgb(243,6,36)" fg:x="583444773754" fg:w="8284331272"/><text x="84.8163%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (694,884,093 samples, 0.10%)</title><rect x="85.8028%" y="661" width="0.1007%" height="15" fill="rgb(230,102,11)" fg:x="591975756224" fg:w="694884093"/><text x="86.0528%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (694,884,093 samples, 0.10%)</title><rect x="85.8028%" y="645" width="0.1007%" height="15" fill="rgb(234,148,36)" fg:x="591975756224" fg:w="694884093"/><text x="86.0528%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (1,496,876,717 samples, 0.22%)</title><rect x="85.7671%" y="693" width="0.2170%" height="15" fill="rgb(251,153,25)" fg:x="591729105026" fg:w="1496876717"/><text x="86.0171%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,496,876,717 samples, 0.22%)</title><rect x="85.7671%" y="677" width="0.2170%" height="15" fill="rgb(215,129,8)" fg:x="591729105026" fg:w="1496876717"/><text x="86.0171%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position::check::_{{closure}} (555,341,426 samples, 0.08%)</title><rect x="85.9036%" y="661" width="0.0805%" height="15" fill="rgb(224,128,35)" fg:x="592670640317" fg:w="555341426"/><text x="86.1536%" y="671.50"></text></g><g><title>std::path::compare_components::_{{closure}} (517,215,090 samples, 0.07%)</title><rect x="85.9091%" y="645" width="0.0750%" height="15" fill="rgb(237,56,52)" fg:x="592708766653" fg:w="517215090"/><text x="86.1591%" y="655.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (93,429,511 samples, 0.01%)</title><rect x="85.9915%" y="677" width="0.0135%" height="15" fill="rgb(234,213,19)" fg:x="593277149934" fg:w="93429511"/><text x="86.2415%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (17,660,008,132 samples, 2.56%)</title><rect x="83.4470%" y="789" width="2.5597%" height="15" fill="rgb(252,82,23)" fg:x="575722428415" fg:w="17660008132"/><text x="83.6970%" y="799.50">al..</text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (17,660,008,132 samples, 2.56%)</title><rect x="83.4470%" y="773" width="2.5597%" height="15" fill="rgb(254,201,21)" fg:x="575722428415" fg:w="17660008132"/><text x="83.6970%" y="783.50">al..</text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (17,660,008,132 samples, 2.56%)</title><rect x="83.4470%" y="757" width="2.5597%" height="15" fill="rgb(250,186,11)" fg:x="575722428415" fg:w="17660008132"/><text x="83.6970%" y="767.50">al..</text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (17,660,008,132 samples, 2.56%)</title><rect x="83.4470%" y="741" width="2.5597%" height="15" fill="rgb(211,174,5)" fg:x="575722428415" fg:w="17660008132"/><text x="83.6970%" y="751.50">al..</text></g><g><title>&lt;std::path::Path as core::cmp::Ord&gt;::cmp (17,660,008,132 samples, 2.56%)</title><rect x="83.4470%" y="725" width="2.5597%" height="15" fill="rgb(214,121,10)" fg:x="575722428415" fg:w="17660008132"/><text x="83.6970%" y="735.50">&lt;s..</text></g><g><title>std::path::compare_components (13,123,411,156 samples, 1.90%)</title><rect x="84.1046%" y="709" width="1.9021%" height="15" fill="rgb(241,66,2)" fg:x="580259025391" fg:w="13123411156"/><text x="84.3546%" y="719.50">s..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (105,286,613 samples, 0.02%)</title><rect x="85.9915%" y="693" width="0.0153%" height="15" fill="rgb(220,167,19)" fg:x="593277149934" fg:w="105286613"/><text x="86.2415%" y="703.50"></text></g><g><title>do_anonymous_page (81,241,576 samples, 0.01%)</title><rect x="86.0297%" y="597" width="0.0118%" height="15" fill="rgb(231,54,50)" fg:x="593541213580" fg:w="81241576"/><text x="86.2797%" y="607.50"></text></g><g><title>__handle_mm_fault (84,581,633 samples, 0.01%)</title><rect x="86.0296%" y="613" width="0.0123%" height="15" fill="rgb(239,217,53)" fg:x="593540128012" fg:w="84581633"/><text x="86.2796%" y="623.50"></text></g><g><title>handle_mm_fault (86,829,776 samples, 0.01%)</title><rect x="86.0294%" y="629" width="0.0126%" height="15" fill="rgb(248,8,0)" fg:x="593539013639" fg:w="86829776"/><text x="86.2794%" y="639.50"></text></g><g><title>do_user_addr_fault (94,633,090 samples, 0.01%)</title><rect x="86.0293%" y="645" width="0.0137%" height="15" fill="rgb(229,118,37)" fg:x="593537885646" fg:w="94633090"/><text x="86.2793%" y="655.50"></text></g><g><title>exc_page_fault (97,954,207 samples, 0.01%)</title><rect x="86.0289%" y="661" width="0.0142%" height="15" fill="rgb(253,223,43)" fg:x="593535680955" fg:w="97954207"/><text x="86.2789%" y="671.50"></text></g><g><title>asm_exc_page_fault (100,198,803 samples, 0.01%)</title><rect x="86.0288%" y="677" width="0.0145%" height="15" fill="rgb(211,77,36)" fg:x="593534565308" fg:w="100198803"/><text x="86.2788%" y="687.50"></text></g><g><title>_int_realloc (259,925,200 samples, 0.04%)</title><rect x="86.0078%" y="693" width="0.0377%" height="15" fill="rgb(219,3,53)" fg:x="593390142542" fg:w="259925200"/><text x="86.2578%" y="703.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17he2744f8d593ca85eE.llvm.6126178641482180525 (271,977,082 samples, 0.04%)</title><rect x="86.0067%" y="725" width="0.0394%" height="15" fill="rgb(244,45,42)" fg:x="593382436547" fg:w="271977082"/><text x="86.2567%" y="735.50"></text></g><g><title>realloc (271,977,082 samples, 0.04%)</title><rect x="86.0067%" y="709" width="0.0394%" height="15" fill="rgb(225,95,27)" fg:x="593382436547" fg:w="271977082"/><text x="86.2567%" y="719.50"></text></g><g><title>cargo_tarpaulin::traces::TraceMap::add_trace (35,508,213,535 samples, 5.15%)</title><rect x="80.8996%" y="805" width="5.1467%" height="15" fill="rgb(207,74,8)" fg:x="558147241760" fg:w="35508213535"/><text x="81.1496%" y="815.50">cargo_..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (273,018,748 samples, 0.04%)</title><rect x="86.0067%" y="789" width="0.0396%" height="15" fill="rgb(243,63,36)" fg:x="593382436547" fg:w="273018748"/><text x="86.2567%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (273,018,748 samples, 0.04%)</title><rect x="86.0067%" y="773" width="0.0396%" height="15" fill="rgb(211,180,12)" fg:x="593382436547" fg:w="273018748"/><text x="86.2567%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (273,018,748 samples, 0.04%)</title><rect x="86.0067%" y="757" width="0.0396%" height="15" fill="rgb(254,166,49)" fg:x="593382436547" fg:w="273018748"/><text x="86.2567%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (273,018,748 samples, 0.04%)</title><rect x="86.0067%" y="741" width="0.0396%" height="15" fill="rgb(205,19,0)" fg:x="593382436547" fg:w="273018748"/><text x="86.2567%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (209,400,541 samples, 0.03%)</title><rect x="86.2523%" y="661" width="0.0304%" height="15" fill="rgb(224,172,32)" fg:x="595076899114" fg:w="209400541"/><text x="86.5023%" y="671.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (209,400,541 samples, 0.03%)</title><rect x="86.2523%" y="645" width="0.0304%" height="15" fill="rgb(254,136,30)" fg:x="595076899114" fg:w="209400541"/><text x="86.5023%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (830,258,063 samples, 0.12%)</title><rect x="86.2245%" y="677" width="0.1203%" height="15" fill="rgb(246,19,35)" fg:x="594884726545" fg:w="830258063"/><text x="86.4745%" y="687.50"></text></g><g><title>std::path::Components::parse_next_component::_{{closure}} (428,684,953 samples, 0.06%)</title><rect x="86.2827%" y="661" width="0.0621%" height="15" fill="rgb(219,24,36)" fg:x="595286299655" fg:w="428684953"/><text x="86.5327%" y="671.50"></text></g><g><title>std::path::Components::is_sep_byte (428,684,953 samples, 0.06%)</title><rect x="86.2827%" y="645" width="0.0621%" height="15" fill="rgb(251,55,1)" fg:x="595286299655" fg:w="428684953"/><text x="86.5327%" y="655.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (2,217,143,988 samples, 0.32%)</title><rect x="86.0463%" y="709" width="0.3214%" height="15" fill="rgb(218,117,39)" fg:x="593655455295" fg:w="2217143988"/><text x="86.2963%" y="719.50"></text></g><g><title>std::path::Components::parse_next_component (1,020,043,640 samples, 0.15%)</title><rect x="86.2198%" y="693" width="0.1478%" height="15" fill="rgb(248,169,11)" fg:x="594852555643" fg:w="1020043640"/><text x="86.4698%" y="703.50"></text></g><g><title>std::path::Components::parse_single_component (157,614,675 samples, 0.02%)</title><rect x="86.3448%" y="677" width="0.0228%" height="15" fill="rgb(244,40,44)" fg:x="595714984608" fg:w="157614675"/><text x="86.5948%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::rposition (95,777,259 samples, 0.01%)</title><rect x="86.4253%" y="693" width="0.0139%" height="15" fill="rgb(234,62,37)" fg:x="596270037474" fg:w="95777259"/><text x="86.6753%" y="703.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (182,040,104 samples, 0.03%)</title><rect x="86.4655%" y="613" width="0.0264%" height="15" fill="rgb(207,117,42)" fg:x="596547562695" fg:w="182040104"/><text x="86.7155%" y="623.50"></text></g><g><title>std::path::Components::parse_next_component (80,717,082 samples, 0.01%)</title><rect x="86.4802%" y="597" width="0.0117%" height="15" fill="rgb(213,43,2)" fg:x="596648885717" fg:w="80717082"/><text x="86.7302%" y="607.50"></text></g><g><title>[unknown] (73,475,496 samples, 0.01%)</title><rect x="86.4919%" y="613" width="0.0106%" height="15" fill="rgb(244,202,51)" fg:x="596729602799" fg:w="73475496"/><text x="86.7419%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp_by::compare::_{{closure}} (143,699,042 samples, 0.02%)</title><rect x="86.5168%" y="581" width="0.0208%" height="15" fill="rgb(253,174,46)" fg:x="596901767599" fg:w="143699042"/><text x="86.7668%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp::_{{closure}} (143,699,042 samples, 0.02%)</title><rect x="86.5168%" y="565" width="0.0208%" height="15" fill="rgb(251,23,1)" fg:x="596901767599" fg:w="143699042"/><text x="86.7668%" y="575.50"></text></g><g><title>&lt;std::path::Component as core::cmp::Ord&gt;::cmp (143,699,042 samples, 0.02%)</title><rect x="86.5168%" y="549" width="0.0208%" height="15" fill="rgb(253,26,1)" fg:x="596901767599" fg:w="143699042"/><text x="86.7668%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (277,846,483 samples, 0.04%)</title><rect x="86.5030%" y="613" width="0.0403%" height="15" fill="rgb(216,89,31)" fg:x="596806376876" fg:w="277846483"/><text x="86.7530%" y="623.50"></text></g><g><title>core::iter::traits::iterator::iter_compare::compare::_{{closure}} (277,846,483 samples, 0.04%)</title><rect x="86.5030%" y="597" width="0.0403%" height="15" fill="rgb(209,109,5)" fg:x="596806376876" fg:w="277846483"/><text x="86.7530%" y="607.50"></text></g><g><title>std::path::Path::components (126,568,513 samples, 0.02%)</title><rect x="86.5433%" y="613" width="0.0183%" height="15" fill="rgb(229,63,13)" fg:x="597084223359" fg:w="126568513"/><text x="86.7933%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::rposition (89,074,273 samples, 0.01%)</title><rect x="86.5795%" y="597" width="0.0129%" height="15" fill="rgb(238,137,54)" fg:x="597334200832" fg:w="89074273"/><text x="86.8295%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp (165,519,141 samples, 0.02%)</title><rect x="86.5964%" y="597" width="0.0240%" height="15" fill="rgb(228,1,9)" fg:x="597450867034" fg:w="165519141"/><text x="86.8464%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp_by (165,519,141 samples, 0.02%)</title><rect x="86.5964%" y="581" width="0.0240%" height="15" fill="rgb(249,120,48)" fg:x="597450867034" fg:w="165519141"/><text x="86.8464%" y="591.50"></text></g><g><title>core::iter::traits::iterator::iter_compare (165,519,141 samples, 0.02%)</title><rect x="86.5964%" y="565" width="0.0240%" height="15" fill="rgb(209,72,36)" fg:x="597450867034" fg:w="165519141"/><text x="86.8464%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (165,519,141 samples, 0.02%)</title><rect x="86.5964%" y="549" width="0.0240%" height="15" fill="rgb(247,98,49)" fg:x="597450867034" fg:w="165519141"/><text x="86.8464%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (165,519,141 samples, 0.02%)</title><rect x="86.5964%" y="533" width="0.0240%" height="15" fill="rgb(233,75,36)" fg:x="597450867034" fg:w="165519141"/><text x="86.8464%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (164,511,920 samples, 0.02%)</title><rect x="86.5966%" y="517" width="0.0238%" height="15" fill="rgb(225,14,24)" fg:x="597451874255" fg:w="164511920"/><text x="86.8466%" y="527.50"></text></g><g><title>core::iter::traits::iterator::iter_compare::compare::_{{closure}} (164,511,920 samples, 0.02%)</title><rect x="86.5966%" y="501" width="0.0238%" height="15" fill="rgb(237,193,20)" fg:x="597451874255" fg:w="164511920"/><text x="86.8466%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp_by::compare::_{{closure}} (147,663,131 samples, 0.02%)</title><rect x="86.5990%" y="485" width="0.0214%" height="15" fill="rgb(239,122,19)" fg:x="597468723044" fg:w="147663131"/><text x="86.8490%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp::_{{closure}} (145,422,562 samples, 0.02%)</title><rect x="86.5993%" y="469" width="0.0211%" height="15" fill="rgb(231,220,10)" fg:x="597470963613" fg:w="145422562"/><text x="86.8493%" y="479.50"></text></g><g><title>&lt;std::path::Component as core::cmp::Ord&gt;::cmp (145,422,562 samples, 0.02%)</title><rect x="86.5993%" y="453" width="0.0211%" height="15" fill="rgb(220,66,15)" fg:x="597470963613" fg:w="145422562"/><text x="86.8493%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,582,826,753 samples, 0.23%)</title><rect x="86.6960%" y="565" width="0.2294%" height="15" fill="rgb(215,171,52)" fg:x="598137844370" fg:w="1582826753"/><text x="86.9460%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1,582,826,753 samples, 0.23%)</title><rect x="86.6960%" y="549" width="0.2294%" height="15" fill="rgb(241,169,50)" fg:x="598137844370" fg:w="1582826753"/><text x="86.9460%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (3,199,812,752 samples, 0.46%)</title><rect x="86.6204%" y="597" width="0.4638%" height="15" fill="rgb(236,189,0)" fg:x="597616386175" fg:w="3199812752"/><text x="86.8704%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3,199,812,752 samples, 0.46%)</title><rect x="86.6204%" y="581" width="0.4638%" height="15" fill="rgb(217,147,20)" fg:x="597616386175" fg:w="3199812752"/><text x="86.8704%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position::check::_{{closure}} (1,095,527,804 samples, 0.16%)</title><rect x="86.9254%" y="565" width="0.1588%" height="15" fill="rgb(206,188,39)" fg:x="599720671123" fg:w="1095527804"/><text x="87.1754%" y="575.50"></text></g><g><title>std::path::compare_components::_{{closure}} (1,095,527,804 samples, 0.16%)</title><rect x="86.9254%" y="549" width="0.1588%" height="15" fill="rgb(227,118,25)" fg:x="599720671123" fg:w="1095527804"/><text x="87.1754%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp (4,529,523,876 samples, 0.66%)</title><rect x="86.4406%" y="693" width="0.6565%" height="15" fill="rgb(248,171,40)" fg:x="596375828385" fg:w="4529523876"/><text x="86.6906%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp_by (4,529,523,876 samples, 0.66%)</title><rect x="86.4406%" y="677" width="0.6565%" height="15" fill="rgb(251,90,54)" fg:x="596375828385" fg:w="4529523876"/><text x="86.6906%" y="687.50"></text></g><g><title>core::iter::traits::iterator::iter_compare (4,529,523,876 samples, 0.66%)</title><rect x="86.4406%" y="661" width="0.6565%" height="15" fill="rgb(234,11,46)" fg:x="596375828385" fg:w="4529523876"/><text x="86.6906%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (4,505,007,831 samples, 0.65%)</title><rect x="86.4441%" y="645" width="0.6530%" height="15" fill="rgb(229,134,13)" fg:x="596400344430" fg:w="4505007831"/><text x="86.6941%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4,505,007,831 samples, 0.65%)</title><rect x="86.4441%" y="629" width="0.6530%" height="15" fill="rgb(223,129,3)" fg:x="596400344430" fg:w="4505007831"/><text x="86.6941%" y="639.50"></text></g><g><title>std::path::compare_components (3,694,560,389 samples, 0.54%)</title><rect x="86.5616%" y="613" width="0.5355%" height="15" fill="rgb(221,124,13)" fg:x="597210791872" fg:w="3694560389"/><text x="86.8116%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (324,232,781 samples, 0.05%)</title><rect x="87.1153%" y="661" width="0.0470%" height="15" fill="rgb(234,3,18)" fg:x="601030946845" fg:w="324232781"/><text x="87.3653%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (324,232,781 samples, 0.05%)</title><rect x="87.1153%" y="645" width="0.0470%" height="15" fill="rgb(249,199,20)" fg:x="601030946845" fg:w="324232781"/><text x="87.3653%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (665,644,874 samples, 0.10%)</title><rect x="87.0971%" y="693" width="0.0965%" height="15" fill="rgb(224,134,6)" fg:x="600905352261" fg:w="665644874"/><text x="87.3471%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (665,644,874 samples, 0.10%)</title><rect x="87.0971%" y="677" width="0.0965%" height="15" fill="rgb(254,83,26)" fg:x="600905352261" fg:w="665644874"/><text x="87.3471%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position::check::_{{closure}} (215,817,509 samples, 0.03%)</title><rect x="87.1623%" y="661" width="0.0313%" height="15" fill="rgb(217,88,9)" fg:x="601355179626" fg:w="215817509"/><text x="87.4123%" y="671.50"></text></g><g><title>std::path::compare_components::_{{closure}} (205,792,965 samples, 0.03%)</title><rect x="87.1638%" y="645" width="0.0298%" height="15" fill="rgb(225,73,2)" fg:x="601365204170" fg:w="205792965"/><text x="87.4138%" y="655.50"></text></g><g><title>cargo_tarpaulin::traces::TraceMap::contains_location (8,000,579,684 samples, 1.16%)</title><rect x="86.0463%" y="805" width="1.1596%" height="15" fill="rgb(226,44,39)" fg:x="593655455295" fg:w="8000579684"/><text x="86.2963%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (8,000,579,684 samples, 1.16%)</title><rect x="86.0463%" y="789" width="1.1596%" height="15" fill="rgb(228,53,17)" fg:x="593655455295" fg:w="8000579684"/><text x="86.2963%" y="799.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (8,000,579,684 samples, 1.16%)</title><rect x="86.0463%" y="773" width="1.1596%" height="15" fill="rgb(212,27,27)" fg:x="593655455295" fg:w="8000579684"/><text x="86.2963%" y="783.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (8,000,579,684 samples, 1.16%)</title><rect x="86.0463%" y="757" width="1.1596%" height="15" fill="rgb(241,50,6)" fg:x="593655455295" fg:w="8000579684"/><text x="86.2963%" y="767.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (8,000,579,684 samples, 1.16%)</title><rect x="86.0463%" y="741" width="1.1596%" height="15" fill="rgb(225,28,51)" fg:x="593655455295" fg:w="8000579684"/><text x="86.2963%" y="751.50"></text></g><g><title>&lt;std::path::Path as core::cmp::Ord&gt;::cmp (8,000,579,684 samples, 1.16%)</title><rect x="86.0463%" y="725" width="1.1596%" height="15" fill="rgb(215,33,16)" fg:x="593655455295" fg:w="8000579684"/><text x="86.2963%" y="735.50"></text></g><g><title>std::path::compare_components (5,719,131,388 samples, 0.83%)</title><rect x="86.3770%" y="709" width="0.8289%" height="15" fill="rgb(243,40,39)" fg:x="595936903591" fg:w="5719131388"/><text x="86.6270%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (199,667,317 samples, 0.03%)</title><rect x="87.2200%" y="661" width="0.0289%" height="15" fill="rgb(225,11,42)" fg:x="601752819201" fg:w="199667317"/><text x="87.4700%" y="671.50"></text></g><g><title>&lt;T as core::slice::sort::shared::smallsort::UnstableSmallSortTypeImpl&gt;::small_sort (348,299,599 samples, 0.05%)</title><rect x="87.2083%" y="741" width="0.0505%" height="15" fill="rgb(241,220,38)" fg:x="601672663190" fg:w="348299599"/><text x="87.4583%" y="751.50"></text></g><g><title>&lt;T as core::slice::sort::shared::smallsort::UnstableSmallSortFreezeTypeImpl&gt;::small_sort (348,299,599 samples, 0.05%)</title><rect x="87.2083%" y="725" width="0.0505%" height="15" fill="rgb(244,52,35)" fg:x="601672663190" fg:w="348299599"/><text x="87.4583%" y="735.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_fallback (348,299,599 samples, 0.05%)</title><rect x="87.2083%" y="709" width="0.0505%" height="15" fill="rgb(246,42,46)" fg:x="601672663190" fg:w="348299599"/><text x="87.4583%" y="719.50"></text></g><g><title>core::slice::sort::shared::smallsort::insertion_sort_shift_left (347,192,284 samples, 0.05%)</title><rect x="87.2085%" y="693" width="0.0503%" height="15" fill="rgb(205,184,13)" fg:x="601673770505" fg:w="347192284"/><text x="87.4585%" y="703.50"></text></g><g><title>core::slice::sort::shared::smallsort::insert_tail (320,348,346 samples, 0.05%)</title><rect x="87.2124%" y="677" width="0.0464%" height="15" fill="rgb(209,48,36)" fg:x="601700614443" fg:w="320348346"/><text x="87.4624%" y="687.50"></text></g><g><title>core::intrinsics::copy (206,292,284 samples, 0.03%)</title><rect x="87.2719%" y="693" width="0.0299%" height="15" fill="rgb(244,34,51)" fg:x="602111063958" fg:w="206292284"/><text x="87.5219%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (178,737,583 samples, 0.03%)</title><rect x="87.3018%" y="693" width="0.0259%" height="15" fill="rgb(221,107,33)" fg:x="602317356242" fg:w="178737583"/><text x="87.5518%" y="703.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition (488,513,695 samples, 0.07%)</title><rect x="87.2601%" y="741" width="0.0708%" height="15" fill="rgb(224,203,12)" fg:x="602029887809" fg:w="488513695"/><text x="87.5101%" y="751.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic (439,672,376 samples, 0.06%)</title><rect x="87.2672%" y="725" width="0.0637%" height="15" fill="rgb(230,215,18)" fg:x="602078729128" fg:w="439672376"/><text x="87.5172%" y="735.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic::_{{closure}} (420,721,994 samples, 0.06%)</title><rect x="87.2699%" y="709" width="0.0610%" height="15" fill="rgb(206,185,35)" fg:x="602097679510" fg:w="420721994"/><text x="87.5199%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (137,201,401 samples, 0.02%)</title><rect x="87.3375%" y="645" width="0.0199%" height="15" fill="rgb(228,140,34)" fg:x="602563885050" fg:w="137201401"/><text x="87.5875%" y="655.50"></text></g><g><title>&lt;T as core::slice::sort::shared::smallsort::UnstableSmallSortTypeImpl&gt;::small_sort (224,867,908 samples, 0.03%)</title><rect x="87.3312%" y="725" width="0.0326%" height="15" fill="rgb(208,93,13)" fg:x="602520651395" fg:w="224867908"/><text x="87.5812%" y="735.50"></text></g><g><title>&lt;T as core::slice::sort::shared::smallsort::UnstableSmallSortFreezeTypeImpl&gt;::small_sort (224,867,908 samples, 0.03%)</title><rect x="87.3312%" y="709" width="0.0326%" height="15" fill="rgb(221,193,39)" fg:x="602520651395" fg:w="224867908"/><text x="87.5812%" y="719.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_fallback (224,867,908 samples, 0.03%)</title><rect x="87.3312%" y="693" width="0.0326%" height="15" fill="rgb(241,132,34)" fg:x="602520651395" fg:w="224867908"/><text x="87.5812%" y="703.50"></text></g><g><title>core::slice::sort::shared::smallsort::insertion_sort_shift_left (224,867,908 samples, 0.03%)</title><rect x="87.3312%" y="677" width="0.0326%" height="15" fill="rgb(221,141,10)" fg:x="602520651395" fg:w="224867908"/><text x="87.5812%" y="687.50"></text></g><g><title>core::slice::sort::shared::smallsort::insert_tail (215,958,384 samples, 0.03%)</title><rect x="87.3325%" y="661" width="0.0313%" height="15" fill="rgb(226,90,31)" fg:x="602529560919" fg:w="215958384"/><text x="87.5825%" y="671.50"></text></g><g><title>core::intrinsics::copy (81,597,371 samples, 0.01%)</title><rect x="87.3739%" y="677" width="0.0118%" height="15" fill="rgb(243,75,5)" fg:x="602814770851" fg:w="81597371"/><text x="87.6239%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (73,826,162 samples, 0.01%)</title><rect x="87.3857%" y="677" width="0.0107%" height="15" fill="rgb(227,156,21)" fg:x="602896368222" fg:w="73826162"/><text x="87.6357%" y="687.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (1,319,932,379 samples, 0.19%)</title><rect x="87.2061%" y="805" width="0.1913%" height="15" fill="rgb(250,195,8)" fg:x="601657060964" fg:w="1319932379"/><text x="87.4561%" y="815.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (1,319,932,379 samples, 0.19%)</title><rect x="87.2061%" y="789" width="0.1913%" height="15" fill="rgb(220,134,5)" fg:x="601657060964" fg:w="1319932379"/><text x="87.4561%" y="799.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (1,319,932,379 samples, 0.19%)</title><rect x="87.2061%" y="773" width="0.1913%" height="15" fill="rgb(246,106,34)" fg:x="601657060964" fg:w="1319932379"/><text x="87.4561%" y="783.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (1,318,810,128 samples, 0.19%)</title><rect x="87.2062%" y="757" width="0.1912%" height="15" fill="rgb(205,1,4)" fg:x="601658183215" fg:w="1318810128"/><text x="87.4562%" y="767.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (458,591,839 samples, 0.07%)</title><rect x="87.3309%" y="741" width="0.0665%" height="15" fill="rgb(224,151,29)" fg:x="602518401504" fg:w="458591839"/><text x="87.5809%" y="751.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition (228,063,368 samples, 0.03%)</title><rect x="87.3643%" y="725" width="0.0331%" height="15" fill="rgb(251,196,0)" fg:x="602748929975" fg:w="228063368"/><text x="87.6143%" y="735.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic (189,057,456 samples, 0.03%)</title><rect x="87.3700%" y="709" width="0.0274%" height="15" fill="rgb(212,127,0)" fg:x="602787935887" fg:w="189057456"/><text x="87.6200%" y="719.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic::_{{closure}} (168,855,620 samples, 0.02%)</title><rect x="87.3729%" y="693" width="0.0245%" height="15" fill="rgb(236,71,53)" fg:x="602808137723" fg:w="168855620"/><text x="87.6229%" y="703.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (155,345,914 samples, 0.02%)</title><rect x="87.4525%" y="725" width="0.0225%" height="15" fill="rgb(227,99,0)" fg:x="603357499182" fg:w="155345914"/><text x="87.7025%" y="735.50"></text></g><g><title>&lt;cargo_tarpaulin::statemachine::instrumented::LlvmInstrumentedData as cargo_tarpaulin::statemachine::StateData&gt;::wait::_{{closure}} (194,578,523 samples, 0.03%)</title><rect x="87.4525%" y="789" width="0.0282%" height="15" fill="rgb(239,89,21)" fg:x="603357499182" fg:w="194578523"/><text x="87.7025%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (194,578,523 samples, 0.03%)</title><rect x="87.4525%" y="773" width="0.0282%" height="15" fill="rgb(243,122,19)" fg:x="603357499182" fg:w="194578523"/><text x="87.7025%" y="783.50"></text></g><g><title>&lt;cargo_tarpaulin::statemachine::instrumented::LlvmInstrumentedData as cargo_tarpaulin::statemachine::StateData&gt;::wait::_{{closure}}::_{{closure}} (194,578,523 samples, 0.03%)</title><rect x="87.4525%" y="757" width="0.0282%" height="15" fill="rgb(229,192,45)" fg:x="603357499182" fg:w="194578523"/><text x="87.7025%" y="767.50"></text></g><g><title>std::path::Path::starts_with (194,578,523 samples, 0.03%)</title><rect x="87.4525%" y="741" width="0.0282%" height="15" fill="rgb(235,165,35)" fg:x="603357499182" fg:w="194578523"/><text x="87.7025%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (142,645,313 samples, 0.02%)</title><rect x="87.4891%" y="773" width="0.0207%" height="15" fill="rgb(253,202,0)" fg:x="603609407866" fg:w="142645313"/><text x="87.7391%" y="783.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (139,255,583 samples, 0.02%)</title><rect x="87.4895%" y="757" width="0.0202%" height="15" fill="rgb(235,51,20)" fg:x="603612797596" fg:w="139255583"/><text x="87.7395%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (436,317,697 samples, 0.06%)</title><rect x="87.4891%" y="789" width="0.0632%" height="15" fill="rgb(218,95,46)" fg:x="603609407866" fg:w="436317697"/><text x="87.7391%" y="799.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::CoverageMapping::generate_subreport::_{{closure}} (292,661,285 samples, 0.04%)</title><rect x="87.5099%" y="773" width="0.0424%" height="15" fill="rgb(212,81,10)" fg:x="603753064278" fg:w="292661285"/><text x="87.7599%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (100,131,384 samples, 0.01%)</title><rect x="87.5561%" y="741" width="0.0145%" height="15" fill="rgb(240,59,0)" fg:x="604072201646" fg:w="100131384"/><text x="87.8061%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (98,992,375 samples, 0.01%)</title><rect x="87.5563%" y="725" width="0.0143%" height="15" fill="rgb(212,191,42)" fg:x="604073340655" fg:w="98992375"/><text x="87.8063%" y="735.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (96,865,076 samples, 0.01%)</title><rect x="87.5566%" y="709" width="0.0140%" height="15" fill="rgb(233,140,3)" fg:x="604075467954" fg:w="96865076"/><text x="87.8066%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (96,865,076 samples, 0.01%)</title><rect x="87.5566%" y="693" width="0.0140%" height="15" fill="rgb(215,69,23)" fg:x="604075467954" fg:w="96865076"/><text x="87.8066%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (96,865,076 samples, 0.01%)</title><rect x="87.5566%" y="677" width="0.0140%" height="15" fill="rgb(240,202,20)" fg:x="604075467954" fg:w="96865076"/><text x="87.8066%" y="687.50"></text></g><g><title>alloc::alloc::alloc (96,865,076 samples, 0.01%)</title><rect x="87.5566%" y="661" width="0.0140%" height="15" fill="rgb(209,146,50)" fg:x="604075467954" fg:w="96865076"/><text x="87.8066%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (113,137,581 samples, 0.02%)</title><rect x="87.5544%" y="789" width="0.0164%" height="15" fill="rgb(253,102,54)" fg:x="604060205658" fg:w="113137581"/><text x="87.8044%" y="799.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (110,882,456 samples, 0.02%)</title><rect x="87.5547%" y="773" width="0.0161%" height="15" fill="rgb(250,173,47)" fg:x="604062460783" fg:w="110882456"/><text x="87.8047%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (110,882,456 samples, 0.02%)</title><rect x="87.5547%" y="757" width="0.0161%" height="15" fill="rgb(232,142,7)" fg:x="604062460783" fg:w="110882456"/><text x="87.8047%" y="767.50"></text></g><g><title>_int_free (384,098,236 samples, 0.06%)</title><rect x="87.6112%" y="597" width="0.0557%" height="15" fill="rgb(230,157,47)" fg:x="604452401556" fg:w="384098236"/><text x="87.8612%" y="607.50"></text></g><g><title>[unknown] (69,708,726 samples, 0.01%)</title><rect x="87.7146%" y="581" width="0.0101%" height="15" fill="rgb(214,177,35)" fg:x="605165671196" fg:w="69708726"/><text x="87.9646%" y="591.50"></text></g><g><title>_int_free (656,666,673 samples, 0.10%)</title><rect x="87.7267%" y="581" width="0.0952%" height="15" fill="rgb(234,119,46)" fg:x="605249108905" fg:w="656666673"/><text x="87.9767%" y="591.50"></text></g><g><title>_int_free_create_chunk (96,355,163 samples, 0.01%)</title><rect x="87.8219%" y="581" width="0.0140%" height="15" fill="rgb(241,180,50)" fg:x="605905775578" fg:w="96355163"/><text x="88.0719%" y="591.50"></text></g><g><title>_int_free (78,502,728 samples, 0.01%)</title><rect x="87.8494%" y="565" width="0.0114%" height="15" fill="rgb(221,54,25)" fg:x="606095385217" fg:w="78502728"/><text x="88.0994%" y="575.50"></text></g><g><title>_int_free_merge_chunk (311,143,040 samples, 0.05%)</title><rect x="87.8362%" y="581" width="0.0451%" height="15" fill="rgb(209,157,44)" fg:x="606004344999" fg:w="311143040"/><text x="88.0862%" y="591.50"></text></g><g><title>cfree@GLIBC_2.2.5 (295,619,322 samples, 0.04%)</title><rect x="87.8829%" y="581" width="0.0428%" height="15" fill="rgb(246,115,41)" fg:x="606326382796" fg:w="295619322"/><text x="88.1329%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (96,728,308 samples, 0.01%)</title><rect x="87.9339%" y="533" width="0.0140%" height="15" fill="rgb(229,86,1)" fg:x="606678715865" fg:w="96728308"/><text x="88.1839%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (96,728,308 samples, 0.01%)</title><rect x="87.9339%" y="517" width="0.0140%" height="15" fill="rgb(240,108,53)" fg:x="606678715865" fg:w="96728308"/><text x="88.1839%" y="527.50"></text></g><g><title>std::path::compare_components (200,893,929 samples, 0.03%)</title><rect x="87.9272%" y="581" width="0.0291%" height="15" fill="rgb(227,134,2)" fg:x="606632616992" fg:w="200893929"/><text x="88.1772%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (195,534,323 samples, 0.03%)</title><rect x="87.9280%" y="565" width="0.0283%" height="15" fill="rgb(213,129,25)" fg:x="606637976598" fg:w="195534323"/><text x="88.1780%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (195,534,323 samples, 0.03%)</title><rect x="87.9280%" y="549" width="0.0283%" height="15" fill="rgb(226,35,21)" fg:x="606637976598" fg:w="195534323"/><text x="88.1780%" y="559.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1,936,758,938 samples, 0.28%)</title><rect x="87.6771%" y="597" width="0.2807%" height="15" fill="rgb(208,129,26)" fg:x="604906529293" fg:w="1936758938"/><text x="87.9271%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,511,573,278 samples, 0.36%)</title><rect x="87.5995%" y="629" width="0.3640%" height="15" fill="rgb(224,83,6)" fg:x="604371321973" fg:w="2511573278"/><text x="87.8495%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (2,511,573,278 samples, 0.36%)</title><rect x="87.5995%" y="613" width="0.3640%" height="15" fill="rgb(227,52,39)" fg:x="604371321973" fg:w="2511573278"/><text x="87.8495%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,533,478,391 samples, 0.37%)</title><rect x="87.5975%" y="773" width="0.3672%" height="15" fill="rgb(241,30,17)" fg:x="604357654196" fg:w="2533478391"/><text x="87.8475%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;[std::path::PathBuf]&gt; (2,533,478,391 samples, 0.37%)</title><rect x="87.5975%" y="757" width="0.3672%" height="15" fill="rgb(246,186,42)" fg:x="604357654196" fg:w="2533478391"/><text x="87.8475%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::path::PathBuf&gt; (2,531,550,478 samples, 0.37%)</title><rect x="87.5978%" y="741" width="0.3669%" height="15" fill="rgb(221,169,15)" fg:x="604359582109" fg:w="2531550478"/><text x="87.8478%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::ffi::os_str::OsString&gt; (2,531,550,478 samples, 0.37%)</title><rect x="87.5978%" y="725" width="0.3669%" height="15" fill="rgb(235,108,21)" fg:x="604359582109" fg:w="2531550478"/><text x="87.8478%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::os_str::bytes::Buf&gt; (2,531,550,478 samples, 0.37%)</title><rect x="87.5978%" y="709" width="0.3669%" height="15" fill="rgb(219,148,30)" fg:x="604359582109" fg:w="2531550478"/><text x="87.8478%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,531,550,478 samples, 0.37%)</title><rect x="87.5978%" y="693" width="0.3669%" height="15" fill="rgb(220,109,5)" fg:x="604359582109" fg:w="2531550478"/><text x="87.8478%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,531,550,478 samples, 0.37%)</title><rect x="87.5978%" y="677" width="0.3669%" height="15" fill="rgb(213,203,48)" fg:x="604359582109" fg:w="2531550478"/><text x="87.8478%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,531,550,478 samples, 0.37%)</title><rect x="87.5978%" y="661" width="0.3669%" height="15" fill="rgb(244,71,33)" fg:x="604359582109" fg:w="2531550478"/><text x="87.8478%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,519,810,614 samples, 0.37%)</title><rect x="87.5995%" y="645" width="0.3652%" height="15" fill="rgb(209,23,2)" fg:x="604371321973" fg:w="2519810614"/><text x="87.8495%" y="655.50"></text></g><g><title>cfree@GLIBC_2.2.5 (175,827,808 samples, 0.03%)</title><rect x="87.9679%" y="693" width="0.0255%" height="15" fill="rgb(219,97,7)" fg:x="606913233916" fg:w="175827808"/><text x="88.2179%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;std::path::PathBuf&gt;&gt; (2,732,368,076 samples, 0.40%)</title><rect x="87.5975%" y="789" width="0.3960%" height="15" fill="rgb(216,161,23)" fg:x="604357654196" fg:w="2732368076"/><text x="87.8475%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;std::path::PathBuf&gt;&gt; (198,889,685 samples, 0.03%)</title><rect x="87.9647%" y="773" width="0.0288%" height="15" fill="rgb(207,45,42)" fg:x="606891132587" fg:w="198889685"/><text x="88.2147%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (198,889,685 samples, 0.03%)</title><rect x="87.9647%" y="757" width="0.0288%" height="15" fill="rgb(241,61,4)" fg:x="606891132587" fg:w="198889685"/><text x="88.2147%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (198,889,685 samples, 0.03%)</title><rect x="87.9647%" y="741" width="0.0288%" height="15" fill="rgb(236,170,1)" fg:x="606891132587" fg:w="198889685"/><text x="88.2147%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (198,889,685 samples, 0.03%)</title><rect x="87.9647%" y="725" width="0.0288%" height="15" fill="rgb(239,72,5)" fg:x="606891132587" fg:w="198889685"/><text x="88.2147%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (198,889,685 samples, 0.03%)</title><rect x="87.9647%" y="709" width="0.0288%" height="15" fill="rgb(214,13,50)" fg:x="606891132587" fg:w="198889685"/><text x="88.2147%" y="719.50"></text></g><g><title>cfree@GLIBC_2.2.5 (164,229,170 samples, 0.02%)</title><rect x="87.9984%" y="661" width="0.0238%" height="15" fill="rgb(224,88,9)" fg:x="607123498726" fg:w="164229170"/><text x="88.2484%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (208,561,742 samples, 0.03%)</title><rect x="87.9939%" y="693" width="0.0302%" height="15" fill="rgb(238,192,34)" fg:x="607092224066" fg:w="208561742"/><text x="88.2439%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (208,561,742 samples, 0.03%)</title><rect x="87.9939%" y="677" width="0.0302%" height="15" fill="rgb(217,203,50)" fg:x="607092224066" fg:w="208561742"/><text x="88.2439%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;llvm_profparser::coverage::Counter,i64,core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;&gt; (212,900,321 samples, 0.03%)</title><rect x="87.9935%" y="789" width="0.0309%" height="15" fill="rgb(241,123,32)" fg:x="607090022272" fg:w="212900321"/><text x="88.2435%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;llvm_profparser::coverage::Counter,i64,core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;&gt; (212,900,321 samples, 0.03%)</title><rect x="87.9935%" y="773" width="0.0309%" height="15" fill="rgb(248,151,39)" fg:x="607090022272" fg:w="212900321"/><text x="88.2435%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(llvm_profparser::coverage::Counter,i64)&gt;&gt; (212,900,321 samples, 0.03%)</title><rect x="87.9935%" y="757" width="0.0309%" height="15" fill="rgb(208,89,6)" fg:x="607090022272" fg:w="212900321"/><text x="88.2435%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (212,900,321 samples, 0.03%)</title><rect x="87.9935%" y="741" width="0.0309%" height="15" fill="rgb(254,43,26)" fg:x="607090022272" fg:w="212900321"/><text x="88.2435%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (211,762,690 samples, 0.03%)</title><rect x="87.9937%" y="725" width="0.0307%" height="15" fill="rgb(216,158,13)" fg:x="607091159903" fg:w="211762690"/><text x="88.2437%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (210,698,527 samples, 0.03%)</title><rect x="87.9939%" y="709" width="0.0305%" height="15" fill="rgb(212,47,37)" fg:x="607092224066" fg:w="210698527"/><text x="88.2439%" y="719.50"></text></g><g><title>malloc (69,104,362 samples, 0.01%)</title><rect x="88.0758%" y="533" width="0.0100%" height="15" fill="rgb(254,16,10)" fg:x="607657446699" fg:w="69104362"/><text x="88.3258%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (194,885,558 samples, 0.03%)</title><rect x="88.0582%" y="645" width="0.0282%" height="15" fill="rgb(223,228,16)" fg:x="607535898982" fg:w="194885558"/><text x="88.3082%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (194,885,558 samples, 0.03%)</title><rect x="88.0582%" y="629" width="0.0282%" height="15" fill="rgb(249,108,50)" fg:x="607535898982" fg:w="194885558"/><text x="88.3082%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (194,885,558 samples, 0.03%)</title><rect x="88.0582%" y="613" width="0.0282%" height="15" fill="rgb(208,220,5)" fg:x="607535898982" fg:w="194885558"/><text x="88.3082%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (194,885,558 samples, 0.03%)</title><rect x="88.0582%" y="597" width="0.0282%" height="15" fill="rgb(217,89,48)" fg:x="607535898982" fg:w="194885558"/><text x="88.3082%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (194,885,558 samples, 0.03%)</title><rect x="88.0582%" y="581" width="0.0282%" height="15" fill="rgb(212,113,41)" fg:x="607535898982" fg:w="194885558"/><text x="88.3082%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (194,885,558 samples, 0.03%)</title><rect x="88.0582%" y="565" width="0.0282%" height="15" fill="rgb(231,127,5)" fg:x="607535898982" fg:w="194885558"/><text x="88.3082%" y="575.50"></text></g><g><title>alloc::alloc::alloc (194,885,558 samples, 0.03%)</title><rect x="88.0582%" y="549" width="0.0282%" height="15" fill="rgb(217,141,17)" fg:x="607535898982" fg:w="194885558"/><text x="88.3082%" y="559.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (244,962,944 samples, 0.04%)</title><rect x="88.0582%" y="773" width="0.0355%" height="15" fill="rgb(245,125,54)" fg:x="607535898982" fg:w="244962944"/><text x="88.3082%" y="783.50"></text></g><g><title>&lt;std::path::PathBuf as core::clone::Clone&gt;::clone (244,962,944 samples, 0.04%)</title><rect x="88.0582%" y="757" width="0.0355%" height="15" fill="rgb(248,125,3)" fg:x="607535898982" fg:w="244962944"/><text x="88.3082%" y="767.50"></text></g><g><title>&lt;std::ffi::os_str::OsString as core::clone::Clone&gt;::clone (244,962,944 samples, 0.04%)</title><rect x="88.0582%" y="741" width="0.0355%" height="15" fill="rgb(236,119,51)" fg:x="607535898982" fg:w="244962944"/><text x="88.3082%" y="751.50"></text></g><g><title>&lt;std::sys::os_str::bytes::Buf as core::clone::Clone&gt;::clone (244,962,944 samples, 0.04%)</title><rect x="88.0582%" y="725" width="0.0355%" height="15" fill="rgb(239,99,8)" fg:x="607535898982" fg:w="244962944"/><text x="88.3082%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (244,962,944 samples, 0.04%)</title><rect x="88.0582%" y="709" width="0.0355%" height="15" fill="rgb(224,228,4)" fg:x="607535898982" fg:w="244962944"/><text x="88.3082%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (244,962,944 samples, 0.04%)</title><rect x="88.0582%" y="693" width="0.0355%" height="15" fill="rgb(220,131,45)" fg:x="607535898982" fg:w="244962944"/><text x="88.3082%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (244,962,944 samples, 0.04%)</title><rect x="88.0582%" y="677" width="0.0355%" height="15" fill="rgb(215,62,5)" fg:x="607535898982" fg:w="244962944"/><text x="88.3082%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (244,962,944 samples, 0.04%)</title><rect x="88.0582%" y="661" width="0.0355%" height="15" fill="rgb(253,12,24)" fg:x="607535898982" fg:w="244962944"/><text x="88.3082%" y="671.50"></text></g><g><title>__memmove_avx512_unaligned_erms (94,108,769 samples, 0.01%)</title><rect x="88.1832%" y="533" width="0.0136%" height="15" fill="rgb(248,120,50)" fg:x="608398474605" fg:w="94108769"/><text x="88.4332%" y="543.50"></text></g><g><title>__rdl_alloc (235,297,885 samples, 0.03%)</title><rect x="88.1968%" y="533" width="0.0341%" height="15" fill="rgb(245,194,10)" fg:x="608492583374" fg:w="235297885"/><text x="88.4468%" y="543.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (201,741,904 samples, 0.03%)</title><rect x="88.2017%" y="517" width="0.0292%" height="15" fill="rgb(241,149,38)" fg:x="608526139355" fg:w="201741904"/><text x="88.4517%" y="527.50"></text></g><g><title>[unknown] (453,726,840 samples, 0.07%)</title><rect x="88.1805%" y="549" width="0.0658%" height="15" fill="rgb(219,215,7)" fg:x="608379567094" fg:w="453726840"/><text x="88.4305%" y="559.50"></text></g><g><title>__memmove_avx512_unaligned_erms (92,818,870 samples, 0.01%)</title><rect x="88.2498%" y="549" width="0.0135%" height="15" fill="rgb(208,120,31)" fg:x="608857937239" fg:w="92818870"/><text x="88.4998%" y="559.50"></text></g><g><title>__rdl_alloc (199,156,636 samples, 0.03%)</title><rect x="88.2632%" y="549" width="0.0289%" height="15" fill="rgb(244,30,8)" fg:x="608950756109" fg:w="199156636"/><text x="88.5132%" y="559.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (177,353,004 samples, 0.03%)</title><rect x="88.2664%" y="533" width="0.0257%" height="15" fill="rgb(238,35,44)" fg:x="608972559741" fg:w="177353004"/><text x="88.5164%" y="543.50"></text></g><g><title>_int_malloc (195,033,917 samples, 0.03%)</title><rect x="88.3013%" y="549" width="0.0283%" height="15" fill="rgb(243,218,37)" fg:x="609213628629" fg:w="195033917"/><text x="88.5513%" y="559.50"></text></g><g><title>malloc (742,064,407 samples, 0.11%)</title><rect x="88.3346%" y="549" width="0.1076%" height="15" fill="rgb(218,169,10)" fg:x="609443105697" fg:w="742064407"/><text x="88.5846%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,178,346,293 samples, 0.32%)</title><rect x="88.1333%" y="597" width="0.3157%" height="15" fill="rgb(221,144,10)" fg:x="608054148968" fg:w="2178346293"/><text x="88.3833%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,178,346,293 samples, 0.32%)</title><rect x="88.1333%" y="581" width="0.3157%" height="15" fill="rgb(226,41,38)" fg:x="608054148968" fg:w="2178346293"/><text x="88.3833%" y="591.50"></text></g><g><title>alloc::alloc::alloc (2,178,346,293 samples, 0.32%)</title><rect x="88.1333%" y="565" width="0.3157%" height="15" fill="rgb(228,3,1)" fg:x="608054148968" fg:w="2178346293"/><text x="88.3833%" y="575.50"></text></g><g><title>alloc::raw_vec::layout_array (144,237,403 samples, 0.02%)</title><rect x="88.4490%" y="597" width="0.0209%" height="15" fill="rgb(209,129,12)" fg:x="610232495261" fg:w="144237403"/><text x="88.6990%" y="607.50"></text></g><g><title>core::alloc::layout::Layout::repeat (144,237,403 samples, 0.02%)</title><rect x="88.4490%" y="581" width="0.0209%" height="15" fill="rgb(213,136,33)" fg:x="610232495261" fg:w="144237403"/><text x="88.6990%" y="591.50"></text></g><g><title>core::alloc::layout::Layout::repeat_packed (96,520,751 samples, 0.01%)</title><rect x="88.4559%" y="565" width="0.0140%" height="15" fill="rgb(209,181,29)" fg:x="610280211913" fg:w="96520751"/><text x="88.7059%" y="575.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (96,520,751 samples, 0.01%)</title><rect x="88.4559%" y="549" width="0.0140%" height="15" fill="rgb(234,173,18)" fg:x="610280211913" fg:w="96520751"/><text x="88.7059%" y="559.50"></text></g><g><title>core::intrinsics::unlikely (96,520,751 samples, 0.01%)</title><rect x="88.4559%" y="533" width="0.0140%" height="15" fill="rgb(227,73,47)" fg:x="610280211913" fg:w="96520751"/><text x="88.7059%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,497,689,365 samples, 0.36%)</title><rect x="88.1081%" y="661" width="0.3620%" height="15" fill="rgb(234,9,34)" fg:x="607880080445" fg:w="2497689365"/><text x="88.3581%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,497,689,365 samples, 0.36%)</title><rect x="88.1081%" y="645" width="0.3620%" height="15" fill="rgb(235,172,15)" fg:x="607880080445" fg:w="2497689365"/><text x="88.3581%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,497,689,365 samples, 0.36%)</title><rect x="88.1081%" y="629" width="0.3620%" height="15" fill="rgb(245,61,2)" fg:x="607880080445" fg:w="2497689365"/><text x="88.3581%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,497,689,365 samples, 0.36%)</title><rect x="88.1081%" y="613" width="0.3620%" height="15" fill="rgb(238,39,47)" fg:x="607880080445" fg:w="2497689365"/><text x="88.3581%" y="623.50"></text></g><g><title>__memmove_avx512_unaligned_erms (195,868,081 samples, 0.03%)</title><rect x="88.5219%" y="629" width="0.0284%" height="15" fill="rgb(234,37,24)" fg:x="610735521561" fg:w="195868081"/><text x="88.7719%" y="639.50"></text></g><g><title>__rdl_alloc (205,577,593 samples, 0.03%)</title><rect x="88.5503%" y="629" width="0.0298%" height="15" fill="rgb(248,223,24)" fg:x="610931389642" fg:w="205577593"/><text x="88.8003%" y="639.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (183,011,080 samples, 0.03%)</title><rect x="88.5536%" y="613" width="0.0265%" height="15" fill="rgb(223,12,15)" fg:x="610953956155" fg:w="183011080"/><text x="88.8036%" y="623.50"></text></g><g><title>malloc (77,951,576 samples, 0.01%)</title><rect x="88.5887%" y="629" width="0.0113%" height="15" fill="rgb(249,6,3)" fg:x="611195817853" fg:w="77951576"/><text x="88.8387%" y="639.50"></text></g><g><title>&lt;std::path::PathBuf as core::clone::Clone&gt;::clone (3,498,051,812 samples, 0.51%)</title><rect x="88.0951%" y="773" width="0.5070%" height="15" fill="rgb(237,105,33)" fg:x="607790401707" fg:w="3498051812"/><text x="88.3451%" y="783.50"></text></g><g><title>&lt;std::ffi::os_str::OsString as core::clone::Clone&gt;::clone (3,498,051,812 samples, 0.51%)</title><rect x="88.0951%" y="757" width="0.5070%" height="15" fill="rgb(252,208,35)" fg:x="607790401707" fg:w="3498051812"/><text x="88.3451%" y="767.50"></text></g><g><title>&lt;std::sys::os_str::bytes::Buf as core::clone::Clone&gt;::clone (3,498,051,812 samples, 0.51%)</title><rect x="88.0951%" y="741" width="0.5070%" height="15" fill="rgb(215,181,35)" fg:x="607790401707" fg:w="3498051812"/><text x="88.3451%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,498,051,812 samples, 0.51%)</title><rect x="88.0951%" y="725" width="0.5070%" height="15" fill="rgb(246,212,3)" fg:x="607790401707" fg:w="3498051812"/><text x="88.3451%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,408,373,074 samples, 0.49%)</title><rect x="88.1081%" y="709" width="0.4940%" height="15" fill="rgb(247,156,24)" fg:x="607880080445" fg:w="3408373074"/><text x="88.3581%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (3,408,373,074 samples, 0.49%)</title><rect x="88.1081%" y="693" width="0.4940%" height="15" fill="rgb(248,9,31)" fg:x="607880080445" fg:w="3408373074"/><text x="88.3581%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,408,373,074 samples, 0.49%)</title><rect x="88.1081%" y="677" width="0.4940%" height="15" fill="rgb(234,26,45)" fg:x="607880080445" fg:w="3408373074"/><text x="88.3581%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (910,683,709 samples, 0.13%)</title><rect x="88.4701%" y="661" width="0.1320%" height="15" fill="rgb(249,11,32)" fg:x="610377769810" fg:w="910683709"/><text x="88.7201%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (910,683,709 samples, 0.13%)</title><rect x="88.4701%" y="645" width="0.1320%" height="15" fill="rgb(249,162,33)" fg:x="610377769810" fg:w="910683709"/><text x="88.7201%" y="655.50"></text></g><g><title>__memcmp_evex_movbe (79,054,993 samples, 0.01%)</title><rect x="88.6161%" y="773" width="0.0115%" height="15" fill="rgb(232,4,32)" fg:x="611385226930" fg:w="79054993"/><text x="88.8661%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (114,451,936 samples, 0.02%)</title><rect x="88.6438%" y="773" width="0.0166%" height="15" fill="rgb(212,5,45)" fg:x="611576630672" fg:w="114451936"/><text x="88.8938%" y="783.50"></text></g><g><title>__rdl_alloc (69,412,903 samples, 0.01%)</title><rect x="88.6639%" y="597" width="0.0101%" height="15" fill="rgb(227,95,13)" fg:x="611715087452" fg:w="69412903"/><text x="88.9139%" y="607.50"></text></g><g><title>[unknown] (118,144,964 samples, 0.02%)</title><rect x="88.6631%" y="613" width="0.0171%" height="15" fill="rgb(223,205,10)" fg:x="611709583508" fg:w="118144964"/><text x="88.9131%" y="623.50"></text></g><g><title>malloc (149,319,186 samples, 0.02%)</title><rect x="88.6973%" y="597" width="0.0216%" height="15" fill="rgb(222,178,8)" fg:x="611945098201" fg:w="149319186"/><text x="88.9473%" y="607.50"></text></g><g><title>cfree@GLIBC_2.2.5 (244,210,194 samples, 0.04%)</title><rect x="88.6856%" y="613" width="0.0354%" height="15" fill="rgb(216,13,22)" fg:x="611864686866" fg:w="244210194"/><text x="88.9356%" y="623.50"></text></g><g><title>malloc (195,162,907 samples, 0.03%)</title><rect x="88.7221%" y="613" width="0.0283%" height="15" fill="rgb(240,167,12)" fg:x="612116769339" fg:w="195162907"/><text x="88.9721%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;std::path::PathBuf&gt;&gt; (662,093,048 samples, 0.10%)</title><rect x="88.6631%" y="773" width="0.0960%" height="15" fill="rgb(235,68,35)" fg:x="611709583508" fg:w="662093048"/><text x="88.9131%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::path::PathBuf&gt; (662,093,048 samples, 0.10%)</title><rect x="88.6631%" y="757" width="0.0960%" height="15" fill="rgb(253,40,27)" fg:x="611709583508" fg:w="662093048"/><text x="88.9131%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::ffi::os_str::OsString&gt; (662,093,048 samples, 0.10%)</title><rect x="88.6631%" y="741" width="0.0960%" height="15" fill="rgb(214,19,28)" fg:x="611709583508" fg:w="662093048"/><text x="88.9131%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::os_str::bytes::Buf&gt; (662,093,048 samples, 0.10%)</title><rect x="88.6631%" y="725" width="0.0960%" height="15" fill="rgb(210,167,45)" fg:x="611709583508" fg:w="662093048"/><text x="88.9131%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (662,093,048 samples, 0.10%)</title><rect x="88.6631%" y="709" width="0.0960%" height="15" fill="rgb(232,97,40)" fg:x="611709583508" fg:w="662093048"/><text x="88.9131%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (662,093,048 samples, 0.10%)</title><rect x="88.6631%" y="693" width="0.0960%" height="15" fill="rgb(250,35,23)" fg:x="611709583508" fg:w="662093048"/><text x="88.9131%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (662,093,048 samples, 0.10%)</title><rect x="88.6631%" y="677" width="0.0960%" height="15" fill="rgb(248,47,53)" fg:x="611709583508" fg:w="662093048"/><text x="88.9131%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (662,093,048 samples, 0.10%)</title><rect x="88.6631%" y="661" width="0.0960%" height="15" fill="rgb(226,58,50)" fg:x="611709583508" fg:w="662093048"/><text x="88.9131%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (662,093,048 samples, 0.10%)</title><rect x="88.6631%" y="645" width="0.0960%" height="15" fill="rgb(217,105,26)" fg:x="611709583508" fg:w="662093048"/><text x="88.9131%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (662,093,048 samples, 0.10%)</title><rect x="88.6631%" y="629" width="0.0960%" height="15" fill="rgb(208,64,1)" fg:x="611709583508" fg:w="662093048"/><text x="88.9131%" y="639.50"></text></g><g><title>malloc (93,611,070 samples, 0.01%)</title><rect x="88.7627%" y="773" width="0.0136%" height="15" fill="rgb(214,80,1)" fg:x="612396606929" fg:w="93611070"/><text x="89.0127%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (156,648,389 samples, 0.02%)</title><rect x="88.7764%" y="773" width="0.0227%" height="15" fill="rgb(206,175,26)" fg:x="612491193930" fg:w="156648389"/><text x="89.0264%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (156,648,389 samples, 0.02%)</title><rect x="88.7764%" y="757" width="0.0227%" height="15" fill="rgb(235,156,37)" fg:x="612491193930" fg:w="156648389"/><text x="89.0264%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (156,648,389 samples, 0.02%)</title><rect x="88.7764%" y="741" width="0.0227%" height="15" fill="rgb(213,100,9)" fg:x="612491193930" fg:w="156648389"/><text x="89.0264%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (140,259,299 samples, 0.02%)</title><rect x="88.7788%" y="725" width="0.0203%" height="15" fill="rgb(241,15,13)" fg:x="612507583020" fg:w="140259299"/><text x="89.0288%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (140,259,299 samples, 0.02%)</title><rect x="88.7788%" y="709" width="0.0203%" height="15" fill="rgb(205,97,43)" fg:x="612507583020" fg:w="140259299"/><text x="89.0288%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (134,200,813 samples, 0.02%)</title><rect x="88.7797%" y="693" width="0.0195%" height="15" fill="rgb(216,106,32)" fg:x="612513641506" fg:w="134200813"/><text x="89.0297%" y="703.50"></text></g><g><title>__rdl_realloc (74,796,030 samples, 0.01%)</title><rect x="88.8086%" y="757" width="0.0108%" height="15" fill="rgb(226,200,8)" fg:x="612713435856" fg:w="74796030"/><text x="89.0586%" y="767.50"></text></g><g><title>_int_free (373,234,532 samples, 0.05%)</title><rect x="88.8195%" y="757" width="0.0541%" height="15" fill="rgb(244,54,29)" fg:x="612788231886" fg:w="373234532"/><text x="89.0695%" y="767.50"></text></g><g><title>_int_malloc (327,956,634 samples, 0.05%)</title><rect x="88.8760%" y="757" width="0.0475%" height="15" fill="rgb(252,169,12)" fg:x="613178316591" fg:w="327956634"/><text x="89.1260%" y="767.50"></text></g><g><title>_int_realloc (269,101,447 samples, 0.04%)</title><rect x="88.9235%" y="757" width="0.0390%" height="15" fill="rgb(231,199,11)" fg:x="613506273225" fg:w="269101447"/><text x="89.1735%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (93,711,935 samples, 0.01%)</title><rect x="88.9625%" y="757" width="0.0136%" height="15" fill="rgb(233,191,18)" fg:x="613775374672" fg:w="93711935"/><text x="89.2125%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (138,678,441 samples, 0.02%)</title><rect x="88.9761%" y="757" width="0.0201%" height="15" fill="rgb(215,83,47)" fg:x="613869086607" fg:w="138678441"/><text x="89.2261%" y="767.50"></text></g><g><title>cfree@GLIBC_2.2.5 (112,201,743 samples, 0.02%)</title><rect x="88.9962%" y="757" width="0.0163%" height="15" fill="rgb(251,67,19)" fg:x="614007765048" fg:w="112201743"/><text x="89.2462%" y="767.50"></text></g><g><title>malloc (486,978,467 samples, 0.07%)</title><rect x="89.0140%" y="757" width="0.0706%" height="15" fill="rgb(240,7,20)" fg:x="614130624284" fg:w="486978467"/><text x="89.2640%" y="767.50"></text></g><g><title>realloc (288,115,482 samples, 0.04%)</title><rect x="89.0846%" y="757" width="0.0418%" height="15" fill="rgb(210,150,26)" fg:x="614617602751" fg:w="288115482"/><text x="89.3346%" y="767.50"></text></g><g><title>__memmove_avx512_unaligned_erms (202,469,334 samples, 0.03%)</title><rect x="89.1429%" y="597" width="0.0293%" height="15" fill="rgb(228,75,42)" fg:x="615019495718" fg:w="202469334"/><text x="89.3929%" y="607.50"></text></g><g><title>std::path::Path::to_path_buf (327,122,437 samples, 0.05%)</title><rect x="89.1345%" y="741" width="0.0474%" height="15" fill="rgb(237,134,48)" fg:x="614961636983" fg:w="327122437"/><text x="89.3845%" y="751.50"></text></g><g><title>std::ffi::os_str::OsStr::to_os_string (327,122,437 samples, 0.05%)</title><rect x="89.1345%" y="725" width="0.0474%" height="15" fill="rgb(205,80,50)" fg:x="614961636983" fg:w="327122437"/><text x="89.3845%" y="735.50"></text></g><g><title>std::sys::os_str::bytes::Slice::to_owned (327,122,437 samples, 0.05%)</title><rect x="89.1345%" y="709" width="0.0474%" height="15" fill="rgb(217,74,48)" fg:x="614961636983" fg:w="327122437"/><text x="89.3845%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (327,122,437 samples, 0.05%)</title><rect x="89.1345%" y="693" width="0.0474%" height="15" fill="rgb(205,82,50)" fg:x="614961636983" fg:w="327122437"/><text x="89.3845%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (327,122,437 samples, 0.05%)</title><rect x="89.1345%" y="677" width="0.0474%" height="15" fill="rgb(228,1,33)" fg:x="614961636983" fg:w="327122437"/><text x="89.3845%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (327,122,437 samples, 0.05%)</title><rect x="89.1345%" y="661" width="0.0474%" height="15" fill="rgb(214,50,23)" fg:x="614961636983" fg:w="327122437"/><text x="89.3845%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (327,122,437 samples, 0.05%)</title><rect x="89.1345%" y="645" width="0.0474%" height="15" fill="rgb(210,62,9)" fg:x="614961636983" fg:w="327122437"/><text x="89.3845%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (288,631,010 samples, 0.04%)</title><rect x="89.1401%" y="629" width="0.0418%" height="15" fill="rgb(210,104,37)" fg:x="615000128410" fg:w="288631010"/><text x="89.3901%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (288,631,010 samples, 0.04%)</title><rect x="89.1401%" y="613" width="0.0418%" height="15" fill="rgb(232,104,43)" fg:x="615000128410" fg:w="288631010"/><text x="89.3901%" y="623.50"></text></g><g><title>std::ffi::os_str::OsString::push (124,083,538 samples, 0.02%)</title><rect x="89.1828%" y="709" width="0.0180%" height="15" fill="rgb(244,52,6)" fg:x="615295083795" fg:w="124083538"/><text x="89.4328%" y="719.50"></text></g><g><title>std::sys::os_str::bytes::Buf::push_slice (124,083,538 samples, 0.02%)</title><rect x="89.1828%" y="693" width="0.0180%" height="15" fill="rgb(211,174,52)" fg:x="615295083795" fg:w="124083538"/><text x="89.4328%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (124,083,538 samples, 0.02%)</title><rect x="89.1828%" y="677" width="0.0180%" height="15" fill="rgb(229,48,4)" fg:x="615295083795" fg:w="124083538"/><text x="89.4328%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (124,083,538 samples, 0.02%)</title><rect x="89.1828%" y="661" width="0.0180%" height="15" fill="rgb(205,155,16)" fg:x="615295083795" fg:w="124083538"/><text x="89.4328%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (124,083,538 samples, 0.02%)</title><rect x="89.1828%" y="645" width="0.0180%" height="15" fill="rgb(211,141,53)" fg:x="615295083795" fg:w="124083538"/><text x="89.4328%" y="655.50"></text></g><g><title>std::path::Path::_join (514,595,707 samples, 0.07%)</title><rect x="89.1264%" y="757" width="0.0746%" height="15" fill="rgb(240,148,11)" fg:x="614905718233" fg:w="514595707"/><text x="89.3764%" y="767.50"></text></g><g><title>std::path::PathBuf::push (131,554,520 samples, 0.02%)</title><rect x="89.1819%" y="741" width="0.0191%" height="15" fill="rgb(214,45,23)" fg:x="615288759420" fg:w="131554520"/><text x="89.4319%" y="751.50"></text></g><g><title>std::path::PathBuf::_push (131,554,520 samples, 0.02%)</title><rect x="89.1819%" y="725" width="0.0191%" height="15" fill="rgb(248,74,26)" fg:x="615288759420" fg:w="131554520"/><text x="89.4319%" y="735.50"></text></g><g><title>std::path::Path::join (2,826,058,431 samples, 0.41%)</title><rect x="88.8008%" y="773" width="0.4096%" height="15" fill="rgb(218,121,16)" fg:x="612659337658" fg:w="2826058431"/><text x="89.0508%" y="783.50"></text></g><g><title>llvm_profparser::coverage::CoverageMappingInfo::get_files_from_id (8,170,324,495 samples, 1.18%)</title><rect x="88.0263%" y="789" width="1.1842%" height="15" fill="rgb(218,10,47)" fg:x="607315932936" fg:w="8170324495"/><text x="88.2763%" y="799.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1,614,601,001 samples, 0.23%)</title><rect x="89.4679%" y="597" width="0.2340%" height="15" fill="rgb(227,99,14)" fg:x="617262117117" fg:w="1614601001"/><text x="89.7179%" y="607.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1,614,601,001 samples, 0.23%)</title><rect x="89.4679%" y="581" width="0.2340%" height="15" fill="rgb(229,83,46)" fg:x="617262117117" fg:w="1614601001"/><text x="89.7179%" y="591.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1,614,601,001 samples, 0.23%)</title><rect x="89.4679%" y="565" width="0.2340%" height="15" fill="rgb(228,25,1)" fg:x="617262117117" fg:w="1614601001"/><text x="89.7179%" y="575.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1,614,601,001 samples, 0.23%)</title><rect x="89.4679%" y="549" width="0.2340%" height="15" fill="rgb(252,190,15)" fg:x="617262117117" fg:w="1614601001"/><text x="89.7179%" y="559.50"></text></g><g><title>core::slice::index::get_offset_len_noubcheck (936,084,684 samples, 0.14%)</title><rect x="89.5663%" y="533" width="0.1357%" height="15" fill="rgb(213,103,51)" fg:x="617940633434" fg:w="936084684"/><text x="89.8163%" y="543.50"></text></g><g><title>core::slice::index::get_noubcheck (936,084,684 samples, 0.14%)</title><rect x="89.5663%" y="517" width="0.1357%" height="15" fill="rgb(220,38,44)" fg:x="617940633434" fg:w="936084684"/><text x="89.8163%" y="527.50"></text></g><g><title>&lt;usize as core::ops::bit::BitXor&gt;::bitxor (4,812,101,531 samples, 0.70%)</title><rect x="89.7019%" y="581" width="0.6975%" height="15" fill="rgb(210,45,26)" fg:x="618876718118" fg:w="4812101531"/><text x="89.9519%" y="591.50"></text></g><g><title>core::num::&lt;impl usize&gt;::rotate_left (3,291,420,953 samples, 0.48%)</title><rect x="90.3994%" y="581" width="0.4771%" height="15" fill="rgb(205,95,48)" fg:x="623688819649" fg:w="3291420953"/><text x="90.6494%" y="591.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (15,479,753,349 samples, 2.24%)</title><rect x="89.2165%" y="613" width="2.2437%" height="15" fill="rgb(225,179,37)" fg:x="615527552200" fg:w="15479753349"/><text x="89.4665%" y="623.50">&lt;..</text></g><g><title>rustc_hash::FxHasher::add_to_hash (12,130,587,431 samples, 1.76%)</title><rect x="89.7019%" y="597" width="1.7582%" height="15" fill="rgb(230,209,3)" fg:x="618876718118" fg:w="12130587431"/><text x="89.9519%" y="607.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_mul (4,027,064,947 samples, 0.58%)</title><rect x="90.8765%" y="581" width="0.5837%" height="15" fill="rgb(248,12,46)" fg:x="626980240602" fg:w="4027064947"/><text x="91.1265%" y="591.50"></text></g><g><title>hashbrown::map::make_hash (15,621,881,851 samples, 2.26%)</title><rect x="89.2165%" y="693" width="2.2643%" height="15" fill="rgb(234,18,0)" fg:x="615527552200" fg:w="15621881851"/><text x="89.4665%" y="703.50">h..</text></g><g><title>core::hash::BuildHasher::hash_one (15,621,881,851 samples, 2.26%)</title><rect x="89.2165%" y="677" width="2.2643%" height="15" fill="rgb(238,197,14)" fg:x="615527552200" fg:w="15621881851"/><text x="89.4665%" y="687.50">c..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (15,621,881,851 samples, 2.26%)</title><rect x="89.2165%" y="661" width="2.2643%" height="15" fill="rgb(251,162,48)" fg:x="615527552200" fg:w="15621881851"/><text x="89.4665%" y="671.50">c..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (15,621,881,851 samples, 2.26%)</title><rect x="89.2165%" y="645" width="2.2643%" height="15" fill="rgb(237,73,42)" fg:x="615527552200" fg:w="15621881851"/><text x="89.4665%" y="655.50">c..</text></g><g><title>core::hash::Hasher::write_str (15,621,881,851 samples, 2.26%)</title><rect x="89.2165%" y="629" width="2.2643%" height="15" fill="rgb(211,108,8)" fg:x="615527552200" fg:w="15621881851"/><text x="89.4665%" y="639.50">c..</text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write_u8 (142,128,502 samples, 0.02%)</title><rect x="91.4602%" y="613" width="0.0206%" height="15" fill="rgb(213,45,22)" fg:x="631007305549" fg:w="142128502"/><text x="91.7102%" y="623.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (142,128,502 samples, 0.02%)</title><rect x="91.4602%" y="597" width="0.0206%" height="15" fill="rgb(252,154,5)" fg:x="631007305549" fg:w="142128502"/><text x="91.7102%" y="607.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_mul (71,309,184 samples, 0.01%)</title><rect x="91.4705%" y="581" width="0.0103%" height="15" fill="rgb(221,79,52)" fg:x="631078124867" fg:w="71309184"/><text x="91.7205%" y="591.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (81,851,636 samples, 0.01%)</title><rect x="91.4922%" y="645" width="0.0119%" height="15" fill="rgb(229,220,36)" fg:x="631227996509" fg:w="81851636"/><text x="91.7422%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (81,851,636 samples, 0.01%)</title><rect x="91.4922%" y="629" width="0.0119%" height="15" fill="rgb(211,17,16)" fg:x="631227996509" fg:w="81851636"/><text x="91.7422%" y="639.50"></text></g><g><title>hashbrown::control::tag::Tag::full (225,968,938 samples, 0.03%)</title><rect x="91.5040%" y="645" width="0.0328%" height="15" fill="rgb(222,55,31)" fg:x="631309848145" fg:w="225968938"/><text x="91.7540%" y="655.50"></text></g><g><title>__memcmp_evex_movbe (108,951,092 samples, 0.02%)</title><rect x="91.5374%" y="517" width="0.0158%" height="15" fill="rgb(221,221,31)" fg:x="631539942993" fg:w="108951092"/><text x="91.7874%" y="527.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (182,024,521 samples, 0.03%)</title><rect x="91.5369%" y="629" width="0.0264%" height="15" fill="rgb(227,168,26)" fg:x="631536770463" fg:w="182024521"/><text x="91.7869%" y="639.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (182,024,521 samples, 0.03%)</title><rect x="91.5369%" y="613" width="0.0264%" height="15" fill="rgb(224,139,9)" fg:x="631536770463" fg:w="182024521"/><text x="91.7869%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (182,024,521 samples, 0.03%)</title><rect x="91.5369%" y="597" width="0.0264%" height="15" fill="rgb(254,172,0)" fg:x="631536770463" fg:w="182024521"/><text x="91.7869%" y="607.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (182,024,521 samples, 0.03%)</title><rect x="91.5369%" y="581" width="0.0264%" height="15" fill="rgb(235,203,1)" fg:x="631536770463" fg:w="182024521"/><text x="91.7869%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (182,024,521 samples, 0.03%)</title><rect x="91.5369%" y="565" width="0.0264%" height="15" fill="rgb(216,205,24)" fg:x="631536770463" fg:w="182024521"/><text x="91.7869%" y="575.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (182,024,521 samples, 0.03%)</title><rect x="91.5369%" y="549" width="0.0264%" height="15" fill="rgb(233,24,6)" fg:x="631536770463" fg:w="182024521"/><text x="91.7869%" y="559.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (182,024,521 samples, 0.03%)</title><rect x="91.5369%" y="533" width="0.0264%" height="15" fill="rgb(244,110,9)" fg:x="631536770463" fg:w="182024521"/><text x="91.7869%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (183,156,530 samples, 0.03%)</title><rect x="91.5369%" y="645" width="0.0265%" height="15" fill="rgb(239,222,42)" fg:x="631536770463" fg:w="183156530"/><text x="91.7869%" y="655.50"></text></g><g><title>llvm_profparser::instrumentation_profile::types::InstrumentationProfile::find_record_by_name (16,300,785,028 samples, 2.36%)</title><rect x="89.2151%" y="757" width="2.3627%" height="15" fill="rgb(218,145,13)" fg:x="615517925257" fg:w="16300785028"/><text x="89.4651%" y="767.50">ll..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (16,300,785,028 samples, 2.36%)</title><rect x="89.2151%" y="741" width="2.3627%" height="15" fill="rgb(207,69,11)" fg:x="615517925257" fg:w="16300785028"/><text x="89.4651%" y="751.50">st..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (16,300,785,028 samples, 2.36%)</title><rect x="89.2151%" y="725" width="2.3627%" height="15" fill="rgb(220,223,22)" fg:x="615517925257" fg:w="16300785028"/><text x="89.4651%" y="735.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (16,300,785,028 samples, 2.36%)</title><rect x="89.2151%" y="709" width="2.3627%" height="15" fill="rgb(245,102,5)" fg:x="615517925257" fg:w="16300785028"/><text x="89.4651%" y="719.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (669,276,234 samples, 0.10%)</title><rect x="91.4808%" y="693" width="0.0970%" height="15" fill="rgb(211,148,2)" fg:x="631149434051" fg:w="669276234"/><text x="91.7308%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (669,276,234 samples, 0.10%)</title><rect x="91.4808%" y="677" width="0.0970%" height="15" fill="rgb(241,13,44)" fg:x="631149434051" fg:w="669276234"/><text x="91.7308%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (669,276,234 samples, 0.10%)</title><rect x="91.4808%" y="661" width="0.0970%" height="15" fill="rgb(219,137,21)" fg:x="631149434051" fg:w="669276234"/><text x="91.7308%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::probe_seq (98,783,292 samples, 0.01%)</title><rect x="91.5635%" y="645" width="0.0143%" height="15" fill="rgb(242,206,5)" fg:x="631719926993" fg:w="98783292"/><text x="91.8135%" y="655.50"></text></g><g><title>core::intrinsics::likely (88,052,753 samples, 0.01%)</title><rect x="91.5891%" y="645" width="0.0128%" height="15" fill="rgb(217,114,22)" fg:x="631896977124" fg:w="88052753"/><text x="91.8391%" y="655.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (80,667,899 samples, 0.01%)</title><rect x="91.6092%" y="645" width="0.0117%" height="15" fill="rgb(253,206,42)" fg:x="632035312145" fg:w="80667899"/><text x="91.8592%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (80,667,899 samples, 0.01%)</title><rect x="91.6092%" y="629" width="0.0117%" height="15" fill="rgb(236,102,18)" fg:x="632035312145" fg:w="80667899"/><text x="91.8592%" y="639.50"></text></g><g><title>llvm_profparser::instrumentation_profile::types::InstrumentationProfile::find_record_by_hash (16,635,525,286 samples, 2.41%)</title><rect x="89.2148%" y="773" width="2.4112%" height="15" fill="rgb(208,59,49)" fg:x="615515725543" fg:w="16635525286"/><text x="89.4648%" y="783.50">ll..</text></g><g><title>llvm_profparser::instrumentation_profile::types::Symtab::get (332,540,544 samples, 0.05%)</title><rect x="91.5778%" y="757" width="0.0482%" height="15" fill="rgb(215,194,28)" fg:x="631818710285" fg:w="332540544"/><text x="91.8278%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (332,540,544 samples, 0.05%)</title><rect x="91.5778%" y="741" width="0.0482%" height="15" fill="rgb(243,207,11)" fg:x="631818710285" fg:w="332540544"/><text x="91.8278%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (332,540,544 samples, 0.05%)</title><rect x="91.5778%" y="725" width="0.0482%" height="15" fill="rgb(254,179,35)" fg:x="631818710285" fg:w="332540544"/><text x="91.8278%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (332,540,544 samples, 0.05%)</title><rect x="91.5778%" y="709" width="0.0482%" height="15" fill="rgb(235,97,3)" fg:x="631818710285" fg:w="332540544"/><text x="91.8278%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (323,182,046 samples, 0.05%)</title><rect x="91.5792%" y="693" width="0.0468%" height="15" fill="rgb(215,155,33)" fg:x="631828068783" fg:w="323182046"/><text x="91.8292%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (323,182,046 samples, 0.05%)</title><rect x="91.5792%" y="677" width="0.0468%" height="15" fill="rgb(223,128,12)" fg:x="631828068783" fg:w="323182046"/><text x="91.8292%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (323,182,046 samples, 0.05%)</title><rect x="91.5792%" y="661" width="0.0468%" height="15" fill="rgb(208,157,18)" fg:x="631828068783" fg:w="323182046"/><text x="91.8292%" y="671.50"></text></g><g><title>&lt;llvm_profparser::coverage::CounterType as core::hash::Hash&gt;::hash (76,641,610 samples, 0.01%)</title><rect x="91.6395%" y="677" width="0.0111%" height="15" fill="rgb(249,70,54)" fg:x="632244524332" fg:w="76641610"/><text x="91.8895%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (89,694,972 samples, 0.01%)</title><rect x="91.6395%" y="741" width="0.0130%" height="15" fill="rgb(244,118,24)" fg:x="632244524332" fg:w="89694972"/><text x="91.8895%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (89,694,972 samples, 0.01%)</title><rect x="91.6395%" y="725" width="0.0130%" height="15" fill="rgb(211,54,0)" fg:x="632244524332" fg:w="89694972"/><text x="91.8895%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (89,694,972 samples, 0.01%)</title><rect x="91.6395%" y="709" width="0.0130%" height="15" fill="rgb(245,137,45)" fg:x="632244524332" fg:w="89694972"/><text x="91.8895%" y="719.50"></text></g><g><title>&lt;llvm_profparser::coverage::Counter as core::hash::Hash&gt;::hash (89,694,972 samples, 0.01%)</title><rect x="91.6395%" y="693" width="0.0130%" height="15" fill="rgb(232,154,31)" fg:x="632244524332" fg:w="89694972"/><text x="91.8895%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (179,782,496 samples, 0.03%)</title><rect x="91.6279%" y="757" width="0.0261%" height="15" fill="rgb(253,6,39)" fg:x="632164066846" fg:w="179782496"/><text x="91.8779%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (80,437,353 samples, 0.01%)</title><rect x="91.6539%" y="757" width="0.0117%" height="15" fill="rgb(234,183,24)" fg:x="632343849342" fg:w="80437353"/><text x="91.9039%" y="767.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::CoverageMapping::get_simple_counters (16,941,426,123 samples, 2.46%)</title><rect x="89.2105%" y="789" width="2.4555%" height="15" fill="rgb(252,84,40)" fg:x="615486257431" fg:w="16941426123"/><text x="89.4605%" y="799.50">ll..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (276,432,725 samples, 0.04%)</title><rect x="91.6260%" y="773" width="0.0401%" height="15" fill="rgb(224,65,2)" fg:x="632151250829" fg:w="276432725"/><text x="91.8760%" y="783.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (72,407,889 samples, 0.01%)</title><rect x="91.6666%" y="757" width="0.0105%" height="15" fill="rgb(229,38,24)" fg:x="632431048666" fg:w="72407889"/><text x="91.9166%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (76,859,086 samples, 0.01%)</title><rect x="91.6661%" y="773" width="0.0111%" height="15" fill="rgb(218,131,50)" fg:x="632427683554" fg:w="76859086"/><text x="91.9161%" y="783.50"></text></g><g><title>llvm_profparser::coverage::reporting::CoverageResult::insert (77,981,876 samples, 0.01%)</title><rect x="91.6661%" y="789" width="0.0113%" height="15" fill="rgb(233,106,18)" fg:x="632427683554" fg:w="77981876"/><text x="91.9161%" y="799.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (72,140,958 samples, 0.01%)</title><rect x="91.6859%" y="645" width="0.0105%" height="15" fill="rgb(220,216,11)" fg:x="632564599166" fg:w="72140958"/><text x="91.9359%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (78,452,811 samples, 0.01%)</title><rect x="91.6859%" y="725" width="0.0114%" height="15" fill="rgb(251,100,45)" fg:x="632564599166" fg:w="78452811"/><text x="91.9359%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (78,452,811 samples, 0.01%)</title><rect x="91.6859%" y="709" width="0.0114%" height="15" fill="rgb(235,143,32)" fg:x="632564599166" fg:w="78452811"/><text x="91.9359%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (78,452,811 samples, 0.01%)</title><rect x="91.6859%" y="693" width="0.0114%" height="15" fill="rgb(248,124,34)" fg:x="632564599166" fg:w="78452811"/><text x="91.9359%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (78,452,811 samples, 0.01%)</title><rect x="91.6859%" y="677" width="0.0114%" height="15" fill="rgb(225,221,4)" fg:x="632564599166" fg:w="78452811"/><text x="91.9359%" y="687.50"></text></g><g><title>core::hash::Hasher::write_str (78,452,811 samples, 0.01%)</title><rect x="91.6859%" y="661" width="0.0114%" height="15" fill="rgb(242,27,43)" fg:x="632564599166" fg:w="78452811"/><text x="91.9359%" y="671.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (140,674,770 samples, 0.02%)</title><rect x="91.7068%" y="661" width="0.0204%" height="15" fill="rgb(227,54,8)" fg:x="632709060016" fg:w="140674770"/><text x="91.9568%" y="671.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (140,674,770 samples, 0.02%)</title><rect x="91.7068%" y="645" width="0.0204%" height="15" fill="rgb(253,139,49)" fg:x="632709060016" fg:w="140674770"/><text x="91.9568%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (119,746,355 samples, 0.02%)</title><rect x="91.7099%" y="629" width="0.0174%" height="15" fill="rgb(231,26,43)" fg:x="632729988431" fg:w="119746355"/><text x="91.9599%" y="639.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (119,746,355 samples, 0.02%)</title><rect x="91.7099%" y="613" width="0.0174%" height="15" fill="rgb(207,121,39)" fg:x="632729988431" fg:w="119746355"/><text x="91.9599%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (119,746,355 samples, 0.02%)</title><rect x="91.7099%" y="597" width="0.0174%" height="15" fill="rgb(223,101,35)" fg:x="632729988431" fg:w="119746355"/><text x="91.9599%" y="607.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (119,746,355 samples, 0.02%)</title><rect x="91.7099%" y="581" width="0.0174%" height="15" fill="rgb(232,87,23)" fg:x="632729988431" fg:w="119746355"/><text x="91.9599%" y="591.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (119,746,355 samples, 0.02%)</title><rect x="91.7099%" y="565" width="0.0174%" height="15" fill="rgb(225,180,29)" fg:x="632729988431" fg:w="119746355"/><text x="91.9599%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (141,740,104 samples, 0.02%)</title><rect x="91.7068%" y="677" width="0.0205%" height="15" fill="rgb(225,25,17)" fg:x="632709060016" fg:w="141740104"/><text x="91.9568%" y="687.50"></text></g><g><title>llvm_profparser::instrumentation_profile::types::InstrumentationProfile::find_record_by_name (349,439,130 samples, 0.05%)</title><rect x="91.6774%" y="789" width="0.0506%" height="15" fill="rgb(223,8,52)" fg:x="632505665430" fg:w="349439130"/><text x="91.9274%" y="799.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (290,505,394 samples, 0.04%)</title><rect x="91.6859%" y="773" width="0.0421%" height="15" fill="rgb(246,42,21)" fg:x="632564599166" fg:w="290505394"/><text x="91.9359%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (290,505,394 samples, 0.04%)</title><rect x="91.6859%" y="757" width="0.0421%" height="15" fill="rgb(205,64,43)" fg:x="632564599166" fg:w="290505394"/><text x="91.9359%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (290,505,394 samples, 0.04%)</title><rect x="91.6859%" y="741" width="0.0421%" height="15" fill="rgb(221,160,13)" fg:x="632564599166" fg:w="290505394"/><text x="91.9359%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (212,052,583 samples, 0.03%)</title><rect x="91.6973%" y="725" width="0.0307%" height="15" fill="rgb(239,58,35)" fg:x="632643051977" fg:w="212052583"/><text x="91.9473%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (212,052,583 samples, 0.03%)</title><rect x="91.6973%" y="709" width="0.0307%" height="15" fill="rgb(251,26,40)" fg:x="632643051977" fg:w="212052583"/><text x="91.9473%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (195,517,278 samples, 0.03%)</title><rect x="91.6997%" y="693" width="0.0283%" height="15" fill="rgb(247,0,4)" fg:x="632659587282" fg:w="195517278"/><text x="91.9497%" y="703.50"></text></g><g><title>&lt;llvm_profparser::coverage::CounterType as core::hash::Hash&gt;::hash (409,960,192 samples, 0.06%)</title><rect x="91.7378%" y="677" width="0.0594%" height="15" fill="rgb(218,130,10)" fg:x="632922500425" fg:w="409960192"/><text x="91.9878%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (508,968,236 samples, 0.07%)</title><rect x="91.7335%" y="741" width="0.0738%" height="15" fill="rgb(239,32,7)" fg:x="632892900075" fg:w="508968236"/><text x="91.9835%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (508,968,236 samples, 0.07%)</title><rect x="91.7335%" y="725" width="0.0738%" height="15" fill="rgb(210,192,24)" fg:x="632892900075" fg:w="508968236"/><text x="91.9835%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (508,968,236 samples, 0.07%)</title><rect x="91.7335%" y="709" width="0.0738%" height="15" fill="rgb(226,212,17)" fg:x="632892900075" fg:w="508968236"/><text x="91.9835%" y="719.50"></text></g><g><title>&lt;llvm_profparser::coverage::Counter as core::hash::Hash&gt;::hash (479,367,886 samples, 0.07%)</title><rect x="91.7378%" y="693" width="0.0695%" height="15" fill="rgb(219,201,28)" fg:x="632922500425" fg:w="479367886"/><text x="91.9878%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (69,407,694 samples, 0.01%)</title><rect x="91.7972%" y="677" width="0.0101%" height="15" fill="rgb(235,207,41)" fg:x="633332460617" fg:w="69407694"/><text x="92.0472%" y="687.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write_u64 (69,407,694 samples, 0.01%)</title><rect x="91.7972%" y="661" width="0.0101%" height="15" fill="rgb(241,95,54)" fg:x="633332460617" fg:w="69407694"/><text x="92.0472%" y="671.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (69,407,694 samples, 0.01%)</title><rect x="91.7972%" y="645" width="0.0101%" height="15" fill="rgb(248,12,23)" fg:x="633332460617" fg:w="69407694"/><text x="92.0472%" y="655.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (75,410,631 samples, 0.01%)</title><rect x="91.8241%" y="693" width="0.0109%" height="15" fill="rgb(228,173,4)" fg:x="633518110099" fg:w="75410631"/><text x="92.0741%" y="703.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (75,410,631 samples, 0.01%)</title><rect x="91.8241%" y="677" width="0.0109%" height="15" fill="rgb(254,99,5)" fg:x="633518110099" fg:w="75410631"/><text x="92.0741%" y="687.50"></text></g><g><title>core::intrinsics::likely (93,687,078 samples, 0.01%)</title><rect x="91.8350%" y="693" width="0.0136%" height="15" fill="rgb(212,184,17)" fg:x="633593520730" fg:w="93687078"/><text x="92.0850%" y="703.50"></text></g><g><title>hashbrown::control::tag::Tag::full (136,111,798 samples, 0.02%)</title><rect x="91.8638%" y="693" width="0.0197%" height="15" fill="rgb(252,174,1)" fg:x="633792128158" fg:w="136111798"/><text x="92.1138%" y="703.50"></text></g><g><title>&lt;llvm_profparser::coverage::Counter as core::cmp::PartialEq&gt;::eq (226,408,326 samples, 0.03%)</title><rect x="91.8865%" y="629" width="0.0328%" height="15" fill="rgb(241,118,51)" fg:x="633948556295" fg:w="226408326"/><text x="92.1365%" y="639.50"></text></g><g><title>&lt;llvm_profparser::coverage::CounterType as core::cmp::PartialEq&gt;::eq (226,408,326 samples, 0.03%)</title><rect x="91.8865%" y="613" width="0.0328%" height="15" fill="rgb(227,94,47)" fg:x="633948556295" fg:w="226408326"/><text x="92.1365%" y="623.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (244,713,272 samples, 0.04%)</title><rect x="91.8840%" y="677" width="0.0355%" height="15" fill="rgb(229,104,2)" fg:x="633931373326" fg:w="244713272"/><text x="92.1340%" y="687.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (244,713,272 samples, 0.04%)</title><rect x="91.8840%" y="661" width="0.0355%" height="15" fill="rgb(219,28,31)" fg:x="633931373326" fg:w="244713272"/><text x="92.1340%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (244,713,272 samples, 0.04%)</title><rect x="91.8840%" y="645" width="0.0355%" height="15" fill="rgb(233,109,36)" fg:x="633931373326" fg:w="244713272"/><text x="92.1340%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (307,887,439 samples, 0.04%)</title><rect x="91.8840%" y="693" width="0.0446%" height="15" fill="rgb(246,88,11)" fg:x="633931373326" fg:w="307887439"/><text x="92.1340%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,428,785,363 samples, 0.21%)</title><rect x="91.7280%" y="789" width="0.2071%" height="15" fill="rgb(209,212,17)" fg:x="632855104560" fg:w="1428785363"/><text x="91.9780%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,428,785,363 samples, 0.21%)</title><rect x="91.7280%" y="773" width="0.2071%" height="15" fill="rgb(243,59,29)" fg:x="632855104560" fg:w="1428785363"/><text x="91.9780%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,402,124,614 samples, 0.20%)</title><rect x="91.7319%" y="757" width="0.2032%" height="15" fill="rgb(244,205,48)" fg:x="632881765309" fg:w="1402124614"/><text x="91.9819%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (882,021,612 samples, 0.13%)</title><rect x="91.8073%" y="741" width="0.1278%" height="15" fill="rgb(227,30,6)" fg:x="633401868311" fg:w="882021612"/><text x="92.0573%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (821,220,786 samples, 0.12%)</title><rect x="91.8161%" y="725" width="0.1190%" height="15" fill="rgb(220,205,48)" fg:x="633462669137" fg:w="821220786"/><text x="92.0661%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (813,528,271 samples, 0.12%)</title><rect x="91.8172%" y="709" width="0.1179%" height="15" fill="rgb(250,94,14)" fg:x="633470361652" fg:w="813528271"/><text x="92.0672%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (429,531,379 samples, 0.06%)</title><rect x="91.9401%" y="725" width="0.0623%" height="15" fill="rgb(216,119,42)" fg:x="634318161766" fg:w="429531379"/><text x="92.1901%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (428,400,306 samples, 0.06%)</title><rect x="91.9402%" y="709" width="0.0621%" height="15" fill="rgb(232,155,0)" fg:x="634319292839" fg:w="428400306"/><text x="92.1902%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (484,889,762 samples, 0.07%)</title><rect x="91.9399%" y="757" width="0.0703%" height="15" fill="rgb(212,24,32)" fg:x="634317203206" fg:w="484889762"/><text x="92.1899%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (484,889,762 samples, 0.07%)</title><rect x="91.9399%" y="741" width="0.0703%" height="15" fill="rgb(216,69,20)" fg:x="634317203206" fg:w="484889762"/><text x="92.1899%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (570,596,866 samples, 0.08%)</title><rect x="91.9351%" y="789" width="0.0827%" height="15" fill="rgb(229,73,31)" fg:x="634283889923" fg:w="570596866"/><text x="92.1851%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (570,596,866 samples, 0.08%)</title><rect x="91.9351%" y="773" width="0.0827%" height="15" fill="rgb(224,219,20)" fg:x="634283889923" fg:w="570596866"/><text x="92.1851%" y="783.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::CoverageMapping::generate_subreport (31,894,674,962 samples, 4.62%)</title><rect x="87.3974%" y="805" width="4.6229%" height="15" fill="rgb(215,146,41)" fg:x="602976993343" fg:w="31894674962"/><text x="87.6474%" y="815.50">llvm_..</text></g><g><title>cargo_tarpaulin::process_handling::collect_coverage (77,246,220,757 samples, 11.20%)</title><rect x="80.8241%" y="869" width="11.1963%" height="15" fill="rgb(244,71,31)" fg:x="557626452999" fg:w="77246220757"/><text x="81.0741%" y="879.50">cargo_tarpaulin:..</text></g><g><title>cargo_tarpaulin::statemachine::TestState::step (77,246,220,757 samples, 11.20%)</title><rect x="80.8241%" y="853" width="11.1963%" height="15" fill="rgb(224,24,11)" fg:x="557626452999" fg:w="77246220757"/><text x="81.0741%" y="863.50">cargo_tarpaulin:..</text></g><g><title>&lt;alloc::boxed::Box&lt;dyn cargo_tarpaulin::statemachine::StateData&gt; as cargo_tarpaulin::statemachine::StateData&gt;::wait (77,246,220,757 samples, 11.20%)</title><rect x="80.8241%" y="837" width="11.1963%" height="15" fill="rgb(229,76,15)" fg:x="557626452999" fg:w="77246220757"/><text x="81.0741%" y="847.50">&lt;alloc::boxed::B..</text></g><g><title>&lt;cargo_tarpaulin::statemachine::instrumented::LlvmInstrumentedData as cargo_tarpaulin::statemachine::StateData&gt;::wait (77,246,220,757 samples, 11.20%)</title><rect x="80.8241%" y="821" width="11.1963%" height="15" fill="rgb(209,93,2)" fg:x="557626452999" fg:w="77246220757"/><text x="81.0741%" y="831.50">&lt;cargo_tarpaulin..</text></g><g><title>cargo_tarpaulin::process_handling::get_test_coverage (77,257,146,664 samples, 11.20%)</title><rect x="80.8241%" y="885" width="11.1979%" height="15" fill="rgb(216,200,50)" fg:x="557626452999" fg:w="77257146664"/><text x="81.0741%" y="895.50">cargo_tarpaulin:..</text></g><g><title>proc_macro2::fallback::Span::end::_{{closure}} (198,573,947 samples, 0.03%)</title><rect x="92.0323%" y="725" width="0.0288%" height="15" fill="rgb(211,67,34)" fg:x="634954578355" fg:w="198573947"/><text x="92.2823%" y="735.50"></text></g><g><title>proc_macro2::fallback::SourceMap::fileinfo (198,573,947 samples, 0.03%)</title><rect x="92.0323%" y="709" width="0.0288%" height="15" fill="rgb(225,87,47)" fg:x="634954578355" fg:w="198573947"/><text x="92.2823%" y="719.50"></text></g><g><title>proc_macro2::fallback::FileInfo::span_within (132,634,088 samples, 0.02%)</title><rect x="92.0419%" y="693" width="0.0192%" height="15" fill="rgb(217,185,16)" fg:x="635020518214" fg:w="132634088"/><text x="92.2919%" y="703.50"></text></g><g><title>proc_macro2::Span::end (220,944,968 samples, 0.03%)</title><rect x="92.0320%" y="805" width="0.0320%" height="15" fill="rgb(205,0,0)" fg:x="634952629881" fg:w="220944968"/><text x="92.2820%" y="815.50"></text></g><g><title>proc_macro2::imp::Span::end (220,944,968 samples, 0.03%)</title><rect x="92.0320%" y="789" width="0.0320%" height="15" fill="rgb(207,116,45)" fg:x="634952629881" fg:w="220944968"/><text x="92.2820%" y="799.50"></text></g><g><title>proc_macro2::fallback::Span::end (220,944,968 samples, 0.03%)</title><rect x="92.0320%" y="773" width="0.0320%" height="15" fill="rgb(221,156,26)" fg:x="634952629881" fg:w="220944968"/><text x="92.2820%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (220,944,968 samples, 0.03%)</title><rect x="92.0320%" y="757" width="0.0320%" height="15" fill="rgb(213,140,4)" fg:x="634952629881" fg:w="220944968"/><text x="92.2820%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (220,944,968 samples, 0.03%)</title><rect x="92.0320%" y="741" width="0.0320%" height="15" fill="rgb(231,224,15)" fg:x="634952629881" fg:w="220944968"/><text x="92.2820%" y="751.50"></text></g><g><title>cargo_tarpaulin::source_analysis::LineAnalysis::ignore_span (433,312,013 samples, 0.06%)</title><rect x="92.0310%" y="821" width="0.0628%" height="15" fill="rgb(244,76,20)" fg:x="634945321727" fg:w="433312013"/><text x="92.2810%" y="831.50"></text></g><g><title>proc_macro2::Span::start (205,058,891 samples, 0.03%)</title><rect x="92.0641%" y="805" width="0.0297%" height="15" fill="rgb(238,117,7)" fg:x="635173574849" fg:w="205058891"/><text x="92.3141%" y="815.50"></text></g><g><title>proc_macro2::imp::Span::start (205,058,891 samples, 0.03%)</title><rect x="92.0641%" y="789" width="0.0297%" height="15" fill="rgb(235,1,10)" fg:x="635173574849" fg:w="205058891"/><text x="92.3141%" y="799.50"></text></g><g><title>proc_macro2::fallback::Span::start (205,058,891 samples, 0.03%)</title><rect x="92.0641%" y="773" width="0.0297%" height="15" fill="rgb(216,165,6)" fg:x="635173574849" fg:w="205058891"/><text x="92.3141%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (205,058,891 samples, 0.03%)</title><rect x="92.0641%" y="757" width="0.0297%" height="15" fill="rgb(246,91,35)" fg:x="635173574849" fg:w="205058891"/><text x="92.3141%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (203,962,739 samples, 0.03%)</title><rect x="92.0642%" y="741" width="0.0296%" height="15" fill="rgb(228,96,24)" fg:x="635174671001" fg:w="203962739"/><text x="92.3142%" y="751.50"></text></g><g><title>proc_macro2::fallback::Span::start::_{{closure}} (203,962,739 samples, 0.03%)</title><rect x="92.0642%" y="725" width="0.0296%" height="15" fill="rgb(254,217,53)" fg:x="635174671001" fg:w="203962739"/><text x="92.3142%" y="735.50"></text></g><g><title>proc_macro2::fallback::SourceMap::fileinfo (203,962,739 samples, 0.03%)</title><rect x="92.0642%" y="709" width="0.0296%" height="15" fill="rgb(209,60,0)" fg:x="635174671001" fg:w="203962739"/><text x="92.3142%" y="719.50"></text></g><g><title>proc_macro2::fallback::FileInfo::span_within (146,797,422 samples, 0.02%)</title><rect x="92.0725%" y="693" width="0.0213%" height="15" fill="rgb(250,93,26)" fg:x="635231836318" fg:w="146797422"/><text x="92.3225%" y="703.50"></text></g><g><title>cargo_tarpaulin::source_analysis::LineAnalysis::ignore_tokens (434,390,278 samples, 0.06%)</title><rect x="92.0310%" y="837" width="0.0630%" height="15" fill="rgb(211,9,40)" fg:x="634945321727" fg:w="434390278"/><text x="92.2810%" y="847.50"></text></g><g><title>cargo_tarpaulin::source_analysis::items::&lt;impl cargo_tarpaulin::source_analysis::SourceAnalysis&gt;::process_items (456,930,221 samples, 0.07%)</title><rect x="92.0308%" y="853" width="0.0662%" height="15" fill="rgb(242,57,20)" fg:x="634944415835" fg:w="456930221"/><text x="92.2808%" y="863.50"></text></g><g><title>proc_macro2::parse::leaf_token (89,515,629 samples, 0.01%)</title><rect x="92.1122%" y="741" width="0.0130%" height="15" fill="rgb(248,85,48)" fg:x="635505351999" fg:w="89515629"/><text x="92.3622%" y="751.50"></text></g><g><title>cargo_tarpaulin::collect_tracemap (78,007,701,660 samples, 11.31%)</title><rect x="80.8241%" y="933" width="11.3067%" height="15" fill="rgb(212,117,2)" fg:x="557626452999" fg:w="78007701660"/><text x="81.0741%" y="943.50">cargo_tarpaulin::..</text></g><g><title>cargo_tarpaulin::trace (78,007,701,660 samples, 11.31%)</title><rect x="80.8241%" y="917" width="11.3067%" height="15" fill="rgb(243,19,3)" fg:x="557626452999" fg:w="78007701660"/><text x="81.0741%" y="927.50">cargo_tarpaulin::..</text></g><g><title>cargo_tarpaulin::launch_tarpaulin (78,007,701,660 samples, 11.31%)</title><rect x="80.8241%" y="901" width="11.3067%" height="15" fill="rgb(232,217,24)" fg:x="557626452999" fg:w="78007701660"/><text x="81.0741%" y="911.50">cargo_tarpaulin::..</text></g><g><title>cargo_tarpaulin::source_analysis::SourceAnalysis::get_analysis (750,554,996 samples, 0.11%)</title><rect x="92.0220%" y="885" width="0.1088%" height="15" fill="rgb(224,175,40)" fg:x="634883599663" fg:w="750554996"/><text x="92.2720%" y="895.50"></text></g><g><title>cargo_tarpaulin::source_analysis::SourceAnalysis::analyse_package (748,497,034 samples, 0.11%)</title><rect x="92.0223%" y="869" width="0.1085%" height="15" fill="rgb(212,162,32)" fg:x="634885657625" fg:w="748497034"/><text x="92.2723%" y="879.50"></text></g><g><title>syn::parse_file (232,808,603 samples, 0.03%)</title><rect x="92.0971%" y="853" width="0.0337%" height="15" fill="rgb(215,9,4)" fg:x="635401346056" fg:w="232808603"/><text x="92.3471%" y="863.50"></text></g><g><title>syn::parse_str (232,808,603 samples, 0.03%)</title><rect x="92.0971%" y="837" width="0.0337%" height="15" fill="rgb(242,42,7)" fg:x="635401346056" fg:w="232808603"/><text x="92.3471%" y="847.50"></text></g><g><title>syn::parse::Parser::parse_str (232,808,603 samples, 0.03%)</title><rect x="92.0971%" y="821" width="0.0337%" height="15" fill="rgb(242,184,45)" fg:x="635401346056" fg:w="232808603"/><text x="92.3471%" y="831.50"></text></g><g><title>&lt;proc_macro2::TokenStream as core::str::traits::FromStr&gt;::from_str (208,320,423 samples, 0.03%)</title><rect x="92.1006%" y="805" width="0.0302%" height="15" fill="rgb(228,111,51)" fg:x="635425834236" fg:w="208320423"/><text x="92.3506%" y="815.50"></text></g><g><title>proc_macro2::imp::TokenStream::from_str_checked (208,320,423 samples, 0.03%)</title><rect x="92.1006%" y="789" width="0.0302%" height="15" fill="rgb(236,147,17)" fg:x="635425834236" fg:w="208320423"/><text x="92.3506%" y="799.50"></text></g><g><title>proc_macro2::fallback::TokenStream::from_str_checked (208,320,423 samples, 0.03%)</title><rect x="92.1006%" y="773" width="0.0302%" height="15" fill="rgb(210,75,22)" fg:x="635425834236" fg:w="208320423"/><text x="92.3506%" y="783.50"></text></g><g><title>proc_macro2::parse::token_stream (201,915,744 samples, 0.03%)</title><rect x="92.1016%" y="757" width="0.0293%" height="15" fill="rgb(217,159,45)" fg:x="635432238915" fg:w="201915744"/><text x="92.3516%" y="767.50"></text></g><g><title>std::rt::lang_start_internal (78,009,894,336 samples, 11.31%)</title><rect x="80.8241%" y="1157" width="11.3070%" height="15" fill="rgb(245,165,53)" fg:x="557626452999" fg:w="78009894336"/><text x="81.0741%" y="1167.50">std::rt::lang_sta..</text></g><g><title>std::panic::catch_unwind (78,009,894,336 samples, 11.31%)</title><rect x="80.8241%" y="1141" width="11.3070%" height="15" fill="rgb(251,190,50)" fg:x="557626452999" fg:w="78009894336"/><text x="81.0741%" y="1151.50">std::panic::catch..</text></g><g><title>std::panicking::try (78,009,894,336 samples, 11.31%)</title><rect x="80.8241%" y="1125" width="11.3070%" height="15" fill="rgb(208,203,29)" fg:x="557626452999" fg:w="78009894336"/><text x="81.0741%" y="1135.50">std::panicking::t..</text></g><g><title>std::panicking::try::do_call (78,009,894,336 samples, 11.31%)</title><rect x="80.8241%" y="1109" width="11.3070%" height="15" fill="rgb(207,209,35)" fg:x="557626452999" fg:w="78009894336"/><text x="81.0741%" y="1119.50">std::panicking::t..</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (78,009,894,336 samples, 11.31%)</title><rect x="80.8241%" y="1093" width="11.3070%" height="15" fill="rgb(230,144,49)" fg:x="557626452999" fg:w="78009894336"/><text x="81.0741%" y="1103.50">std::rt::lang_sta..</text></g><g><title>std::panic::catch_unwind (78,009,894,336 samples, 11.31%)</title><rect x="80.8241%" y="1077" width="11.3070%" height="15" fill="rgb(229,31,6)" fg:x="557626452999" fg:w="78009894336"/><text x="81.0741%" y="1087.50">std::panic::catch..</text></g><g><title>std::panicking::try (78,009,894,336 samples, 11.31%)</title><rect x="80.8241%" y="1061" width="11.3070%" height="15" fill="rgb(251,129,24)" fg:x="557626452999" fg:w="78009894336"/><text x="81.0741%" y="1071.50">std::panicking::t..</text></g><g><title>std::panicking::try::do_call (78,009,894,336 samples, 11.31%)</title><rect x="80.8241%" y="1045" width="11.3070%" height="15" fill="rgb(235,105,15)" fg:x="557626452999" fg:w="78009894336"/><text x="81.0741%" y="1055.50">std::panicking::t..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (78,009,894,336 samples, 11.31%)</title><rect x="80.8241%" y="1029" width="11.3070%" height="15" fill="rgb(216,52,43)" fg:x="557626452999" fg:w="78009894336"/><text x="81.0741%" y="1039.50">core::ops::functi..</text></g><g><title>_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h05240483b460bc9eE.llvm.17468850352284423155 (78,009,894,336 samples, 11.31%)</title><rect x="80.8241%" y="1013" width="11.3070%" height="15" fill="rgb(238,144,41)" fg:x="557626452999" fg:w="78009894336"/><text x="81.0741%" y="1023.50">_ZN3std2rt10lang_..</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (78,009,894,336 samples, 11.31%)</title><rect x="80.8241%" y="997" width="11.3070%" height="15" fill="rgb(243,63,9)" fg:x="557626452999" fg:w="78009894336"/><text x="81.0741%" y="1007.50">std::sys::backtra..</text></g><g><title>core::ops::function::FnOnce::call_once (78,009,894,336 samples, 11.31%)</title><rect x="80.8241%" y="981" width="11.3070%" height="15" fill="rgb(246,208,1)" fg:x="557626452999" fg:w="78009894336"/><text x="81.0741%" y="991.50">core::ops::functi..</text></g><g><title>cargo_tarpaulin::main (78,009,894,336 samples, 11.31%)</title><rect x="80.8241%" y="965" width="11.3070%" height="15" fill="rgb(233,182,18)" fg:x="557626452999" fg:w="78009894336"/><text x="81.0741%" y="975.50">cargo_tarpaulin::..</text></g><g><title>cargo_tarpaulin::run (78,009,894,336 samples, 11.31%)</title><rect x="80.8241%" y="949" width="11.3070%" height="15" fill="rgb(242,224,8)" fg:x="557626452999" fg:w="78009894336"/><text x="81.0741%" y="959.50">cargo_tarpaulin::..</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (72,398,786 samples, 0.01%)</title><rect x="92.1311%" y="1157" width="0.0105%" height="15" fill="rgb(243,54,37)" fg:x="635636347335" fg:w="72398786"/><text x="92.3811%" y="1167.50"></text></g><g><title>core::ops::function::FnOnce::call_once (72,398,786 samples, 0.01%)</title><rect x="92.1311%" y="1141" width="0.0105%" height="15" fill="rgb(233,192,12)" fg:x="635636347335" fg:w="72398786"/><text x="92.3811%" y="1151.50"></text></g><g><title>cargo_tarpaulin::main (72,398,786 samples, 0.01%)</title><rect x="92.1311%" y="1125" width="0.0105%" height="15" fill="rgb(251,192,53)" fg:x="635636347335" fg:w="72398786"/><text x="92.3811%" y="1135.50"></text></g><g><title>cargo_tarpaulin::run (72,398,786 samples, 0.01%)</title><rect x="92.1311%" y="1109" width="0.0105%" height="15" fill="rgb(246,141,26)" fg:x="635636347335" fg:w="72398786"/><text x="92.3811%" y="1119.50"></text></g><g><title>cargo_tarpaulin::collect_tracemap (72,398,786 samples, 0.01%)</title><rect x="92.1311%" y="1093" width="0.0105%" height="15" fill="rgb(239,195,19)" fg:x="635636347335" fg:w="72398786"/><text x="92.3811%" y="1103.50"></text></g><g><title>cargo_tarpaulin::trace (72,398,786 samples, 0.01%)</title><rect x="92.1311%" y="1077" width="0.0105%" height="15" fill="rgb(241,16,39)" fg:x="635636347335" fg:w="72398786"/><text x="92.3811%" y="1087.50"></text></g><g><title>cargo_tarpaulin::launch_tarpaulin (72,398,786 samples, 0.01%)</title><rect x="92.1311%" y="1061" width="0.0105%" height="15" fill="rgb(223,13,53)" fg:x="635636347335" fg:w="72398786"/><text x="92.3811%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (131,557,508 samples, 0.02%)</title><rect x="92.1496%" y="965" width="0.0191%" height="15" fill="rgb(214,227,0)" fg:x="635763510549" fg:w="131557508"/><text x="92.3996%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;[std::path::PathBuf]&gt; (129,418,257 samples, 0.02%)</title><rect x="92.1499%" y="949" width="0.0188%" height="15" fill="rgb(228,103,26)" fg:x="635765649800" fg:w="129418257"/><text x="92.3999%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::path::PathBuf&gt; (113,331,093 samples, 0.02%)</title><rect x="92.1522%" y="933" width="0.0164%" height="15" fill="rgb(254,177,53)" fg:x="635781736964" fg:w="113331093"/><text x="92.4022%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::ffi::os_str::OsString&gt; (113,331,093 samples, 0.02%)</title><rect x="92.1522%" y="917" width="0.0164%" height="15" fill="rgb(208,201,34)" fg:x="635781736964" fg:w="113331093"/><text x="92.4022%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::os_str::bytes::Buf&gt; (113,331,093 samples, 0.02%)</title><rect x="92.1522%" y="901" width="0.0164%" height="15" fill="rgb(212,39,5)" fg:x="635781736964" fg:w="113331093"/><text x="92.4022%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (113,331,093 samples, 0.02%)</title><rect x="92.1522%" y="885" width="0.0164%" height="15" fill="rgb(246,117,3)" fg:x="635781736964" fg:w="113331093"/><text x="92.4022%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (113,331,093 samples, 0.02%)</title><rect x="92.1522%" y="869" width="0.0164%" height="15" fill="rgb(244,118,39)" fg:x="635781736964" fg:w="113331093"/><text x="92.4022%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (113,331,093 samples, 0.02%)</title><rect x="92.1522%" y="853" width="0.0164%" height="15" fill="rgb(241,64,10)" fg:x="635781736964" fg:w="113331093"/><text x="92.4022%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (90,523,689 samples, 0.01%)</title><rect x="92.1555%" y="837" width="0.0131%" height="15" fill="rgb(229,39,44)" fg:x="635804544368" fg:w="90523689"/><text x="92.4055%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;std::path::PathBuf&gt;&gt; (132,656,795 samples, 0.02%)</title><rect x="92.1496%" y="981" width="0.0192%" height="15" fill="rgb(230,226,3)" fg:x="635763510549" fg:w="132656795"/><text x="92.3996%" y="991.50"></text></g><g><title>llvm_profparser::coverage::coverage_mapping::CoverageMapping::generate_subreport (173,329,132 samples, 0.03%)</title><rect x="92.1450%" y="997" width="0.0251%" height="15" fill="rgb(222,13,42)" fg:x="635731769492" fg:w="173329132"/><text x="92.3950%" y="1007.50"></text></g><g><title>std::sys::pal::unix::os::split_paths::bytes_to_path (200,559,044 samples, 0.03%)</title><rect x="92.1436%" y="1157" width="0.0291%" height="15" fill="rgb(247,180,54)" fg:x="635722058877" fg:w="200559044"/><text x="92.3936%" y="1167.50"></text></g><g><title>&lt;std::path::PathBuf as core::convert::From&lt;&amp;T&gt;&gt;::from (196,277,417 samples, 0.03%)</title><rect x="92.1442%" y="1141" width="0.0284%" height="15" fill="rgb(205,96,16)" fg:x="635726340504" fg:w="196277417"/><text x="92.3942%" y="1151.50"></text></g><g><title>std::ffi::os_str::OsStr::to_os_string (196,277,417 samples, 0.03%)</title><rect x="92.1442%" y="1125" width="0.0284%" height="15" fill="rgb(205,100,21)" fg:x="635726340504" fg:w="196277417"/><text x="92.3942%" y="1135.50"></text></g><g><title>std::sys::os_str::bytes::Slice::to_owned (196,277,417 samples, 0.03%)</title><rect x="92.1442%" y="1109" width="0.0284%" height="15" fill="rgb(248,51,4)" fg:x="635726340504" fg:w="196277417"/><text x="92.3942%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (196,277,417 samples, 0.03%)</title><rect x="92.1442%" y="1093" width="0.0284%" height="15" fill="rgb(217,197,30)" fg:x="635726340504" fg:w="196277417"/><text x="92.3942%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (196,277,417 samples, 0.03%)</title><rect x="92.1442%" y="1077" width="0.0284%" height="15" fill="rgb(240,179,40)" fg:x="635726340504" fg:w="196277417"/><text x="92.3942%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (196,277,417 samples, 0.03%)</title><rect x="92.1442%" y="1061" width="0.0284%" height="15" fill="rgb(212,185,35)" fg:x="635726340504" fg:w="196277417"/><text x="92.3942%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (196,277,417 samples, 0.03%)</title><rect x="92.1442%" y="1045" width="0.0284%" height="15" fill="rgb(251,222,31)" fg:x="635726340504" fg:w="196277417"/><text x="92.3942%" y="1055.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (194,230,130 samples, 0.03%)</title><rect x="92.1445%" y="1029" width="0.0282%" height="15" fill="rgb(208,140,36)" fg:x="635728387791" fg:w="194230130"/><text x="92.3945%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (194,230,130 samples, 0.03%)</title><rect x="92.1445%" y="1013" width="0.0282%" height="15" fill="rgb(220,148,1)" fg:x="635728387791" fg:w="194230130"/><text x="92.3945%" y="1023.50"></text></g><g><title>proc_macro2::fallback::Span::end::_{{closure}} (80,304,866 samples, 0.01%)</title><rect x="92.1732%" y="1125" width="0.0116%" height="15" fill="rgb(254,4,28)" fg:x="635926722126" fg:w="80304866"/><text x="92.4232%" y="1135.50"></text></g><g><title>proc_macro2::fallback::SourceMap::fileinfo (72,081,437 samples, 0.01%)</title><rect x="92.1744%" y="1109" width="0.0104%" height="15" fill="rgb(222,185,44)" fg:x="635934945555" fg:w="72081437"/><text x="92.4244%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (112,821,757 samples, 0.02%)</title><rect x="92.1728%" y="1157" width="0.0164%" height="15" fill="rgb(215,74,39)" fg:x="635923707303" fg:w="112821757"/><text x="92.4228%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (110,638,628 samples, 0.02%)</title><rect x="92.1731%" y="1141" width="0.0160%" height="15" fill="rgb(247,86,4)" fg:x="635925890432" fg:w="110638628"/><text x="92.4231%" y="1151.50"></text></g><g><title>syn::stmt::parsing::parse_stmt (69,975,086 samples, 0.01%)</title><rect x="92.3327%" y="1157" width="0.0101%" height="15" fill="rgb(231,105,32)" fg:x="637027019312" fg:w="69975086"/><text x="92.5827%" y="1167.50"></text></g><g><title>syn::token::parsing::peek_keyword (75,360,930 samples, 0.01%)</title><rect x="92.3485%" y="1157" width="0.0109%" height="15" fill="rgb(222,65,35)" fg:x="637136184613" fg:w="75360930"/><text x="92.5985%" y="1167.50"></text></g><g><title>unlink_chunk.isra.0 (474,571,255 samples, 0.07%)</title><rect x="92.3811%" y="1157" width="0.0688%" height="15" fill="rgb(218,145,35)" fg:x="637360954653" fg:w="474571255"/><text x="92.6311%" y="1167.50"></text></g><g><title>cargo-tarpaulin (631,494,874,360 samples, 91.53%)</title><rect x="0.9196%" y="1173" width="91.5309%" height="15" fill="rgb(208,7,15)" fg:x="6344876230" fg:w="631494874360"/><text x="1.1696%" y="1183.50">cargo-tarpaulin</text></g><g><title>[unknown] (83,381,172 samples, 0.01%)</title><rect x="92.4806%" y="1141" width="0.0121%" height="15" fill="rgb(209,83,13)" fg:x="638047276096" fg:w="83381172"/><text x="92.7306%" y="1151.50"></text></g><g><title>_RINvNtCsT9OARwdRVs_5alloc7raw_vec11finish_growNtNtB4_5alloc6GlobalECsfYCeVfQAmMd_9toml_edit (127,836,053 samples, 0.02%)</title><rect x="92.5065%" y="1141" width="0.0185%" height="15" fill="rgb(218,3,10)" fg:x="638226310942" fg:w="127836053"/><text x="92.7565%" y="1151.50"></text></g><g><title>realloc (79,635,409 samples, 0.01%)</title><rect x="92.5135%" y="1125" width="0.0115%" height="15" fill="rgb(211,219,4)" fg:x="638274511586" fg:w="79635409"/><text x="92.7635%" y="1135.50"></text></g><g><title>_int_realloc (79,635,409 samples, 0.01%)</title><rect x="92.5135%" y="1109" width="0.0115%" height="15" fill="rgb(228,194,12)" fg:x="638274511586" fg:w="79635409"/><text x="92.7635%" y="1119.50"></text></g><g><title>do_filp_open (98,255,622 samples, 0.01%)</title><rect x="92.5624%" y="853" width="0.0142%" height="15" fill="rgb(210,175,7)" fg:x="638611463532" fg:w="98255622"/><text x="92.8124%" y="863.50"></text></g><g><title>path_openat (98,255,622 samples, 0.01%)</title><rect x="92.5624%" y="837" width="0.0142%" height="15" fill="rgb(243,132,6)" fg:x="638611463532" fg:w="98255622"/><text x="92.8124%" y="847.50"></text></g><g><title>__x64_sys_openat (99,206,715 samples, 0.01%)</title><rect x="92.5624%" y="885" width="0.0144%" height="15" fill="rgb(207,72,18)" fg:x="638611463532" fg:w="99206715"/><text x="92.8124%" y="895.50"></text></g><g><title>do_sys_openat2 (99,206,715 samples, 0.01%)</title><rect x="92.5624%" y="869" width="0.0144%" height="15" fill="rgb(236,1,18)" fg:x="638611463532" fg:w="99206715"/><text x="92.8124%" y="879.50"></text></g><g><title>std::fs::OpenOptions::_open (100,234,961 samples, 0.01%)</title><rect x="92.5624%" y="1077" width="0.0145%" height="15" fill="rgb(227,0,18)" fg:x="638611463532" fg:w="100234961"/><text x="92.8124%" y="1087.50"></text></g><g><title>std::sys::fs::unix::File::open (100,234,961 samples, 0.01%)</title><rect x="92.5624%" y="1061" width="0.0145%" height="15" fill="rgb(247,37,5)" fg:x="638611463532" fg:w="100234961"/><text x="92.8124%" y="1071.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_path_with_cstr (100,234,961 samples, 0.01%)</title><rect x="92.5624%" y="1045" width="0.0145%" height="15" fill="rgb(237,179,24)" fg:x="638611463532" fg:w="100234961"/><text x="92.8124%" y="1055.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_with_cstr (100,234,961 samples, 0.01%)</title><rect x="92.5624%" y="1029" width="0.0145%" height="15" fill="rgb(226,53,20)" fg:x="638611463532" fg:w="100234961"/><text x="92.8124%" y="1039.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_with_cstr_stack (100,234,961 samples, 0.01%)</title><rect x="92.5624%" y="1013" width="0.0145%" height="15" fill="rgb(247,75,7)" fg:x="638611463532" fg:w="100234961"/><text x="92.8124%" y="1023.50"></text></g><g><title>std::sys::fs::unix::File::open::_{{closure}} (100,234,961 samples, 0.01%)</title><rect x="92.5624%" y="997" width="0.0145%" height="15" fill="rgb(233,96,12)" fg:x="638611463532" fg:w="100234961"/><text x="92.8124%" y="1007.50"></text></g><g><title>std::sys::fs::unix::File::open_c (100,234,961 samples, 0.01%)</title><rect x="92.5624%" y="981" width="0.0145%" height="15" fill="rgb(224,125,0)" fg:x="638611463532" fg:w="100234961"/><text x="92.8124%" y="991.50"></text></g><g><title>std::sys::pal::unix::cvt_r (100,234,961 samples, 0.01%)</title><rect x="92.5624%" y="965" width="0.0145%" height="15" fill="rgb(224,92,25)" fg:x="638611463532" fg:w="100234961"/><text x="92.8124%" y="975.50"></text></g><g><title>std::sys::fs::unix::File::open_c::_{{closure}} (100,234,961 samples, 0.01%)</title><rect x="92.5624%" y="949" width="0.0145%" height="15" fill="rgb(224,42,24)" fg:x="638611463532" fg:w="100234961"/><text x="92.8124%" y="959.50"></text></g><g><title>__GI___libc_open (100,234,961 samples, 0.01%)</title><rect x="92.5624%" y="933" width="0.0145%" height="15" fill="rgb(234,132,49)" fg:x="638611463532" fg:w="100234961"/><text x="92.8124%" y="943.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (100,234,961 samples, 0.01%)</title><rect x="92.5624%" y="917" width="0.0145%" height="15" fill="rgb(248,100,35)" fg:x="638611463532" fg:w="100234961"/><text x="92.8124%" y="927.50"></text></g><g><title>do_syscall_64 (100,234,961 samples, 0.01%)</title><rect x="92.5624%" y="901" width="0.0145%" height="15" fill="rgb(239,94,40)" fg:x="638611463532" fg:w="100234961"/><text x="92.8124%" y="911.50"></text></g><g><title>std::fs::File::open (100,870,161 samples, 0.01%)</title><rect x="92.5624%" y="1109" width="0.0146%" height="15" fill="rgb(235,139,28)" fg:x="638611463532" fg:w="100870161"/><text x="92.8124%" y="1119.50"></text></g><g><title>std::fs::OpenOptions::open (100,870,161 samples, 0.01%)</title><rect x="92.5624%" y="1093" width="0.0146%" height="15" fill="rgb(217,144,7)" fg:x="638611463532" fg:w="100870161"/><text x="92.8124%" y="1103.50"></text></g><g><title>std::fs::read_to_string::inner (130,768,815 samples, 0.02%)</title><rect x="92.5616%" y="1125" width="0.0190%" height="15" fill="rgb(227,55,4)" fg:x="638605980533" fg:w="130768815"/><text x="92.8116%" y="1135.50"></text></g><g><title>_RNvMNtNtCs7v5TTk2bIjK_5cargo7sources8registryNtB2_14RegistrySource7get_pkg (133,800,376 samples, 0.02%)</title><rect x="92.5613%" y="1141" width="0.0194%" height="15" fill="rgb(252,82,54)" fg:x="638603936089" fg:w="133800376"/><text x="92.8113%" y="1151.50"></text></g><g><title>_RNvNtCs2TX5sgSx4X0_10cargo_util5paths10read_bytes (110,946,677 samples, 0.02%)</title><rect x="92.6101%" y="1141" width="0.0161%" height="15" fill="rgb(245,172,4)" fg:x="638940672341" fg:w="110946677"/><text x="92.8601%" y="1151.50"></text></g><g><title>std::fs::read::inner (110,946,677 samples, 0.02%)</title><rect x="92.6101%" y="1125" width="0.0161%" height="15" fill="rgb(207,26,27)" fg:x="638940672341" fg:w="110946677"/><text x="92.8601%" y="1135.50"></text></g><g><title>open_last_lookups (74,852,587 samples, 0.01%)</title><rect x="92.6556%" y="869" width="0.0108%" height="15" fill="rgb(252,98,18)" fg:x="639254436018" fg:w="74852587"/><text x="92.9056%" y="879.50"></text></g><g><title>lookup_open.isra.0 (73,764,801 samples, 0.01%)</title><rect x="92.6557%" y="853" width="0.0107%" height="15" fill="rgb(244,8,26)" fg:x="639255523804" fg:w="73764801"/><text x="92.9057%" y="863.50"></text></g><g><title>do_filp_open (90,916,566 samples, 0.01%)</title><rect x="92.6533%" y="901" width="0.0132%" height="15" fill="rgb(237,173,45)" fg:x="639239087990" fg:w="90916566"/><text x="92.9033%" y="911.50"></text></g><g><title>path_openat (90,916,566 samples, 0.01%)</title><rect x="92.6533%" y="885" width="0.0132%" height="15" fill="rgb(208,213,49)" fg:x="639239087990" fg:w="90916566"/><text x="92.9033%" y="895.50"></text></g><g><title>__x64_sys_openat (94,047,461 samples, 0.01%)</title><rect x="92.6533%" y="933" width="0.0136%" height="15" fill="rgb(212,122,37)" fg:x="639239087990" fg:w="94047461"/><text x="92.9033%" y="943.50"></text></g><g><title>do_sys_openat2 (94,047,461 samples, 0.01%)</title><rect x="92.6533%" y="917" width="0.0136%" height="15" fill="rgb(213,80,17)" fg:x="639239087990" fg:w="94047461"/><text x="92.9033%" y="927.50"></text></g><g><title>std::fs::OpenOptions::_open (97,832,978 samples, 0.01%)</title><rect x="92.6533%" y="1125" width="0.0142%" height="15" fill="rgb(206,210,43)" fg:x="639239087990" fg:w="97832978"/><text x="92.9033%" y="1135.50"></text></g><g><title>std::sys::fs::unix::File::open (97,832,978 samples, 0.01%)</title><rect x="92.6533%" y="1109" width="0.0142%" height="15" fill="rgb(229,214,3)" fg:x="639239087990" fg:w="97832978"/><text x="92.9033%" y="1119.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_path_with_cstr (97,832,978 samples, 0.01%)</title><rect x="92.6533%" y="1093" width="0.0142%" height="15" fill="rgb(235,213,29)" fg:x="639239087990" fg:w="97832978"/><text x="92.9033%" y="1103.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_with_cstr (97,832,978 samples, 0.01%)</title><rect x="92.6533%" y="1077" width="0.0142%" height="15" fill="rgb(248,135,26)" fg:x="639239087990" fg:w="97832978"/><text x="92.9033%" y="1087.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_with_cstr_stack (97,832,978 samples, 0.01%)</title><rect x="92.6533%" y="1061" width="0.0142%" height="15" fill="rgb(242,188,12)" fg:x="639239087990" fg:w="97832978"/><text x="92.9033%" y="1071.50"></text></g><g><title>std::sys::fs::unix::File::open::_{{closure}} (97,832,978 samples, 0.01%)</title><rect x="92.6533%" y="1045" width="0.0142%" height="15" fill="rgb(245,38,12)" fg:x="639239087990" fg:w="97832978"/><text x="92.9033%" y="1055.50"></text></g><g><title>std::sys::fs::unix::File::open_c (97,832,978 samples, 0.01%)</title><rect x="92.6533%" y="1029" width="0.0142%" height="15" fill="rgb(218,42,13)" fg:x="639239087990" fg:w="97832978"/><text x="92.9033%" y="1039.50"></text></g><g><title>std::sys::pal::unix::cvt_r (97,832,978 samples, 0.01%)</title><rect x="92.6533%" y="1013" width="0.0142%" height="15" fill="rgb(238,132,49)" fg:x="639239087990" fg:w="97832978"/><text x="92.9033%" y="1023.50"></text></g><g><title>std::sys::fs::unix::File::open_c::_{{closure}} (97,832,978 samples, 0.01%)</title><rect x="92.6533%" y="997" width="0.0142%" height="15" fill="rgb(209,196,19)" fg:x="639239087990" fg:w="97832978"/><text x="92.9033%" y="1007.50"></text></g><g><title>__GI___libc_open (97,832,978 samples, 0.01%)</title><rect x="92.6533%" y="981" width="0.0142%" height="15" fill="rgb(244,131,22)" fg:x="639239087990" fg:w="97832978"/><text x="92.9033%" y="991.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (97,832,978 samples, 0.01%)</title><rect x="92.6533%" y="965" width="0.0142%" height="15" fill="rgb(223,18,34)" fg:x="639239087990" fg:w="97832978"/><text x="92.9033%" y="975.50"></text></g><g><title>do_syscall_64 (97,832,978 samples, 0.01%)</title><rect x="92.6533%" y="949" width="0.0142%" height="15" fill="rgb(252,124,54)" fg:x="639239087990" fg:w="97832978"/><text x="92.9033%" y="959.50"></text></g><g><title>_RNvNtNtNtCs7v5TTk2bIjK_5cargo7sources8registry8download8download (107,245,833 samples, 0.02%)</title><rect x="92.6521%" y="1141" width="0.0155%" height="15" fill="rgb(229,106,42)" fg:x="639230493053" fg:w="107245833"/><text x="92.9021%" y="1151.50"></text></g><g><title>[unknown] (1,780,290,796 samples, 0.26%)</title><rect x="92.4764%" y="1157" width="0.2580%" height="15" fill="rgb(221,129,1)" fg:x="638018346683" fg:w="1780290796"/><text x="92.7264%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp (70,637,474 samples, 0.01%)</title><rect x="92.8539%" y="1125" width="0.0102%" height="15" fill="rgb(229,74,15)" fg:x="640623093142" fg:w="70637474"/><text x="93.1039%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp_by (70,637,474 samples, 0.01%)</title><rect x="92.8539%" y="1109" width="0.0102%" height="15" fill="rgb(210,206,50)" fg:x="640623093142" fg:w="70637474"/><text x="93.1039%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::iter_compare (70,637,474 samples, 0.01%)</title><rect x="92.8539%" y="1093" width="0.0102%" height="15" fill="rgb(251,114,31)" fg:x="640623093142" fg:w="70637474"/><text x="93.1039%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (70,637,474 samples, 0.01%)</title><rect x="92.8539%" y="1077" width="0.0102%" height="15" fill="rgb(215,225,28)" fg:x="640623093142" fg:w="70637474"/><text x="93.1039%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (70,637,474 samples, 0.01%)</title><rect x="92.8539%" y="1061" width="0.0102%" height="15" fill="rgb(237,109,14)" fg:x="640623093142" fg:w="70637474"/><text x="93.1039%" y="1071.50"></text></g><g><title>_RNvMsi_NtNtNtCsT9OARwdRVs_5alloc11collections5btree3mapINtB5_8BTreeMapNtNtCsf02uUM6HUVZ_3std4path7PathBufNtNtB7_7set_val9SetValZSTE6insertCs7v5TTk2bIjK_5cargo (113,587,260 samples, 0.02%)</title><rect x="92.8498%" y="1157" width="0.0165%" height="15" fill="rgb(230,13,37)" fg:x="640594394869" fg:w="113587260"/><text x="93.0998%" y="1167.50"></text></g><g><title>std::path::compare_components (88,267,080 samples, 0.01%)</title><rect x="92.8534%" y="1141" width="0.0128%" height="15" fill="rgb(231,40,28)" fg:x="640619715049" fg:w="88267080"/><text x="93.1034%" y="1151.50"></text></g><g><title>_RNvNtNtCs7v5TTk2bIjK_5cargo4util4toml14normalize_toml (78,713,392 samples, 0.01%)</title><rect x="92.8979%" y="1141" width="0.0114%" height="15" fill="rgb(231,202,18)" fg:x="640926151358" fg:w="78713392"/><text x="93.1479%" y="1151.50"></text></g><g><title>_RNvNtNtCs7v5TTk2bIjK_5cargo4util4toml13read_manifest (99,047,145 samples, 0.01%)</title><rect x="92.8972%" y="1157" width="0.0144%" height="15" fill="rgb(225,33,18)" fg:x="640921321492" fg:w="99047145"/><text x="93.1472%" y="1167.50"></text></g><g><title>__handle_mm_fault (74,692,485 samples, 0.01%)</title><rect x="92.9500%" y="837" width="0.0108%" height="15" fill="rgb(223,64,47)" fg:x="641285961164" fg:w="74692485"/><text x="93.2000%" y="847.50"></text></g><g><title>handle_mm_fault (75,604,704 samples, 0.01%)</title><rect x="92.9500%" y="853" width="0.0110%" height="15" fill="rgb(234,114,13)" fg:x="641285961164" fg:w="75604704"/><text x="93.2000%" y="863.50"></text></g><g><title>copy_page_to_iter (138,712,205 samples, 0.02%)</title><rect x="92.9436%" y="933" width="0.0201%" height="15" fill="rgb(248,56,40)" fg:x="641241645835" fg:w="138712205"/><text x="93.1936%" y="943.50"></text></g><g><title>_copy_to_iter (137,659,307 samples, 0.02%)</title><rect x="92.9437%" y="917" width="0.0200%" height="15" fill="rgb(221,194,21)" fg:x="641242698733" fg:w="137659307"/><text x="93.1937%" y="927.50"></text></g><g><title>asm_exc_page_fault (107,954,551 samples, 0.02%)</title><rect x="92.9480%" y="901" width="0.0156%" height="15" fill="rgb(242,108,46)" fg:x="641272403489" fg:w="107954551"/><text x="93.1980%" y="911.50"></text></g><g><title>exc_page_fault (99,517,030 samples, 0.01%)</title><rect x="92.9493%" y="885" width="0.0144%" height="15" fill="rgb(220,106,10)" fg:x="641280841010" fg:w="99517030"/><text x="93.1993%" y="895.50"></text></g><g><title>do_user_addr_fault (97,807,449 samples, 0.01%)</title><rect x="92.9495%" y="869" width="0.0142%" height="15" fill="rgb(211,88,4)" fg:x="641282550591" fg:w="97807449"/><text x="93.1995%" y="879.50"></text></g><g><title>filemap_get_pages (78,824,648 samples, 0.01%)</title><rect x="92.9637%" y="933" width="0.0114%" height="15" fill="rgb(214,95,34)" fg:x="641380358040" fg:w="78824648"/><text x="93.2137%" y="943.50"></text></g><g><title>ksys_read (222,358,811 samples, 0.03%)</title><rect x="92.9433%" y="981" width="0.0322%" height="15" fill="rgb(250,160,33)" fg:x="641239638951" fg:w="222358811"/><text x="93.1933%" y="991.50"></text></g><g><title>vfs_read (222,358,811 samples, 0.03%)</title><rect x="92.9433%" y="965" width="0.0322%" height="15" fill="rgb(225,29,10)" fg:x="641239638951" fg:w="222358811"/><text x="93.1933%" y="975.50"></text></g><g><title>filemap_read (222,358,811 samples, 0.03%)</title><rect x="92.9433%" y="949" width="0.0322%" height="15" fill="rgb(224,28,30)" fg:x="641239638951" fg:w="222358811"/><text x="93.1933%" y="959.50"></text></g><g><title>_RNvMs1_NtNtNtCs7v5TTk2bIjK_5cargo7sources8registry5indexNtB5_9Summaries5parse (299,721,097 samples, 0.04%)</title><rect x="92.9322%" y="1141" width="0.0434%" height="15" fill="rgb(231,77,4)" fg:x="641163125749" fg:w="299721097"/><text x="93.1822%" y="1151.50"></text></g><g><title>std::fs::read::inner (296,417,414 samples, 0.04%)</title><rect x="92.9327%" y="1125" width="0.0430%" height="15" fill="rgb(209,63,21)" fg:x="641166429432" fg:w="296417414"/><text x="93.1827%" y="1135.50"></text></g><g><title>std::io::default_read_to_end (224,891,765 samples, 0.03%)</title><rect x="92.9431%" y="1109" width="0.0326%" height="15" fill="rgb(226,22,11)" fg:x="641237955081" fg:w="224891765"/><text x="93.1931%" y="1119.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (224,891,765 samples, 0.03%)</title><rect x="92.9431%" y="1093" width="0.0326%" height="15" fill="rgb(216,82,30)" fg:x="641237955081" fg:w="224891765"/><text x="93.1931%" y="1103.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read_buf (224,891,765 samples, 0.03%)</title><rect x="92.9431%" y="1077" width="0.0326%" height="15" fill="rgb(246,227,38)" fg:x="641237955081" fg:w="224891765"/><text x="93.1931%" y="1087.50"></text></g><g><title>std::sys::fs::unix::File::read_buf (224,891,765 samples, 0.03%)</title><rect x="92.9431%" y="1061" width="0.0326%" height="15" fill="rgb(251,203,53)" fg:x="641237955081" fg:w="224891765"/><text x="93.1931%" y="1071.50"></text></g><g><title>std::sys::fd::unix::FileDesc::read_buf (224,891,765 samples, 0.03%)</title><rect x="92.9431%" y="1045" width="0.0326%" height="15" fill="rgb(254,101,1)" fg:x="641237955081" fg:w="224891765"/><text x="93.1931%" y="1055.50"></text></g><g><title>read (224,891,765 samples, 0.03%)</title><rect x="92.9431%" y="1029" width="0.0326%" height="15" fill="rgb(241,180,5)" fg:x="641237955081" fg:w="224891765"/><text x="93.1931%" y="1039.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (223,825,820 samples, 0.03%)</title><rect x="92.9432%" y="1013" width="0.0324%" height="15" fill="rgb(218,168,4)" fg:x="641239021026" fg:w="223825820"/><text x="93.1932%" y="1023.50"></text></g><g><title>do_syscall_64 (223,825,820 samples, 0.03%)</title><rect x="92.9432%" y="997" width="0.0324%" height="15" fill="rgb(224,223,32)" fg:x="641239021026" fg:w="223825820"/><text x="93.1932%" y="1007.50"></text></g><g><title>_RNvNvNtNtCs7v5TTk2bIjK_5cargo3ops3fix15rustfix_and_fixs6_10___CALLSITE (302,829,124 samples, 0.04%)</title><rect x="92.9319%" y="1157" width="0.0439%" height="15" fill="rgb(236,106,22)" fg:x="641161145436" fg:w="302829124"/><text x="93.1819%" y="1167.50"></text></g><g><title>_RNvXs3_NtNtCscvwWOJfxRAb_4core4hash3sipINtB5_6HasherNtB5_11Sip13RoundsENtB7_6Hasher5writeCs7v5TTk2bIjK_5cargo (115,934,378 samples, 0.02%)</title><rect x="92.9846%" y="1157" width="0.0168%" height="15" fill="rgb(206,121,5)" fg:x="641524465149" fg:w="115934378"/><text x="93.2346%" y="1167.50"></text></g><g><title>_int_malloc (77,321,445 samples, 0.01%)</title><rect x="93.0495%" y="1157" width="0.0112%" height="15" fill="rgb(233,87,28)" fg:x="641972355905" fg:w="77321445"/><text x="93.2995%" y="1167.50"></text></g><g><title>_start (97,504,483 samples, 0.01%)</title><rect x="93.0616%" y="1157" width="0.0141%" height="15" fill="rgb(236,137,17)" fg:x="642055511441" fg:w="97504483"/><text x="93.3116%" y="1167.50"></text></g><g><title>do_syscall_64 (138,568,055 samples, 0.02%)</title><rect x="93.0945%" y="1141" width="0.0201%" height="15" fill="rgb(209,183,38)" fg:x="642282915210" fg:w="138568055"/><text x="93.3445%" y="1151.50"></text></g><g><title>x64_sys_call (92,162,327 samples, 0.01%)</title><rect x="93.1012%" y="1125" width="0.0134%" height="15" fill="rgb(206,162,44)" fg:x="642329320938" fg:w="92162327"/><text x="93.3512%" y="1135.50"></text></g><g><title>__x64_sys_exit_group (91,439,142 samples, 0.01%)</title><rect x="93.1013%" y="1109" width="0.0133%" height="15" fill="rgb(237,70,39)" fg:x="642330044123" fg:w="91439142"/><text x="93.3513%" y="1119.50"></text></g><g><title>do_group_exit (91,439,142 samples, 0.01%)</title><rect x="93.1013%" y="1093" width="0.0133%" height="15" fill="rgb(212,176,5)" fg:x="642330044123" fg:w="91439142"/><text x="93.3513%" y="1103.50"></text></g><g><title>do_exit (91,439,142 samples, 0.01%)</title><rect x="93.1013%" y="1077" width="0.0133%" height="15" fill="rgb(232,95,16)" fg:x="642330044123" fg:w="91439142"/><text x="93.3513%" y="1087.50"></text></g><g><title>exit_mm (91,439,142 samples, 0.01%)</title><rect x="93.1013%" y="1061" width="0.0133%" height="15" fill="rgb(219,115,35)" fg:x="642330044123" fg:w="91439142"/><text x="93.3513%" y="1071.50"></text></g><g><title>__mmput (91,439,142 samples, 0.01%)</title><rect x="93.1013%" y="1045" width="0.0133%" height="15" fill="rgb(251,67,27)" fg:x="642330044123" fg:w="91439142"/><text x="93.3513%" y="1055.50"></text></g><g><title>exit_mmap (91,439,142 samples, 0.01%)</title><rect x="93.1013%" y="1029" width="0.0133%" height="15" fill="rgb(222,95,40)" fg:x="642330044123" fg:w="91439142"/><text x="93.3513%" y="1039.50"></text></g><g><title>unmap_vmas (75,032,268 samples, 0.01%)</title><rect x="93.1037%" y="1013" width="0.0109%" height="15" fill="rgb(250,35,16)" fg:x="642346450997" fg:w="75032268"/><text x="93.3537%" y="1023.50"></text></g><g><title>unmap_page_range (75,032,268 samples, 0.01%)</title><rect x="93.1037%" y="997" width="0.0109%" height="15" fill="rgb(224,86,44)" fg:x="642346450997" fg:w="75032268"/><text x="93.3537%" y="1007.50"></text></g><g><title>zap_pud_range.isra.0 (75,032,268 samples, 0.01%)</title><rect x="93.1037%" y="981" width="0.0109%" height="15" fill="rgb(237,53,53)" fg:x="642346450997" fg:w="75032268"/><text x="93.3537%" y="991.50"></text></g><g><title>zap_pmd_range.isra.0 (75,032,268 samples, 0.01%)</title><rect x="93.1037%" y="965" width="0.0109%" height="15" fill="rgb(208,171,33)" fg:x="642346450997" fg:w="75032268"/><text x="93.3537%" y="975.50"></text></g><g><title>zap_pte_range (75,032,268 samples, 0.01%)</title><rect x="93.1037%" y="949" width="0.0109%" height="15" fill="rgb(222,64,27)" fg:x="642346450997" fg:w="75032268"/><text x="93.3537%" y="959.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (140,462,168 samples, 0.02%)</title><rect x="93.0944%" y="1157" width="0.0204%" height="15" fill="rgb(221,121,35)" fg:x="642281796977" fg:w="140462168"/><text x="93.3444%" y="1167.50"></text></g><g><title>cargo (4,875,194,732 samples, 0.71%)</title><rect x="92.4505%" y="1173" width="0.7066%" height="15" fill="rgb(228,137,42)" fg:x="637839750590" fg:w="4875194732"/><text x="92.7005%" y="1183.50"></text></g><g><title>cloud::adaptors (77,535,638 samples, 0.01%)</title><rect x="93.1680%" y="1173" width="0.0112%" height="15" fill="rgb(227,54,21)" fg:x="642789855046" fg:w="77535638"/><text x="93.4180%" y="1183.50"></text></g><g><title>core::joins::te (72,272,092 samples, 0.01%)</title><rect x="93.1832%" y="1173" width="0.0105%" height="15" fill="rgb(240,168,33)" fg:x="642894490765" fg:w="72272092"/><text x="93.4332%" y="1183.50"></text></g><g><title>dsl::functions: (111,059,350 samples, 0.02%)</title><rect x="93.1963%" y="1173" width="0.0161%" height="15" fill="rgb(243,159,6)" fg:x="642985232593" fg:w="111059350"/><text x="93.4463%" y="1183.50"></text></g><g><title>_IO_fwrite (109,622,472 samples, 0.02%)</title><rect x="93.2124%" y="1125" width="0.0159%" height="15" fill="rgb(205,211,41)" fg:x="643096291943" fg:w="109622472"/><text x="93.4624%" y="1135.50"></text></g><g><title>_IO_file_xsputn@@GLIBC_2.2.5 (109,622,472 samples, 0.02%)</title><rect x="93.2124%" y="1109" width="0.0159%" height="15" fill="rgb(253,30,1)" fg:x="643096291943" fg:w="109622472"/><text x="93.4624%" y="1119.50"></text></g><g><title>new_do_write (108,563,304 samples, 0.02%)</title><rect x="93.2126%" y="1093" width="0.0157%" height="15" fill="rgb(226,80,18)" fg:x="643097351111" fg:w="108563304"/><text x="93.4626%" y="1103.50"></text></g><g><title>_IO_file_write@@GLIBC_2.2.5 (108,563,304 samples, 0.02%)</title><rect x="93.2126%" y="1077" width="0.0157%" height="15" fill="rgb(253,156,46)" fg:x="643097351111" fg:w="108563304"/><text x="93.4626%" y="1087.50"></text></g><g><title>__GI___libc_write (108,563,304 samples, 0.02%)</title><rect x="93.2126%" y="1061" width="0.0157%" height="15" fill="rgb(248,87,27)" fg:x="643097351111" fg:w="108563304"/><text x="93.4626%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (108,563,304 samples, 0.02%)</title><rect x="93.2126%" y="1045" width="0.0157%" height="15" fill="rgb(227,122,2)" fg:x="643097351111" fg:w="108563304"/><text x="93.4626%" y="1055.50"></text></g><g><title>do_syscall_64 (108,563,304 samples, 0.02%)</title><rect x="93.2126%" y="1029" width="0.0157%" height="15" fill="rgb(229,94,39)" fg:x="643097351111" fg:w="108563304"/><text x="93.4626%" y="1039.50"></text></g><g><title>ksys_write (108,563,304 samples, 0.02%)</title><rect x="93.2126%" y="1013" width="0.0157%" height="15" fill="rgb(225,173,31)" fg:x="643097351111" fg:w="108563304"/><text x="93.4626%" y="1023.50"></text></g><g><title>vfs_write (108,563,304 samples, 0.02%)</title><rect x="93.2126%" y="997" width="0.0157%" height="15" fill="rgb(239,176,30)" fg:x="643097351111" fg:w="108563304"/><text x="93.4626%" y="1007.50"></text></g><g><title>btrfs_do_write_iter (108,563,304 samples, 0.02%)</title><rect x="93.2126%" y="981" width="0.0157%" height="15" fill="rgb(212,104,21)" fg:x="643097351111" fg:w="108563304"/><text x="93.4626%" y="991.50"></text></g><g><title>btrfs_buffered_write (108,563,304 samples, 0.02%)</title><rect x="93.2126%" y="965" width="0.0157%" height="15" fill="rgb(240,209,40)" fg:x="643097351111" fg:w="108563304"/><text x="93.4626%" y="975.50"></text></g><g><title>[empty_table_function-f79d30ec17eac1c0] (110,785,546 samples, 0.02%)</title><rect x="93.2124%" y="1157" width="0.0161%" height="15" fill="rgb(234,195,5)" fg:x="643096291943" fg:w="110785546"/><text x="93.4624%" y="1167.50"></text></g><g><title>fileWriter (110,785,546 samples, 0.02%)</title><rect x="93.2124%" y="1141" width="0.0161%" height="15" fill="rgb(238,213,1)" fg:x="643096291943" fg:w="110785546"/><text x="93.4624%" y="1151.50"></text></g><g><title>empty_table_fun (187,789,476 samples, 0.03%)</title><rect x="93.2124%" y="1173" width="0.0272%" height="15" fill="rgb(235,182,54)" fg:x="643096291943" fg:w="187789476"/><text x="93.4624%" y="1183.50"></text></g><g><title>_RNvNCNvMsg_NtNtCsZqndpKj4Nk_2h25frame7headersNtB9_11HeaderBlock4load0s6_10___CALLSITE (115,109,233 samples, 0.02%)</title><rect x="93.2469%" y="1157" width="0.0167%" height="15" fill="rgb(229,50,46)" fg:x="643334492873" fg:w="115109233"/><text x="93.4969%" y="1167.50"></text></g><g><title>fileWriter (115,109,233 samples, 0.02%)</title><rect x="93.2469%" y="1141" width="0.0167%" height="15" fill="rgb(219,145,13)" fg:x="643334492873" fg:w="115109233"/><text x="93.4969%" y="1151.50"></text></g><g><title>_IO_fwrite (115,109,233 samples, 0.02%)</title><rect x="93.2469%" y="1125" width="0.0167%" height="15" fill="rgb(220,226,10)" fg:x="643334492873" fg:w="115109233"/><text x="93.4969%" y="1135.50"></text></g><g><title>_IO_file_xsputn@@GLIBC_2.2.5 (115,109,233 samples, 0.02%)</title><rect x="93.2469%" y="1109" width="0.0167%" height="15" fill="rgb(248,47,30)" fg:x="643334492873" fg:w="115109233"/><text x="93.4969%" y="1119.50"></text></g><g><title>new_do_write (115,109,233 samples, 0.02%)</title><rect x="93.2469%" y="1093" width="0.0167%" height="15" fill="rgb(231,209,44)" fg:x="643334492873" fg:w="115109233"/><text x="93.4969%" y="1103.50"></text></g><g><title>_IO_file_write@@GLIBC_2.2.5 (115,109,233 samples, 0.02%)</title><rect x="93.2469%" y="1077" width="0.0167%" height="15" fill="rgb(209,80,30)" fg:x="643334492873" fg:w="115109233"/><text x="93.4969%" y="1087.50"></text></g><g><title>__GI___libc_write (115,109,233 samples, 0.02%)</title><rect x="93.2469%" y="1061" width="0.0167%" height="15" fill="rgb(232,9,14)" fg:x="643334492873" fg:w="115109233"/><text x="93.4969%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (115,109,233 samples, 0.02%)</title><rect x="93.2469%" y="1045" width="0.0167%" height="15" fill="rgb(243,91,43)" fg:x="643334492873" fg:w="115109233"/><text x="93.4969%" y="1055.50"></text></g><g><title>do_syscall_64 (115,109,233 samples, 0.02%)</title><rect x="93.2469%" y="1029" width="0.0167%" height="15" fill="rgb(231,90,52)" fg:x="643334492873" fg:w="115109233"/><text x="93.4969%" y="1039.50"></text></g><g><title>ksys_write (115,109,233 samples, 0.02%)</title><rect x="93.2469%" y="1013" width="0.0167%" height="15" fill="rgb(253,192,44)" fg:x="643334492873" fg:w="115109233"/><text x="93.4969%" y="1023.50"></text></g><g><title>vfs_write (115,109,233 samples, 0.02%)</title><rect x="93.2469%" y="997" width="0.0167%" height="15" fill="rgb(241,66,31)" fg:x="643334492873" fg:w="115109233"/><text x="93.4969%" y="1007.50"></text></g><g><title>btrfs_do_write_iter (115,109,233 samples, 0.02%)</title><rect x="93.2469%" y="981" width="0.0167%" height="15" fill="rgb(235,81,37)" fg:x="643334492873" fg:w="115109233"/><text x="93.4969%" y="991.50"></text></g><g><title>btrfs_buffered_write (115,109,233 samples, 0.02%)</title><rect x="93.2469%" y="965" width="0.0167%" height="15" fill="rgb(223,221,9)" fg:x="643334492873" fg:w="115109233"/><text x="93.4969%" y="975.50"></text></g><g><title>functions_aggre (188,353,002 samples, 0.03%)</title><rect x="93.2443%" y="1173" width="0.0273%" height="15" fill="rgb(242,180,7)" fg:x="643316392301" fg:w="188353002"/><text x="93.4943%" y="1183.50"></text></g><g><title>_RNvNCNvMsg_NtNtCsZqndpKj4Nk_2h25frame7headersNtB9_11HeaderBlock4load0s6_10___CALLSITE (108,584,244 samples, 0.02%)</title><rect x="93.2739%" y="1157" width="0.0157%" height="15" fill="rgb(243,78,19)" fg:x="643520510442" fg:w="108584244"/><text x="93.5239%" y="1167.50"></text></g><g><title>fileWriter (108,584,244 samples, 0.02%)</title><rect x="93.2739%" y="1141" width="0.0157%" height="15" fill="rgb(233,23,17)" fg:x="643520510442" fg:w="108584244"/><text x="93.5239%" y="1151.50"></text></g><g><title>_IO_fwrite (108,584,244 samples, 0.02%)</title><rect x="93.2739%" y="1125" width="0.0157%" height="15" fill="rgb(252,122,45)" fg:x="643520510442" fg:w="108584244"/><text x="93.5239%" y="1135.50"></text></g><g><title>_IO_file_xsputn@@GLIBC_2.2.5 (108,584,244 samples, 0.02%)</title><rect x="93.2739%" y="1109" width="0.0157%" height="15" fill="rgb(247,108,20)" fg:x="643520510442" fg:w="108584244"/><text x="93.5239%" y="1119.50"></text></g><g><title>new_do_write (108,584,244 samples, 0.02%)</title><rect x="93.2739%" y="1093" width="0.0157%" height="15" fill="rgb(235,84,21)" fg:x="643520510442" fg:w="108584244"/><text x="93.5239%" y="1103.50"></text></g><g><title>_IO_file_write@@GLIBC_2.2.5 (108,584,244 samples, 0.02%)</title><rect x="93.2739%" y="1077" width="0.0157%" height="15" fill="rgb(247,129,10)" fg:x="643520510442" fg:w="108584244"/><text x="93.5239%" y="1087.50"></text></g><g><title>__GI___libc_write (108,584,244 samples, 0.02%)</title><rect x="93.2739%" y="1061" width="0.0157%" height="15" fill="rgb(208,173,14)" fg:x="643520510442" fg:w="108584244"/><text x="93.5239%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (108,584,244 samples, 0.02%)</title><rect x="93.2739%" y="1045" width="0.0157%" height="15" fill="rgb(236,31,38)" fg:x="643520510442" fg:w="108584244"/><text x="93.5239%" y="1055.50"></text></g><g><title>do_syscall_64 (108,584,244 samples, 0.02%)</title><rect x="93.2739%" y="1029" width="0.0157%" height="15" fill="rgb(232,65,17)" fg:x="643520510442" fg:w="108584244"/><text x="93.5239%" y="1039.50"></text></g><g><title>ksys_write (108,584,244 samples, 0.02%)</title><rect x="93.2739%" y="1013" width="0.0157%" height="15" fill="rgb(224,45,49)" fg:x="643520510442" fg:w="108584244"/><text x="93.5239%" y="1023.50"></text></g><g><title>vfs_write (108,584,244 samples, 0.02%)</title><rect x="93.2739%" y="997" width="0.0157%" height="15" fill="rgb(225,2,53)" fg:x="643520510442" fg:w="108584244"/><text x="93.5239%" y="1007.50"></text></g><g><title>btrfs_do_write_iter (108,584,244 samples, 0.02%)</title><rect x="93.2739%" y="981" width="0.0157%" height="15" fill="rgb(248,210,53)" fg:x="643520510442" fg:w="108584244"/><text x="93.5239%" y="991.50"></text></g><g><title>btrfs_buffered_write (108,584,244 samples, 0.02%)</title><rect x="93.2739%" y="965" width="0.0157%" height="15" fill="rgb(211,1,30)" fg:x="643520510442" fg:w="108584244"/><text x="93.5239%" y="975.50"></text></g><g><title>functions_cumul (187,349,312 samples, 0.03%)</title><rect x="93.2716%" y="1173" width="0.0272%" height="15" fill="rgb(224,96,15)" fg:x="643504745303" fg:w="187349312"/><text x="93.5216%" y="1183.50"></text></g><g><title>[functions_io-5f310b636a4657c7] (109,434,802 samples, 0.02%)</title><rect x="93.2988%" y="1157" width="0.0159%" height="15" fill="rgb(252,45,11)" fg:x="643692094615" fg:w="109434802"/><text x="93.5488%" y="1167.50"></text></g><g><title>fileWriter (109,434,802 samples, 0.02%)</title><rect x="93.2988%" y="1141" width="0.0159%" height="15" fill="rgb(220,125,38)" fg:x="643692094615" fg:w="109434802"/><text x="93.5488%" y="1151.50"></text></g><g><title>_IO_fwrite (109,434,802 samples, 0.02%)</title><rect x="93.2988%" y="1125" width="0.0159%" height="15" fill="rgb(243,161,33)" fg:x="643692094615" fg:w="109434802"/><text x="93.5488%" y="1135.50"></text></g><g><title>_IO_file_xsputn@@GLIBC_2.2.5 (109,434,802 samples, 0.02%)</title><rect x="93.2988%" y="1109" width="0.0159%" height="15" fill="rgb(248,197,34)" fg:x="643692094615" fg:w="109434802"/><text x="93.5488%" y="1119.50"></text></g><g><title>new_do_write (109,434,802 samples, 0.02%)</title><rect x="93.2988%" y="1093" width="0.0159%" height="15" fill="rgb(228,165,23)" fg:x="643692094615" fg:w="109434802"/><text x="93.5488%" y="1103.50"></text></g><g><title>_IO_file_write@@GLIBC_2.2.5 (109,434,802 samples, 0.02%)</title><rect x="93.2988%" y="1077" width="0.0159%" height="15" fill="rgb(236,94,38)" fg:x="643692094615" fg:w="109434802"/><text x="93.5488%" y="1087.50"></text></g><g><title>__GI___libc_write (109,434,802 samples, 0.02%)</title><rect x="93.2988%" y="1061" width="0.0159%" height="15" fill="rgb(220,13,23)" fg:x="643692094615" fg:w="109434802"/><text x="93.5488%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (109,434,802 samples, 0.02%)</title><rect x="93.2988%" y="1045" width="0.0159%" height="15" fill="rgb(234,26,39)" fg:x="643692094615" fg:w="109434802"/><text x="93.5488%" y="1055.50"></text></g><g><title>do_syscall_64 (109,434,802 samples, 0.02%)</title><rect x="93.2988%" y="1029" width="0.0159%" height="15" fill="rgb(205,117,44)" fg:x="643692094615" fg:w="109434802"/><text x="93.5488%" y="1039.50"></text></g><g><title>ksys_write (109,434,802 samples, 0.02%)</title><rect x="93.2988%" y="1013" width="0.0159%" height="15" fill="rgb(250,42,2)" fg:x="643692094615" fg:w="109434802"/><text x="93.5488%" y="1023.50"></text></g><g><title>vfs_write (109,434,802 samples, 0.02%)</title><rect x="93.2988%" y="997" width="0.0159%" height="15" fill="rgb(223,83,14)" fg:x="643692094615" fg:w="109434802"/><text x="93.5488%" y="1007.50"></text></g><g><title>btrfs_do_write_iter (109,434,802 samples, 0.02%)</title><rect x="93.2988%" y="981" width="0.0159%" height="15" fill="rgb(241,147,50)" fg:x="643692094615" fg:w="109434802"/><text x="93.5488%" y="991.50"></text></g><g><title>btrfs_buffered_write (109,434,802 samples, 0.02%)</title><rect x="93.2988%" y="965" width="0.0159%" height="15" fill="rgb(218,90,6)" fg:x="643692094615" fg:w="109434802"/><text x="93.5488%" y="975.50"></text></g><g><title>functions_io-5f (174,042,594 samples, 0.03%)</title><rect x="93.2988%" y="1173" width="0.0252%" height="15" fill="rgb(210,191,5)" fg:x="643692094615" fg:w="174042594"/><text x="93.5488%" y="1183.50"></text></g><g><title>[functions_math-5435af09fb53e460] (134,534,163 samples, 0.02%)</title><rect x="93.3240%" y="1157" width="0.0195%" height="15" fill="rgb(225,139,19)" fg:x="643866137209" fg:w="134534163"/><text x="93.5740%" y="1167.50"></text></g><g><title>fileWriter (127,901,723 samples, 0.02%)</title><rect x="93.3250%" y="1141" width="0.0185%" height="15" fill="rgb(210,1,33)" fg:x="643872769649" fg:w="127901723"/><text x="93.5750%" y="1151.50"></text></g><g><title>_IO_fwrite (127,901,723 samples, 0.02%)</title><rect x="93.3250%" y="1125" width="0.0185%" height="15" fill="rgb(213,50,3)" fg:x="643872769649" fg:w="127901723"/><text x="93.5750%" y="1135.50"></text></g><g><title>_IO_file_xsputn@@GLIBC_2.2.5 (127,901,723 samples, 0.02%)</title><rect x="93.3250%" y="1109" width="0.0185%" height="15" fill="rgb(234,227,4)" fg:x="643872769649" fg:w="127901723"/><text x="93.5750%" y="1119.50"></text></g><g><title>new_do_write (127,901,723 samples, 0.02%)</title><rect x="93.3250%" y="1093" width="0.0185%" height="15" fill="rgb(246,63,5)" fg:x="643872769649" fg:w="127901723"/><text x="93.5750%" y="1103.50"></text></g><g><title>_IO_file_write@@GLIBC_2.2.5 (127,901,723 samples, 0.02%)</title><rect x="93.3250%" y="1077" width="0.0185%" height="15" fill="rgb(245,136,27)" fg:x="643872769649" fg:w="127901723"/><text x="93.5750%" y="1087.50"></text></g><g><title>__GI___libc_write (127,901,723 samples, 0.02%)</title><rect x="93.3250%" y="1061" width="0.0185%" height="15" fill="rgb(247,199,27)" fg:x="643872769649" fg:w="127901723"/><text x="93.5750%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (127,901,723 samples, 0.02%)</title><rect x="93.3250%" y="1045" width="0.0185%" height="15" fill="rgb(252,158,49)" fg:x="643872769649" fg:w="127901723"/><text x="93.5750%" y="1055.50"></text></g><g><title>do_syscall_64 (127,901,723 samples, 0.02%)</title><rect x="93.3250%" y="1029" width="0.0185%" height="15" fill="rgb(254,73,1)" fg:x="643872769649" fg:w="127901723"/><text x="93.5750%" y="1039.50"></text></g><g><title>ksys_write (127,901,723 samples, 0.02%)</title><rect x="93.3250%" y="1013" width="0.0185%" height="15" fill="rgb(248,93,19)" fg:x="643872769649" fg:w="127901723"/><text x="93.5750%" y="1023.50"></text></g><g><title>vfs_write (127,901,723 samples, 0.02%)</title><rect x="93.3250%" y="997" width="0.0185%" height="15" fill="rgb(206,67,5)" fg:x="643872769649" fg:w="127901723"/><text x="93.5750%" y="1007.50"></text></g><g><title>btrfs_do_write_iter (127,901,723 samples, 0.02%)</title><rect x="93.3250%" y="981" width="0.0185%" height="15" fill="rgb(209,210,4)" fg:x="643872769649" fg:w="127901723"/><text x="93.5750%" y="991.50"></text></g><g><title>btrfs_buffered_write (127,901,723 samples, 0.02%)</title><rect x="93.3250%" y="965" width="0.0185%" height="15" fill="rgb(214,185,36)" fg:x="643872769649" fg:w="127901723"/><text x="93.5750%" y="975.50"></text></g><g><title>_dl_relocate_object (79,443,273 samples, 0.01%)</title><rect x="93.3480%" y="1077" width="0.0115%" height="15" fill="rgb(233,191,26)" fg:x="644032000524" fg:w="79443273"/><text x="93.5980%" y="1087.50"></text></g><g><title>elf_dynamic_do_Rela (79,443,273 samples, 0.01%)</title><rect x="93.3480%" y="1061" width="0.0115%" height="15" fill="rgb(248,94,17)" fg:x="644032000524" fg:w="79443273"/><text x="93.5980%" y="1071.50"></text></g><g><title>_dl_start (88,204,664 samples, 0.01%)</title><rect x="93.3479%" y="1141" width="0.0128%" height="15" fill="rgb(250,64,4)" fg:x="644030953372" fg:w="88204664"/><text x="93.5979%" y="1151.50"></text></g><g><title>_dl_start_final (88,204,664 samples, 0.01%)</title><rect x="93.3479%" y="1125" width="0.0128%" height="15" fill="rgb(218,41,53)" fg:x="644030953372" fg:w="88204664"/><text x="93.5979%" y="1135.50"></text></g><g><title>_dl_sysdep_start (88,204,664 samples, 0.01%)</title><rect x="93.3479%" y="1109" width="0.0128%" height="15" fill="rgb(251,176,28)" fg:x="644030953372" fg:w="88204664"/><text x="93.5979%" y="1119.50"></text></g><g><title>dl_main (88,204,664 samples, 0.01%)</title><rect x="93.3479%" y="1093" width="0.0128%" height="15" fill="rgb(247,22,9)" fg:x="644030953372" fg:w="88204664"/><text x="93.5979%" y="1103.50"></text></g><g><title>_start (98,080,964 samples, 0.01%)</title><rect x="93.3476%" y="1157" width="0.0142%" height="15" fill="rgb(218,201,14)" fg:x="644029048895" fg:w="98080964"/><text x="93.5976%" y="1167.50"></text></g><g><title>functions_math- (282,777,445 samples, 0.04%)</title><rect x="93.3240%" y="1173" width="0.0410%" height="15" fill="rgb(218,94,10)" fg:x="643866137209" fg:w="282777445"/><text x="93.5740%" y="1183.50"></text></g><g><title>_RNvNCNvMsg_NtNtCsZqndpKj4Nk_2h25frame7headersNtB9_11HeaderBlock4load0s6_10___CALLSITE (122,440,123 samples, 0.02%)</title><rect x="93.3671%" y="1157" width="0.0177%" height="15" fill="rgb(222,183,52)" fg:x="644163450487" fg:w="122440123"/><text x="93.6171%" y="1167.50"></text></g><g><title>fileWriter (122,440,123 samples, 0.02%)</title><rect x="93.3671%" y="1141" width="0.0177%" height="15" fill="rgb(242,140,25)" fg:x="644163450487" fg:w="122440123"/><text x="93.6171%" y="1151.50"></text></g><g><title>_IO_fwrite (122,440,123 samples, 0.02%)</title><rect x="93.3671%" y="1125" width="0.0177%" height="15" fill="rgb(235,197,38)" fg:x="644163450487" fg:w="122440123"/><text x="93.6171%" y="1135.50"></text></g><g><title>_IO_file_xsputn@@GLIBC_2.2.5 (122,440,123 samples, 0.02%)</title><rect x="93.3671%" y="1109" width="0.0177%" height="15" fill="rgb(237,136,15)" fg:x="644163450487" fg:w="122440123"/><text x="93.6171%" y="1119.50"></text></g><g><title>new_do_write (122,440,123 samples, 0.02%)</title><rect x="93.3671%" y="1093" width="0.0177%" height="15" fill="rgb(223,44,49)" fg:x="644163450487" fg:w="122440123"/><text x="93.6171%" y="1103.50"></text></g><g><title>_IO_file_write@@GLIBC_2.2.5 (122,440,123 samples, 0.02%)</title><rect x="93.3671%" y="1077" width="0.0177%" height="15" fill="rgb(227,71,15)" fg:x="644163450487" fg:w="122440123"/><text x="93.6171%" y="1087.50"></text></g><g><title>__GI___libc_write (122,440,123 samples, 0.02%)</title><rect x="93.3671%" y="1061" width="0.0177%" height="15" fill="rgb(225,153,20)" fg:x="644163450487" fg:w="122440123"/><text x="93.6171%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (122,440,123 samples, 0.02%)</title><rect x="93.3671%" y="1045" width="0.0177%" height="15" fill="rgb(210,190,26)" fg:x="644163450487" fg:w="122440123"/><text x="93.6171%" y="1055.50"></text></g><g><title>do_syscall_64 (122,440,123 samples, 0.02%)</title><rect x="93.3671%" y="1029" width="0.0177%" height="15" fill="rgb(223,147,5)" fg:x="644163450487" fg:w="122440123"/><text x="93.6171%" y="1039.50"></text></g><g><title>ksys_write (122,440,123 samples, 0.02%)</title><rect x="93.3671%" y="1013" width="0.0177%" height="15" fill="rgb(207,14,23)" fg:x="644163450487" fg:w="122440123"/><text x="93.6171%" y="1023.50"></text></g><g><title>vfs_write (122,440,123 samples, 0.02%)</title><rect x="93.3671%" y="997" width="0.0177%" height="15" fill="rgb(211,195,53)" fg:x="644163450487" fg:w="122440123"/><text x="93.6171%" y="1007.50"></text></g><g><title>btrfs_do_write_iter (122,440,123 samples, 0.02%)</title><rect x="93.3671%" y="981" width="0.0177%" height="15" fill="rgb(237,75,46)" fg:x="644163450487" fg:w="122440123"/><text x="93.6171%" y="991.50"></text></g><g><title>btrfs_buffered_write (122,440,123 samples, 0.02%)</title><rect x="93.3671%" y="965" width="0.0177%" height="15" fill="rgb(254,55,14)" fg:x="644163450487" fg:w="122440123"/><text x="93.6171%" y="975.50"></text></g><g><title>functions_meta- (222,221,065 samples, 0.03%)</title><rect x="93.3650%" y="1173" width="0.0322%" height="15" fill="rgb(230,185,30)" fg:x="644148914654" fg:w="222221065"/><text x="93.6150%" y="1183.50"></text></g><g><title>[functions_string-9f70de44fcf52c62] (138,753,256 samples, 0.02%)</title><rect x="93.3973%" y="1157" width="0.0201%" height="15" fill="rgb(220,14,11)" fg:x="644372144179" fg:w="138753256"/><text x="93.6473%" y="1167.50"></text></g><g><title>fileWriter (138,753,256 samples, 0.02%)</title><rect x="93.3973%" y="1141" width="0.0201%" height="15" fill="rgb(215,169,44)" fg:x="644372144179" fg:w="138753256"/><text x="93.6473%" y="1151.50"></text></g><g><title>_IO_fwrite (138,753,256 samples, 0.02%)</title><rect x="93.3973%" y="1125" width="0.0201%" height="15" fill="rgb(253,203,20)" fg:x="644372144179" fg:w="138753256"/><text x="93.6473%" y="1135.50"></text></g><g><title>_IO_file_xsputn@@GLIBC_2.2.5 (138,753,256 samples, 0.02%)</title><rect x="93.3973%" y="1109" width="0.0201%" height="15" fill="rgb(229,225,17)" fg:x="644372144179" fg:w="138753256"/><text x="93.6473%" y="1119.50"></text></g><g><title>new_do_write (138,753,256 samples, 0.02%)</title><rect x="93.3973%" y="1093" width="0.0201%" height="15" fill="rgb(236,76,26)" fg:x="644372144179" fg:w="138753256"/><text x="93.6473%" y="1103.50"></text></g><g><title>_IO_file_write@@GLIBC_2.2.5 (138,753,256 samples, 0.02%)</title><rect x="93.3973%" y="1077" width="0.0201%" height="15" fill="rgb(234,15,30)" fg:x="644372144179" fg:w="138753256"/><text x="93.6473%" y="1087.50"></text></g><g><title>__GI___libc_write (138,753,256 samples, 0.02%)</title><rect x="93.3973%" y="1061" width="0.0201%" height="15" fill="rgb(211,113,48)" fg:x="644372144179" fg:w="138753256"/><text x="93.6473%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (138,753,256 samples, 0.02%)</title><rect x="93.3973%" y="1045" width="0.0201%" height="15" fill="rgb(221,31,36)" fg:x="644372144179" fg:w="138753256"/><text x="93.6473%" y="1055.50"></text></g><g><title>do_syscall_64 (138,753,256 samples, 0.02%)</title><rect x="93.3973%" y="1029" width="0.0201%" height="15" fill="rgb(215,118,52)" fg:x="644372144179" fg:w="138753256"/><text x="93.6473%" y="1039.50"></text></g><g><title>ksys_write (138,753,256 samples, 0.02%)</title><rect x="93.3973%" y="1013" width="0.0201%" height="15" fill="rgb(241,151,27)" fg:x="644372144179" fg:w="138753256"/><text x="93.6473%" y="1023.50"></text></g><g><title>vfs_write (138,753,256 samples, 0.02%)</title><rect x="93.3973%" y="997" width="0.0201%" height="15" fill="rgb(253,51,3)" fg:x="644372144179" fg:w="138753256"/><text x="93.6473%" y="1007.50"></text></g><g><title>btrfs_do_write_iter (138,753,256 samples, 0.02%)</title><rect x="93.3973%" y="981" width="0.0201%" height="15" fill="rgb(216,201,24)" fg:x="644372144179" fg:w="138753256"/><text x="93.6473%" y="991.50"></text></g><g><title>btrfs_buffered_write (138,753,256 samples, 0.02%)</title><rect x="93.3973%" y="965" width="0.0201%" height="15" fill="rgb(231,107,4)" fg:x="644372144179" fg:w="138753256"/><text x="93.6473%" y="975.50"></text></g><g><title>functions_strin (228,829,930 samples, 0.03%)</title><rect x="93.3972%" y="1173" width="0.0332%" height="15" fill="rgb(243,97,54)" fg:x="644371135719" fg:w="228829930"/><text x="93.6472%" y="1183.50"></text></g><g><title>[unknown] (532,172,332 samples, 0.08%)</title><rect x="93.4355%" y="1157" width="0.0771%" height="15" fill="rgb(221,32,51)" fg:x="644635498984" fg:w="532172332"/><text x="93.6855%" y="1167.50"></text></g><g><title>_RINvYNtNtCs9kCpLYUWogl_8foldhash7quality10FixedStateNtNtCscvwWOJfxRAb_4core4hash11BuildHasher8hash_oneRmECs3d0SPs1Tzom_14polars_compute (74,008,696 samples, 0.01%)</title><rect x="93.5229%" y="1157" width="0.0107%" height="15" fill="rgb(218,171,35)" fg:x="645238258777" fg:w="74008696"/><text x="93.7729%" y="1167.50"></text></g><g><title>hyperloglogplus (997,944,435 samples, 0.14%)</title><rect x="93.4353%" y="1173" width="0.1446%" height="15" fill="rgb(214,20,53)" fg:x="644634392086" fg:w="997944435"/><text x="93.6853%" y="1183.50"></text></g><g><title>io::parquet::ar (106,644,619 samples, 0.02%)</title><rect x="93.6035%" y="1173" width="0.0155%" height="15" fill="rgb(239,9,52)" fg:x="645794343713" fg:w="106644619"/><text x="93.8535%" y="1183.50"></text></g><g><title>iss_7436 (83,768,014 samples, 0.01%)</title><rect x="93.6223%" y="1173" width="0.0121%" height="15" fill="rgb(215,114,45)" fg:x="645924412816" fg:w="83768014"/><text x="93.8723%" y="1183.50"></text></g><g><title>iss_9560_join_a (201,518,593 samples, 0.03%)</title><rect x="93.6426%" y="1173" width="0.0292%" height="15" fill="rgb(208,118,9)" fg:x="646063965685" fg:w="201518593"/><text x="93.8926%" y="1183.50"></text></g><g><title>_RNvNCNvMsg_NtNtCsZqndpKj4Nk_2h25frame7headersNtB9_11HeaderBlock4load0s6_10___CALLSITE (114,772,115 samples, 0.02%)</title><rect x="93.6740%" y="1157" width="0.0166%" height="15" fill="rgb(235,7,39)" fg:x="646280739396" fg:w="114772115"/><text x="93.9240%" y="1167.50"></text></g><g><title>fileWriter (114,772,115 samples, 0.02%)</title><rect x="93.6740%" y="1141" width="0.0166%" height="15" fill="rgb(243,225,15)" fg:x="646280739396" fg:w="114772115"/><text x="93.9240%" y="1151.50"></text></g><g><title>_IO_fwrite (114,772,115 samples, 0.02%)</title><rect x="93.6740%" y="1125" width="0.0166%" height="15" fill="rgb(225,216,18)" fg:x="646280739396" fg:w="114772115"/><text x="93.9240%" y="1135.50"></text></g><g><title>_IO_file_xsputn@@GLIBC_2.2.5 (114,772,115 samples, 0.02%)</title><rect x="93.6740%" y="1109" width="0.0166%" height="15" fill="rgb(233,36,38)" fg:x="646280739396" fg:w="114772115"/><text x="93.9240%" y="1119.50"></text></g><g><title>new_do_write (114,772,115 samples, 0.02%)</title><rect x="93.6740%" y="1093" width="0.0166%" height="15" fill="rgb(239,88,23)" fg:x="646280739396" fg:w="114772115"/><text x="93.9240%" y="1103.50"></text></g><g><title>_IO_file_write@@GLIBC_2.2.5 (114,772,115 samples, 0.02%)</title><rect x="93.6740%" y="1077" width="0.0166%" height="15" fill="rgb(219,181,35)" fg:x="646280739396" fg:w="114772115"/><text x="93.9240%" y="1087.50"></text></g><g><title>__GI___libc_write (114,772,115 samples, 0.02%)</title><rect x="93.6740%" y="1061" width="0.0166%" height="15" fill="rgb(215,18,46)" fg:x="646280739396" fg:w="114772115"/><text x="93.9240%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (114,772,115 samples, 0.02%)</title><rect x="93.6740%" y="1045" width="0.0166%" height="15" fill="rgb(241,38,11)" fg:x="646280739396" fg:w="114772115"/><text x="93.9240%" y="1055.50"></text></g><g><title>do_syscall_64 (114,772,115 samples, 0.02%)</title><rect x="93.6740%" y="1029" width="0.0166%" height="15" fill="rgb(248,169,45)" fg:x="646280739396" fg:w="114772115"/><text x="93.9240%" y="1039.50"></text></g><g><title>ksys_write (114,772,115 samples, 0.02%)</title><rect x="93.6740%" y="1013" width="0.0166%" height="15" fill="rgb(239,50,49)" fg:x="646280739396" fg:w="114772115"/><text x="93.9240%" y="1023.50"></text></g><g><title>vfs_write (114,772,115 samples, 0.02%)</title><rect x="93.6740%" y="997" width="0.0166%" height="15" fill="rgb(231,96,31)" fg:x="646280739396" fg:w="114772115"/><text x="93.9240%" y="1007.50"></text></g><g><title>btrfs_do_write_iter (114,772,115 samples, 0.02%)</title><rect x="93.6740%" y="981" width="0.0166%" height="15" fill="rgb(224,193,37)" fg:x="646280739396" fg:w="114772115"/><text x="93.9240%" y="991.50"></text></g><g><title>btrfs_buffered_write (114,772,115 samples, 0.02%)</title><rect x="93.6740%" y="965" width="0.0166%" height="15" fill="rgb(227,153,50)" fg:x="646280739396" fg:w="114772115"/><text x="93.9240%" y="975.50"></text></g><g><title>issues-16259709 (187,928,502 samples, 0.03%)</title><rect x="93.6718%" y="1173" width="0.0272%" height="15" fill="rgb(249,228,3)" fg:x="646265484278" fg:w="187928502"/><text x="93.9218%" y="1183.50"></text></g><g><title>[it-0337d271615ab931] (125,348,838 samples, 0.02%)</title><rect x="93.7007%" y="1157" width="0.0182%" height="15" fill="rgb(219,164,43)" fg:x="646465030304" fg:w="125348838"/><text x="93.9507%" y="1167.50"></text></g><g><title>fileWriter (125,348,838 samples, 0.02%)</title><rect x="93.7007%" y="1141" width="0.0182%" height="15" fill="rgb(216,45,41)" fg:x="646465030304" fg:w="125348838"/><text x="93.9507%" y="1151.50"></text></g><g><title>_IO_fwrite (125,348,838 samples, 0.02%)</title><rect x="93.7007%" y="1125" width="0.0182%" height="15" fill="rgb(210,226,51)" fg:x="646465030304" fg:w="125348838"/><text x="93.9507%" y="1135.50"></text></g><g><title>_IO_file_xsputn@@GLIBC_2.2.5 (125,348,838 samples, 0.02%)</title><rect x="93.7007%" y="1109" width="0.0182%" height="15" fill="rgb(209,117,49)" fg:x="646465030304" fg:w="125348838"/><text x="93.9507%" y="1119.50"></text></g><g><title>new_do_write (125,348,838 samples, 0.02%)</title><rect x="93.7007%" y="1093" width="0.0182%" height="15" fill="rgb(206,196,24)" fg:x="646465030304" fg:w="125348838"/><text x="93.9507%" y="1103.50"></text></g><g><title>_IO_file_write@@GLIBC_2.2.5 (125,348,838 samples, 0.02%)</title><rect x="93.7007%" y="1077" width="0.0182%" height="15" fill="rgb(253,218,3)" fg:x="646465030304" fg:w="125348838"/><text x="93.9507%" y="1087.50"></text></g><g><title>__GI___libc_write (125,348,838 samples, 0.02%)</title><rect x="93.7007%" y="1061" width="0.0182%" height="15" fill="rgb(252,166,2)" fg:x="646465030304" fg:w="125348838"/><text x="93.9507%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (125,348,838 samples, 0.02%)</title><rect x="93.7007%" y="1045" width="0.0182%" height="15" fill="rgb(236,218,26)" fg:x="646465030304" fg:w="125348838"/><text x="93.9507%" y="1055.50"></text></g><g><title>do_syscall_64 (125,348,838 samples, 0.02%)</title><rect x="93.7007%" y="1029" width="0.0182%" height="15" fill="rgb(254,84,19)" fg:x="646465030304" fg:w="125348838"/><text x="93.9507%" y="1039.50"></text></g><g><title>ksys_write (125,348,838 samples, 0.02%)</title><rect x="93.7007%" y="1013" width="0.0182%" height="15" fill="rgb(219,137,29)" fg:x="646465030304" fg:w="125348838"/><text x="93.9507%" y="1023.50"></text></g><g><title>vfs_write (125,348,838 samples, 0.02%)</title><rect x="93.7007%" y="997" width="0.0182%" height="15" fill="rgb(227,47,52)" fg:x="646465030304" fg:w="125348838"/><text x="93.9507%" y="1007.50"></text></g><g><title>btrfs_do_write_iter (125,348,838 samples, 0.02%)</title><rect x="93.7007%" y="981" width="0.0182%" height="15" fill="rgb(229,167,24)" fg:x="646465030304" fg:w="125348838"/><text x="93.9507%" y="991.50"></text></g><g><title>btrfs_buffered_write (125,348,838 samples, 0.02%)</title><rect x="93.7007%" y="965" width="0.0182%" height="15" fill="rgb(233,164,1)" fg:x="646465030304" fg:w="125348838"/><text x="93.9507%" y="975.50"></text></g><g><title>__do_sys_clone3 (77,106,065 samples, 0.01%)</title><rect x="93.7237%" y="901" width="0.0112%" height="15" fill="rgb(218,88,48)" fg:x="646624075074" fg:w="77106065"/><text x="93.9737%" y="911.50"></text></g><g><title>kernel_clone (77,106,065 samples, 0.01%)</title><rect x="93.7237%" y="885" width="0.0112%" height="15" fill="rgb(226,214,24)" fg:x="646624075074" fg:w="77106065"/><text x="93.9737%" y="895.50"></text></g><g><title>create_thread (77,831,787 samples, 0.01%)</title><rect x="93.7236%" y="981" width="0.0113%" height="15" fill="rgb(233,29,12)" fg:x="646623357740" fg:w="77831787"/><text x="93.9736%" y="991.50"></text></g><g><title>__GI___clone_internal (77,831,787 samples, 0.01%)</title><rect x="93.7236%" y="965" width="0.0113%" height="15" fill="rgb(219,120,34)" fg:x="646623357740" fg:w="77831787"/><text x="93.9736%" y="975.50"></text></g><g><title>__GI___clone3 (77,831,787 samples, 0.01%)</title><rect x="93.7236%" y="949" width="0.0113%" height="15" fill="rgb(226,78,44)" fg:x="646623357740" fg:w="77831787"/><text x="93.9736%" y="959.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (77,831,787 samples, 0.01%)</title><rect x="93.7236%" y="933" width="0.0113%" height="15" fill="rgb(240,15,48)" fg:x="646623357740" fg:w="77831787"/><text x="93.9736%" y="943.50"></text></g><g><title>do_syscall_64 (77,831,787 samples, 0.01%)</title><rect x="93.7236%" y="917" width="0.0113%" height="15" fill="rgb(253,176,7)" fg:x="646623357740" fg:w="77831787"/><text x="93.9736%" y="927.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new (80,515,936 samples, 0.01%)</title><rect x="93.7234%" y="1013" width="0.0117%" height="15" fill="rgb(206,166,28)" fg:x="646622078490" fg:w="80515936"/><text x="93.9734%" y="1023.50"></text></g><g><title>pthread_create@GLIBC_2.2.5 (80,515,936 samples, 0.01%)</title><rect x="93.7234%" y="997" width="0.0117%" height="15" fill="rgb(241,53,51)" fg:x="646622078490" fg:w="80515936"/><text x="93.9734%" y="1007.50"></text></g><g><title>test::run_test (80,833,302 samples, 0.01%)</title><rect x="93.7234%" y="1077" width="0.0117%" height="15" fill="rgb(249,112,30)" fg:x="646621809040" fg:w="80833302"/><text x="93.9734%" y="1087.50"></text></g><g><title>std::thread::Builder::spawn (80,833,302 samples, 0.01%)</title><rect x="93.7234%" y="1061" width="0.0117%" height="15" fill="rgb(217,85,30)" fg:x="646621809040" fg:w="80833302"/><text x="93.9734%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (80,833,302 samples, 0.01%)</title><rect x="93.7234%" y="1045" width="0.0117%" height="15" fill="rgb(233,49,7)" fg:x="646621809040" fg:w="80833302"/><text x="93.9734%" y="1055.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_ (80,833,302 samples, 0.01%)</title><rect x="93.7234%" y="1029" width="0.0117%" height="15" fill="rgb(234,109,9)" fg:x="646621809040" fg:w="80833302"/><text x="93.9734%" y="1039.50"></text></g><g><title>_RNvCsbJAWTxNym5Z_2it4main (108,370,655 samples, 0.02%)</title><rect x="93.7205%" y="1157" width="0.0157%" height="15" fill="rgb(253,95,22)" fg:x="646601907040" fg:w="108370655"/><text x="93.9705%" y="1167.50"></text></g><g><title>test::test_main_static (108,370,655 samples, 0.02%)</title><rect x="93.7205%" y="1141" width="0.0157%" height="15" fill="rgb(233,176,25)" fg:x="646601907040" fg:w="108370655"/><text x="93.9705%" y="1151.50"></text></g><g><title>test::test_main (107,395,881 samples, 0.02%)</title><rect x="93.7207%" y="1125" width="0.0156%" height="15" fill="rgb(236,33,39)" fg:x="646602881814" fg:w="107395881"/><text x="93.9707%" y="1135.50"></text></g><g><title>test::console::run_tests_console (107,395,881 samples, 0.02%)</title><rect x="93.7207%" y="1109" width="0.0156%" height="15" fill="rgb(223,226,42)" fg:x="646602881814" fg:w="107395881"/><text x="93.9707%" y="1119.50"></text></g><g><title>test::run_tests (107,395,881 samples, 0.02%)</title><rect x="93.7207%" y="1093" width="0.0156%" height="15" fill="rgb(216,99,33)" fg:x="646602881814" fg:w="107395881"/><text x="93.9707%" y="1103.50"></text></g><g><title>it-0337d271615a (346,411,767 samples, 0.05%)</title><rect x="93.6990%" y="1173" width="0.0502%" height="15" fill="rgb(235,84,23)" fg:x="646453412780" fg:w="346411767"/><text x="93.9490%" y="1183.50"></text></g><g><title>lazy::expressio (94,991,793 samples, 0.01%)</title><rect x="93.7523%" y="1173" width="0.0138%" height="15" fill="rgb(232,2,27)" fg:x="646820890187" fg:w="94991793"/><text x="94.0023%" y="1183.50"></text></g><g><title>fileWriter (114,400,590 samples, 0.02%)</title><rect x="93.7868%" y="1141" width="0.0166%" height="15" fill="rgb(241,23,22)" fg:x="647059388903" fg:w="114400590"/><text x="94.0368%" y="1151.50"></text></g><g><title>_IO_fwrite (114,400,590 samples, 0.02%)</title><rect x="93.7868%" y="1125" width="0.0166%" height="15" fill="rgb(211,73,27)" fg:x="647059388903" fg:w="114400590"/><text x="94.0368%" y="1135.50"></text></g><g><title>_IO_file_xsputn@@GLIBC_2.2.5 (114,400,590 samples, 0.02%)</title><rect x="93.7868%" y="1109" width="0.0166%" height="15" fill="rgb(235,109,49)" fg:x="647059388903" fg:w="114400590"/><text x="94.0368%" y="1119.50"></text></g><g><title>new_do_write (114,400,590 samples, 0.02%)</title><rect x="93.7868%" y="1093" width="0.0166%" height="15" fill="rgb(230,99,29)" fg:x="647059388903" fg:w="114400590"/><text x="94.0368%" y="1103.50"></text></g><g><title>_IO_file_write@@GLIBC_2.2.5 (114,400,590 samples, 0.02%)</title><rect x="93.7868%" y="1077" width="0.0166%" height="15" fill="rgb(245,199,7)" fg:x="647059388903" fg:w="114400590"/><text x="94.0368%" y="1087.50"></text></g><g><title>__GI___libc_write (114,400,590 samples, 0.02%)</title><rect x="93.7868%" y="1061" width="0.0166%" height="15" fill="rgb(217,179,10)" fg:x="647059388903" fg:w="114400590"/><text x="94.0368%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (114,400,590 samples, 0.02%)</title><rect x="93.7868%" y="1045" width="0.0166%" height="15" fill="rgb(254,99,47)" fg:x="647059388903" fg:w="114400590"/><text x="94.0368%" y="1055.50"></text></g><g><title>do_syscall_64 (114,400,590 samples, 0.02%)</title><rect x="93.7868%" y="1029" width="0.0166%" height="15" fill="rgb(251,121,7)" fg:x="647059388903" fg:w="114400590"/><text x="94.0368%" y="1039.50"></text></g><g><title>ksys_write (114,400,590 samples, 0.02%)</title><rect x="93.7868%" y="1013" width="0.0166%" height="15" fill="rgb(250,177,26)" fg:x="647059388903" fg:w="114400590"/><text x="94.0368%" y="1023.50"></text></g><g><title>vfs_write (114,400,590 samples, 0.02%)</title><rect x="93.7868%" y="997" width="0.0166%" height="15" fill="rgb(232,88,15)" fg:x="647059388903" fg:w="114400590"/><text x="94.0368%" y="1007.50"></text></g><g><title>btrfs_do_write_iter (114,400,590 samples, 0.02%)</title><rect x="93.7868%" y="981" width="0.0166%" height="15" fill="rgb(251,54,54)" fg:x="647059388903" fg:w="114400590"/><text x="94.0368%" y="991.50"></text></g><g><title>btrfs_buffered_write (114,400,590 samples, 0.02%)</title><rect x="93.7868%" y="965" width="0.0166%" height="15" fill="rgb(208,177,15)" fg:x="647059388903" fg:w="114400590"/><text x="94.0368%" y="975.50"></text></g><g><title>_RNvNCNvMsg_NtNtCsZqndpKj4Nk_2h25frame7headersNtB9_11HeaderBlock4load0s6_10___CALLSITE (115,548,752 samples, 0.02%)</title><rect x="93.7868%" y="1157" width="0.0167%" height="15" fill="rgb(205,97,32)" fg:x="647059388903" fg:w="115548752"/><text x="94.0368%" y="1167.50"></text></g><g><title>ops_distinct_on (189,421,755 samples, 0.03%)</title><rect x="93.7845%" y="1173" width="0.0275%" height="15" fill="rgb(217,192,13)" fg:x="647043433971" fg:w="189421755"/><text x="94.0345%" y="1183.50"></text></g><g><title>[unknown] (144,399,977 samples, 0.02%)</title><rect x="93.8120%" y="1157" width="0.0209%" height="15" fill="rgb(215,163,41)" fg:x="647233347121" fg:w="144399977"/><text x="94.0620%" y="1167.50"></text></g><g><title>parquet::compre (452,400,855 samples, 0.07%)</title><rect x="93.8120%" y="1173" width="0.0656%" height="15" fill="rgb(246,83,29)" fg:x="647232855726" fg:w="452400855"/><text x="94.0620%" y="1183.50"></text></g><g><title>[unknown] (151,495,136 samples, 0.02%)</title><rect x="93.8871%" y="1157" width="0.0220%" height="15" fill="rgb(219,2,45)" fg:x="647751261275" fg:w="151495136"/><text x="94.1371%" y="1167.50"></text></g><g><title>_RINvNtNtCscvwWOJfxRAb_4core4sync6atomic23atomic_compare_exchangejECs9wIDdqjH2aO_15crossbeam_utils (144,182,503 samples, 0.02%)</title><rect x="93.9646%" y="1157" width="0.0209%" height="15" fill="rgb(242,215,33)" fg:x="648285788385" fg:w="144182503"/><text x="94.2146%" y="1167.50"></text></g><g><title>_RNvMs6_NtCs9VSOSf8HpMa_15crossbeam_epoch8internalNtB5_5Local3pinCsgfUvSuuZgGt_10rayon_core (128,965,643 samples, 0.02%)</title><rect x="94.0447%" y="1125" width="0.0187%" height="15" fill="rgb(217,1,6)" fg:x="648838514581" fg:w="128965643"/><text x="94.2947%" y="1135.50"></text></g><g><title>[unknown] (502,167,339 samples, 0.07%)</title><rect x="94.0187%" y="1141" width="0.0728%" height="15" fill="rgb(207,85,52)" fg:x="648658836845" fg:w="502167339"/><text x="94.2687%" y="1151.50"></text></g><g><title>_RNvMNtCsgfUvSuuZgGt_10rayon_core8registryNtB2_13ThreadBuilder3run (879,149,908 samples, 0.13%)</title><rect x="94.0185%" y="1157" width="0.1274%" height="15" fill="rgb(231,171,19)" fg:x="648657860860" fg:w="879149908"/><text x="94.2685%" y="1167.50"></text></g><g><title>_RNvMs6_NtCs9VSOSf8HpMa_15crossbeam_epoch8internalNtB5_5Local3pinCsgfUvSuuZgGt_10rayon_core (101,451,004 samples, 0.01%)</title><rect x="94.1659%" y="1157" width="0.0147%" height="15" fill="rgb(207,128,4)" fg:x="649674723068" fg:w="101451004"/><text x="94.4159%" y="1167.50"></text></g><g><title>_RNvMs8_NtCse0sQRnp5frV_15crossbeam_deque5dequeINtB5_7StealerNtNtCsgfUvSuuZgGt_10rayon_core3job6JobRefE5stealB10_ (92,334,063 samples, 0.01%)</title><rect x="94.2014%" y="1157" width="0.0134%" height="15" fill="rgb(219,208,4)" fg:x="649919915293" fg:w="92334063"/><text x="94.4514%" y="1167.50"></text></g><g><title>_RNvMs_NtCs9VSOSf8HpMa_15crossbeam_epoch5epochNtB4_11AtomicEpoch16compare_exchangeCsgfUvSuuZgGt_10rayon_core (83,889,104 samples, 0.01%)</title><rect x="94.2191%" y="1157" width="0.0122%" height="15" fill="rgb(235,161,42)" fg:x="650041812535" fg:w="83889104"/><text x="94.4691%" y="1167.50"></text></g><g><title>polars-0 (2,818,220,125 samples, 0.41%)</title><rect x="93.8800%" y="1173" width="0.4085%" height="15" fill="rgb(247,218,18)" fg:x="647702075847" fg:w="2818220125"/><text x="94.1300%" y="1183.50"></text></g><g><title>_RINvMNtCsgfUvSuuZgGt_10rayon_core5sleepNtB3_5Sleep13no_work_foundNCNvMs8_NtB5_8registryNtB19_12WorkerThread15wait_until_cold0EB5_ (70,483,541 samples, 0.01%)</title><rect x="94.2995%" y="1157" width="0.0102%" height="15" fill="rgb(232,114,51)" fg:x="650596216417" fg:w="70483541"/><text x="94.5495%" y="1167.50"></text></g><g><title>__sched_yield (70,483,541 samples, 0.01%)</title><rect x="94.2995%" y="1141" width="0.0102%" height="15" fill="rgb(222,95,3)" fg:x="650596216417" fg:w="70483541"/><text x="94.5495%" y="1151.50"></text></g><g><title>_RINvNtNtCscvwWOJfxRAb_4core4sync6atomic23atomic_compare_exchangejECs9wIDdqjH2aO_15crossbeam_utils (133,831,296 samples, 0.02%)</title><rect x="94.3442%" y="1157" width="0.0194%" height="15" fill="rgb(240,65,29)" fg:x="650904707105" fg:w="133831296"/><text x="94.5942%" y="1167.50"></text></g><g><title>_RNvMs6_NtCs9VSOSf8HpMa_15crossbeam_epoch8internalNtB5_5Local3pinCsgfUvSuuZgGt_10rayon_core (103,169,381 samples, 0.01%)</title><rect x="94.4027%" y="1125" width="0.0150%" height="15" fill="rgb(249,209,20)" fg:x="651308295261" fg:w="103169381"/><text x="94.6527%" y="1135.50"></text></g><g><title>[unknown] (450,755,495 samples, 0.07%)</title><rect x="94.3792%" y="1141" width="0.0653%" height="15" fill="rgb(241,48,37)" fg:x="651146095419" fg:w="450755495"/><text x="94.6292%" y="1151.50"></text></g><g><title>_RNvMNtCsgfUvSuuZgGt_10rayon_core8registryNtB2_13ThreadBuilder3run (768,225,382 samples, 0.11%)</title><rect x="94.3790%" y="1157" width="0.1113%" height="15" fill="rgb(230,140,42)" fg:x="651145138994" fg:w="768225382"/><text x="94.6290%" y="1167.50"></text></g><g><title>_RNvMs8_NtCse0sQRnp5frV_15crossbeam_deque5dequeINtB5_7StealerNtNtCsgfUvSuuZgGt_10rayon_core3job6JobRefE5stealB10_ (83,181,680 samples, 0.01%)</title><rect x="94.5263%" y="1157" width="0.0121%" height="15" fill="rgb(230,176,45)" fg:x="652161002097" fg:w="83181680"/><text x="94.7763%" y="1167.50"></text></g><g><title>_RNvMs_NtCs9VSOSf8HpMa_15crossbeam_epoch5epochNtB4_11AtomicEpoch16compare_exchangeCsgfUvSuuZgGt_10rayon_core (86,796,408 samples, 0.01%)</title><rect x="94.5407%" y="1157" width="0.0126%" height="15" fill="rgb(245,112,21)" fg:x="652260547815" fg:w="86796408"/><text x="94.7907%" y="1167.50"></text></g><g><title>polars-10 (2,137,289,540 samples, 0.31%)</title><rect x="94.2885%" y="1173" width="0.3098%" height="15" fill="rgb(207,183,35)" fg:x="650520295972" fg:w="2137289540"/><text x="94.5385%" y="1183.50"></text></g><g><title>do_syscall_64 (71,795,398 samples, 0.01%)</title><rect x="94.6119%" y="1109" width="0.0104%" height="15" fill="rgb(227,44,33)" fg:x="652752084015" fg:w="71795398"/><text x="94.8619%" y="1119.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (73,728,588 samples, 0.01%)</title><rect x="94.6117%" y="1125" width="0.0107%" height="15" fill="rgb(246,120,21)" fg:x="652750603083" fg:w="73728588"/><text x="94.8617%" y="1135.50"></text></g><g><title>_RINvMNtCsgfUvSuuZgGt_10rayon_core5sleepNtB3_5Sleep13no_work_foundNCNvMs8_NtB5_8registryNtB19_12WorkerThread15wait_until_cold0EB5_ (78,523,838 samples, 0.01%)</title><rect x="94.6115%" y="1157" width="0.0114%" height="15" fill="rgb(235,57,52)" fg:x="652748649301" fg:w="78523838"/><text x="94.8615%" y="1167.50"></text></g><g><title>__sched_yield (78,523,838 samples, 0.01%)</title><rect x="94.6115%" y="1141" width="0.0114%" height="15" fill="rgb(238,84,10)" fg:x="652748649301" fg:w="78523838"/><text x="94.8615%" y="1151.50"></text></g><g><title>_RINvNtNtCscvwWOJfxRAb_4core4sync6atomic23atomic_compare_exchangejECs9wIDdqjH2aO_15crossbeam_utils (105,219,854 samples, 0.02%)</title><rect x="94.6510%" y="1157" width="0.0153%" height="15" fill="rgb(251,200,32)" fg:x="653021565836" fg:w="105219854"/><text x="94.9010%" y="1167.50"></text></g><g><title>_RNvMs6_NtCs9VSOSf8HpMa_15crossbeam_epoch8internalNtB5_5Local3pinCsgfUvSuuZgGt_10rayon_core (113,114,136 samples, 0.02%)</title><rect x="94.7061%" y="1125" width="0.0164%" height="15" fill="rgb(247,159,13)" fg:x="653401495252" fg:w="113114136"/><text x="94.9561%" y="1135.50"></text></g><g><title>[unknown] (401,781,226 samples, 0.06%)</title><rect x="94.6835%" y="1141" width="0.0582%" height="15" fill="rgb(238,64,4)" fg:x="653245393721" fg:w="401781226"/><text x="94.9335%" y="1151.50"></text></g><g><title>_RNCNkNvNtCs9VSOSf8HpMa_15crossbeam_epoch7default6HANDLE00B7_ (69,905,397 samples, 0.01%)</title><rect x="94.7507%" y="1141" width="0.0101%" height="15" fill="rgb(221,131,51)" fg:x="653709166069" fg:w="69905397"/><text x="95.0007%" y="1151.50"></text></g><g><title>_RNvMNtCsgfUvSuuZgGt_10rayon_core8registryNtB2_13ThreadBuilder3run (726,620,340 samples, 0.11%)</title><rect x="94.6828%" y="1157" width="0.1053%" height="15" fill="rgb(242,5,29)" fg:x="653241003460" fg:w="726620340"/><text x="94.9328%" y="1167.50"></text></g><g><title>_RNvMs6_NtCs9VSOSf8HpMa_15crossbeam_epoch8internalNtB5_5Local3pinCsgfUvSuuZgGt_10rayon_core (82,275,422 samples, 0.01%)</title><rect x="94.7997%" y="1157" width="0.0119%" height="15" fill="rgb(214,130,32)" fg:x="654047291331" fg:w="82275422"/><text x="95.0497%" y="1167.50"></text></g><g><title>_RNvMs8_NtCse0sQRnp5frV_15crossbeam_deque5dequeINtB5_7StealerNtNtCsgfUvSuuZgGt_10rayon_core3job6JobRefE5stealB10_ (71,908,975 samples, 0.01%)</title><rect x="94.8268%" y="1157" width="0.0104%" height="15" fill="rgb(244,210,16)" fg:x="654234476458" fg:w="71908975"/><text x="95.0768%" y="1167.50"></text></g><g><title>_RNvMs_NtCs9VSOSf8HpMa_15crossbeam_epoch5epochNtB4_11AtomicEpoch16compare_exchangeCsgfUvSuuZgGt_10rayon_core (73,115,119 samples, 0.01%)</title><rect x="94.8390%" y="1157" width="0.0106%" height="15" fill="rgb(234,48,26)" fg:x="654318364377" fg:w="73115119"/><text x="95.0890%" y="1167.50"></text></g><g><title>polars-11 (1,989,660,683 samples, 0.29%)</title><rect x="94.5983%" y="1173" width="0.2884%" height="15" fill="rgb(231,82,38)" fg:x="652657585512" fg:w="1989660683"/><text x="94.8483%" y="1183.50"></text></g><g><title>_RINvNtNtCscvwWOJfxRAb_4core4sync6atomic23atomic_compare_exchangejECs9wIDdqjH2aO_15crossbeam_utils (125,158,165 samples, 0.02%)</title><rect x="94.9363%" y="1157" width="0.0181%" height="15" fill="rgb(254,128,41)" fg:x="654989780153" fg:w="125158165"/><text x="95.1863%" y="1167.50"></text></g><g><title>_RNvMs6_NtCs9VSOSf8HpMa_15crossbeam_epoch8internalNtB5_5Local3pinCsgfUvSuuZgGt_10rayon_core (102,191,089 samples, 0.01%)</title><rect x="94.9942%" y="1125" width="0.0148%" height="15" fill="rgb(212,73,49)" fg:x="655389636870" fg:w="102191089"/><text x="95.2442%" y="1135.50"></text></g><g><title>[unknown] (394,816,088 samples, 0.06%)</title><rect x="94.9730%" y="1141" width="0.0572%" height="15" fill="rgb(205,62,54)" fg:x="655242911908" fg:w="394816088"/><text x="95.2230%" y="1151.50"></text></g><g><title>_RNvMNtCsgfUvSuuZgGt_10rayon_core8registryNtB2_13ThreadBuilder3run (689,381,053 samples, 0.10%)</title><rect x="94.9728%" y="1157" width="0.0999%" height="15" fill="rgb(228,0,8)" fg:x="655241850696" fg:w="689381053"/><text x="95.2228%" y="1167.50"></text></g><g><title>_RNvMs6_NtCs9VSOSf8HpMa_15crossbeam_epoch8internalNtB5_5Local3pinCsgfUvSuuZgGt_10rayon_core (71,862,348 samples, 0.01%)</title><rect x="95.0816%" y="1157" width="0.0104%" height="15" fill="rgb(251,28,17)" fg:x="655992422163" fg:w="71862348"/><text x="95.3316%" y="1167.50"></text></g><g><title>_RNvMs8_NtCse0sQRnp5frV_15crossbeam_deque5dequeINtB5_7StealerNtNtCsgfUvSuuZgGt_10rayon_core3job6JobRefE5stealB10_ (71,396,243 samples, 0.01%)</title><rect x="95.1056%" y="1157" width="0.0103%" height="15" fill="rgb(238,105,27)" fg:x="656158252347" fg:w="71396243"/><text x="95.3556%" y="1167.50"></text></g><g><title>_RNvMs_NtCs9VSOSf8HpMa_15crossbeam_epoch5epochNtB4_11AtomicEpoch16compare_exchangeCsgfUvSuuZgGt_10rayon_core (75,010,183 samples, 0.01%)</title><rect x="95.1184%" y="1157" width="0.0109%" height="15" fill="rgb(237,216,33)" fg:x="656245935495" fg:w="75010183"/><text x="95.3684%" y="1167.50"></text></g><g><title>polars-12 (1,915,599,877 samples, 0.28%)</title><rect x="94.8866%" y="1173" width="0.2777%" height="15" fill="rgb(229,228,25)" fg:x="654647246195" fg:w="1915599877"/><text x="95.1366%" y="1183.50"></text></g><g><title>_RINvNtNtCscvwWOJfxRAb_4core4sync6atomic23atomic_compare_exchangejECs9wIDdqjH2aO_15crossbeam_utils (104,316,618 samples, 0.02%)</title><rect x="95.2075%" y="1157" width="0.0151%" height="15" fill="rgb(233,75,23)" fg:x="656860604671" fg:w="104316618"/><text x="95.4575%" y="1167.50"></text></g><g><title>_RNvMs6_NtCs9VSOSf8HpMa_15crossbeam_epoch8internalNtB5_5Local3pinCsgfUvSuuZgGt_10rayon_core (96,135,816 samples, 0.01%)</title><rect x="95.2535%" y="1125" width="0.0139%" height="15" fill="rgb(231,207,16)" fg:x="657178396111" fg:w="96135816"/><text x="95.5035%" y="1135.50"></text></g><g><title>[unknown] (369,297,422 samples, 0.05%)</title><rect x="95.2363%" y="1141" width="0.0535%" height="15" fill="rgb(231,191,45)" fg:x="657059391725" fg:w="369297422"/><text x="95.4863%" y="1151.50"></text></g><g><title>_RNvMNtCsgfUvSuuZgGt_10rayon_core8registryNtB2_13ThreadBuilder3run (659,189,016 samples, 0.10%)</title><rect x="95.2360%" y="1157" width="0.0955%" height="15" fill="rgb(224,133,17)" fg:x="657057807746" fg:w="659189016"/><text x="95.4860%" y="1167.50"></text></g><g><title>_RNvMs6_NtCs9VSOSf8HpMa_15crossbeam_epoch8internalNtB5_5Local3pinCsgfUvSuuZgGt_10rayon_core (78,447,267 samples, 0.01%)</title><rect x="95.3407%" y="1157" width="0.0114%" height="15" fill="rgb(209,178,27)" fg:x="657780018184" fg:w="78447267"/><text x="95.5907%" y="1167.50"></text></g><g><title>polars-13 (1,798,827,433 samples, 0.26%)</title><rect x="95.1643%" y="1173" width="0.2607%" height="15" fill="rgb(218,37,11)" fg:x="656562846072" fg:w="1798827433"/><text x="95.4143%" y="1183.50"></text></g><g><title>_RINvNtNtCscvwWOJfxRAb_4core4sync6atomic23atomic_compare_exchangejECs9wIDdqjH2aO_15crossbeam_utils (81,038,333 samples, 0.01%)</title><rect x="95.4729%" y="1157" width="0.0117%" height="15" fill="rgb(251,226,25)" fg:x="658691899891" fg:w="81038333"/><text x="95.7229%" y="1167.50"></text></g><g><title>_RNvMs6_NtCs9VSOSf8HpMa_15crossbeam_epoch8internalNtB5_5Local3pinCsgfUvSuuZgGt_10rayon_core (88,500,475 samples, 0.01%)</title><rect x="95.5179%" y="1125" width="0.0128%" height="15" fill="rgb(209,222,27)" fg:x="659002647095" fg:w="88500475"/><text x="95.7679%" y="1135.50"></text></g><g><title>[unknown] (347,725,378 samples, 0.05%)</title><rect x="95.5002%" y="1141" width="0.0504%" height="15" fill="rgb(238,22,21)" fg:x="658880639283" fg:w="347725378"/><text x="95.7502%" y="1151.50"></text></g><g><title>_RNvMNtCsgfUvSuuZgGt_10rayon_core8registryNtB2_13ThreadBuilder3run (605,086,315 samples, 0.09%)</title><rect x="95.4997%" y="1157" width="0.0877%" height="15" fill="rgb(233,161,25)" fg:x="658876708912" fg:w="605086315"/><text x="95.7497%" y="1167.50"></text></g><g><title>polars-14 (1,757,796,684 samples, 0.25%)</title><rect x="95.4250%" y="1173" width="0.2548%" height="15" fill="rgb(226,122,53)" fg:x="658361673505" fg:w="1757796684"/><text x="95.6750%" y="1183.50"></text></g><g><title>_RINvNtNtCscvwWOJfxRAb_4core4sync6atomic23atomic_compare_exchangejECs9wIDdqjH2aO_15crossbeam_utils (105,303,883 samples, 0.02%)</title><rect x="95.7257%" y="1157" width="0.0153%" height="15" fill="rgb(220,123,17)" fg:x="660436153564" fg:w="105303883"/><text x="95.9757%" y="1167.50"></text></g><g><title>_RNvMs6_NtCs9VSOSf8HpMa_15crossbeam_epoch8internalNtB5_5Local3pinCsgfUvSuuZgGt_10rayon_core (86,609,534 samples, 0.01%)</title><rect x="95.7690%" y="1125" width="0.0126%" height="15" fill="rgb(230,224,35)" fg:x="660734989552" fg:w="86609534"/><text x="96.0190%" y="1135.50"></text></g><g><title>[unknown] (335,576,924 samples, 0.05%)</title><rect x="95.7535%" y="1141" width="0.0486%" height="15" fill="rgb(246,83,8)" fg:x="660628225097" fg:w="335576924"/><text x="96.0035%" y="1151.50"></text></g><g><title>_RNvMNtCsgfUvSuuZgGt_10rayon_core8registryNtB2_13ThreadBuilder3run (581,365,560 samples, 0.08%)</title><rect x="95.7534%" y="1157" width="0.0843%" height="15" fill="rgb(230,214,17)" fg:x="660627441056" fg:w="581365560"/><text x="96.0034%" y="1167.50"></text></g><g><title>_RNvMs_NtCs9VSOSf8HpMa_15crossbeam_epoch5epochNtB4_11AtomicEpoch16compare_exchangeCsgfUvSuuZgGt_10rayon_core (70,969,630 samples, 0.01%)</title><rect x="95.8787%" y="1157" width="0.0103%" height="15" fill="rgb(222,97,18)" fg:x="661491625012" fg:w="70969630"/><text x="96.1287%" y="1167.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (111,079,693 samples, 0.02%)</title><rect x="95.9192%" y="1157" width="0.0161%" height="15" fill="rgb(206,79,1)" fg:x="661770871291" fg:w="111079693"/><text x="96.1692%" y="1167.50"></text></g><g><title>do_syscall_64 (111,079,693 samples, 0.02%)</title><rect x="95.9192%" y="1141" width="0.0161%" height="15" fill="rgb(214,121,34)" fg:x="661770871291" fg:w="111079693"/><text x="96.1692%" y="1151.50"></text></g><g><title>syscall_exit_to_user_mode (111,079,693 samples, 0.02%)</title><rect x="95.9192%" y="1125" width="0.0161%" height="15" fill="rgb(249,199,46)" fg:x="661770871291" fg:w="111079693"/><text x="96.1692%" y="1135.50"></text></g><g><title>arch_do_signal_or_restart (111,079,693 samples, 0.02%)</title><rect x="95.9192%" y="1109" width="0.0161%" height="15" fill="rgb(214,222,46)" fg:x="661770871291" fg:w="111079693"/><text x="96.1692%" y="1119.50"></text></g><g><title>get_signal (111,079,693 samples, 0.02%)</title><rect x="95.9192%" y="1093" width="0.0161%" height="15" fill="rgb(248,168,30)" fg:x="661770871291" fg:w="111079693"/><text x="96.1692%" y="1103.50"></text></g><g><title>do_group_exit (111,079,693 samples, 0.02%)</title><rect x="95.9192%" y="1077" width="0.0161%" height="15" fill="rgb(226,14,28)" fg:x="661770871291" fg:w="111079693"/><text x="96.1692%" y="1087.50"></text></g><g><title>do_exit (111,079,693 samples, 0.02%)</title><rect x="95.9192%" y="1061" width="0.0161%" height="15" fill="rgb(253,123,1)" fg:x="661770871291" fg:w="111079693"/><text x="96.1692%" y="1071.50"></text></g><g><title>exit_mm (111,079,693 samples, 0.02%)</title><rect x="95.9192%" y="1045" width="0.0161%" height="15" fill="rgb(225,24,42)" fg:x="661770871291" fg:w="111079693"/><text x="96.1692%" y="1055.50"></text></g><g><title>__mmput (111,079,693 samples, 0.02%)</title><rect x="95.9192%" y="1029" width="0.0161%" height="15" fill="rgb(216,161,37)" fg:x="661770871291" fg:w="111079693"/><text x="96.1692%" y="1039.50"></text></g><g><title>exit_mmap (111,079,693 samples, 0.02%)</title><rect x="95.9192%" y="1013" width="0.0161%" height="15" fill="rgb(251,164,26)" fg:x="661770871291" fg:w="111079693"/><text x="96.1692%" y="1023.50"></text></g><g><title>unmap_vmas (104,548,637 samples, 0.02%)</title><rect x="95.9201%" y="997" width="0.0152%" height="15" fill="rgb(219,177,3)" fg:x="661777402347" fg:w="104548637"/><text x="96.1701%" y="1007.50"></text></g><g><title>unmap_page_range (104,548,637 samples, 0.02%)</title><rect x="95.9201%" y="981" width="0.0152%" height="15" fill="rgb(222,65,0)" fg:x="661777402347" fg:w="104548637"/><text x="96.1701%" y="991.50"></text></g><g><title>zap_pud_range.isra.0 (104,548,637 samples, 0.02%)</title><rect x="95.9201%" y="965" width="0.0152%" height="15" fill="rgb(223,69,54)" fg:x="661777402347" fg:w="104548637"/><text x="96.1701%" y="975.50"></text></g><g><title>zap_pmd_range.isra.0 (104,548,637 samples, 0.02%)</title><rect x="95.9201%" y="949" width="0.0152%" height="15" fill="rgb(235,30,27)" fg:x="661777402347" fg:w="104548637"/><text x="96.1701%" y="959.50"></text></g><g><title>zap_pte_range (104,548,637 samples, 0.02%)</title><rect x="95.9201%" y="933" width="0.0152%" height="15" fill="rgb(220,183,50)" fg:x="661777402347" fg:w="104548637"/><text x="96.1701%" y="943.50"></text></g><g><title>zap_present_ptes.constprop.0 (74,123,300 samples, 0.01%)</title><rect x="95.9245%" y="917" width="0.0107%" height="15" fill="rgb(248,198,15)" fg:x="661807827684" fg:w="74123300"/><text x="96.1745%" y="927.50"></text></g><g><title>polars-15 (1,763,444,083 samples, 0.26%)</title><rect x="95.6798%" y="1173" width="0.2556%" height="15" fill="rgb(222,211,4)" fg:x="660119470189" fg:w="1763444083"/><text x="95.9298%" y="1183.50"></text></g><g><title>[unknown] (114,045,561 samples, 0.02%)</title><rect x="95.9432%" y="1157" width="0.0165%" height="15" fill="rgb(214,102,34)" fg:x="661936860533" fg:w="114045561"/><text x="96.1932%" y="1167.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (73,098,732 samples, 0.01%)</title><rect x="95.9639%" y="1125" width="0.0106%" height="15" fill="rgb(245,92,5)" fg:x="662079796944" fg:w="73098732"/><text x="96.2139%" y="1135.50"></text></g><g><title>do_syscall_64 (71,029,852 samples, 0.01%)</title><rect x="95.9642%" y="1109" width="0.0103%" height="15" fill="rgb(252,72,51)" fg:x="662081865824" fg:w="71029852"/><text x="96.2142%" y="1119.50"></text></g><g><title>__sched_yield (77,469,865 samples, 0.01%)</title><rect x="95.9635%" y="1141" width="0.0112%" height="15" fill="rgb(252,208,19)" fg:x="662076442773" fg:w="77469865"/><text x="96.2135%" y="1151.50"></text></g><g><title>_RINvMNtCsgfUvSuuZgGt_10rayon_core5sleepNtB3_5Sleep13no_work_foundNCNvMs8_NtB5_8registryNtB19_12WorkerThread15wait_until_cold0EB5_ (80,316,956 samples, 0.01%)</title><rect x="95.9632%" y="1157" width="0.0116%" height="15" fill="rgb(211,69,7)" fg:x="662074615159" fg:w="80316956"/><text x="96.2132%" y="1167.50"></text></g><g><title>_RINvNtNtCscvwWOJfxRAb_4core4sync6atomic23atomic_compare_exchangejECs9wIDdqjH2aO_15crossbeam_utils (144,360,012 samples, 0.02%)</title><rect x="96.0172%" y="1157" width="0.0209%" height="15" fill="rgb(211,27,16)" fg:x="662447394833" fg:w="144360012"/><text x="96.2672%" y="1167.50"></text></g><g><title>_RNvMs6_NtCs9VSOSf8HpMa_15crossbeam_epoch8internalNtB5_5Local3pinCsgfUvSuuZgGt_10rayon_core (142,149,489 samples, 0.02%)</title><rect x="96.0911%" y="1125" width="0.0206%" height="15" fill="rgb(219,216,14)" fg:x="662956899338" fg:w="142149489"/><text x="96.3411%" y="1135.50"></text></g><g><title>[unknown] (510,208,091 samples, 0.07%)</title><rect x="96.0654%" y="1141" width="0.0740%" height="15" fill="rgb(219,71,8)" fg:x="662779605961" fg:w="510208091"/><text x="96.3154%" y="1151.50"></text></g><g><title>_RNCNkNvNtCs9VSOSf8HpMa_15crossbeam_epoch7default6HANDLE00B7_ (88,113,418 samples, 0.01%)</title><rect x="96.1528%" y="1141" width="0.0128%" height="15" fill="rgb(223,170,53)" fg:x="663382738007" fg:w="88113418"/><text x="96.4028%" y="1151.50"></text></g><g><title>_RNvMNtCsgfUvSuuZgGt_10rayon_core8registryNtB2_13ThreadBuilder3run (893,180,075 samples, 0.13%)</title><rect x="96.0644%" y="1157" width="0.1295%" height="15" fill="rgb(246,21,26)" fg:x="662772951319" fg:w="893180075"/><text x="96.3144%" y="1167.50"></text></g><g><title>_RNvMs6_NtCs9VSOSf8HpMa_15crossbeam_epoch8internalNtB5_5Local3pinCsgfUvSuuZgGt_10rayon_core (88,606,934 samples, 0.01%)</title><rect x="96.2094%" y="1157" width="0.0128%" height="15" fill="rgb(248,20,46)" fg:x="663773202277" fg:w="88606934"/><text x="96.4594%" y="1167.50"></text></g><g><title>_RNvMs8_NtCse0sQRnp5frV_15crossbeam_deque5dequeINtB5_7StealerNtNtCsgfUvSuuZgGt_10rayon_core3job6JobRefE5stealB10_ (85,585,834 samples, 0.01%)</title><rect x="96.2398%" y="1157" width="0.0124%" height="15" fill="rgb(252,94,11)" fg:x="663983227396" fg:w="85585834"/><text x="96.4898%" y="1167.50"></text></g><g><title>_RNvMs_NtCs9VSOSf8HpMa_15crossbeam_epoch5epochNtB4_11AtomicEpoch16compare_exchangeCsgfUvSuuZgGt_10rayon_core (91,240,115 samples, 0.01%)</title><rect x="96.2562%" y="1157" width="0.0132%" height="15" fill="rgb(236,163,8)" fg:x="664096442358" fg:w="91240115"/><text x="96.5062%" y="1167.50"></text></g><g><title>polars-1 (2,664,357,330 samples, 0.39%)</title><rect x="95.9354%" y="1173" width="0.3862%" height="15" fill="rgb(217,221,45)" fg:x="661882914272" fg:w="2664357330"/><text x="96.1854%" y="1183.50"></text></g><g><title>[unknown] (123,138,145 samples, 0.02%)</title><rect x="96.3272%" y="1157" width="0.0178%" height="15" fill="rgb(238,38,17)" fg:x="664586103209" fg:w="123138145"/><text x="96.5772%" y="1167.50"></text></g><g><title>__x64_sys_sched_yield (79,090,563 samples, 0.01%)</title><rect x="96.3490%" y="1093" width="0.0115%" height="15" fill="rgb(242,210,23)" fg:x="664736256778" fg:w="79090563"/><text x="96.5990%" y="1103.50"></text></g><g><title>schedule (71,175,399 samples, 0.01%)</title><rect x="96.3501%" y="1077" width="0.0103%" height="15" fill="rgb(250,86,53)" fg:x="664744171942" fg:w="71175399"/><text x="96.6001%" y="1087.50"></text></g><g><title>do_syscall_64 (90,519,176 samples, 0.01%)</title><rect x="96.3482%" y="1109" width="0.0131%" height="15" fill="rgb(223,168,25)" fg:x="664730616850" fg:w="90519176"/><text x="96.5982%" y="1119.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (92,328,523 samples, 0.01%)</title><rect x="96.3480%" y="1125" width="0.0134%" height="15" fill="rgb(251,189,4)" fg:x="664729792872" fg:w="92328523"/><text x="96.5980%" y="1135.50"></text></g><g><title>__sched_yield (99,342,239 samples, 0.01%)</title><rect x="96.3476%" y="1141" width="0.0144%" height="15" fill="rgb(245,19,28)" fg:x="664726841820" fg:w="99342239"/><text x="96.5976%" y="1151.50"></text></g><g><title>_RINvMNtCsgfUvSuuZgGt_10rayon_core5sleepNtB3_5Sleep13no_work_foundNCNvMs8_NtB5_8registryNtB19_12WorkerThread15wait_until_cold0EB5_ (103,257,935 samples, 0.01%)</title><rect x="96.3472%" y="1157" width="0.0150%" height="15" fill="rgb(207,10,34)" fg:x="664723882549" fg:w="103257935"/><text x="96.5972%" y="1167.50"></text></g><g><title>_RINvNtNtCscvwWOJfxRAb_4core4sync6atomic23atomic_compare_exchangejECs9wIDdqjH2aO_15crossbeam_utils (137,072,613 samples, 0.02%)</title><rect x="96.4039%" y="1157" width="0.0199%" height="15" fill="rgb(235,153,31)" fg:x="665115094165" fg:w="137072613"/><text x="96.6539%" y="1167.50"></text></g><g><title>_RNvMs6_NtCs9VSOSf8HpMa_15crossbeam_epoch8internalNtB5_5Local3pinCsgfUvSuuZgGt_10rayon_core (120,014,791 samples, 0.02%)</title><rect x="96.4796%" y="1125" width="0.0174%" height="15" fill="rgb(228,72,37)" fg:x="665637588644" fg:w="120014791"/><text x="96.7296%" y="1135.50"></text></g><g><title>[unknown] (497,768,887 samples, 0.07%)</title><rect x="96.4533%" y="1141" width="0.0721%" height="15" fill="rgb(215,15,16)" fg:x="665455823140" fg:w="497768887"/><text x="96.7033%" y="1151.50"></text></g><g><title>_RNvMNtCsgfUvSuuZgGt_10rayon_core8registryNtB2_13ThreadBuilder3run (857,399,369 samples, 0.12%)</title><rect x="96.4525%" y="1157" width="0.1243%" height="15" fill="rgb(250,119,29)" fg:x="665450608225" fg:w="857399369"/><text x="96.7025%" y="1167.50"></text></g><g><title>_RNvMs6_NtCs9VSOSf8HpMa_15crossbeam_epoch8internalNtB5_5Local3pinCsgfUvSuuZgGt_10rayon_core (101,326,982 samples, 0.01%)</title><rect x="96.5934%" y="1157" width="0.0147%" height="15" fill="rgb(214,59,1)" fg:x="666422542083" fg:w="101326982"/><text x="96.8434%" y="1167.50"></text></g><g><title>_RNvMs8_NtCse0sQRnp5frV_15crossbeam_deque5dequeINtB5_7StealerNtNtCsgfUvSuuZgGt_10rayon_core3job6JobRefE5stealB10_ (83,545,702 samples, 0.01%)</title><rect x="96.6254%" y="1157" width="0.0121%" height="15" fill="rgb(223,109,25)" fg:x="666643432697" fg:w="83545702"/><text x="96.8754%" y="1167.50"></text></g><g><title>_RNvMs_NtCs9VSOSf8HpMa_15crossbeam_epoch5epochNtB4_11AtomicEpoch16compare_exchangeCsgfUvSuuZgGt_10rayon_core (80,738,697 samples, 0.01%)</title><rect x="96.6410%" y="1157" width="0.0117%" height="15" fill="rgb(230,198,22)" fg:x="666751263173" fg:w="80738697"/><text x="96.8910%" y="1167.50"></text></g><g><title>polars-2 (2,640,307,768 samples, 0.38%)</title><rect x="96.3216%" y="1173" width="0.3827%" height="15" fill="rgb(245,184,46)" fg:x="664547271602" fg:w="2640307768"/><text x="96.5716%" y="1183.50"></text></g><g><title>fileWriter (103,323,521 samples, 0.01%)</title><rect x="96.7109%" y="1157" width="0.0150%" height="15" fill="rgb(253,73,16)" fg:x="667233339237" fg:w="103323521"/><text x="96.9609%" y="1167.50"></text></g><g><title>_IO_fwrite (103,323,521 samples, 0.01%)</title><rect x="96.7109%" y="1141" width="0.0150%" height="15" fill="rgb(206,94,45)" fg:x="667233339237" fg:w="103323521"/><text x="96.9609%" y="1151.50"></text></g><g><title>_IO_file_xsputn@@GLIBC_2.2.5 (103,323,521 samples, 0.01%)</title><rect x="96.7109%" y="1125" width="0.0150%" height="15" fill="rgb(236,83,27)" fg:x="667233339237" fg:w="103323521"/><text x="96.9609%" y="1135.50"></text></g><g><title>new_do_write (103,323,521 samples, 0.01%)</title><rect x="96.7109%" y="1109" width="0.0150%" height="15" fill="rgb(220,196,8)" fg:x="667233339237" fg:w="103323521"/><text x="96.9609%" y="1119.50"></text></g><g><title>_IO_file_write@@GLIBC_2.2.5 (103,323,521 samples, 0.01%)</title><rect x="96.7109%" y="1093" width="0.0150%" height="15" fill="rgb(254,185,14)" fg:x="667233339237" fg:w="103323521"/><text x="96.9609%" y="1103.50"></text></g><g><title>__GI___libc_write (103,323,521 samples, 0.01%)</title><rect x="96.7109%" y="1077" width="0.0150%" height="15" fill="rgb(226,50,22)" fg:x="667233339237" fg:w="103323521"/><text x="96.9609%" y="1087.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (103,323,521 samples, 0.01%)</title><rect x="96.7109%" y="1061" width="0.0150%" height="15" fill="rgb(253,147,0)" fg:x="667233339237" fg:w="103323521"/><text x="96.9609%" y="1071.50"></text></g><g><title>do_syscall_64 (103,323,521 samples, 0.01%)</title><rect x="96.7109%" y="1045" width="0.0150%" height="15" fill="rgb(252,46,33)" fg:x="667233339237" fg:w="103323521"/><text x="96.9609%" y="1055.50"></text></g><g><title>ksys_write (103,323,521 samples, 0.01%)</title><rect x="96.7109%" y="1029" width="0.0150%" height="15" fill="rgb(242,22,54)" fg:x="667233339237" fg:w="103323521"/><text x="96.9609%" y="1039.50"></text></g><g><title>vfs_write (103,323,521 samples, 0.01%)</title><rect x="96.7109%" y="1013" width="0.0150%" height="15" fill="rgb(223,178,32)" fg:x="667233339237" fg:w="103323521"/><text x="96.9609%" y="1023.50"></text></g><g><title>btrfs_do_write_iter (103,323,521 samples, 0.01%)</title><rect x="96.7109%" y="997" width="0.0150%" height="15" fill="rgb(214,106,53)" fg:x="667233339237" fg:w="103323521"/><text x="96.9609%" y="1007.50"></text></g><g><title>btrfs_buffered_write (103,323,521 samples, 0.01%)</title><rect x="96.7109%" y="981" width="0.0150%" height="15" fill="rgb(232,65,50)" fg:x="667233339237" fg:w="103323521"/><text x="96.9609%" y="991.50"></text></g><g><title>polars-2e9277f7 (153,446,108 samples, 0.02%)</title><rect x="96.7043%" y="1173" width="0.0222%" height="15" fill="rgb(231,110,28)" fg:x="667187579370" fg:w="153446108"/><text x="96.9543%" y="1183.50"></text></g><g><title>[unknown] (92,817,522 samples, 0.01%)</title><rect x="96.7325%" y="1157" width="0.0135%" height="15" fill="rgb(216,71,40)" fg:x="667382296104" fg:w="92817522"/><text x="96.9825%" y="1167.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (70,284,845 samples, 0.01%)</title><rect x="96.7485%" y="1125" width="0.0102%" height="15" fill="rgb(229,89,53)" fg:x="667493041736" fg:w="70284845"/><text x="96.9985%" y="1135.50"></text></g><g><title>do_syscall_64 (69,142,023 samples, 0.01%)</title><rect x="96.7487%" y="1109" width="0.0100%" height="15" fill="rgb(210,124,14)" fg:x="667494184558" fg:w="69142023"/><text x="96.9987%" y="1119.50"></text></g><g><title>__sched_yield (72,194,220 samples, 0.01%)</title><rect x="96.7484%" y="1141" width="0.0105%" height="15" fill="rgb(236,213,6)" fg:x="667492206490" fg:w="72194220"/><text x="96.9984%" y="1151.50"></text></g><g><title>_RINvMNtCsgfUvSuuZgGt_10rayon_core5sleepNtB3_5Sleep13no_work_foundNCNvMs8_NtB5_8registryNtB19_12WorkerThread15wait_until_cold0EB5_ (75,760,551 samples, 0.01%)</title><rect x="96.7481%" y="1157" width="0.0110%" height="15" fill="rgb(228,41,5)" fg:x="667489632779" fg:w="75760551"/><text x="96.9981%" y="1167.50"></text></g><g><title>_RINvNtNtCscvwWOJfxRAb_4core4sync6atomic23atomic_compare_exchangejECs9wIDdqjH2aO_15crossbeam_utils (157,440,727 samples, 0.02%)</title><rect x="96.7991%" y="1157" width="0.0228%" height="15" fill="rgb(221,167,25)" fg:x="667841577745" fg:w="157440727"/><text x="97.0491%" y="1167.50"></text></g><g><title>_RNvMs6_NtCs9VSOSf8HpMa_15crossbeam_epoch8internalNtB5_5Local3pinCsgfUvSuuZgGt_10rayon_core (119,807,704 samples, 0.02%)</title><rect x="96.8706%" y="1125" width="0.0174%" height="15" fill="rgb(228,144,37)" fg:x="668334889861" fg:w="119807704"/><text x="97.1206%" y="1135.50"></text></g><g><title>[unknown] (460,575,086 samples, 0.07%)</title><rect x="96.8472%" y="1141" width="0.0668%" height="15" fill="rgb(227,189,38)" fg:x="668173808768" fg:w="460575086"/><text x="97.0972%" y="1151.50"></text></g><g><title>_RNCNkNvNtCs9VSOSf8HpMa_15crossbeam_epoch7default6HANDLE00B7_ (77,114,658 samples, 0.01%)</title><rect x="96.9274%" y="1141" width="0.0112%" height="15" fill="rgb(218,8,2)" fg:x="668727048013" fg:w="77114658"/><text x="97.1774%" y="1151.50"></text></g><g><title>_RNvMNtCsgfUvSuuZgGt_10rayon_core8registryNtB2_13ThreadBuilder3run (832,717,782 samples, 0.12%)</title><rect x="96.8463%" y="1157" width="0.1207%" height="15" fill="rgb(209,61,28)" fg:x="668167295941" fg:w="832717782"/><text x="97.0963%" y="1167.50"></text></g><g><title>_RNvMs6_NtCs9VSOSf8HpMa_15crossbeam_epoch8internalNtB5_5Local3pinCsgfUvSuuZgGt_10rayon_core (80,882,576 samples, 0.01%)</title><rect x="96.9835%" y="1157" width="0.0117%" height="15" fill="rgb(233,140,39)" fg:x="669113938914" fg:w="80882576"/><text x="97.2335%" y="1167.50"></text></g><g><title>_RNvMs8_NtCse0sQRnp5frV_15crossbeam_deque5dequeINtB5_7StealerNtNtCsgfUvSuuZgGt_10rayon_core3job6JobRefE5stealB10_ (74,816,212 samples, 0.01%)</title><rect x="97.0162%" y="1157" width="0.0108%" height="15" fill="rgb(251,66,48)" fg:x="669339721999" fg:w="74816212"/><text x="97.2662%" y="1167.50"></text></g><g><title>_RNvMs_NtCs9VSOSf8HpMa_15crossbeam_epoch5epochNtB4_11AtomicEpoch16compare_exchangeCsgfUvSuuZgGt_10rayon_core (86,237,678 samples, 0.01%)</title><rect x="97.0305%" y="1157" width="0.0125%" height="15" fill="rgb(210,44,45)" fg:x="669438469373" fg:w="86237678"/><text x="97.2805%" y="1167.50"></text></g><g><title>polars-3 (2,519,957,248 samples, 0.37%)</title><rect x="96.7265%" y="1173" width="0.3653%" height="15" fill="rgb(214,136,46)" fg:x="667341025478" fg:w="2519957248"/><text x="96.9765%" y="1183.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (75,533,561 samples, 0.01%)</title><rect x="97.1069%" y="1125" width="0.0109%" height="15" fill="rgb(207,130,50)" fg:x="669965210926" fg:w="75533561"/><text x="97.3569%" y="1135.50"></text></g><g><title>do_syscall_64 (75,533,561 samples, 0.01%)</title><rect x="97.1069%" y="1109" width="0.0109%" height="15" fill="rgb(228,102,49)" fg:x="669965210926" fg:w="75533561"/><text x="97.3569%" y="1119.50"></text></g><g><title>_RINvMNtCsgfUvSuuZgGt_10rayon_core5sleepNtB3_5Sleep13no_work_foundNCNvMs8_NtB5_8registryNtB19_12WorkerThread15wait_until_cold0EB5_ (77,024,763 samples, 0.01%)</title><rect x="97.1067%" y="1157" width="0.0112%" height="15" fill="rgb(253,55,1)" fg:x="669964287420" fg:w="77024763"/><text x="97.3567%" y="1167.50"></text></g><g><title>__sched_yield (77,024,763 samples, 0.01%)</title><rect x="97.1067%" y="1141" width="0.0112%" height="15" fill="rgb(238,222,9)" fg:x="669964287420" fg:w="77024763"/><text x="97.3567%" y="1151.50"></text></g><g><title>_RINvNtNtCscvwWOJfxRAb_4core4sync6atomic23atomic_compare_exchangejECs9wIDdqjH2aO_15crossbeam_utils (120,066,169 samples, 0.02%)</title><rect x="97.1588%" y="1157" width="0.0174%" height="15" fill="rgb(246,99,6)" fg:x="670323683719" fg:w="120066169"/><text x="97.4088%" y="1167.50"></text></g><g><title>_RNvMs6_NtCs9VSOSf8HpMa_15crossbeam_epoch8internalNtB5_5Local3pinCsgfUvSuuZgGt_10rayon_core (125,069,283 samples, 0.02%)</title><rect x="97.2240%" y="1125" width="0.0181%" height="15" fill="rgb(219,110,26)" fg:x="670773343172" fg:w="125069283"/><text x="97.4740%" y="1135.50"></text></g><g><title>[unknown] (469,404,164 samples, 0.07%)</title><rect x="97.1989%" y="1141" width="0.0680%" height="15" fill="rgb(239,160,33)" fg:x="670599871071" fg:w="469404164"/><text x="97.4489%" y="1151.50"></text></g><g><title>_RNvMNtCsgfUvSuuZgGt_10rayon_core8registryNtB2_13ThreadBuilder3run (855,880,275 samples, 0.12%)</title><rect x="97.1973%" y="1157" width="0.1241%" height="15" fill="rgb(220,202,23)" fg:x="670589299037" fg:w="855880275"/><text x="97.4473%" y="1167.50"></text></g><g><title>_RNvMs6_NtCs9VSOSf8HpMa_15crossbeam_epoch8internalNtB5_5Local3pinCsgfUvSuuZgGt_10rayon_core (98,074,409 samples, 0.01%)</title><rect x="97.3355%" y="1157" width="0.0142%" height="15" fill="rgb(208,80,26)" fg:x="671542819165" fg:w="98074409"/><text x="97.5855%" y="1167.50"></text></g><g><title>_RNvMs8_NtCse0sQRnp5frV_15crossbeam_deque5dequeINtB5_7StealerNtNtCsgfUvSuuZgGt_10rayon_core3job6JobRefE5stealB10_ (80,850,769 samples, 0.01%)</title><rect x="97.3687%" y="1157" width="0.0117%" height="15" fill="rgb(243,85,7)" fg:x="671771648979" fg:w="80850769"/><text x="97.6187%" y="1167.50"></text></g><g><title>_RNvMs_NtCs9VSOSf8HpMa_15crossbeam_epoch5epochNtB4_11AtomicEpoch16compare_exchangeCsgfUvSuuZgGt_10rayon_core (79,000,296 samples, 0.01%)</title><rect x="97.3840%" y="1157" width="0.0115%" height="15" fill="rgb(228,77,47)" fg:x="671877513703" fg:w="79000296"/><text x="97.6340%" y="1167.50"></text></g><g><title>polars-4 (2,392,262,372 samples, 0.35%)</title><rect x="97.0918%" y="1173" width="0.3467%" height="15" fill="rgb(212,226,8)" fg:x="669860982726" fg:w="2392262372"/><text x="97.3418%" y="1183.50"></text></g><g><title>_RINvMNtCsgfUvSuuZgGt_10rayon_core5sleepNtB3_5Sleep13no_work_foundNCNvMs8_NtB5_8registryNtB19_12WorkerThread15wait_until_cold0EB5_ (70,600,621 samples, 0.01%)</title><rect x="97.4531%" y="1157" width="0.0102%" height="15" fill="rgb(241,120,54)" fg:x="672354088453" fg:w="70600621"/><text x="97.7031%" y="1167.50"></text></g><g><title>_RINvNtCs9VSOSf8HpMa_15crossbeam_epoch7default11with_handleNCNvB2_3pin0NtNtB4_5guard5GuardECsgfUvSuuZgGt_10rayon_core (71,682,554 samples, 0.01%)</title><rect x="97.4804%" y="1157" width="0.0104%" height="15" fill="rgb(226,80,16)" fg:x="672542199233" fg:w="71682554"/><text x="97.7304%" y="1167.50"></text></g><g><title>_RINvNtNtCscvwWOJfxRAb_4core4sync6atomic23atomic_compare_exchangejECs9wIDdqjH2aO_15crossbeam_utils (123,277,439 samples, 0.02%)</title><rect x="97.5009%" y="1157" width="0.0179%" height="15" fill="rgb(240,76,13)" fg:x="672684022296" fg:w="123277439"/><text x="97.7509%" y="1167.50"></text></g><g><title>_RNvMs6_NtCs9VSOSf8HpMa_15crossbeam_epoch8internalNtB5_5Local3pinCsgfUvSuuZgGt_10rayon_core (117,990,393 samples, 0.02%)</title><rect x="97.5641%" y="1125" width="0.0171%" height="15" fill="rgb(252,74,8)" fg:x="673119676906" fg:w="117990393"/><text x="97.8141%" y="1135.50"></text></g><g><title>[unknown] (473,059,972 samples, 0.07%)</title><rect x="97.5395%" y="1141" width="0.0686%" height="15" fill="rgb(244,155,2)" fg:x="672950011666" fg:w="473059972"/><text x="97.7895%" y="1151.50"></text></g><g><title>_RNCNkNvNtCs9VSOSf8HpMa_15crossbeam_epoch7default6HANDLE00B7_ (78,194,517 samples, 0.01%)</title><rect x="97.6199%" y="1141" width="0.0113%" height="15" fill="rgb(215,81,35)" fg:x="673504543078" fg:w="78194517"/><text x="97.8699%" y="1151.50"></text></g><g><title>_RNvMNtCsgfUvSuuZgGt_10rayon_core8registryNtB2_13ThreadBuilder3run (828,163,657 samples, 0.12%)</title><rect x="97.5390%" y="1157" width="0.1200%" height="15" fill="rgb(206,55,2)" fg:x="672946351079" fg:w="828163657"/><text x="97.7890%" y="1167.50"></text></g><g><title>_RNvMs6_NtCs9VSOSf8HpMa_15crossbeam_epoch8internalNtB5_5Local3pinCsgfUvSuuZgGt_10rayon_core (80,321,192 samples, 0.01%)</title><rect x="97.6717%" y="1157" width="0.0116%" height="15" fill="rgb(231,2,34)" fg:x="673861875471" fg:w="80321192"/><text x="97.9217%" y="1167.50"></text></g><g><title>_RNvMs8_NtCse0sQRnp5frV_15crossbeam_deque5dequeINtB5_7StealerNtNtCsgfUvSuuZgGt_10rayon_core3job6JobRefE5stealB10_ (75,294,260 samples, 0.01%)</title><rect x="97.7011%" y="1157" width="0.0109%" height="15" fill="rgb(242,176,48)" fg:x="674065116634" fg:w="75294260"/><text x="97.9511%" y="1167.50"></text></g><g><title>_RNvMs_NtCs9VSOSf8HpMa_15crossbeam_epoch5epochNtB4_11AtomicEpoch16compare_exchangeCsgfUvSuuZgGt_10rayon_core (89,865,018 samples, 0.01%)</title><rect x="97.7147%" y="1157" width="0.0130%" height="15" fill="rgb(249,31,36)" fg:x="674158912200" fg:w="89865018"/><text x="97.9647%" y="1167.50"></text></g><g><title>polars-5 (2,318,379,051 samples, 0.34%)</title><rect x="97.4385%" y="1173" width="0.3360%" height="15" fill="rgb(205,18,17)" fg:x="672253245098" fg:w="2318379051"/><text x="97.6885%" y="1183.50"></text></g><g><title>__sched_yield (79,830,624 samples, 0.01%)</title><rect x="97.7897%" y="1141" width="0.0116%" height="15" fill="rgb(254,130,5)" fg:x="674676210705" fg:w="79830624"/><text x="98.0397%" y="1151.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (75,505,865 samples, 0.01%)</title><rect x="97.7903%" y="1125" width="0.0109%" height="15" fill="rgb(229,42,45)" fg:x="674680535464" fg:w="75505865"/><text x="98.0403%" y="1135.50"></text></g><g><title>do_syscall_64 (74,559,979 samples, 0.01%)</title><rect x="97.7905%" y="1109" width="0.0108%" height="15" fill="rgb(245,95,25)" fg:x="674681481350" fg:w="74559979"/><text x="98.0405%" y="1119.50"></text></g><g><title>_RINvMNtCsgfUvSuuZgGt_10rayon_core5sleepNtB3_5Sleep13no_work_foundNCNvMs8_NtB5_8registryNtB19_12WorkerThread15wait_until_cold0EB5_ (80,974,100 samples, 0.01%)</title><rect x="97.7897%" y="1157" width="0.0117%" height="15" fill="rgb(249,193,38)" fg:x="674676210705" fg:w="80974100"/><text x="98.0397%" y="1167.50"></text></g><g><title>_RINvNtNtCscvwWOJfxRAb_4core4sync6atomic23atomic_compare_exchangejECs9wIDdqjH2aO_15crossbeam_utils (123,710,497 samples, 0.02%)</title><rect x="97.8368%" y="1157" width="0.0179%" height="15" fill="rgb(241,140,43)" fg:x="675000953950" fg:w="123710497"/><text x="98.0868%" y="1167.50"></text></g><g><title>_RNvMs6_NtCs9VSOSf8HpMa_15crossbeam_epoch8internalNtB5_5Local3pinCsgfUvSuuZgGt_10rayon_core (114,968,755 samples, 0.02%)</title><rect x="97.8977%" y="1125" width="0.0167%" height="15" fill="rgb(245,78,48)" fg:x="675421499030" fg:w="114968755"/><text x="98.1477%" y="1135.50"></text></g><g><title>[unknown] (458,379,406 samples, 0.07%)</title><rect x="97.8731%" y="1141" width="0.0664%" height="15" fill="rgb(214,92,39)" fg:x="675251461664" fg:w="458379406"/><text x="98.1231%" y="1151.50"></text></g><g><title>_RNvMNtCsgfUvSuuZgGt_10rayon_core8registryNtB2_13ThreadBuilder3run (821,863,210 samples, 0.12%)</title><rect x="97.8728%" y="1157" width="0.1191%" height="15" fill="rgb(211,189,14)" fg:x="675249532935" fg:w="821863210"/><text x="98.1228%" y="1167.50"></text></g><g><title>_RNvMs6_NtCs9VSOSf8HpMa_15crossbeam_epoch8internalNtB5_5Local3pinCsgfUvSuuZgGt_10rayon_core (91,701,135 samples, 0.01%)</title><rect x="98.0024%" y="1157" width="0.0133%" height="15" fill="rgb(218,7,24)" fg:x="676143974497" fg:w="91701135"/><text x="98.2524%" y="1167.50"></text></g><g><title>_RNvMs8_NtCse0sQRnp5frV_15crossbeam_deque5dequeINtB5_7StealerNtNtCsgfUvSuuZgGt_10rayon_core3job6JobRefE5stealB10_ (76,387,774 samples, 0.01%)</title><rect x="98.0350%" y="1157" width="0.0111%" height="15" fill="rgb(224,200,49)" fg:x="676368345536" fg:w="76387774"/><text x="98.2850%" y="1167.50"></text></g><g><title>polars-6 (2,281,212,920 samples, 0.33%)</title><rect x="97.7745%" y="1173" width="0.3306%" height="15" fill="rgb(218,210,14)" fg:x="674571624149" fg:w="2281212920"/><text x="98.0245%" y="1183.50"></text></g><g><title>__sched_yield (69,617,388 samples, 0.01%)</title><rect x="98.1211%" y="1141" width="0.0101%" height="15" fill="rgb(234,142,31)" fg:x="676962368378" fg:w="69617388"/><text x="98.3711%" y="1151.50"></text></g><g><title>_RINvMNtCsgfUvSuuZgGt_10rayon_core5sleepNtB3_5Sleep13no_work_foundNCNvMs8_NtB5_8registryNtB19_12WorkerThread15wait_until_cold0EB5_ (70,477,062 samples, 0.01%)</title><rect x="98.1211%" y="1157" width="0.0102%" height="15" fill="rgb(227,165,2)" fg:x="676962368378" fg:w="70477062"/><text x="98.3711%" y="1167.50"></text></g><g><title>_RINvNtNtCscvwWOJfxRAb_4core4sync6atomic23atomic_compare_exchangejECs9wIDdqjH2aO_15crossbeam_utils (125,959,527 samples, 0.02%)</title><rect x="98.1702%" y="1157" width="0.0183%" height="15" fill="rgb(232,44,46)" fg:x="677301423085" fg:w="125959527"/><text x="98.4202%" y="1167.50"></text></g><g><title>_RNvMs6_NtCs9VSOSf8HpMa_15crossbeam_epoch8internalNtB5_5Local3pinCsgfUvSuuZgGt_10rayon_core (116,563,533 samples, 0.02%)</title><rect x="98.2313%" y="1125" width="0.0169%" height="15" fill="rgb(236,149,47)" fg:x="677723091512" fg:w="116563533"/><text x="98.4813%" y="1135.50"></text></g><g><title>[unknown] (457,673,011 samples, 0.07%)</title><rect x="98.2091%" y="1141" width="0.0663%" height="15" fill="rgb(227,45,31)" fg:x="677569438819" fg:w="457673011"/><text x="98.4591%" y="1151.50"></text></g><g><title>_RNCNkNvNtCs9VSOSf8HpMa_15crossbeam_epoch7default6HANDLE00B7_ (74,575,753 samples, 0.01%)</title><rect x="98.2866%" y="1141" width="0.0108%" height="15" fill="rgb(240,176,51)" fg:x="678104786443" fg:w="74575753"/><text x="98.5366%" y="1151.50"></text></g><g><title>_RNvMNtCsgfUvSuuZgGt_10rayon_core8registryNtB2_13ThreadBuilder3run (792,732,121 samples, 0.11%)</title><rect x="98.2089%" y="1157" width="0.1149%" height="15" fill="rgb(249,146,41)" fg:x="677568384942" fg:w="792732121"/><text x="98.4589%" y="1167.50"></text></g><g><title>_RNvMs6_NtCs9VSOSf8HpMa_15crossbeam_epoch8internalNtB5_5Local3pinCsgfUvSuuZgGt_10rayon_core (73,981,283 samples, 0.01%)</title><rect x="98.3374%" y="1157" width="0.0107%" height="15" fill="rgb(213,208,4)" fg:x="678455215190" fg:w="73981283"/><text x="98.5874%" y="1167.50"></text></g><g><title>_RNvMs8_NtCse0sQRnp5frV_15crossbeam_deque5dequeINtB5_7StealerNtNtCsgfUvSuuZgGt_10rayon_core3job6JobRefE5stealB10_ (81,640,222 samples, 0.01%)</title><rect x="98.3662%" y="1157" width="0.0118%" height="15" fill="rgb(245,84,36)" fg:x="678653911233" fg:w="81640222"/><text x="98.6162%" y="1167.50"></text></g><g><title>_RNvMs_NtCs9VSOSf8HpMa_15crossbeam_epoch5epochNtB4_11AtomicEpoch16compare_exchangeCsgfUvSuuZgGt_10rayon_core (83,092,957 samples, 0.01%)</title><rect x="98.3814%" y="1157" width="0.0120%" height="15" fill="rgb(254,84,18)" fg:x="678758530455" fg:w="83092957"/><text x="98.6314%" y="1167.50"></text></g><g><title>polars-7 (2,273,026,415 samples, 0.33%)</title><rect x="98.1052%" y="1173" width="0.3295%" height="15" fill="rgb(225,38,54)" fg:x="676852837069" fg:w="2273026415"/><text x="98.3552%" y="1183.50"></text></g><g><title>_RINvMNtCsgfUvSuuZgGt_10rayon_core5sleepNtB3_5Sleep13no_work_foundNCNvMs8_NtB5_8registryNtB19_12WorkerThread15wait_until_cold0EB5_ (70,669,241 samples, 0.01%)</title><rect x="98.4495%" y="1157" width="0.0102%" height="15" fill="rgb(246,50,30)" fg:x="679228313529" fg:w="70669241"/><text x="98.6995%" y="1167.50"></text></g><g><title>__sched_yield (69,667,342 samples, 0.01%)</title><rect x="98.4496%" y="1141" width="0.0101%" height="15" fill="rgb(246,148,9)" fg:x="679229315428" fg:w="69667342"/><text x="98.6996%" y="1151.50"></text></g><g><title>_RINvNtNtCscvwWOJfxRAb_4core4sync6atomic23atomic_compare_exchangejECs9wIDdqjH2aO_15crossbeam_utils (128,196,598 samples, 0.02%)</title><rect x="98.4923%" y="1157" width="0.0186%" height="15" fill="rgb(223,75,4)" fg:x="679523927961" fg:w="128196598"/><text x="98.7423%" y="1167.50"></text></g><g><title>_RNvMs6_NtCs9VSOSf8HpMa_15crossbeam_epoch8internalNtB5_5Local3pinCsgfUvSuuZgGt_10rayon_core (114,465,132 samples, 0.02%)</title><rect x="98.5551%" y="1125" width="0.0166%" height="15" fill="rgb(239,148,41)" fg:x="679957122707" fg:w="114465132"/><text x="98.8051%" y="1135.50"></text></g><g><title>[unknown] (426,882,745 samples, 0.06%)</title><rect x="98.5304%" y="1141" width="0.0619%" height="15" fill="rgb(205,195,3)" fg:x="679786475018" fg:w="426882745"/><text x="98.7804%" y="1151.50"></text></g><g><title>_RNvMNtCsgfUvSuuZgGt_10rayon_core8registryNtB2_13ThreadBuilder3run (795,625,472 samples, 0.12%)</title><rect x="98.5295%" y="1157" width="0.1153%" height="15" fill="rgb(254,161,1)" fg:x="679780588915" fg:w="795625472"/><text x="98.7795%" y="1167.50"></text></g><g><title>_RNvMs6_NtCs9VSOSf8HpMa_15crossbeam_epoch8internalNtB5_5Local3pinCsgfUvSuuZgGt_10rayon_core (111,323,396 samples, 0.02%)</title><rect x="98.6573%" y="1157" width="0.0161%" height="15" fill="rgb(211,229,8)" fg:x="680662130563" fg:w="111323396"/><text x="98.9073%" y="1167.50"></text></g><g><title>_RNvMs8_NtCse0sQRnp5frV_15crossbeam_deque5dequeINtB5_7StealerNtNtCsgfUvSuuZgGt_10rayon_core3job6JobRefE5stealB10_ (88,172,900 samples, 0.01%)</title><rect x="98.6891%" y="1157" width="0.0128%" height="15" fill="rgb(220,97,9)" fg:x="680881621180" fg:w="88172900"/><text x="98.9391%" y="1167.50"></text></g><g><title>polars-8 (2,208,836,213 samples, 0.32%)</title><rect x="98.4346%" y="1173" width="0.3202%" height="15" fill="rgb(240,218,8)" fg:x="679125863484" fg:w="2208836213"/><text x="98.6846%" y="1183.50"></text></g><g><title>[unknown] (76,529,579 samples, 0.01%)</title><rect x="98.7591%" y="1157" width="0.0111%" height="15" fill="rgb(250,44,0)" fg:x="681364299879" fg:w="76529579"/><text x="99.0091%" y="1167.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (74,850,259 samples, 0.01%)</title><rect x="98.7722%" y="1125" width="0.0108%" height="15" fill="rgb(236,41,53)" fg:x="681454428058" fg:w="74850259"/><text x="99.0222%" y="1135.50"></text></g><g><title>do_syscall_64 (74,845,260 samples, 0.01%)</title><rect x="98.7722%" y="1109" width="0.0108%" height="15" fill="rgb(218,227,13)" fg:x="681454433057" fg:w="74845260"/><text x="99.0222%" y="1119.50"></text></g><g><title>_RINvMNtCsgfUvSuuZgGt_10rayon_core5sleepNtB3_5Sleep13no_work_foundNCNvMs8_NtB5_8registryNtB19_12WorkerThread15wait_until_cold0EB5_ (77,950,893 samples, 0.01%)</title><rect x="98.7718%" y="1157" width="0.0113%" height="15" fill="rgb(217,94,32)" fg:x="681452101592" fg:w="77950893"/><text x="99.0218%" y="1167.50"></text></g><g><title>__sched_yield (76,117,078 samples, 0.01%)</title><rect x="98.7721%" y="1141" width="0.0110%" height="15" fill="rgb(213,217,12)" fg:x="681453935407" fg:w="76117078"/><text x="99.0221%" y="1151.50"></text></g><g><title>_RINvNtNtCscvwWOJfxRAb_4core4sync6atomic23atomic_compare_exchangejECs9wIDdqjH2aO_15crossbeam_utils (135,178,893 samples, 0.02%)</title><rect x="98.8177%" y="1157" width="0.0196%" height="15" fill="rgb(229,13,46)" fg:x="681768906576" fg:w="135178893"/><text x="99.0677%" y="1167.50"></text></g><g><title>_RNvMs6_NtCs9VSOSf8HpMa_15crossbeam_epoch8internalNtB5_5Local3pinCsgfUvSuuZgGt_10rayon_core (107,711,888 samples, 0.02%)</title><rect x="98.8781%" y="1125" width="0.0156%" height="15" fill="rgb(243,139,5)" fg:x="682185332327" fg:w="107711888"/><text x="99.1281%" y="1135.50"></text></g><g><title>[unknown] (446,349,592 samples, 0.06%)</title><rect x="98.8574%" y="1141" width="0.0647%" height="15" fill="rgb(249,38,45)" fg:x="682042276118" fg:w="446349592"/><text x="99.1074%" y="1151.50"></text></g><g><title>_RNCNkNvNtCs9VSOSf8HpMa_15crossbeam_epoch7default6HANDLE00B7_ (85,032,244 samples, 0.01%)</title><rect x="98.9349%" y="1141" width="0.0123%" height="15" fill="rgb(216,70,11)" fg:x="682577338535" fg:w="85032244"/><text x="99.1849%" y="1151.50"></text></g><g><title>_RNvMNtCsgfUvSuuZgGt_10rayon_core8registryNtB2_13ThreadBuilder3run (782,379,221 samples, 0.11%)</title><rect x="98.8568%" y="1157" width="0.1134%" height="15" fill="rgb(253,101,25)" fg:x="682038087348" fg:w="782379221"/><text x="99.1068%" y="1167.50"></text></g><g><title>_RNvMs6_NtCs9VSOSf8HpMa_15crossbeam_epoch8internalNtB5_5Local3pinCsgfUvSuuZgGt_10rayon_core (86,294,156 samples, 0.01%)</title><rect x="98.9826%" y="1157" width="0.0125%" height="15" fill="rgb(207,197,30)" fg:x="682906546652" fg:w="86294156"/><text x="99.2326%" y="1167.50"></text></g><g><title>_RNvMs8_NtCse0sQRnp5frV_15crossbeam_deque5dequeINtB5_7StealerNtNtCsgfUvSuuZgGt_10rayon_core3job6JobRefE5stealB10_ (71,442,084 samples, 0.01%)</title><rect x="99.0102%" y="1157" width="0.0104%" height="15" fill="rgb(238,87,13)" fg:x="683096510611" fg:w="71442084"/><text x="99.2602%" y="1167.50"></text></g><g><title>_RNvMs_NtCs9VSOSf8HpMa_15crossbeam_epoch5epochNtB4_11AtomicEpoch16compare_exchangeCsgfUvSuuZgGt_10rayon_core (73,090,374 samples, 0.01%)</title><rect x="99.0233%" y="1157" width="0.0106%" height="15" fill="rgb(215,155,8)" fg:x="683187109067" fg:w="73090374"/><text x="99.2733%" y="1167.50"></text></g><g><title>polars-9 (2,184,646,773 samples, 0.32%)</title><rect x="98.7548%" y="1173" width="0.3166%" height="15" fill="rgb(239,166,38)" fg:x="681334699697" fg:w="2184646773"/><text x="99.0048%" y="1183.50"></text></g><g><title>polars_compute- (71,916,141 samples, 0.01%)</title><rect x="99.0804%" y="1173" width="0.0104%" height="15" fill="rgb(240,194,35)" fg:x="683580862211" fg:w="71916141"/><text x="99.3304%" y="1183.50"></text></g><g><title>polars_core-315 (87,664,411 samples, 0.01%)</title><rect x="99.0908%" y="1173" width="0.0127%" height="15" fill="rgb(219,10,44)" fg:x="683652778352" fg:w="87664411"/><text x="99.3408%" y="1183.50"></text></g><g><title>fileWriter (89,295,507 samples, 0.01%)</title><rect x="99.1096%" y="1157" width="0.0129%" height="15" fill="rgb(251,220,35)" fg:x="683782510043" fg:w="89295507"/><text x="99.3596%" y="1167.50"></text></g><g><title>_IO_fwrite (89,295,507 samples, 0.01%)</title><rect x="99.1096%" y="1141" width="0.0129%" height="15" fill="rgb(218,117,13)" fg:x="683782510043" fg:w="89295507"/><text x="99.3596%" y="1151.50"></text></g><g><title>_IO_file_xsputn@@GLIBC_2.2.5 (89,295,507 samples, 0.01%)</title><rect x="99.1096%" y="1125" width="0.0129%" height="15" fill="rgb(221,213,40)" fg:x="683782510043" fg:w="89295507"/><text x="99.3596%" y="1135.50"></text></g><g><title>new_do_write (89,295,507 samples, 0.01%)</title><rect x="99.1096%" y="1109" width="0.0129%" height="15" fill="rgb(251,224,35)" fg:x="683782510043" fg:w="89295507"/><text x="99.3596%" y="1119.50"></text></g><g><title>_IO_file_write@@GLIBC_2.2.5 (89,295,507 samples, 0.01%)</title><rect x="99.1096%" y="1093" width="0.0129%" height="15" fill="rgb(241,33,39)" fg:x="683782510043" fg:w="89295507"/><text x="99.3596%" y="1103.50"></text></g><g><title>__GI___libc_write (89,295,507 samples, 0.01%)</title><rect x="99.1096%" y="1077" width="0.0129%" height="15" fill="rgb(222,74,17)" fg:x="683782510043" fg:w="89295507"/><text x="99.3596%" y="1087.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (89,295,507 samples, 0.01%)</title><rect x="99.1096%" y="1061" width="0.0129%" height="15" fill="rgb(225,103,0)" fg:x="683782510043" fg:w="89295507"/><text x="99.3596%" y="1071.50"></text></g><g><title>do_syscall_64 (89,295,507 samples, 0.01%)</title><rect x="99.1096%" y="1045" width="0.0129%" height="15" fill="rgb(240,0,12)" fg:x="683782510043" fg:w="89295507"/><text x="99.3596%" y="1055.50"></text></g><g><title>ksys_write (89,295,507 samples, 0.01%)</title><rect x="99.1096%" y="1029" width="0.0129%" height="15" fill="rgb(233,213,37)" fg:x="683782510043" fg:w="89295507"/><text x="99.3596%" y="1039.50"></text></g><g><title>vfs_write (89,295,507 samples, 0.01%)</title><rect x="99.1096%" y="1013" width="0.0129%" height="15" fill="rgb(225,84,52)" fg:x="683782510043" fg:w="89295507"/><text x="99.3596%" y="1023.50"></text></g><g><title>btrfs_do_write_iter (89,295,507 samples, 0.01%)</title><rect x="99.1096%" y="997" width="0.0129%" height="15" fill="rgb(247,160,51)" fg:x="683782510043" fg:w="89295507"/><text x="99.3596%" y="1007.50"></text></g><g><title>btrfs_buffered_write (89,295,507 samples, 0.01%)</title><rect x="99.1096%" y="981" width="0.0129%" height="15" fill="rgb(244,60,51)" fg:x="683782510043" fg:w="89295507"/><text x="99.3596%" y="991.50"></text></g><g><title>polars_dylib-fa (138,086,647 samples, 0.02%)</title><rect x="99.1035%" y="1173" width="0.0200%" height="15" fill="rgb(233,114,7)" fg:x="683740442763" fg:w="138086647"/><text x="99.3535%" y="1183.50"></text></g><g><title>fileWriter (98,662,850 samples, 0.01%)</title><rect x="99.1319%" y="1157" width="0.0143%" height="15" fill="rgb(246,136,16)" fg:x="683936561001" fg:w="98662850"/><text x="99.3819%" y="1167.50"></text></g><g><title>_IO_fwrite (98,662,850 samples, 0.01%)</title><rect x="99.1319%" y="1141" width="0.0143%" height="15" fill="rgb(243,114,45)" fg:x="683936561001" fg:w="98662850"/><text x="99.3819%" y="1151.50"></text></g><g><title>_IO_file_xsputn@@GLIBC_2.2.5 (98,662,850 samples, 0.01%)</title><rect x="99.1319%" y="1125" width="0.0143%" height="15" fill="rgb(247,183,43)" fg:x="683936561001" fg:w="98662850"/><text x="99.3819%" y="1135.50"></text></g><g><title>new_do_write (98,662,850 samples, 0.01%)</title><rect x="99.1319%" y="1109" width="0.0143%" height="15" fill="rgb(251,210,42)" fg:x="683936561001" fg:w="98662850"/><text x="99.3819%" y="1119.50"></text></g><g><title>_IO_file_write@@GLIBC_2.2.5 (98,662,850 samples, 0.01%)</title><rect x="99.1319%" y="1093" width="0.0143%" height="15" fill="rgb(221,88,35)" fg:x="683936561001" fg:w="98662850"/><text x="99.3819%" y="1103.50"></text></g><g><title>__GI___libc_write (98,662,850 samples, 0.01%)</title><rect x="99.1319%" y="1077" width="0.0143%" height="15" fill="rgb(242,21,20)" fg:x="683936561001" fg:w="98662850"/><text x="99.3819%" y="1087.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (98,662,850 samples, 0.01%)</title><rect x="99.1319%" y="1061" width="0.0143%" height="15" fill="rgb(233,226,36)" fg:x="683936561001" fg:w="98662850"/><text x="99.3819%" y="1071.50"></text></g><g><title>do_syscall_64 (98,662,850 samples, 0.01%)</title><rect x="99.1319%" y="1045" width="0.0143%" height="15" fill="rgb(243,189,34)" fg:x="683936561001" fg:w="98662850"/><text x="99.3819%" y="1055.50"></text></g><g><title>ksys_write (98,662,850 samples, 0.01%)</title><rect x="99.1319%" y="1029" width="0.0143%" height="15" fill="rgb(207,145,50)" fg:x="683936561001" fg:w="98662850"/><text x="99.3819%" y="1039.50"></text></g><g><title>vfs_write (98,662,850 samples, 0.01%)</title><rect x="99.1319%" y="1013" width="0.0143%" height="15" fill="rgb(242,1,50)" fg:x="683936561001" fg:w="98662850"/><text x="99.3819%" y="1023.50"></text></g><g><title>btrfs_do_write_iter (98,662,850 samples, 0.01%)</title><rect x="99.1319%" y="997" width="0.0143%" height="15" fill="rgb(231,65,32)" fg:x="683936561001" fg:w="98662850"/><text x="99.3819%" y="1007.50"></text></g><g><title>btrfs_buffered_write (98,662,850 samples, 0.01%)</title><rect x="99.1319%" y="981" width="0.0143%" height="15" fill="rgb(208,68,49)" fg:x="683936561001" fg:w="98662850"/><text x="99.3819%" y="991.50"></text></g><g><title>polars_expr-652 (150,884,070 samples, 0.02%)</title><rect x="99.1250%" y="1173" width="0.0219%" height="15" fill="rgb(253,54,49)" fg:x="683889060394" fg:w="150884070"/><text x="99.3750%" y="1183.50"></text></g><g><title>polars_ffi-521b (91,506,074 samples, 0.01%)</title><rect x="99.1469%" y="1173" width="0.0133%" height="15" fill="rgb(245,186,24)" fg:x="684039944464" fg:w="91506074"/><text x="99.3969%" y="1183.50"></text></g><g><title>fileWriter (110,005,860 samples, 0.02%)</title><rect x="99.1604%" y="1141" width="0.0159%" height="15" fill="rgb(209,2,41)" fg:x="684132769457" fg:w="110005860"/><text x="99.4104%" y="1151.50"></text></g><g><title>_IO_fwrite (110,005,860 samples, 0.02%)</title><rect x="99.1604%" y="1125" width="0.0159%" height="15" fill="rgb(242,208,54)" fg:x="684132769457" fg:w="110005860"/><text x="99.4104%" y="1135.50"></text></g><g><title>_IO_file_xsputn@@GLIBC_2.2.5 (110,005,860 samples, 0.02%)</title><rect x="99.1604%" y="1109" width="0.0159%" height="15" fill="rgb(225,9,51)" fg:x="684132769457" fg:w="110005860"/><text x="99.4104%" y="1119.50"></text></g><g><title>new_do_write (109,613,770 samples, 0.02%)</title><rect x="99.1604%" y="1093" width="0.0159%" height="15" fill="rgb(207,207,25)" fg:x="684133161547" fg:w="109613770"/><text x="99.4104%" y="1103.50"></text></g><g><title>_IO_file_write@@GLIBC_2.2.5 (109,613,770 samples, 0.02%)</title><rect x="99.1604%" y="1077" width="0.0159%" height="15" fill="rgb(253,96,18)" fg:x="684133161547" fg:w="109613770"/><text x="99.4104%" y="1087.50"></text></g><g><title>__GI___libc_write (109,613,770 samples, 0.02%)</title><rect x="99.1604%" y="1061" width="0.0159%" height="15" fill="rgb(252,215,20)" fg:x="684133161547" fg:w="109613770"/><text x="99.4104%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (109,613,770 samples, 0.02%)</title><rect x="99.1604%" y="1045" width="0.0159%" height="15" fill="rgb(245,227,26)" fg:x="684133161547" fg:w="109613770"/><text x="99.4104%" y="1055.50"></text></g><g><title>do_syscall_64 (109,613,770 samples, 0.02%)</title><rect x="99.1604%" y="1029" width="0.0159%" height="15" fill="rgb(241,208,0)" fg:x="684133161547" fg:w="109613770"/><text x="99.4104%" y="1039.50"></text></g><g><title>ksys_write (109,613,770 samples, 0.02%)</title><rect x="99.1604%" y="1013" width="0.0159%" height="15" fill="rgb(224,130,10)" fg:x="684133161547" fg:w="109613770"/><text x="99.4104%" y="1023.50"></text></g><g><title>vfs_write (109,613,770 samples, 0.02%)</title><rect x="99.1604%" y="997" width="0.0159%" height="15" fill="rgb(237,29,0)" fg:x="684133161547" fg:w="109613770"/><text x="99.4104%" y="1007.50"></text></g><g><title>btrfs_do_write_iter (109,613,770 samples, 0.02%)</title><rect x="99.1604%" y="981" width="0.0159%" height="15" fill="rgb(219,27,41)" fg:x="684133161547" fg:w="109613770"/><text x="99.4104%" y="991.50"></text></g><g><title>btrfs_buffered_write (109,613,770 samples, 0.02%)</title><rect x="99.1604%" y="965" width="0.0159%" height="15" fill="rgb(245,101,19)" fg:x="684133161547" fg:w="109613770"/><text x="99.4104%" y="975.50"></text></g><g><title>[unknown] (114,528,280 samples, 0.02%)</title><rect x="99.1602%" y="1157" width="0.0166%" height="15" fill="rgb(243,44,37)" fg:x="684131450538" fg:w="114528280"/><text x="99.4102%" y="1167.50"></text></g><g><title>polars_io-205c3 (174,964,629 samples, 0.03%)</title><rect x="99.1602%" y="1173" width="0.0254%" height="15" fill="rgb(228,213,43)" fg:x="684131450538" fg:w="174964629"/><text x="99.4102%" y="1183.50"></text></g><g><title>[polars_lazy-ce5f278b6bf8ee3a] (108,859,529 samples, 0.02%)</title><rect x="99.1868%" y="1157" width="0.0158%" height="15" fill="rgb(219,163,21)" fg:x="684315393051" fg:w="108859529"/><text x="99.4368%" y="1167.50"></text></g><g><title>fileWriter (108,804,042 samples, 0.02%)</title><rect x="99.1868%" y="1141" width="0.0158%" height="15" fill="rgb(234,86,24)" fg:x="684315448538" fg:w="108804042"/><text x="99.4368%" y="1151.50"></text></g><g><title>_IO_fwrite (108,804,042 samples, 0.02%)</title><rect x="99.1868%" y="1125" width="0.0158%" height="15" fill="rgb(225,10,24)" fg:x="684315448538" fg:w="108804042"/><text x="99.4368%" y="1135.50"></text></g><g><title>_IO_file_xsputn@@GLIBC_2.2.5 (108,804,042 samples, 0.02%)</title><rect x="99.1868%" y="1109" width="0.0158%" height="15" fill="rgb(218,109,7)" fg:x="684315448538" fg:w="108804042"/><text x="99.4368%" y="1119.50"></text></g><g><title>new_do_write (108,804,042 samples, 0.02%)</title><rect x="99.1868%" y="1093" width="0.0158%" height="15" fill="rgb(210,20,26)" fg:x="684315448538" fg:w="108804042"/><text x="99.4368%" y="1103.50"></text></g><g><title>_IO_file_write@@GLIBC_2.2.5 (108,804,042 samples, 0.02%)</title><rect x="99.1868%" y="1077" width="0.0158%" height="15" fill="rgb(216,18,1)" fg:x="684315448538" fg:w="108804042"/><text x="99.4368%" y="1087.50"></text></g><g><title>__GI___libc_write (108,804,042 samples, 0.02%)</title><rect x="99.1868%" y="1061" width="0.0158%" height="15" fill="rgb(206,163,23)" fg:x="684315448538" fg:w="108804042"/><text x="99.4368%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (108,804,042 samples, 0.02%)</title><rect x="99.1868%" y="1045" width="0.0158%" height="15" fill="rgb(229,150,31)" fg:x="684315448538" fg:w="108804042"/><text x="99.4368%" y="1055.50"></text></g><g><title>do_syscall_64 (108,804,042 samples, 0.02%)</title><rect x="99.1868%" y="1029" width="0.0158%" height="15" fill="rgb(231,10,5)" fg:x="684315448538" fg:w="108804042"/><text x="99.4368%" y="1039.50"></text></g><g><title>ksys_write (108,804,042 samples, 0.02%)</title><rect x="99.1868%" y="1013" width="0.0158%" height="15" fill="rgb(250,40,50)" fg:x="684315448538" fg:w="108804042"/><text x="99.4368%" y="1023.50"></text></g><g><title>vfs_write (108,804,042 samples, 0.02%)</title><rect x="99.1868%" y="997" width="0.0158%" height="15" fill="rgb(217,119,7)" fg:x="684315448538" fg:w="108804042"/><text x="99.4368%" y="1007.50"></text></g><g><title>btrfs_do_write_iter (108,804,042 samples, 0.02%)</title><rect x="99.1868%" y="981" width="0.0158%" height="15" fill="rgb(245,214,40)" fg:x="684315448538" fg:w="108804042"/><text x="99.4368%" y="991.50"></text></g><g><title>btrfs_buffered_write (108,804,042 samples, 0.02%)</title><rect x="99.1868%" y="965" width="0.0158%" height="15" fill="rgb(216,187,1)" fg:x="684315448538" fg:w="108804042"/><text x="99.4368%" y="975.50"></text></g><g><title>polars_lazy-ce5 (227,401,852 samples, 0.03%)</title><rect x="99.1864%" y="1173" width="0.0330%" height="15" fill="rgb(237,146,21)" fg:x="684312320650" fg:w="227401852"/><text x="99.4364%" y="1183.50"></text></g><g><title>fileWriter (100,654,600 samples, 0.01%)</title><rect x="99.2259%" y="1157" width="0.0146%" height="15" fill="rgb(210,174,47)" fg:x="684584735953" fg:w="100654600"/><text x="99.4759%" y="1167.50"></text></g><g><title>_IO_fwrite (100,654,600 samples, 0.01%)</title><rect x="99.2259%" y="1141" width="0.0146%" height="15" fill="rgb(218,111,39)" fg:x="684584735953" fg:w="100654600"/><text x="99.4759%" y="1151.50"></text></g><g><title>_IO_file_xsputn@@GLIBC_2.2.5 (100,654,600 samples, 0.01%)</title><rect x="99.2259%" y="1125" width="0.0146%" height="15" fill="rgb(224,95,19)" fg:x="684584735953" fg:w="100654600"/><text x="99.4759%" y="1135.50"></text></g><g><title>new_do_write (100,654,600 samples, 0.01%)</title><rect x="99.2259%" y="1109" width="0.0146%" height="15" fill="rgb(234,15,38)" fg:x="684584735953" fg:w="100654600"/><text x="99.4759%" y="1119.50"></text></g><g><title>_IO_file_write@@GLIBC_2.2.5 (100,654,600 samples, 0.01%)</title><rect x="99.2259%" y="1093" width="0.0146%" height="15" fill="rgb(246,56,12)" fg:x="684584735953" fg:w="100654600"/><text x="99.4759%" y="1103.50"></text></g><g><title>__GI___libc_write (100,654,600 samples, 0.01%)</title><rect x="99.2259%" y="1077" width="0.0146%" height="15" fill="rgb(247,16,17)" fg:x="684584735953" fg:w="100654600"/><text x="99.4759%" y="1087.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (100,654,600 samples, 0.01%)</title><rect x="99.2259%" y="1061" width="0.0146%" height="15" fill="rgb(215,151,11)" fg:x="684584735953" fg:w="100654600"/><text x="99.4759%" y="1071.50"></text></g><g><title>do_syscall_64 (100,654,600 samples, 0.01%)</title><rect x="99.2259%" y="1045" width="0.0146%" height="15" fill="rgb(225,16,24)" fg:x="684584735953" fg:w="100654600"/><text x="99.4759%" y="1055.50"></text></g><g><title>ksys_write (100,654,600 samples, 0.01%)</title><rect x="99.2259%" y="1029" width="0.0146%" height="15" fill="rgb(217,117,5)" fg:x="684584735953" fg:w="100654600"/><text x="99.4759%" y="1039.50"></text></g><g><title>vfs_write (100,654,600 samples, 0.01%)</title><rect x="99.2259%" y="1013" width="0.0146%" height="15" fill="rgb(246,187,53)" fg:x="684584735953" fg:w="100654600"/><text x="99.4759%" y="1023.50"></text></g><g><title>btrfs_do_write_iter (100,654,600 samples, 0.01%)</title><rect x="99.2259%" y="997" width="0.0146%" height="15" fill="rgb(241,71,40)" fg:x="684584735953" fg:w="100654600"/><text x="99.4759%" y="1007.50"></text></g><g><title>btrfs_buffered_write (100,654,600 samples, 0.01%)</title><rect x="99.2259%" y="981" width="0.0146%" height="15" fill="rgb(231,67,39)" fg:x="684584735953" fg:w="100654600"/><text x="99.4759%" y="991.50"></text></g><g><title>polars_mem_engi (151,333,083 samples, 0.02%)</title><rect x="99.2193%" y="1173" width="0.0219%" height="15" fill="rgb(222,120,24)" fg:x="684539722502" fg:w="151333083"/><text x="99.4693%" y="1183.50"></text></g><g><title>polars_ops-c532 (100,301,667 samples, 0.01%)</title><rect x="99.2413%" y="1173" width="0.0145%" height="15" fill="rgb(248,3,3)" fg:x="684691055585" fg:w="100301667"/><text x="99.4913%" y="1183.50"></text></g><g><title>polars_parquet- (75,109,116 samples, 0.01%)</title><rect x="99.2558%" y="1173" width="0.0109%" height="15" fill="rgb(228,218,5)" fg:x="684791357252" fg:w="75109116"/><text x="99.5058%" y="1183.50"></text></g><g><title>fileWriter (110,042,446 samples, 0.02%)</title><rect x="99.2736%" y="1157" width="0.0159%" height="15" fill="rgb(212,202,43)" fg:x="684914032165" fg:w="110042446"/><text x="99.5236%" y="1167.50"></text></g><g><title>_IO_fwrite (110,042,446 samples, 0.02%)</title><rect x="99.2736%" y="1141" width="0.0159%" height="15" fill="rgb(235,183,2)" fg:x="684914032165" fg:w="110042446"/><text x="99.5236%" y="1151.50"></text></g><g><title>_IO_file_xsputn@@GLIBC_2.2.5 (110,042,446 samples, 0.02%)</title><rect x="99.2736%" y="1125" width="0.0159%" height="15" fill="rgb(230,165,10)" fg:x="684914032165" fg:w="110042446"/><text x="99.5236%" y="1135.50"></text></g><g><title>new_do_write (110,042,446 samples, 0.02%)</title><rect x="99.2736%" y="1109" width="0.0159%" height="15" fill="rgb(219,54,40)" fg:x="684914032165" fg:w="110042446"/><text x="99.5236%" y="1119.50"></text></g><g><title>_IO_file_write@@GLIBC_2.2.5 (110,042,446 samples, 0.02%)</title><rect x="99.2736%" y="1093" width="0.0159%" height="15" fill="rgb(244,73,9)" fg:x="684914032165" fg:w="110042446"/><text x="99.5236%" y="1103.50"></text></g><g><title>__GI___libc_write (110,042,446 samples, 0.02%)</title><rect x="99.2736%" y="1077" width="0.0159%" height="15" fill="rgb(212,32,45)" fg:x="684914032165" fg:w="110042446"/><text x="99.5236%" y="1087.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (110,042,446 samples, 0.02%)</title><rect x="99.2736%" y="1061" width="0.0159%" height="15" fill="rgb(205,58,31)" fg:x="684914032165" fg:w="110042446"/><text x="99.5236%" y="1071.50"></text></g><g><title>do_syscall_64 (110,042,446 samples, 0.02%)</title><rect x="99.2736%" y="1045" width="0.0159%" height="15" fill="rgb(250,120,43)" fg:x="684914032165" fg:w="110042446"/><text x="99.5236%" y="1055.50"></text></g><g><title>ksys_write (110,042,446 samples, 0.02%)</title><rect x="99.2736%" y="1029" width="0.0159%" height="15" fill="rgb(235,13,10)" fg:x="684914032165" fg:w="110042446"/><text x="99.5236%" y="1039.50"></text></g><g><title>vfs_write (110,042,446 samples, 0.02%)</title><rect x="99.2736%" y="1013" width="0.0159%" height="15" fill="rgb(232,219,31)" fg:x="684914032165" fg:w="110042446"/><text x="99.5236%" y="1023.50"></text></g><g><title>btrfs_do_write_iter (110,042,446 samples, 0.02%)</title><rect x="99.2736%" y="997" width="0.0159%" height="15" fill="rgb(218,157,51)" fg:x="684914032165" fg:w="110042446"/><text x="99.5236%" y="1007.50"></text></g><g><title>btrfs_buffered_write (110,042,446 samples, 0.02%)</title><rect x="99.2736%" y="981" width="0.0159%" height="15" fill="rgb(211,91,52)" fg:x="684914032165" fg:w="110042446"/><text x="99.5236%" y="991.50"></text></g><g><title>polars_pipe-5cd (162,889,290 samples, 0.02%)</title><rect x="99.2667%" y="1173" width="0.0236%" height="15" fill="rgb(240,173,1)" fg:x="684866466368" fg:w="162889290"/><text x="99.5167%" y="1183.50"></text></g><g><title>fileWriter (95,806,362 samples, 0.01%)</title><rect x="99.2982%" y="1157" width="0.0139%" height="15" fill="rgb(248,20,47)" fg:x="685084024686" fg:w="95806362"/><text x="99.5482%" y="1167.50"></text></g><g><title>_IO_fwrite (95,806,362 samples, 0.01%)</title><rect x="99.2982%" y="1141" width="0.0139%" height="15" fill="rgb(217,221,40)" fg:x="685084024686" fg:w="95806362"/><text x="99.5482%" y="1151.50"></text></g><g><title>_IO_file_xsputn@@GLIBC_2.2.5 (95,806,362 samples, 0.01%)</title><rect x="99.2982%" y="1125" width="0.0139%" height="15" fill="rgb(226,149,51)" fg:x="685084024686" fg:w="95806362"/><text x="99.5482%" y="1135.50"></text></g><g><title>new_do_write (95,806,362 samples, 0.01%)</title><rect x="99.2982%" y="1109" width="0.0139%" height="15" fill="rgb(252,193,7)" fg:x="685084024686" fg:w="95806362"/><text x="99.5482%" y="1119.50"></text></g><g><title>_IO_file_write@@GLIBC_2.2.5 (95,806,362 samples, 0.01%)</title><rect x="99.2982%" y="1093" width="0.0139%" height="15" fill="rgb(205,123,0)" fg:x="685084024686" fg:w="95806362"/><text x="99.5482%" y="1103.50"></text></g><g><title>__GI___libc_write (95,806,362 samples, 0.01%)</title><rect x="99.2982%" y="1077" width="0.0139%" height="15" fill="rgb(233,173,25)" fg:x="685084024686" fg:w="95806362"/><text x="99.5482%" y="1087.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (95,806,362 samples, 0.01%)</title><rect x="99.2982%" y="1061" width="0.0139%" height="15" fill="rgb(216,63,32)" fg:x="685084024686" fg:w="95806362"/><text x="99.5482%" y="1071.50"></text></g><g><title>do_syscall_64 (95,806,362 samples, 0.01%)</title><rect x="99.2982%" y="1045" width="0.0139%" height="15" fill="rgb(209,56,45)" fg:x="685084024686" fg:w="95806362"/><text x="99.5482%" y="1055.50"></text></g><g><title>ksys_write (95,806,362 samples, 0.01%)</title><rect x="99.2982%" y="1029" width="0.0139%" height="15" fill="rgb(226,111,49)" fg:x="685084024686" fg:w="95806362"/><text x="99.5482%" y="1039.50"></text></g><g><title>vfs_write (95,806,362 samples, 0.01%)</title><rect x="99.2982%" y="1013" width="0.0139%" height="15" fill="rgb(244,181,21)" fg:x="685084024686" fg:w="95806362"/><text x="99.5482%" y="1023.50"></text></g><g><title>btrfs_do_write_iter (95,806,362 samples, 0.01%)</title><rect x="99.2982%" y="997" width="0.0139%" height="15" fill="rgb(222,126,15)" fg:x="685084024686" fg:w="95806362"/><text x="99.5482%" y="1007.50"></text></g><g><title>btrfs_buffered_write (95,806,362 samples, 0.01%)</title><rect x="99.2982%" y="981" width="0.0139%" height="15" fill="rgb(222,95,17)" fg:x="685084024686" fg:w="95806362"/><text x="99.5482%" y="991.50"></text></g><g><title>polars_plan-e9b (157,439,948 samples, 0.02%)</title><rect x="99.2903%" y="1173" width="0.0228%" height="15" fill="rgb(254,46,5)" fg:x="685029355658" fg:w="157439948"/><text x="99.5403%" y="1183.50"></text></g><g><title>[polars_python-af40f160c759f8da] (137,818,516 samples, 0.02%)</title><rect x="99.3133%" y="1157" width="0.0200%" height="15" fill="rgb(236,216,35)" fg:x="685187943873" fg:w="137818516"/><text x="99.5633%" y="1167.50"></text></g><g><title>fileWriter (137,818,516 samples, 0.02%)</title><rect x="99.3133%" y="1141" width="0.0200%" height="15" fill="rgb(217,187,26)" fg:x="685187943873" fg:w="137818516"/><text x="99.5633%" y="1151.50"></text></g><g><title>_IO_fwrite (137,818,516 samples, 0.02%)</title><rect x="99.3133%" y="1125" width="0.0200%" height="15" fill="rgb(207,192,25)" fg:x="685187943873" fg:w="137818516"/><text x="99.5633%" y="1135.50"></text></g><g><title>_IO_file_xsputn@@GLIBC_2.2.5 (137,818,516 samples, 0.02%)</title><rect x="99.3133%" y="1109" width="0.0200%" height="15" fill="rgb(253,135,27)" fg:x="685187943873" fg:w="137818516"/><text x="99.5633%" y="1119.50"></text></g><g><title>new_do_write (136,746,833 samples, 0.02%)</title><rect x="99.3135%" y="1093" width="0.0198%" height="15" fill="rgb(211,122,29)" fg:x="685189015556" fg:w="136746833"/><text x="99.5635%" y="1103.50"></text></g><g><title>_IO_file_write@@GLIBC_2.2.5 (136,746,833 samples, 0.02%)</title><rect x="99.3135%" y="1077" width="0.0198%" height="15" fill="rgb(233,162,40)" fg:x="685189015556" fg:w="136746833"/><text x="99.5635%" y="1087.50"></text></g><g><title>__GI___libc_write (136,746,833 samples, 0.02%)</title><rect x="99.3135%" y="1061" width="0.0198%" height="15" fill="rgb(222,184,47)" fg:x="685189015556" fg:w="136746833"/><text x="99.5635%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (136,746,833 samples, 0.02%)</title><rect x="99.3135%" y="1045" width="0.0198%" height="15" fill="rgb(249,99,23)" fg:x="685189015556" fg:w="136746833"/><text x="99.5635%" y="1055.50"></text></g><g><title>do_syscall_64 (136,746,833 samples, 0.02%)</title><rect x="99.3135%" y="1029" width="0.0198%" height="15" fill="rgb(214,60,12)" fg:x="685189015556" fg:w="136746833"/><text x="99.5635%" y="1039.50"></text></g><g><title>ksys_write (136,746,833 samples, 0.02%)</title><rect x="99.3135%" y="1013" width="0.0198%" height="15" fill="rgb(250,229,36)" fg:x="685189015556" fg:w="136746833"/><text x="99.5635%" y="1023.50"></text></g><g><title>vfs_write (136,746,833 samples, 0.02%)</title><rect x="99.3135%" y="997" width="0.0198%" height="15" fill="rgb(232,195,10)" fg:x="685189015556" fg:w="136746833"/><text x="99.5635%" y="1007.50"></text></g><g><title>btrfs_do_write_iter (136,746,833 samples, 0.02%)</title><rect x="99.3135%" y="981" width="0.0198%" height="15" fill="rgb(205,213,31)" fg:x="685189015556" fg:w="136746833"/><text x="99.5635%" y="991.50"></text></g><g><title>btrfs_buffered_write (136,746,833 samples, 0.02%)</title><rect x="99.3135%" y="965" width="0.0198%" height="15" fill="rgb(237,43,8)" fg:x="685189015556" fg:w="136746833"/><text x="99.5635%" y="975.50"></text></g><g><title>polars_python-a (268,861,629 samples, 0.04%)</title><rect x="99.3131%" y="1173" width="0.0390%" height="15" fill="rgb(216,208,3)" fg:x="685186795606" fg:w="268861629"/><text x="99.5631%" y="1183.50"></text></g><g><title>fileWriter (114,557,510 samples, 0.02%)</title><rect x="99.3689%" y="1157" width="0.0166%" height="15" fill="rgb(228,179,44)" fg:x="685571447833" fg:w="114557510"/><text x="99.6189%" y="1167.50"></text></g><g><title>_IO_fwrite (114,557,510 samples, 0.02%)</title><rect x="99.3689%" y="1141" width="0.0166%" height="15" fill="rgb(230,192,27)" fg:x="685571447833" fg:w="114557510"/><text x="99.6189%" y="1151.50"></text></g><g><title>_IO_file_xsputn@@GLIBC_2.2.5 (114,557,510 samples, 0.02%)</title><rect x="99.3689%" y="1125" width="0.0166%" height="15" fill="rgb(251,30,38)" fg:x="685571447833" fg:w="114557510"/><text x="99.6189%" y="1135.50"></text></g><g><title>new_do_write (114,557,510 samples, 0.02%)</title><rect x="99.3689%" y="1109" width="0.0166%" height="15" fill="rgb(246,55,52)" fg:x="685571447833" fg:w="114557510"/><text x="99.6189%" y="1119.50"></text></g><g><title>_IO_file_write@@GLIBC_2.2.5 (114,557,510 samples, 0.02%)</title><rect x="99.3689%" y="1093" width="0.0166%" height="15" fill="rgb(249,79,26)" fg:x="685571447833" fg:w="114557510"/><text x="99.6189%" y="1103.50"></text></g><g><title>__GI___libc_write (114,557,510 samples, 0.02%)</title><rect x="99.3689%" y="1077" width="0.0166%" height="15" fill="rgb(220,202,16)" fg:x="685571447833" fg:w="114557510"/><text x="99.6189%" y="1087.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (114,557,510 samples, 0.02%)</title><rect x="99.3689%" y="1061" width="0.0166%" height="15" fill="rgb(250,170,23)" fg:x="685571447833" fg:w="114557510"/><text x="99.6189%" y="1071.50"></text></g><g><title>do_syscall_64 (114,557,510 samples, 0.02%)</title><rect x="99.3689%" y="1045" width="0.0166%" height="15" fill="rgb(230,7,37)" fg:x="685571447833" fg:w="114557510"/><text x="99.6189%" y="1055.50"></text></g><g><title>ksys_write (114,557,510 samples, 0.02%)</title><rect x="99.3689%" y="1029" width="0.0166%" height="15" fill="rgb(213,71,1)" fg:x="685571447833" fg:w="114557510"/><text x="99.6189%" y="1039.50"></text></g><g><title>vfs_write (114,557,510 samples, 0.02%)</title><rect x="99.3689%" y="1013" width="0.0166%" height="15" fill="rgb(227,87,39)" fg:x="685571447833" fg:w="114557510"/><text x="99.6189%" y="1023.50"></text></g><g><title>btrfs_do_write_iter (114,557,510 samples, 0.02%)</title><rect x="99.3689%" y="997" width="0.0166%" height="15" fill="rgb(210,41,29)" fg:x="685571447833" fg:w="114557510"/><text x="99.6189%" y="1007.50"></text></g><g><title>btrfs_buffered_write (114,557,510 samples, 0.02%)</title><rect x="99.3689%" y="981" width="0.0166%" height="15" fill="rgb(206,191,31)" fg:x="685571447833" fg:w="114557510"/><text x="99.6189%" y="991.50"></text></g><g><title>polars_sql-c0d1 (211,815,240 samples, 0.03%)</title><rect x="99.3556%" y="1173" width="0.0307%" height="15" fill="rgb(247,75,54)" fg:x="685479813382" fg:w="211815240"/><text x="99.6056%" y="1183.50"></text></g><g><title>fileWriter (98,559,681 samples, 0.01%)</title><rect x="99.3949%" y="1157" width="0.0143%" height="15" fill="rgb(208,54,50)" fg:x="685751145289" fg:w="98559681"/><text x="99.6449%" y="1167.50"></text></g><g><title>_IO_fwrite (98,559,681 samples, 0.01%)</title><rect x="99.3949%" y="1141" width="0.0143%" height="15" fill="rgb(214,90,37)" fg:x="685751145289" fg:w="98559681"/><text x="99.6449%" y="1151.50"></text></g><g><title>_IO_file_xsputn@@GLIBC_2.2.5 (98,559,681 samples, 0.01%)</title><rect x="99.3949%" y="1125" width="0.0143%" height="15" fill="rgb(220,132,6)" fg:x="685751145289" fg:w="98559681"/><text x="99.6449%" y="1135.50"></text></g><g><title>new_do_write (97,431,336 samples, 0.01%)</title><rect x="99.3951%" y="1109" width="0.0141%" height="15" fill="rgb(213,167,7)" fg:x="685752273634" fg:w="97431336"/><text x="99.6451%" y="1119.50"></text></g><g><title>_IO_file_write@@GLIBC_2.2.5 (97,431,336 samples, 0.01%)</title><rect x="99.3951%" y="1093" width="0.0141%" height="15" fill="rgb(243,36,27)" fg:x="685752273634" fg:w="97431336"/><text x="99.6451%" y="1103.50"></text></g><g><title>__GI___libc_write (97,431,336 samples, 0.01%)</title><rect x="99.3951%" y="1077" width="0.0141%" height="15" fill="rgb(235,147,12)" fg:x="685752273634" fg:w="97431336"/><text x="99.6451%" y="1087.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (97,431,336 samples, 0.01%)</title><rect x="99.3951%" y="1061" width="0.0141%" height="15" fill="rgb(212,198,44)" fg:x="685752273634" fg:w="97431336"/><text x="99.6451%" y="1071.50"></text></g><g><title>do_syscall_64 (97,431,336 samples, 0.01%)</title><rect x="99.3951%" y="1045" width="0.0141%" height="15" fill="rgb(218,68,50)" fg:x="685752273634" fg:w="97431336"/><text x="99.6451%" y="1055.50"></text></g><g><title>ksys_write (97,431,336 samples, 0.01%)</title><rect x="99.3951%" y="1029" width="0.0141%" height="15" fill="rgb(224,79,48)" fg:x="685752273634" fg:w="97431336"/><text x="99.6451%" y="1039.50"></text></g><g><title>vfs_write (97,431,336 samples, 0.01%)</title><rect x="99.3951%" y="1013" width="0.0141%" height="15" fill="rgb(213,191,50)" fg:x="685752273634" fg:w="97431336"/><text x="99.6451%" y="1023.50"></text></g><g><title>btrfs_do_write_iter (97,431,336 samples, 0.01%)</title><rect x="99.3951%" y="997" width="0.0141%" height="15" fill="rgb(254,146,10)" fg:x="685752273634" fg:w="97431336"/><text x="99.6451%" y="1007.50"></text></g><g><title>btrfs_buffered_write (97,431,336 samples, 0.01%)</title><rect x="99.3951%" y="981" width="0.0141%" height="15" fill="rgb(215,175,11)" fg:x="685752273634" fg:w="97431336"/><text x="99.6451%" y="991.50"></text></g><g><title>polars_stream-d (162,182,360 samples, 0.02%)</title><rect x="99.3863%" y="1173" width="0.0235%" height="15" fill="rgb(207,49,7)" fg:x="685691628622" fg:w="162182360"/><text x="99.6363%" y="1183.50"></text></g><g><title>fileWriter (73,565,129 samples, 0.01%)</title><rect x="99.4158%" y="1157" width="0.0107%" height="15" fill="rgb(234,144,29)" fg:x="685895201903" fg:w="73565129"/><text x="99.6658%" y="1167.50"></text></g><g><title>_IO_fwrite (73,565,129 samples, 0.01%)</title><rect x="99.4158%" y="1141" width="0.0107%" height="15" fill="rgb(213,222,48)" fg:x="685895201903" fg:w="73565129"/><text x="99.6658%" y="1151.50"></text></g><g><title>_IO_file_xsputn@@GLIBC_2.2.5 (73,565,129 samples, 0.01%)</title><rect x="99.4158%" y="1125" width="0.0107%" height="15" fill="rgb(222,8,6)" fg:x="685895201903" fg:w="73565129"/><text x="99.6658%" y="1135.50"></text></g><g><title>new_do_write (73,565,129 samples, 0.01%)</title><rect x="99.4158%" y="1109" width="0.0107%" height="15" fill="rgb(221,114,49)" fg:x="685895201903" fg:w="73565129"/><text x="99.6658%" y="1119.50"></text></g><g><title>_IO_file_write@@GLIBC_2.2.5 (73,565,129 samples, 0.01%)</title><rect x="99.4158%" y="1093" width="0.0107%" height="15" fill="rgb(250,140,42)" fg:x="685895201903" fg:w="73565129"/><text x="99.6658%" y="1103.50"></text></g><g><title>__GI___libc_write (73,565,129 samples, 0.01%)</title><rect x="99.4158%" y="1077" width="0.0107%" height="15" fill="rgb(250,150,27)" fg:x="685895201903" fg:w="73565129"/><text x="99.6658%" y="1087.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (73,565,129 samples, 0.01%)</title><rect x="99.4158%" y="1061" width="0.0107%" height="15" fill="rgb(252,159,3)" fg:x="685895201903" fg:w="73565129"/><text x="99.6658%" y="1071.50"></text></g><g><title>do_syscall_64 (73,565,129 samples, 0.01%)</title><rect x="99.4158%" y="1045" width="0.0107%" height="15" fill="rgb(241,182,3)" fg:x="685895201903" fg:w="73565129"/><text x="99.6658%" y="1055.50"></text></g><g><title>ksys_write (73,565,129 samples, 0.01%)</title><rect x="99.4158%" y="1029" width="0.0107%" height="15" fill="rgb(236,3,9)" fg:x="685895201903" fg:w="73565129"/><text x="99.6658%" y="1039.50"></text></g><g><title>vfs_write (73,565,129 samples, 0.01%)</title><rect x="99.4158%" y="1013" width="0.0107%" height="15" fill="rgb(223,227,51)" fg:x="685895201903" fg:w="73565129"/><text x="99.6658%" y="1023.50"></text></g><g><title>btrfs_do_write_iter (73,565,129 samples, 0.01%)</title><rect x="99.4158%" y="997" width="0.0107%" height="15" fill="rgb(232,133,30)" fg:x="685895201903" fg:w="73565129"/><text x="99.6658%" y="1007.50"></text></g><g><title>btrfs_buffered_write (73,565,129 samples, 0.01%)</title><rect x="99.4158%" y="981" width="0.0107%" height="15" fill="rgb(209,93,27)" fg:x="685895201903" fg:w="73565129"/><text x="99.6658%" y="991.50"></text></g><g><title>polars_testing- (121,501,001 samples, 0.02%)</title><rect x="99.4098%" y="1173" width="0.0176%" height="15" fill="rgb(208,108,34)" fg:x="685853810982" fg:w="121501001"/><text x="99.6598%" y="1183.50"></text></g><g><title>_IO_fwrite (84,830,760 samples, 0.01%)</title><rect x="99.4331%" y="1141" width="0.0123%" height="15" fill="rgb(215,189,13)" fg:x="686014684821" fg:w="84830760"/><text x="99.6831%" y="1151.50"></text></g><g><title>_IO_file_xsputn@@GLIBC_2.2.5 (84,830,760 samples, 0.01%)</title><rect x="99.4331%" y="1125" width="0.0123%" height="15" fill="rgb(206,88,23)" fg:x="686014684821" fg:w="84830760"/><text x="99.6831%" y="1135.50"></text></g><g><title>new_do_write (84,830,760 samples, 0.01%)</title><rect x="99.4331%" y="1109" width="0.0123%" height="15" fill="rgb(240,173,0)" fg:x="686014684821" fg:w="84830760"/><text x="99.6831%" y="1119.50"></text></g><g><title>_IO_file_write@@GLIBC_2.2.5 (84,830,760 samples, 0.01%)</title><rect x="99.4331%" y="1093" width="0.0123%" height="15" fill="rgb(223,106,52)" fg:x="686014684821" fg:w="84830760"/><text x="99.6831%" y="1103.50"></text></g><g><title>__GI___libc_write (84,830,760 samples, 0.01%)</title><rect x="99.4331%" y="1077" width="0.0123%" height="15" fill="rgb(206,130,16)" fg:x="686014684821" fg:w="84830760"/><text x="99.6831%" y="1087.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (84,830,760 samples, 0.01%)</title><rect x="99.4331%" y="1061" width="0.0123%" height="15" fill="rgb(220,54,25)" fg:x="686014684821" fg:w="84830760"/><text x="99.6831%" y="1071.50"></text></g><g><title>do_syscall_64 (84,830,760 samples, 0.01%)</title><rect x="99.4331%" y="1045" width="0.0123%" height="15" fill="rgb(210,4,38)" fg:x="686014684821" fg:w="84830760"/><text x="99.6831%" y="1055.50"></text></g><g><title>ksys_write (84,830,760 samples, 0.01%)</title><rect x="99.4331%" y="1029" width="0.0123%" height="15" fill="rgb(238,94,39)" fg:x="686014684821" fg:w="84830760"/><text x="99.6831%" y="1039.50"></text></g><g><title>vfs_write (84,830,760 samples, 0.01%)</title><rect x="99.4331%" y="1013" width="0.0123%" height="15" fill="rgb(234,124,34)" fg:x="686014684821" fg:w="84830760"/><text x="99.6831%" y="1023.50"></text></g><g><title>btrfs_do_write_iter (84,830,760 samples, 0.01%)</title><rect x="99.4331%" y="997" width="0.0123%" height="15" fill="rgb(221,91,40)" fg:x="686014684821" fg:w="84830760"/><text x="99.6831%" y="1007.50"></text></g><g><title>btrfs_buffered_write (84,830,760 samples, 0.01%)</title><rect x="99.4331%" y="981" width="0.0123%" height="15" fill="rgb(246,53,28)" fg:x="686014684821" fg:w="84830760"/><text x="99.6831%" y="991.50"></text></g><g><title>fileWriter (86,002,386 samples, 0.01%)</title><rect x="99.4331%" y="1157" width="0.0125%" height="15" fill="rgb(229,109,7)" fg:x="686014684821" fg:w="86002386"/><text x="99.6831%" y="1167.50"></text></g><g><title>polars_time-d83 (134,810,550 samples, 0.02%)</title><rect x="99.4274%" y="1173" width="0.0195%" height="15" fill="rgb(249,117,8)" fg:x="685975311983" fg:w="134810550"/><text x="99.6774%" y="1183.50"></text></g><g><title>read_csv_tbl_fu (72,867,432 samples, 0.01%)</title><rect x="99.4512%" y="1173" width="0.0106%" height="15" fill="rgb(210,181,1)" fg:x="686139660593" fg:w="72867432"/><text x="99.7012%" y="1183.50"></text></g><g><title>rustc (171,531,151 samples, 0.02%)</title><rect x="99.4643%" y="1173" width="0.0249%" height="15" fill="rgb(211,66,1)" fg:x="686229556269" fg:w="171531151"/><text x="99.7143%" y="1183.50"></text></g><g><title>series::general (103,420,698 samples, 0.01%)</title><rect x="99.4935%" y="1173" width="0.0150%" height="15" fill="rgb(221,90,14)" fg:x="686430969224" fg:w="103420698"/><text x="99.7435%" y="1183.50"></text></g><g><title>_RNvNCNvMsg_NtNtCsZqndpKj4Nk_2h25frame7headersNtB9_11HeaderBlock4load0s6_10___CALLSITE (114,203,220 samples, 0.02%)</title><rect x="99.5122%" y="1157" width="0.0166%" height="15" fill="rgb(219,222,44)" fg:x="686560294853" fg:w="114203220"/><text x="99.7622%" y="1167.50"></text></g><g><title>fileWriter (114,203,220 samples, 0.02%)</title><rect x="99.5122%" y="1141" width="0.0166%" height="15" fill="rgb(246,34,33)" fg:x="686560294853" fg:w="114203220"/><text x="99.7622%" y="1151.50"></text></g><g><title>_IO_fwrite (114,203,220 samples, 0.02%)</title><rect x="99.5122%" y="1125" width="0.0166%" height="15" fill="rgb(227,135,41)" fg:x="686560294853" fg:w="114203220"/><text x="99.7622%" y="1135.50"></text></g><g><title>_IO_file_xsputn@@GLIBC_2.2.5 (114,203,220 samples, 0.02%)</title><rect x="99.5122%" y="1109" width="0.0166%" height="15" fill="rgb(226,15,14)" fg:x="686560294853" fg:w="114203220"/><text x="99.7622%" y="1119.50"></text></g><g><title>new_do_write (114,203,220 samples, 0.02%)</title><rect x="99.5122%" y="1093" width="0.0166%" height="15" fill="rgb(236,148,47)" fg:x="686560294853" fg:w="114203220"/><text x="99.7622%" y="1103.50"></text></g><g><title>_IO_file_write@@GLIBC_2.2.5 (114,203,220 samples, 0.02%)</title><rect x="99.5122%" y="1077" width="0.0166%" height="15" fill="rgb(233,162,52)" fg:x="686560294853" fg:w="114203220"/><text x="99.7622%" y="1087.50"></text></g><g><title>__GI___libc_write (114,203,220 samples, 0.02%)</title><rect x="99.5122%" y="1061" width="0.0166%" height="15" fill="rgb(244,35,28)" fg:x="686560294853" fg:w="114203220"/><text x="99.7622%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (114,203,220 samples, 0.02%)</title><rect x="99.5122%" y="1045" width="0.0166%" height="15" fill="rgb(205,121,10)" fg:x="686560294853" fg:w="114203220"/><text x="99.7622%" y="1055.50"></text></g><g><title>do_syscall_64 (114,203,220 samples, 0.02%)</title><rect x="99.5122%" y="1029" width="0.0166%" height="15" fill="rgb(250,58,18)" fg:x="686560294853" fg:w="114203220"/><text x="99.7622%" y="1039.50"></text></g><g><title>ksys_write (114,203,220 samples, 0.02%)</title><rect x="99.5122%" y="1013" width="0.0166%" height="15" fill="rgb(216,37,13)" fg:x="686560294853" fg:w="114203220"/><text x="99.7622%" y="1023.50"></text></g><g><title>vfs_write (114,203,220 samples, 0.02%)</title><rect x="99.5122%" y="997" width="0.0166%" height="15" fill="rgb(221,215,42)" fg:x="686560294853" fg:w="114203220"/><text x="99.7622%" y="1007.50"></text></g><g><title>btrfs_do_write_iter (114,203,220 samples, 0.02%)</title><rect x="99.5122%" y="981" width="0.0166%" height="15" fill="rgb(217,214,19)" fg:x="686560294853" fg:w="114203220"/><text x="99.7622%" y="991.50"></text></g><g><title>btrfs_buffered_write (114,203,220 samples, 0.02%)</title><rect x="99.5122%" y="965" width="0.0166%" height="15" fill="rgb(233,139,13)" fg:x="686560294853" fg:w="114203220"/><text x="99.7622%" y="975.50"></text></g><g><title>simple_exprs-21 (207,141,714 samples, 0.03%)</title><rect x="99.5090%" y="1173" width="0.0300%" height="15" fill="rgb(247,168,23)" fg:x="686538240171" fg:w="207141714"/><text x="99.7590%" y="1183.50"></text></g><g><title>[statements-b43c53e566038b5c] (147,104,701 samples, 0.02%)</title><rect x="99.5390%" y="1157" width="0.0213%" height="15" fill="rgb(207,202,1)" fg:x="686745381885" fg:w="147104701"/><text x="99.7890%" y="1167.50"></text></g><g><title>fileWriter (140,267,607 samples, 0.02%)</title><rect x="99.5400%" y="1141" width="0.0203%" height="15" fill="rgb(220,155,48)" fg:x="686752218979" fg:w="140267607"/><text x="99.7900%" y="1151.50"></text></g><g><title>_IO_fwrite (140,267,607 samples, 0.02%)</title><rect x="99.5400%" y="1125" width="0.0203%" height="15" fill="rgb(250,43,26)" fg:x="686752218979" fg:w="140267607"/><text x="99.7900%" y="1135.50"></text></g><g><title>_IO_file_xsputn@@GLIBC_2.2.5 (140,267,607 samples, 0.02%)</title><rect x="99.5400%" y="1109" width="0.0203%" height="15" fill="rgb(212,190,23)" fg:x="686752218979" fg:w="140267607"/><text x="99.7900%" y="1119.50"></text></g><g><title>new_do_write (140,267,607 samples, 0.02%)</title><rect x="99.5400%" y="1093" width="0.0203%" height="15" fill="rgb(216,39,24)" fg:x="686752218979" fg:w="140267607"/><text x="99.7900%" y="1103.50"></text></g><g><title>_IO_file_write@@GLIBC_2.2.5 (140,267,607 samples, 0.02%)</title><rect x="99.5400%" y="1077" width="0.0203%" height="15" fill="rgb(252,113,16)" fg:x="686752218979" fg:w="140267607"/><text x="99.7900%" y="1087.50"></text></g><g><title>__GI___libc_write (140,267,607 samples, 0.02%)</title><rect x="99.5400%" y="1061" width="0.0203%" height="15" fill="rgb(208,113,19)" fg:x="686752218979" fg:w="140267607"/><text x="99.7900%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (140,267,607 samples, 0.02%)</title><rect x="99.5400%" y="1045" width="0.0203%" height="15" fill="rgb(234,107,25)" fg:x="686752218979" fg:w="140267607"/><text x="99.7900%" y="1055.50"></text></g><g><title>do_syscall_64 (140,267,607 samples, 0.02%)</title><rect x="99.5400%" y="1029" width="0.0203%" height="15" fill="rgb(234,217,51)" fg:x="686752218979" fg:w="140267607"/><text x="99.7900%" y="1039.50"></text></g><g><title>ksys_write (140,267,607 samples, 0.02%)</title><rect x="99.5400%" y="1013" width="0.0203%" height="15" fill="rgb(251,29,42)" fg:x="686752218979" fg:w="140267607"/><text x="99.7900%" y="1023.50"></text></g><g><title>vfs_write (140,267,607 samples, 0.02%)</title><rect x="99.5400%" y="997" width="0.0203%" height="15" fill="rgb(221,62,51)" fg:x="686752218979" fg:w="140267607"/><text x="99.7900%" y="1007.50"></text></g><g><title>btrfs_do_write_iter (140,267,607 samples, 0.02%)</title><rect x="99.5400%" y="981" width="0.0203%" height="15" fill="rgb(240,192,43)" fg:x="686752218979" fg:w="140267607"/><text x="99.7900%" y="991.50"></text></g><g><title>btrfs_buffered_write (140,267,607 samples, 0.02%)</title><rect x="99.5400%" y="965" width="0.0203%" height="15" fill="rgb(224,157,47)" fg:x="686752218979" fg:w="140267607"/><text x="99.7900%" y="975.50"></text></g><g><title>_dl_relocate_object (72,260,925 samples, 0.01%)</title><rect x="99.5667%" y="1077" width="0.0105%" height="15" fill="rgb(226,84,45)" fg:x="686935858770" fg:w="72260925"/><text x="99.8167%" y="1087.50"></text></g><g><title>elf_dynamic_do_Rela (71,416,742 samples, 0.01%)</title><rect x="99.5668%" y="1061" width="0.0104%" height="15" fill="rgb(208,207,23)" fg:x="686936702953" fg:w="71416742"/><text x="99.8168%" y="1071.50"></text></g><g><title>_dl_start (89,120,989 samples, 0.01%)</title><rect x="99.5664%" y="1141" width="0.0129%" height="15" fill="rgb(253,34,51)" fg:x="686934274756" fg:w="89120989"/><text x="99.8164%" y="1151.50"></text></g><g><title>_dl_start_final (89,120,989 samples, 0.01%)</title><rect x="99.5664%" y="1125" width="0.0129%" height="15" fill="rgb(227,26,34)" fg:x="686934274756" fg:w="89120989"/><text x="99.8164%" y="1135.50"></text></g><g><title>_dl_sysdep_start (89,120,989 samples, 0.01%)</title><rect x="99.5664%" y="1109" width="0.0129%" height="15" fill="rgb(245,75,19)" fg:x="686934274756" fg:w="89120989"/><text x="99.8164%" y="1119.50"></text></g><g><title>dl_main (89,120,989 samples, 0.01%)</title><rect x="99.5664%" y="1093" width="0.0129%" height="15" fill="rgb(250,191,31)" fg:x="686934274756" fg:w="89120989"/><text x="99.8164%" y="1103.50"></text></g><g><title>_start (97,038,336 samples, 0.01%)</title><rect x="99.5664%" y="1157" width="0.0141%" height="15" fill="rgb(224,11,50)" fg:x="686934274756" fg:w="97038336"/><text x="99.8164%" y="1167.50"></text></g><g><title>statements-b43c (304,989,584 samples, 0.04%)</title><rect x="99.5390%" y="1173" width="0.0442%" height="15" fill="rgb(231,171,7)" fg:x="686745381885" fg:w="304989584"/><text x="99.7890%" y="1183.50"></text></g><g><title>test_arr_agg (87,054,452 samples, 0.01%)</title><rect x="99.5835%" y="1173" width="0.0126%" height="15" fill="rgb(252,214,10)" fg:x="687051943523" fg:w="87054452"/><text x="99.8335%" y="1183.50"></text></g><g><title>test_array_lite (81,569,398 samples, 0.01%)</title><rect x="99.5961%" y="1173" width="0.0118%" height="15" fill="rgb(249,45,46)" fg:x="687138997975" fg:w="81569398"/><text x="99.8461%" y="1183.50"></text></g><g><title>test_cumulative (90,719,164 samples, 0.01%)</title><rect x="99.6353%" y="1173" width="0.0131%" height="15" fill="rgb(240,173,7)" fg:x="687409328570" fg:w="90719164"/><text x="99.8853%" y="1183.50"></text></g><g><title>test_distinct_o (83,358,428 samples, 0.01%)</title><rect x="99.6562%" y="1173" width="0.0121%" height="15" fill="rgb(235,214,13)" fg:x="687553687942" fg:w="83358428"/><text x="99.9062%" y="1183.50"></text></g><g><title>test_implicit_d (84,409,971 samples, 0.01%)</title><rect x="99.6779%" y="1173" width="0.0122%" height="15" fill="rgb(245,156,8)" fg:x="687703422608" fg:w="84409971"/><text x="99.9279%" y="1183.50"></text></g><g><title>test_math_funct (200,368,054 samples, 0.03%)</title><rect x="99.6956%" y="1173" width="0.0290%" height="15" fill="rgb(235,46,12)" fg:x="687825182540" fg:w="200368054"/><text x="99.9456%" y="1183.50"></text></g><g><title>tests::aggregat (69,021,542 samples, 0.01%)</title><rect x="99.7627%" y="1173" width="0.0100%" height="15" fill="rgb(221,81,14)" fg:x="688288475126" fg:w="69021542"/><text x="100.0127%" y="1183.50"></text></g><g><title>[unknown] (100,716,517 samples, 0.01%)</title><rect x="99.7870%" y="1157" width="0.0146%" height="15" fill="rgb(238,207,9)" fg:x="688456090397" fg:w="100716517"/><text x="100.0370%" y="1167.50"></text></g><g><title>tests::io::test (418,677,742 samples, 0.06%)</title><rect x="99.7853%" y="1173" width="0.0607%" height="15" fill="rgb(224,129,35)" fg:x="688444504620" fg:w="418677742"/><text x="100.0353%" y="1183.50"></text></g><g><title>tests::optimiza (70,387,356 samples, 0.01%)</title><rect x="99.8508%" y="1173" width="0.0102%" height="15" fill="rgb(243,218,34)" fg:x="688895926343" fg:w="70387356"/><text x="100.1008%" y="1183.50"></text></g><g><title>tests::predicat (91,031,428 samples, 0.01%)</title><rect x="99.8643%" y="1173" width="0.0132%" height="15" fill="rgb(220,166,13)" fg:x="688989268877" fg:w="91031428"/><text x="100.1143%" y="1183.50"></text></g><g><title>tests::queries: (220,960,425 samples, 0.03%)</title><rect x="99.8809%" y="1173" width="0.0320%" height="15" fill="rgb(227,167,49)" fg:x="689104121464" fg:w="220960425"/><text x="100.1309%" y="1183.50"></text></g><g><title>tests::streamin (261,610,334 samples, 0.04%)</title><rect x="99.9132%" y="1173" width="0.0379%" height="15" fill="rgb(234,142,12)" fg:x="689326441427" fg:w="261610334"/><text x="100.1632%" y="1183.50"></text></g><g><title>tokio-runtime-w (153,222,356 samples, 0.02%)</title><rect x="99.9511%" y="1173" width="0.0222%" height="15" fill="rgb(207,100,48)" fg:x="689588051761" fg:w="153222356"/><text x="100.2011%" y="1183.50"></text></g><g><title>[udf-8be2e7c64c5a59dd] (111,438,795 samples, 0.02%)</title><rect x="99.9734%" y="1157" width="0.0162%" height="15" fill="rgb(210,25,14)" fg:x="689742350626" fg:w="111438795"/><text x="100.2234%" y="1167.50"></text></g><g><title>fileWriter (111,438,795 samples, 0.02%)</title><rect x="99.9734%" y="1141" width="0.0162%" height="15" fill="rgb(246,116,27)" fg:x="689742350626" fg:w="111438795"/><text x="100.2234%" y="1151.50"></text></g><g><title>_IO_fwrite (111,438,795 samples, 0.02%)</title><rect x="99.9734%" y="1125" width="0.0162%" height="15" fill="rgb(214,193,42)" fg:x="689742350626" fg:w="111438795"/><text x="100.2234%" y="1135.50"></text></g><g><title>_IO_file_xsputn@@GLIBC_2.2.5 (111,438,795 samples, 0.02%)</title><rect x="99.9734%" y="1109" width="0.0162%" height="15" fill="rgb(214,122,8)" fg:x="689742350626" fg:w="111438795"/><text x="100.2234%" y="1119.50"></text></g><g><title>new_do_write (111,438,795 samples, 0.02%)</title><rect x="99.9734%" y="1093" width="0.0162%" height="15" fill="rgb(244,173,18)" fg:x="689742350626" fg:w="111438795"/><text x="100.2234%" y="1103.50"></text></g><g><title>_IO_file_write@@GLIBC_2.2.5 (111,438,795 samples, 0.02%)</title><rect x="99.9734%" y="1077" width="0.0162%" height="15" fill="rgb(232,68,19)" fg:x="689742350626" fg:w="111438795"/><text x="100.2234%" y="1087.50"></text></g><g><title>__GI___libc_write (111,438,795 samples, 0.02%)</title><rect x="99.9734%" y="1061" width="0.0162%" height="15" fill="rgb(236,224,1)" fg:x="689742350626" fg:w="111438795"/><text x="100.2234%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (111,438,795 samples, 0.02%)</title><rect x="99.9734%" y="1045" width="0.0162%" height="15" fill="rgb(240,11,8)" fg:x="689742350626" fg:w="111438795"/><text x="100.2234%" y="1055.50"></text></g><g><title>do_syscall_64 (111,438,795 samples, 0.02%)</title><rect x="99.9734%" y="1029" width="0.0162%" height="15" fill="rgb(244,159,20)" fg:x="689742350626" fg:w="111438795"/><text x="100.2234%" y="1039.50"></text></g><g><title>ksys_write (111,438,795 samples, 0.02%)</title><rect x="99.9734%" y="1013" width="0.0162%" height="15" fill="rgb(240,223,54)" fg:x="689742350626" fg:w="111438795"/><text x="100.2234%" y="1023.50"></text></g><g><title>vfs_write (111,438,795 samples, 0.02%)</title><rect x="99.9734%" y="997" width="0.0162%" height="15" fill="rgb(237,146,5)" fg:x="689742350626" fg:w="111438795"/><text x="100.2234%" y="1007.50"></text></g><g><title>btrfs_do_write_iter (111,438,795 samples, 0.02%)</title><rect x="99.9734%" y="981" width="0.0162%" height="15" fill="rgb(218,221,32)" fg:x="689742350626" fg:w="111438795"/><text x="100.2234%" y="991.50"></text></g><g><title>btrfs_buffered_write (111,438,795 samples, 0.02%)</title><rect x="99.9734%" y="965" width="0.0162%" height="15" fill="rgb(244,96,26)" fg:x="689742350626" fg:w="111438795"/><text x="100.2234%" y="975.50"></text></g><g><title>udf-8be2e7c64c5 (179,136,882 samples, 0.03%)</title><rect x="99.9734%" y="1173" width="0.0260%" height="15" fill="rgb(245,184,37)" fg:x="689742350626" fg:w="179136882"/><text x="100.2234%" y="1183.50"></text></g><g><title>all (689,925,633,209 samples, 100%)</title><rect x="0.0000%" y="1189" width="100.0000%" height="15" fill="rgb(248,91,47)" fg:x="0" fg:w="689925633209"/><text x="0.2500%" y="1199.50"></text></g></svg></svg>